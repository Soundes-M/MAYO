// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Version: 2020.2
// Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="computeP2_computeP2,hls_ip_2020_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020-clg484-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=7.300000,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=35,HLS_SYN_DSP=0,HLS_SYN_FF=3202,HLS_SYN_LUT=8834,HLS_VERSION=2020_2}" *)

module computeP2 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        oil_space,
        P1,
        P2_i,
        P2_o,
        P2_o_ap_vld
);

parameter    ap_ST_fsm_state1 = 55'd1;
parameter    ap_ST_fsm_state2 = 55'd2;
parameter    ap_ST_fsm_state3 = 55'd4;
parameter    ap_ST_fsm_state4 = 55'd8;
parameter    ap_ST_fsm_state5 = 55'd16;
parameter    ap_ST_fsm_state6 = 55'd32;
parameter    ap_ST_fsm_state7 = 55'd64;
parameter    ap_ST_fsm_state8 = 55'd128;
parameter    ap_ST_fsm_state9 = 55'd256;
parameter    ap_ST_fsm_state10 = 55'd512;
parameter    ap_ST_fsm_state11 = 55'd1024;
parameter    ap_ST_fsm_state12 = 55'd2048;
parameter    ap_ST_fsm_state13 = 55'd4096;
parameter    ap_ST_fsm_state14 = 55'd8192;
parameter    ap_ST_fsm_state15 = 55'd16384;
parameter    ap_ST_fsm_state16 = 55'd32768;
parameter    ap_ST_fsm_state17 = 55'd65536;
parameter    ap_ST_fsm_state18 = 55'd131072;
parameter    ap_ST_fsm_state19 = 55'd262144;
parameter    ap_ST_fsm_state20 = 55'd524288;
parameter    ap_ST_fsm_state21 = 55'd1048576;
parameter    ap_ST_fsm_state22 = 55'd2097152;
parameter    ap_ST_fsm_state23 = 55'd4194304;
parameter    ap_ST_fsm_state24 = 55'd8388608;
parameter    ap_ST_fsm_state25 = 55'd16777216;
parameter    ap_ST_fsm_state26 = 55'd33554432;
parameter    ap_ST_fsm_state27 = 55'd67108864;
parameter    ap_ST_fsm_state28 = 55'd134217728;
parameter    ap_ST_fsm_state29 = 55'd268435456;
parameter    ap_ST_fsm_state30 = 55'd536870912;
parameter    ap_ST_fsm_state31 = 55'd1073741824;
parameter    ap_ST_fsm_state32 = 55'd2147483648;
parameter    ap_ST_fsm_state33 = 55'd4294967296;
parameter    ap_ST_fsm_state34 = 55'd8589934592;
parameter    ap_ST_fsm_state35 = 55'd17179869184;
parameter    ap_ST_fsm_state36 = 55'd34359738368;
parameter    ap_ST_fsm_state37 = 55'd68719476736;
parameter    ap_ST_fsm_state38 = 55'd137438953472;
parameter    ap_ST_fsm_state39 = 55'd274877906944;
parameter    ap_ST_fsm_state40 = 55'd549755813888;
parameter    ap_ST_fsm_state41 = 55'd1099511627776;
parameter    ap_ST_fsm_state42 = 55'd2199023255552;
parameter    ap_ST_fsm_state43 = 55'd4398046511104;
parameter    ap_ST_fsm_state44 = 55'd8796093022208;
parameter    ap_ST_fsm_state45 = 55'd17592186044416;
parameter    ap_ST_fsm_state46 = 55'd35184372088832;
parameter    ap_ST_fsm_state47 = 55'd70368744177664;
parameter    ap_ST_fsm_state48 = 55'd140737488355328;
parameter    ap_ST_fsm_state49 = 55'd281474976710656;
parameter    ap_ST_fsm_state50 = 55'd562949953421312;
parameter    ap_ST_fsm_state51 = 55'd1125899906842624;
parameter    ap_ST_fsm_state52 = 55'd2251799813685248;
parameter    ap_ST_fsm_state53 = 55'd4503599627370496;
parameter    ap_ST_fsm_state54 = 55'd9007199254740992;
parameter    ap_ST_fsm_state55 = 55'd18014398509481984;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [7:0] oil_space;
input  [7:0] P1;
input  [7:0] P2_i;
output  [7:0] P2_o;
output   P2_o_ap_vld;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[7:0] P2_o;
reg P2_o_ap_vld;

(* fsm_encoding = "none" *) reg   [54:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [63:0] grp_fu_483_p1;
reg   [63:0] reg_486;
wire    ap_CS_fsm_state12;
wire    ap_CS_fsm_state26;
wire    ap_CS_fsm_state51;
wire   [5:0] add_ln22_fu_491_p2;
reg   [5:0] add_ln22_reg_1460;
wire    ap_CS_fsm_state2;
wire   [9:0] empty_47_fu_527_p2;
reg   [9:0] empty_47_reg_1468;
wire   [0:0] icmp_ln22_fu_497_p2;
wire   [5:0] sub_ln31_fu_533_p2;
reg   [5:0] sub_ln31_reg_1473;
wire   [8:0] zext_ln37_fu_539_p1;
reg   [8:0] zext_ln37_reg_1478;
wire   [2:0] add_ln26_fu_542_p2;
reg   [2:0] add_ln26_reg_1483;
wire    ap_CS_fsm_state3;
wire   [14:0] sub_ln32_fu_587_p2;
reg   [14:0] sub_ln32_reg_1491;
wire   [0:0] icmp_ln26_fu_552_p2;
wire   [5:0] add_ln122_fu_593_p2;
reg   [5:0] add_ln122_reg_1496;
wire    ap_CS_fsm_state5;
reg   [14:0] temp_addr_reg_1504;
wire   [0:0] icmp_ln122_fu_608_p2;
wire   [8:0] add_ln125_1_fu_632_p2;
reg   [8:0] add_ln125_1_reg_1514;
wire    ap_CS_fsm_state6;
wire   [31:0] zext_ln125_3_fu_638_p1;
wire    ap_CS_fsm_state7;
reg   [10:0] tmp_15_reg_1524;
wire    ap_CS_fsm_state14;
wire   [51:0] tmp_16_fu_656_p1;
reg   [51:0] tmp_16_reg_1530;
wire   [7:0] val_fu_749_p3;
reg   [7:0] val_reg_1535;
wire    ap_CS_fsm_state15;
wire   [5:0] add_ln37_fu_757_p2;
reg   [5:0] add_ln37_reg_1540;
wire    ap_CS_fsm_state17;
wire   [9:0] empty_51_fu_793_p2;
reg   [9:0] empty_51_reg_1548;
wire   [0:0] icmp_ln37_fu_763_p2;
wire   [2:0] add_ln41_fu_799_p2;
reg   [2:0] add_ln41_reg_1553;
wire    ap_CS_fsm_state18;
wire   [14:0] sub_ln44_fu_844_p2;
reg   [14:0] sub_ln44_reg_1561;
wire   [0:0] icmp_ln41_fu_809_p2;
wire   [5:0] add_ln122_1_fu_850_p2;
reg   [5:0] add_ln122_1_reg_1566;
wire    ap_CS_fsm_state19;
reg   [14:0] temp_addr_1_reg_1574;
wire   [0:0] icmp_ln122_1_fu_860_p2;
wire   [8:0] add_ln125_3_fu_880_p2;
reg   [8:0] add_ln125_3_reg_1579;
wire    ap_CS_fsm_state20;
wire   [31:0] zext_ln125_6_fu_885_p1;
wire    ap_CS_fsm_state21;
reg   [10:0] tmp_17_reg_1589;
wire    ap_CS_fsm_state28;
wire   [51:0] tmp_18_fu_903_p1;
reg   [51:0] tmp_18_reg_1595;
wire   [7:0] val_1_fu_996_p3;
reg   [7:0] val_1_reg_1600;
wire    ap_CS_fsm_state29;
wire   [14:0] empty_55_fu_1004_p2;
wire    ap_CS_fsm_state31;
wire   [2:0] add_ln51_fu_1021_p2;
reg   [2:0] add_ln51_reg_1613;
wire    ap_CS_fsm_state32;
wire   [9:0] zext_ln51_fu_1027_p1;
reg   [9:0] zext_ln51_reg_1618;
wire   [9:0] empty_58_fu_1061_p2;
reg   [9:0] empty_58_reg_1626;
wire   [0:0] icmp_ln51_fu_1031_p2;
wire   [5:0] add_ln55_fu_1067_p2;
reg   [5:0] add_ln55_reg_1631;
wire    ap_CS_fsm_state33;
wire   [14:0] sub_ln58_fu_1112_p2;
reg   [14:0] sub_ln58_reg_1639;
wire   [0:0] icmp_ln55_fu_1077_p2;
wire   [14:0] sub_ln58_2_fu_1177_p2;
reg   [14:0] sub_ln58_2_reg_1644;
wire   [5:0] empty_60_fu_1183_p2;
reg   [5:0] empty_60_reg_1649;
wire    ap_CS_fsm_state34;
wire   [0:0] exitcond426_fu_1193_p2;
wire   [14:0] add_ptr523_sum_fu_1209_p2;
reg   [14:0] add_ptr523_sum_reg_1662;
wire   [2:0] add_ln63_fu_1218_p2;
reg   [2:0] add_ln63_reg_1667;
wire    ap_CS_fsm_state36;
wire   [14:0] add_ln63_1_fu_1224_p2;
reg   [14:0] add_ln63_1_reg_1672;
wire   [63:0] zext_ln63_fu_1230_p1;
reg   [63:0] zext_ln63_reg_1677;
wire    ap_CS_fsm_state37;
wire   [0:0] icmp_ln67_fu_1240_p2;
wire   [0:0] icmp_ln72_fu_1250_p2;
reg   [0:0] icmp_ln72_reg_1694;
wire  signed [14:0] grp_fu_1440_p2;
reg   [14:0] mul_ln70_reg_1698;
wire    ap_CS_fsm_state40;
wire   [5:0] empty_65_fu_1255_p2;
wire    ap_CS_fsm_state42;
wire    ap_CS_fsm_state43;
wire   [5:0] add_ln122_2_fu_1272_p2;
reg   [5:0] add_ln122_2_reg_1716;
wire    ap_CS_fsm_state44;
wire   [0:0] icmp_ln122_2_fu_1283_p2;
wire   [63:0] add_ln67_fu_1289_p2;
wire   [8:0] add_ln125_4_fu_1303_p2;
reg   [8:0] add_ln125_4_reg_1734;
wire    ap_CS_fsm_state45;
wire   [31:0] zext_ln125_9_fu_1309_p1;
wire    ap_CS_fsm_state46;
reg   [10:0] tmp_19_reg_1744;
wire    ap_CS_fsm_state53;
wire   [51:0] tmp_20_fu_1327_p1;
reg   [51:0] tmp_20_reg_1750;
wire   [7:0] val_2_fu_1420_p3;
wire    ap_CS_fsm_state54;
wire   [10:0] add_ln88_fu_1434_p2;
wire    ap_CS_fsm_state55;
wire   [0:0] icmp_ln88_fu_1428_p2;
reg   [14:0] temp_address0;
reg    temp_ce0;
reg    temp_we0;
reg   [7:0] temp_d0;
wire   [7:0] temp_q0;
reg   [5:0] vec_1_address0;
reg    vec_1_ce0;
reg    vec_1_we0;
wire   [4:0] vec_1_q0;
reg   [14:0] tempt_address0;
reg    tempt_ce0;
reg    tempt_we0;
reg   [7:0] tempt_d0;
wire   [7:0] tempt_q0;
reg   [5:0] vec_address0;
reg    vec_ce0;
reg    vec_we0;
reg   [4:0] vec_d0;
wire   [4:0] vec_q0;
wire    grp_generic_remainder_double_s_fu_452_ap_start;
wire    grp_generic_remainder_double_s_fu_452_ap_done;
wire    grp_generic_remainder_double_s_fu_452_ap_idle;
wire    grp_generic_remainder_double_s_fu_452_ap_ready;
wire   [63:0] grp_generic_remainder_double_s_fu_452_ap_return;
wire    grp_linear_combination_fu_457_ap_start;
wire    grp_linear_combination_fu_457_ap_done;
wire    grp_linear_combination_fu_457_ap_idle;
wire    grp_linear_combination_fu_457_ap_ready;
wire   [5:0] grp_linear_combination_fu_457_out_r_address0;
wire    grp_linear_combination_fu_457_out_r_ce0;
wire    grp_linear_combination_fu_457_out_r_we0;
wire   [4:0] grp_linear_combination_fu_457_out_r_d0;
wire    grp_linear_combination_2_fu_465_ap_start;
wire    grp_linear_combination_2_fu_465_ap_done;
wire    grp_linear_combination_2_fu_465_ap_idle;
wire    grp_linear_combination_2_fu_465_ap_ready;
wire   [14:0] grp_linear_combination_2_fu_465_vecs_address0;
wire    grp_linear_combination_2_fu_465_vecs_ce0;
wire   [5:0] grp_linear_combination_2_fu_465_out_r_address0;
wire    grp_linear_combination_2_fu_465_out_r_ce0;
wire    grp_linear_combination_2_fu_465_out_r_we0;
wire   [4:0] grp_linear_combination_2_fu_465_out_r_d0;
wire    grp_linear_combination_1_fu_474_ap_start;
wire    grp_linear_combination_1_fu_474_ap_done;
wire    grp_linear_combination_1_fu_474_ap_idle;
wire    grp_linear_combination_1_fu_474_ap_ready;
wire   [7:0] grp_linear_combination_1_fu_474_out_r;
wire    grp_linear_combination_1_fu_474_out_r_ap_vld;
wire   [14:0] grp_linear_combination_1_fu_474_vecs_address0;
wire    grp_linear_combination_1_fu_474_vecs_ce0;
reg   [5:0] i_reg_265;
reg   [2:0] j_reg_276;
reg   [5:0] i_6_reg_287;
wire    ap_CS_fsm_state16;
wire    ap_CS_fsm_state4;
reg   [5:0] i_4_reg_298;
reg   [2:0] j_1_reg_309;
reg   [5:0] i_8_reg_320;
wire    ap_CS_fsm_state30;
reg   [14:0] empty_54_reg_331;
wire   [0:0] exitcond5511_fu_1015_p2;
reg   [2:0] i_5_reg_342;
reg   [5:0] j_3_reg_353;
reg   [5:0] loop_index_reg_364;
wire    ap_CS_fsm_state35;
reg   [2:0] i_11_reg_375;
reg   [14:0] phi_mul_reg_386;
reg   [63:0] j_4_reg_398;
wire   [0:0] icmp_ln63_fu_1234_p2;
reg   [5:0] empty_64_reg_408;
wire   [0:0] exitcond2_fu_1266_p2;
wire    ap_CS_fsm_state41;
reg   [7:0] v1_0_i_reg_419;
reg   [5:0] i_10_reg_430;
reg   [10:0] i_7_reg_441;
reg    grp_generic_remainder_double_s_fu_452_ap_start_reg;
wire    ap_CS_fsm_state13;
wire    ap_CS_fsm_state27;
wire    ap_CS_fsm_state52;
reg    grp_linear_combination_fu_457_ap_start_reg;
reg    grp_linear_combination_2_fu_465_ap_start_reg;
reg    grp_linear_combination_1_fu_474_ap_start_reg;
wire   [63:0] zext_ln125_fu_619_p1;
wire   [63:0] zext_ln122_fu_599_p1;
wire   [63:0] zext_ln125_4_fu_871_p1;
wire   [63:0] p_cast_fu_1010_p1;
wire   [63:0] add_ptr584_sum_cast_fu_1204_p1;
wire   [63:0] add_ptr523_sum_cast_fu_1214_p1;
wire   [63:0] p_cast13_fu_1261_p1;
wire   [63:0] zext_ln122_3_fu_1278_p1;
reg   [31:0] grp_fu_483_p0;
wire   [8:0] p_shl_fu_503_p3;
wire   [6:0] p_shl9_fu_515_p3;
wire   [9:0] p_shl_cast_fu_511_p1;
wire   [9:0] p_shl9_cast_fu_523_p1;
wire   [9:0] zext_ln26_fu_548_p1;
wire   [9:0] add_ln32_fu_558_p2;
wire   [8:0] trunc_ln32_fu_563_p1;
wire   [11:0] shl_ln32_1_fu_575_p3;
wire   [14:0] shl_ln_fu_567_p3;
wire  signed [14:0] sext_ln32_fu_583_p1;
wire   [14:0] zext_ln122_1_fu_604_p1;
wire   [14:0] add_ln125_fu_614_p2;
wire   [8:0] zext_ln125_2_fu_628_p1;
wire   [8:0] zext_ln125_1_fu_624_p1;
wire   [63:0] data_V_fu_642_p1;
wire   [53:0] mantissa_fu_660_p4;
wire   [11:0] zext_ln510_fu_673_p1;
wire   [11:0] add_ln510_fu_676_p2;
wire   [10:0] sub_ln1311_fu_690_p2;
wire   [0:0] isNeg_fu_682_p3;
wire  signed [11:0] sext_ln1311_fu_695_p1;
wire   [11:0] ush_fu_699_p3;
wire  signed [31:0] sh_prom_i_i_i_i_i_i_cast_cast_cast_fu_707_p1;
wire   [112:0] zext_ln68_fu_669_p1;
wire   [112:0] sh_prom_i_i_i_i_i_i_cast_cast_cast_cast_fu_711_p1;
wire   [112:0] r_V_fu_715_p2;
wire   [0:0] tmp_fu_727_p3;
wire   [112:0] r_V_1_fu_721_p2;
wire   [7:0] zext_ln662_fu_735_p1;
wire   [7:0] tmp_s_fu_739_p4;
wire   [8:0] p_shl1_fu_769_p3;
wire   [6:0] p_shl2_fu_781_p3;
wire   [9:0] p_shl12_cast_fu_777_p1;
wire   [9:0] p_shl13_cast_fu_789_p1;
wire   [9:0] zext_ln41_fu_805_p1;
wire   [9:0] add_ln44_fu_815_p2;
wire   [8:0] trunc_ln44_fu_820_p1;
wire   [11:0] shl_ln44_1_fu_832_p3;
wire   [14:0] shl_ln1_fu_824_p3;
wire  signed [14:0] sext_ln44_fu_840_p1;
wire   [14:0] zext_ln122_2_fu_856_p1;
wire   [14:0] add_ln125_2_fu_866_p2;
wire   [8:0] zext_ln125_5_fu_876_p1;
wire   [63:0] data_V_1_fu_889_p1;
wire   [53:0] mantissa_1_fu_907_p4;
wire   [11:0] zext_ln510_1_fu_920_p1;
wire   [11:0] add_ln510_1_fu_923_p2;
wire   [10:0] sub_ln1311_1_fu_937_p2;
wire   [0:0] isNeg_1_fu_929_p3;
wire  signed [11:0] sext_ln1311_1_fu_942_p1;
wire   [11:0] ush_1_fu_946_p3;
wire  signed [31:0] sh_prom_i_i_i_i_i_i40_cast_cast_cast_fu_954_p1;
wire   [112:0] zext_ln68_1_fu_916_p1;
wire   [112:0] sh_prom_i_i_i_i_i_i40_cast_cast_cast_cast_fu_958_p1;
wire   [112:0] r_V_2_fu_962_p2;
wire   [0:0] tmp_10_fu_974_p3;
wire   [112:0] r_V_3_fu_968_p2;
wire   [7:0] zext_ln662_1_fu_982_p1;
wire   [7:0] tmp_2_fu_986_p4;
wire   [8:0] p_shl3_fu_1037_p3;
wire   [5:0] p_shl4_fu_1049_p3;
wire   [9:0] p_shl16_cast_fu_1045_p1;
wire   [9:0] p_shl17_cast_fu_1057_p1;
wire   [9:0] zext_ln55_fu_1073_p1;
wire   [9:0] add_ln58_fu_1083_p2;
wire   [8:0] trunc_ln58_fu_1088_p1;
wire   [11:0] shl_ln58_1_fu_1100_p3;
wire   [14:0] shl_ln2_fu_1092_p3;
wire  signed [14:0] sext_ln58_fu_1108_p1;
wire   [8:0] shl_ln58_2_fu_1118_p3;
wire   [6:0] shl_ln58_3_fu_1130_p3;
wire   [9:0] zext_ln58_fu_1126_p1;
wire   [9:0] zext_ln58_1_fu_1138_p1;
wire   [9:0] sub_ln58_1_fu_1142_p2;
wire   [9:0] add_ln58_1_fu_1148_p2;
wire   [8:0] trunc_ln58_1_fu_1153_p1;
wire   [11:0] shl_ln58_5_fu_1165_p3;
wire   [14:0] shl_ln58_4_fu_1157_p3;
wire  signed [14:0] sext_ln58_1_fu_1173_p1;
wire   [14:0] loop_index_cast_fu_1189_p1;
wire   [14:0] add_ptr584_sum_fu_1199_p2;
wire   [8:0] zext_ln125_8_fu_1299_p1;
wire   [8:0] zext_ln125_7_fu_1295_p1;
wire   [63:0] data_V_2_fu_1313_p1;
wire   [53:0] mantissa_2_fu_1331_p4;
wire   [11:0] zext_ln510_2_fu_1344_p1;
wire   [11:0] add_ln510_2_fu_1347_p2;
wire   [10:0] sub_ln1311_2_fu_1361_p2;
wire   [0:0] isNeg_2_fu_1353_p3;
wire  signed [11:0] sext_ln1311_2_fu_1366_p1;
wire   [11:0] ush_2_fu_1370_p3;
wire  signed [31:0] sh_prom_i_i_i_i_i_i62_cast_cast_cast_fu_1378_p1;
wire   [112:0] zext_ln68_2_fu_1340_p1;
wire   [112:0] sh_prom_i_i_i_i_i_i62_cast_cast_cast_cast_fu_1382_p1;
wire   [112:0] r_V_4_fu_1386_p2;
wire   [0:0] tmp_14_fu_1398_p3;
wire   [112:0] r_V_5_fu_1392_p2;
wire   [7:0] zext_ln662_2_fu_1406_p1;
wire   [7:0] tmp_4_fu_1410_p4;
wire  signed [14:0] grp_fu_1440_p0;
wire   [12:0] grp_fu_1440_p1;
reg   [54:0] ap_NS_fsm;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 55'd1;
#0 grp_generic_remainder_double_s_fu_452_ap_start_reg = 1'b0;
#0 grp_linear_combination_fu_457_ap_start_reg = 1'b0;
#0 grp_linear_combination_2_fu_465_ap_start_reg = 1'b0;
#0 grp_linear_combination_1_fu_474_ap_start_reg = 1'b0;
end

computeP2_temp #(
    .DataWidth( 8 ),
    .AddressRange( 20160 ),
    .AddressWidth( 15 ))
temp_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(temp_address0),
    .ce0(temp_ce0),
    .we0(temp_we0),
    .d0(temp_d0),
    .q0(temp_q0)
);

computeP2_vec_1 #(
    .DataWidth( 5 ),
    .AddressRange( 60 ),
    .AddressWidth( 6 ))
vec_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(vec_1_address0),
    .ce0(vec_1_ce0),
    .we0(vec_1_we0),
    .d0(grp_linear_combination_fu_457_out_r_d0),
    .q0(vec_1_q0)
);

computeP2_temp #(
    .DataWidth( 8 ),
    .AddressRange( 20160 ),
    .AddressWidth( 15 ))
tempt_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(tempt_address0),
    .ce0(tempt_ce0),
    .we0(tempt_we0),
    .d0(tempt_d0),
    .q0(tempt_q0)
);

computeP2_vec_1 #(
    .DataWidth( 5 ),
    .AddressRange( 60 ),
    .AddressWidth( 6 ))
vec_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(vec_address0),
    .ce0(vec_ce0),
    .we0(vec_we0),
    .d0(vec_d0),
    .q0(vec_q0)
);

computeP2_generic_remainder_double_s grp_generic_remainder_double_s_fu_452(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_generic_remainder_double_s_fu_452_ap_start),
    .ap_done(grp_generic_remainder_double_s_fu_452_ap_done),
    .ap_idle(grp_generic_remainder_double_s_fu_452_ap_idle),
    .ap_ready(grp_generic_remainder_double_s_fu_452_ap_ready),
    .x(reg_486),
    .ap_return(grp_generic_remainder_double_s_fu_452_ap_return)
);

computeP2_linear_combination grp_linear_combination_fu_457(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_linear_combination_fu_457_ap_start),
    .ap_done(grp_linear_combination_fu_457_ap_done),
    .ap_idle(grp_linear_combination_fu_457_ap_idle),
    .ap_ready(grp_linear_combination_fu_457_ap_ready),
    .vecs_read(P1),
    .coeffs_read(oil_space),
    .len(sub_ln31_reg_1473),
    .out_r_address0(grp_linear_combination_fu_457_out_r_address0),
    .out_r_ce0(grp_linear_combination_fu_457_out_r_ce0),
    .out_r_we0(grp_linear_combination_fu_457_out_r_we0),
    .out_r_d0(grp_linear_combination_fu_457_out_r_d0)
);

computeP2_linear_combination_2 grp_linear_combination_2_fu_465(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_linear_combination_2_fu_465_ap_start),
    .ap_done(grp_linear_combination_2_fu_465_ap_done),
    .ap_idle(grp_linear_combination_2_fu_465_ap_idle),
    .ap_ready(grp_linear_combination_2_fu_465_ap_ready),
    .coeffs_read(oil_space),
    .vecs_address0(grp_linear_combination_2_fu_465_vecs_address0),
    .vecs_ce0(grp_linear_combination_2_fu_465_vecs_ce0),
    .vecs_q0(tempt_q0),
    .vecs_offset(phi_mul_reg_386),
    .out_r_address0(grp_linear_combination_2_fu_465_out_r_address0),
    .out_r_ce0(grp_linear_combination_2_fu_465_out_r_ce0),
    .out_r_we0(grp_linear_combination_2_fu_465_out_r_we0),
    .out_r_d0(grp_linear_combination_2_fu_465_out_r_d0)
);

computeP2_linear_combination_1 grp_linear_combination_1_fu_474(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_linear_combination_1_fu_474_ap_start),
    .ap_done(grp_linear_combination_1_fu_474_ap_done),
    .ap_idle(grp_linear_combination_1_fu_474_ap_idle),
    .ap_ready(grp_linear_combination_1_fu_474_ap_ready),
    .coeffs_read(oil_space),
    .out_r(grp_linear_combination_1_fu_474_out_r),
    .out_r_ap_vld(grp_linear_combination_1_fu_474_out_r_ap_vld),
    .vecs_address0(grp_linear_combination_1_fu_474_vecs_address0),
    .vecs_ce0(grp_linear_combination_1_fu_474_vecs_ce0),
    .vecs_q0(tempt_q0),
    .vecs_offset(mul_ln70_reg_1698)
);

computeP2_sitodp_32ns_64_6_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
sitodp_32ns_64_6_no_dsp_1_U25(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_483_p0),
    .ce(1'b1),
    .dout(grp_fu_483_p1)
);

computeP2_mul_mul_15s_13ns_15_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 15 ),
    .din1_WIDTH( 13 ),
    .dout_WIDTH( 15 ))
mul_mul_15s_13ns_15_4_1_U26(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1440_p0),
    .din1(grp_fu_1440_p1),
    .ce(1'b1),
    .dout(grp_fu_1440_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_generic_remainder_double_s_fu_452_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state52) | (1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state13))) begin
            grp_generic_remainder_double_s_fu_452_ap_start_reg <= 1'b1;
        end else if ((grp_generic_remainder_double_s_fu_452_ap_ready == 1'b1)) begin
            grp_generic_remainder_double_s_fu_452_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_linear_combination_1_fu_474_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state40)) begin
            grp_linear_combination_1_fu_474_ap_start_reg <= 1'b1;
        end else if ((grp_linear_combination_1_fu_474_ap_ready == 1'b1)) begin
            grp_linear_combination_1_fu_474_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_linear_combination_2_fu_465_ap_start_reg <= 1'b0;
    end else begin
        if (((exitcond2_fu_1266_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state42))) begin
            grp_linear_combination_2_fu_465_ap_start_reg <= 1'b1;
        end else if ((grp_linear_combination_2_fu_465_ap_ready == 1'b1)) begin
            grp_linear_combination_2_fu_465_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_linear_combination_fu_457_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state3) & (icmp_ln26_fu_552_p2 == 1'd0))) begin
            grp_linear_combination_fu_457_ap_start_reg <= 1'b1;
        end else if ((grp_linear_combination_fu_457_ap_ready == 1'b1)) begin
            grp_linear_combination_fu_457_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state17) & (icmp_ln37_fu_763_p2 == 1'd1))) begin
        empty_54_reg_331 <= 15'd0;
    end else if (((exitcond5511_fu_1015_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state31))) begin
        empty_54_reg_331 <= empty_55_fu_1004_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_linear_combination_1_fu_474_ap_done == 1'b1) & (icmp_ln72_reg_1694 == 1'd0) & (1'b1 == ap_CS_fsm_state41))) begin
        empty_64_reg_408 <= 6'd0;
    end else if (((exitcond2_fu_1266_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state42))) begin
        empty_64_reg_408 <= empty_65_fu_1255_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state54)) begin
        i_10_reg_430 <= add_ln122_2_reg_1716;
    end else if (((grp_linear_combination_2_fu_465_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state43))) begin
        i_10_reg_430 <= 6'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln51_fu_1031_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state32))) begin
        i_11_reg_375 <= 3'd0;
    end else if (((icmp_ln67_fu_1240_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state37))) begin
        i_11_reg_375 <= add_ln63_reg_1667;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln22_fu_497_p2 == 1'd1))) begin
        i_4_reg_298 <= 6'd0;
    end else if (((icmp_ln41_fu_809_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state18))) begin
        i_4_reg_298 <= add_ln37_reg_1540;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond5511_fu_1015_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state31))) begin
        i_5_reg_342 <= 3'd0;
    end else if (((icmp_ln55_fu_1077_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state33))) begin
        i_5_reg_342 <= add_ln51_reg_1613;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_linear_combination_fu_457_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        i_6_reg_287 <= 6'd0;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        i_6_reg_287 <= add_ln122_reg_1496;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln63_fu_1234_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state36))) begin
        i_7_reg_441 <= 11'd0;
    end else if (((icmp_ln88_fu_1428_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state55))) begin
        i_7_reg_441 <= add_ln88_fu_1434_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln41_fu_809_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state18))) begin
        i_8_reg_320 <= 6'd0;
    end else if ((1'b1 == ap_CS_fsm_state30)) begin
        i_8_reg_320 <= add_ln122_1_reg_1566;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        i_reg_265 <= 6'd0;
    end else if (((1'b1 == ap_CS_fsm_state3) & (icmp_ln26_fu_552_p2 == 1'd1))) begin
        i_reg_265 <= add_ln22_reg_1460;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state17) & (icmp_ln37_fu_763_p2 == 1'd0))) begin
        j_1_reg_309 <= 3'd0;
    end else if (((icmp_ln122_1_fu_860_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state19))) begin
        j_1_reg_309 <= add_ln41_reg_1553;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln51_fu_1031_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state32))) begin
        j_3_reg_353 <= 6'd0;
    end else if (((exitcond426_fu_1193_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state34))) begin
        j_3_reg_353 <= add_ln55_reg_1631;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state44) & ((icmp_ln122_2_fu_1283_p2 == 1'd1) | (icmp_ln72_reg_1694 == 1'd1)))) begin
        j_4_reg_398 <= add_ln67_fu_1289_p2;
    end else if (((icmp_ln63_fu_1234_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state36))) begin
        j_4_reg_398 <= zext_ln63_fu_1230_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln22_fu_497_p2 == 1'd0))) begin
        j_reg_276 <= 3'd0;
    end else if (((1'b1 == ap_CS_fsm_state5) & (icmp_ln122_fu_608_p2 == 1'd1))) begin
        j_reg_276 <= add_ln26_reg_1483;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state35)) begin
        loop_index_reg_364 <= empty_60_reg_1649;
    end else if (((icmp_ln55_fu_1077_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state33))) begin
        loop_index_reg_364 <= 6'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln51_fu_1031_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state32))) begin
        phi_mul_reg_386 <= 15'd0;
    end else if (((icmp_ln67_fu_1240_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state37))) begin
        phi_mul_reg_386 <= add_ln63_1_reg_1672;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state54)) begin
        v1_0_i_reg_419 <= val_2_fu_1420_p3;
    end else if (((grp_linear_combination_2_fu_465_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state43))) begin
        v1_0_i_reg_419 <= P2_i;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        add_ln122_1_reg_1566 <= add_ln122_1_fu_850_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln72_reg_1694 == 1'd0) & (1'b1 == ap_CS_fsm_state44))) begin
        add_ln122_2_reg_1716 <= add_ln122_2_fu_1272_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        add_ln122_reg_1496 <= add_ln122_fu_593_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        add_ln125_1_reg_1514 <= add_ln125_1_fu_632_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        add_ln125_3_reg_1579 <= add_ln125_3_fu_880_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state45)) begin
        add_ln125_4_reg_1734 <= add_ln125_4_fu_1303_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        add_ln22_reg_1460 <= add_ln22_fu_491_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        add_ln26_reg_1483 <= add_ln26_fu_542_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        add_ln37_reg_1540 <= add_ln37_fu_757_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        add_ln41_reg_1553 <= add_ln41_fu_799_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state32)) begin
        add_ln51_reg_1613 <= add_ln51_fu_1021_p2;
        zext_ln51_reg_1618[2 : 0] <= zext_ln51_fu_1027_p1[2 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state33)) begin
        add_ln55_reg_1631 <= add_ln55_fu_1067_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state36)) begin
        add_ln63_1_reg_1672 <= add_ln63_1_fu_1224_p2;
        add_ln63_reg_1667 <= add_ln63_fu_1218_p2;
        zext_ln63_reg_1677[2 : 0] <= zext_ln63_fu_1230_p1[2 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond426_fu_1193_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state34))) begin
        add_ptr523_sum_reg_1662 <= add_ptr523_sum_fu_1209_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln22_fu_497_p2 == 1'd0))) begin
        empty_47_reg_1468[9 : 1] <= empty_47_fu_527_p2[9 : 1];
        sub_ln31_reg_1473 <= sub_ln31_fu_533_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state17) & (icmp_ln37_fu_763_p2 == 1'd0))) begin
        empty_51_reg_1548[9 : 1] <= empty_51_fu_793_p2[9 : 1];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln51_fu_1031_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state32))) begin
        empty_58_reg_1626[9 : 3] <= empty_58_fu_1061_p2[9 : 3];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state34)) begin
        empty_60_reg_1649 <= empty_60_fu_1183_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln67_fu_1240_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state37))) begin
        icmp_ln72_reg_1694 <= icmp_ln72_fu_1250_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state40)) begin
        mul_ln70_reg_1698 <= grp_fu_1440_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state51) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state12))) begin
        reg_486 <= grp_fu_483_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & (icmp_ln26_fu_552_p2 == 1'd0))) begin
        sub_ln32_reg_1491[14 : 2] <= sub_ln32_fu_587_p2[14 : 2];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln41_fu_809_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state18))) begin
        sub_ln44_reg_1561[14 : 2] <= sub_ln44_fu_844_p2[14 : 2];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln55_fu_1077_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state33))) begin
        sub_ln58_2_reg_1644[14 : 2] <= sub_ln58_2_fu_1177_p2[14 : 2];
        sub_ln58_reg_1639[14 : 2] <= sub_ln58_fu_1112_p2[14 : 2];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln122_1_fu_860_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state19))) begin
        temp_addr_1_reg_1574 <= zext_ln125_4_fu_871_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state5) & (icmp_ln122_fu_608_p2 == 1'd0))) begin
        temp_addr_reg_1504 <= zext_ln125_fu_619_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        tmp_15_reg_1524 <= {{data_V_fu_642_p1[62:52]}};
        tmp_16_reg_1530 <= tmp_16_fu_656_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state28)) begin
        tmp_17_reg_1589 <= {{data_V_1_fu_889_p1[62:52]}};
        tmp_18_reg_1595 <= tmp_18_fu_903_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state53)) begin
        tmp_19_reg_1744 <= {{data_V_2_fu_1313_p1[62:52]}};
        tmp_20_reg_1750 <= tmp_20_fu_1327_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        val_1_reg_1600 <= val_1_fu_996_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        val_reg_1535 <= val_fu_749_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln22_fu_497_p2 == 1'd1))) begin
        zext_ln37_reg_1478[7 : 0] <= zext_ln37_fu_539_p1[7 : 0];
    end
end

always @ (*) begin
    if (((icmp_ln88_fu_1428_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state55))) begin
        P2_o = 8'd0;
    end else if (((icmp_ln122_2_fu_1283_p2 == 1'd1) & (icmp_ln72_reg_1694 == 1'd0) & (1'b1 == ap_CS_fsm_state44))) begin
        P2_o = v1_0_i_reg_419;
    end else if (((grp_linear_combination_1_fu_474_out_r_ap_vld == 1'b1) & (1'b1 == ap_CS_fsm_state41))) begin
        P2_o = grp_linear_combination_1_fu_474_out_r;
    end else begin
        P2_o = P2_i;
    end
end

always @ (*) begin
    if ((((icmp_ln88_fu_1428_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state55)) | ((icmp_ln122_2_fu_1283_p2 == 1'd1) & (icmp_ln72_reg_1694 == 1'd0) & (1'b1 == ap_CS_fsm_state44)))) begin
        P2_o_ap_vld = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state41)) begin
        P2_o_ap_vld = grp_linear_combination_1_fu_474_out_r_ap_vld;
    end else begin
        P2_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln88_fu_1428_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state55))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln88_fu_1428_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state55))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state46)) begin
        grp_fu_483_p0 = zext_ln125_9_fu_1309_p1;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        grp_fu_483_p0 = zext_ln125_6_fu_885_p1;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        grp_fu_483_p0 = zext_ln125_3_fu_638_p1;
    end else begin
        grp_fu_483_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state34)) begin
        temp_address0 = add_ptr584_sum_cast_fu_1204_p1;
    end else if ((1'b1 == ap_CS_fsm_state30)) begin
        temp_address0 = temp_addr_1_reg_1574;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        temp_address0 = zext_ln125_4_fu_871_p1;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        temp_address0 = temp_addr_reg_1504;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        temp_address0 = zext_ln125_fu_619_p1;
    end else begin
        temp_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state5))) begin
        temp_ce0 = 1'b1;
    end else begin
        temp_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state30)) begin
        temp_d0 = val_1_reg_1600;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        temp_d0 = val_reg_1535;
    end else begin
        temp_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state16))) begin
        temp_we0 = 1'b1;
    end else begin
        temp_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state35)) begin
        tempt_address0 = add_ptr523_sum_cast_fu_1214_p1;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        tempt_address0 = p_cast_fu_1010_p1;
    end else if ((1'b1 == ap_CS_fsm_state41)) begin
        tempt_address0 = grp_linear_combination_1_fu_474_vecs_address0;
    end else if ((1'b1 == ap_CS_fsm_state43)) begin
        tempt_address0 = grp_linear_combination_2_fu_465_vecs_address0;
    end else begin
        tempt_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state31))) begin
        tempt_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state41)) begin
        tempt_ce0 = grp_linear_combination_1_fu_474_vecs_ce0;
    end else if ((1'b1 == ap_CS_fsm_state43)) begin
        tempt_ce0 = grp_linear_combination_2_fu_465_vecs_ce0;
    end else begin
        tempt_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state35)) begin
        tempt_d0 = temp_q0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        tempt_d0 = 8'd0;
    end else begin
        tempt_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state35) | ((exitcond5511_fu_1015_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state31)))) begin
        tempt_we0 = 1'b1;
    end else begin
        tempt_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        vec_1_address0 = zext_ln122_fu_599_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        vec_1_address0 = grp_linear_combination_fu_457_out_r_address0;
    end else begin
        vec_1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        vec_1_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        vec_1_ce0 = grp_linear_combination_fu_457_out_r_ce0;
    end else begin
        vec_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        vec_1_we0 = grp_linear_combination_fu_457_out_r_we0;
    end else begin
        vec_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state44)) begin
        vec_address0 = zext_ln122_3_fu_1278_p1;
    end else if (((exitcond2_fu_1266_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state42))) begin
        vec_address0 = p_cast13_fu_1261_p1;
    end else if ((1'b1 == ap_CS_fsm_state43)) begin
        vec_address0 = grp_linear_combination_2_fu_465_out_r_address0;
    end else begin
        vec_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state44) | ((exitcond2_fu_1266_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state42)))) begin
        vec_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state43)) begin
        vec_ce0 = grp_linear_combination_2_fu_465_out_r_ce0;
    end else begin
        vec_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond2_fu_1266_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state42))) begin
        vec_d0 = 5'd0;
    end else if ((1'b1 == ap_CS_fsm_state43)) begin
        vec_d0 = grp_linear_combination_2_fu_465_out_r_d0;
    end else begin
        vec_d0 = 'bx;
    end
end

always @ (*) begin
    if (((exitcond2_fu_1266_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state42))) begin
        vec_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state43)) begin
        vec_we0 = grp_linear_combination_2_fu_465_out_r_we0;
    end else begin
        vec_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln22_fu_497_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((1'b1 == ap_CS_fsm_state3) & (icmp_ln26_fu_552_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state4 : begin
            if (((grp_linear_combination_fu_457_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state5 : begin
            if (((1'b1 == ap_CS_fsm_state5) & (icmp_ln122_fu_608_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            if (((grp_generic_remainder_double_s_fu_452_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state14))) begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state17 : begin
            if (((1'b1 == ap_CS_fsm_state17) & (icmp_ln37_fu_763_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state31;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end
        end
        ap_ST_fsm_state18 : begin
            if (((icmp_ln41_fu_809_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state18))) begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state19;
            end
        end
        ap_ST_fsm_state19 : begin
            if (((icmp_ln122_1_fu_860_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state19))) begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state20;
            end
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state28 : begin
            if (((grp_generic_remainder_double_s_fu_452_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state28))) begin
                ap_NS_fsm = ap_ST_fsm_state29;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state28;
            end
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state30;
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state31 : begin
            if (((exitcond5511_fu_1015_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state31))) begin
                ap_NS_fsm = ap_ST_fsm_state32;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state31;
            end
        end
        ap_ST_fsm_state32 : begin
            if (((icmp_ln51_fu_1031_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state32))) begin
                ap_NS_fsm = ap_ST_fsm_state36;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state33;
            end
        end
        ap_ST_fsm_state33 : begin
            if (((icmp_ln55_fu_1077_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state33))) begin
                ap_NS_fsm = ap_ST_fsm_state32;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state34;
            end
        end
        ap_ST_fsm_state34 : begin
            if (((exitcond426_fu_1193_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state34))) begin
                ap_NS_fsm = ap_ST_fsm_state33;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state35;
            end
        end
        ap_ST_fsm_state35 : begin
            ap_NS_fsm = ap_ST_fsm_state34;
        end
        ap_ST_fsm_state36 : begin
            if (((icmp_ln63_fu_1234_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state36))) begin
                ap_NS_fsm = ap_ST_fsm_state55;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state37;
            end
        end
        ap_ST_fsm_state37 : begin
            if (((icmp_ln67_fu_1240_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state37))) begin
                ap_NS_fsm = ap_ST_fsm_state36;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state38;
            end
        end
        ap_ST_fsm_state38 : begin
            ap_NS_fsm = ap_ST_fsm_state39;
        end
        ap_ST_fsm_state39 : begin
            ap_NS_fsm = ap_ST_fsm_state40;
        end
        ap_ST_fsm_state40 : begin
            ap_NS_fsm = ap_ST_fsm_state41;
        end
        ap_ST_fsm_state41 : begin
            if (((grp_linear_combination_1_fu_474_ap_done == 1'b1) & (icmp_ln72_reg_1694 == 1'd0) & (1'b1 == ap_CS_fsm_state41))) begin
                ap_NS_fsm = ap_ST_fsm_state42;
            end else if (((grp_linear_combination_1_fu_474_ap_done == 1'b1) & (icmp_ln72_reg_1694 == 1'd1) & (1'b1 == ap_CS_fsm_state41))) begin
                ap_NS_fsm = ap_ST_fsm_state44;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state41;
            end
        end
        ap_ST_fsm_state42 : begin
            if (((exitcond2_fu_1266_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state42))) begin
                ap_NS_fsm = ap_ST_fsm_state42;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state43;
            end
        end
        ap_ST_fsm_state43 : begin
            if (((grp_linear_combination_2_fu_465_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state43))) begin
                ap_NS_fsm = ap_ST_fsm_state44;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state43;
            end
        end
        ap_ST_fsm_state44 : begin
            if (((1'b1 == ap_CS_fsm_state44) & ((icmp_ln122_2_fu_1283_p2 == 1'd1) | (icmp_ln72_reg_1694 == 1'd1)))) begin
                ap_NS_fsm = ap_ST_fsm_state37;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state45;
            end
        end
        ap_ST_fsm_state45 : begin
            ap_NS_fsm = ap_ST_fsm_state46;
        end
        ap_ST_fsm_state46 : begin
            ap_NS_fsm = ap_ST_fsm_state47;
        end
        ap_ST_fsm_state47 : begin
            ap_NS_fsm = ap_ST_fsm_state48;
        end
        ap_ST_fsm_state48 : begin
            ap_NS_fsm = ap_ST_fsm_state49;
        end
        ap_ST_fsm_state49 : begin
            ap_NS_fsm = ap_ST_fsm_state50;
        end
        ap_ST_fsm_state50 : begin
            ap_NS_fsm = ap_ST_fsm_state51;
        end
        ap_ST_fsm_state51 : begin
            ap_NS_fsm = ap_ST_fsm_state52;
        end
        ap_ST_fsm_state52 : begin
            ap_NS_fsm = ap_ST_fsm_state53;
        end
        ap_ST_fsm_state53 : begin
            if (((grp_generic_remainder_double_s_fu_452_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state53))) begin
                ap_NS_fsm = ap_ST_fsm_state54;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state53;
            end
        end
        ap_ST_fsm_state54 : begin
            ap_NS_fsm = ap_ST_fsm_state44;
        end
        ap_ST_fsm_state55 : begin
            if (((icmp_ln88_fu_1428_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state55))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state55;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln122_1_fu_850_p2 = (i_8_reg_320 + 6'd1);

assign add_ln122_2_fu_1272_p2 = (i_10_reg_430 + 6'd1);

assign add_ln122_fu_593_p2 = (i_6_reg_287 + 6'd1);

assign add_ln125_1_fu_632_p2 = (zext_ln125_2_fu_628_p1 + zext_ln125_1_fu_624_p1);

assign add_ln125_2_fu_866_p2 = (zext_ln122_2_fu_856_p1 + sub_ln44_reg_1561);

assign add_ln125_3_fu_880_p2 = (zext_ln125_5_fu_876_p1 + zext_ln37_reg_1478);

assign add_ln125_4_fu_1303_p2 = (zext_ln125_8_fu_1299_p1 + zext_ln125_7_fu_1295_p1);

assign add_ln125_fu_614_p2 = (zext_ln122_1_fu_604_p1 + sub_ln32_reg_1491);

assign add_ln22_fu_491_p2 = (i_reg_265 + 6'd1);

assign add_ln26_fu_542_p2 = (j_reg_276 + 3'd1);

assign add_ln32_fu_558_p2 = (zext_ln26_fu_548_p1 + empty_47_reg_1468);

assign add_ln37_fu_757_p2 = (i_4_reg_298 + 6'd1);

assign add_ln41_fu_799_p2 = (j_1_reg_309 + 3'd1);

assign add_ln44_fu_815_p2 = (zext_ln41_fu_805_p1 + empty_51_reg_1548);

assign add_ln510_1_fu_923_p2 = ($signed(zext_ln510_1_fu_920_p1) + $signed(12'd3073));

assign add_ln510_2_fu_1347_p2 = ($signed(zext_ln510_2_fu_1344_p1) + $signed(12'd3073));

assign add_ln510_fu_676_p2 = ($signed(zext_ln510_fu_673_p1) + $signed(12'd3073));

assign add_ln51_fu_1021_p2 = (i_5_reg_342 + 3'd1);

assign add_ln55_fu_1067_p2 = (j_3_reg_353 + 6'd1);

assign add_ln58_1_fu_1148_p2 = (sub_ln58_1_fu_1142_p2 + zext_ln51_reg_1618);

assign add_ln58_fu_1083_p2 = (zext_ln55_fu_1073_p1 + empty_58_reg_1626);

assign add_ln63_1_fu_1224_p2 = (phi_mul_reg_386 + 15'd3360);

assign add_ln63_fu_1218_p2 = (i_11_reg_375 + 3'd1);

assign add_ln67_fu_1289_p2 = (j_4_reg_398 + 64'd1);

assign add_ln88_fu_1434_p2 = (i_7_reg_441 + 11'd2);

assign add_ptr523_sum_cast_fu_1214_p1 = add_ptr523_sum_reg_1662;

assign add_ptr523_sum_fu_1209_p2 = (loop_index_cast_fu_1189_p1 + sub_ln58_reg_1639);

assign add_ptr584_sum_cast_fu_1204_p1 = add_ptr584_sum_fu_1199_p2;

assign add_ptr584_sum_fu_1199_p2 = (loop_index_cast_fu_1189_p1 + sub_ln58_2_reg_1644);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state26 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_state27 = ap_CS_fsm[32'd26];

assign ap_CS_fsm_state28 = ap_CS_fsm[32'd27];

assign ap_CS_fsm_state29 = ap_CS_fsm[32'd28];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state30 = ap_CS_fsm[32'd29];

assign ap_CS_fsm_state31 = ap_CS_fsm[32'd30];

assign ap_CS_fsm_state32 = ap_CS_fsm[32'd31];

assign ap_CS_fsm_state33 = ap_CS_fsm[32'd32];

assign ap_CS_fsm_state34 = ap_CS_fsm[32'd33];

assign ap_CS_fsm_state35 = ap_CS_fsm[32'd34];

assign ap_CS_fsm_state36 = ap_CS_fsm[32'd35];

assign ap_CS_fsm_state37 = ap_CS_fsm[32'd36];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state40 = ap_CS_fsm[32'd39];

assign ap_CS_fsm_state41 = ap_CS_fsm[32'd40];

assign ap_CS_fsm_state42 = ap_CS_fsm[32'd41];

assign ap_CS_fsm_state43 = ap_CS_fsm[32'd42];

assign ap_CS_fsm_state44 = ap_CS_fsm[32'd43];

assign ap_CS_fsm_state45 = ap_CS_fsm[32'd44];

assign ap_CS_fsm_state46 = ap_CS_fsm[32'd45];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state51 = ap_CS_fsm[32'd50];

assign ap_CS_fsm_state52 = ap_CS_fsm[32'd51];

assign ap_CS_fsm_state53 = ap_CS_fsm[32'd52];

assign ap_CS_fsm_state54 = ap_CS_fsm[32'd53];

assign ap_CS_fsm_state55 = ap_CS_fsm[32'd54];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign data_V_1_fu_889_p1 = grp_generic_remainder_double_s_fu_452_ap_return;

assign data_V_2_fu_1313_p1 = grp_generic_remainder_double_s_fu_452_ap_return;

assign data_V_fu_642_p1 = grp_generic_remainder_double_s_fu_452_ap_return;

assign empty_47_fu_527_p2 = (p_shl_cast_fu_511_p1 - p_shl9_cast_fu_523_p1);

assign empty_51_fu_793_p2 = (p_shl12_cast_fu_777_p1 - p_shl13_cast_fu_789_p1);

assign empty_55_fu_1004_p2 = (empty_54_reg_331 + 15'd1);

assign empty_58_fu_1061_p2 = (p_shl16_cast_fu_1045_p1 - p_shl17_cast_fu_1057_p1);

assign empty_60_fu_1183_p2 = (loop_index_reg_364 + 6'd1);

assign empty_65_fu_1255_p2 = (empty_64_reg_408 + 6'd1);

assign exitcond2_fu_1266_p2 = ((empty_64_reg_408 == 6'd60) ? 1'b1 : 1'b0);

assign exitcond426_fu_1193_p2 = ((loop_index_reg_364 == 6'd60) ? 1'b1 : 1'b0);

assign exitcond5511_fu_1015_p2 = ((empty_54_reg_331 == 15'd20160) ? 1'b1 : 1'b0);

assign grp_fu_1440_p0 = j_4_reg_398[14:0];

assign grp_fu_1440_p1 = 15'd3360;

assign grp_generic_remainder_double_s_fu_452_ap_start = grp_generic_remainder_double_s_fu_452_ap_start_reg;

assign grp_linear_combination_1_fu_474_ap_start = grp_linear_combination_1_fu_474_ap_start_reg;

assign grp_linear_combination_2_fu_465_ap_start = grp_linear_combination_2_fu_465_ap_start_reg;

assign grp_linear_combination_fu_457_ap_start = grp_linear_combination_fu_457_ap_start_reg;

assign icmp_ln122_1_fu_860_p2 = ((i_8_reg_320 == 6'd60) ? 1'b1 : 1'b0);

assign icmp_ln122_2_fu_1283_p2 = ((i_10_reg_430 == 6'd60) ? 1'b1 : 1'b0);

assign icmp_ln122_fu_608_p2 = ((i_6_reg_287 == 6'd60) ? 1'b1 : 1'b0);

assign icmp_ln22_fu_497_p2 = ((i_reg_265 == 6'd56) ? 1'b1 : 1'b0);

assign icmp_ln26_fu_552_p2 = ((j_reg_276 == 3'd6) ? 1'b1 : 1'b0);

assign icmp_ln37_fu_763_p2 = ((i_4_reg_298 == 6'd56) ? 1'b1 : 1'b0);

assign icmp_ln41_fu_809_p2 = ((j_1_reg_309 == 3'd6) ? 1'b1 : 1'b0);

assign icmp_ln51_fu_1031_p2 = ((i_5_reg_342 == 3'd6) ? 1'b1 : 1'b0);

assign icmp_ln55_fu_1077_p2 = ((j_3_reg_353 == 6'd56) ? 1'b1 : 1'b0);

assign icmp_ln63_fu_1234_p2 = ((i_11_reg_375 == 3'd6) ? 1'b1 : 1'b0);

assign icmp_ln67_fu_1240_p2 = ((j_4_reg_398 == 64'd6) ? 1'b1 : 1'b0);

assign icmp_ln72_fu_1250_p2 = ((j_4_reg_398 == zext_ln63_reg_1677) ? 1'b1 : 1'b0);

assign icmp_ln88_fu_1428_p2 = ((i_7_reg_441 < 11'd1260) ? 1'b1 : 1'b0);

assign isNeg_1_fu_929_p3 = add_ln510_1_fu_923_p2[32'd11];

assign isNeg_2_fu_1353_p3 = add_ln510_2_fu_1347_p2[32'd11];

assign isNeg_fu_682_p3 = add_ln510_fu_676_p2[32'd11];

assign loop_index_cast_fu_1189_p1 = loop_index_reg_364;

assign mantissa_1_fu_907_p4 = {{{{1'd1}, {tmp_18_reg_1595}}}, {1'd0}};

assign mantissa_2_fu_1331_p4 = {{{{1'd1}, {tmp_20_reg_1750}}}, {1'd0}};

assign mantissa_fu_660_p4 = {{{{1'd1}, {tmp_16_reg_1530}}}, {1'd0}};

assign p_cast13_fu_1261_p1 = empty_64_reg_408;

assign p_cast_fu_1010_p1 = empty_54_reg_331;

assign p_shl12_cast_fu_777_p1 = p_shl1_fu_769_p3;

assign p_shl13_cast_fu_789_p1 = p_shl2_fu_781_p3;

assign p_shl16_cast_fu_1045_p1 = p_shl3_fu_1037_p3;

assign p_shl17_cast_fu_1057_p1 = p_shl4_fu_1049_p3;

assign p_shl1_fu_769_p3 = {{i_4_reg_298}, {3'd0}};

assign p_shl2_fu_781_p3 = {{i_4_reg_298}, {1'd0}};

assign p_shl3_fu_1037_p3 = {{i_5_reg_342}, {6'd0}};

assign p_shl4_fu_1049_p3 = {{i_5_reg_342}, {3'd0}};

assign p_shl9_cast_fu_523_p1 = p_shl9_fu_515_p3;

assign p_shl9_fu_515_p3 = {{i_reg_265}, {1'd0}};

assign p_shl_cast_fu_511_p1 = p_shl_fu_503_p3;

assign p_shl_fu_503_p3 = {{i_reg_265}, {3'd0}};

assign r_V_1_fu_721_p2 = zext_ln68_fu_669_p1 << sh_prom_i_i_i_i_i_i_cast_cast_cast_cast_fu_711_p1;

assign r_V_2_fu_962_p2 = zext_ln68_1_fu_916_p1 >> sh_prom_i_i_i_i_i_i40_cast_cast_cast_cast_fu_958_p1;

assign r_V_3_fu_968_p2 = zext_ln68_1_fu_916_p1 << sh_prom_i_i_i_i_i_i40_cast_cast_cast_cast_fu_958_p1;

assign r_V_4_fu_1386_p2 = zext_ln68_2_fu_1340_p1 >> sh_prom_i_i_i_i_i_i62_cast_cast_cast_cast_fu_1382_p1;

assign r_V_5_fu_1392_p2 = zext_ln68_2_fu_1340_p1 << sh_prom_i_i_i_i_i_i62_cast_cast_cast_cast_fu_1382_p1;

assign r_V_fu_715_p2 = zext_ln68_fu_669_p1 >> sh_prom_i_i_i_i_i_i_cast_cast_cast_cast_fu_711_p1;

assign sext_ln1311_1_fu_942_p1 = $signed(sub_ln1311_1_fu_937_p2);

assign sext_ln1311_2_fu_1366_p1 = $signed(sub_ln1311_2_fu_1361_p2);

assign sext_ln1311_fu_695_p1 = $signed(sub_ln1311_fu_690_p2);

assign sext_ln32_fu_583_p1 = $signed(shl_ln32_1_fu_575_p3);

assign sext_ln44_fu_840_p1 = $signed(shl_ln44_1_fu_832_p3);

assign sext_ln58_1_fu_1173_p1 = $signed(shl_ln58_5_fu_1165_p3);

assign sext_ln58_fu_1108_p1 = $signed(shl_ln58_1_fu_1100_p3);

assign sh_prom_i_i_i_i_i_i40_cast_cast_cast_cast_fu_958_p1 = $unsigned(sh_prom_i_i_i_i_i_i40_cast_cast_cast_fu_954_p1);

assign sh_prom_i_i_i_i_i_i40_cast_cast_cast_fu_954_p1 = $signed(ush_1_fu_946_p3);

assign sh_prom_i_i_i_i_i_i62_cast_cast_cast_cast_fu_1382_p1 = $unsigned(sh_prom_i_i_i_i_i_i62_cast_cast_cast_fu_1378_p1);

assign sh_prom_i_i_i_i_i_i62_cast_cast_cast_fu_1378_p1 = $signed(ush_2_fu_1370_p3);

assign sh_prom_i_i_i_i_i_i_cast_cast_cast_cast_fu_711_p1 = $unsigned(sh_prom_i_i_i_i_i_i_cast_cast_cast_fu_707_p1);

assign sh_prom_i_i_i_i_i_i_cast_cast_cast_fu_707_p1 = $signed(ush_fu_699_p3);

assign shl_ln1_fu_824_p3 = {{trunc_ln44_fu_820_p1}, {6'd0}};

assign shl_ln2_fu_1092_p3 = {{trunc_ln58_fu_1088_p1}, {6'd0}};

assign shl_ln32_1_fu_575_p3 = {{add_ln32_fu_558_p2}, {2'd0}};

assign shl_ln44_1_fu_832_p3 = {{add_ln44_fu_815_p2}, {2'd0}};

assign shl_ln58_1_fu_1100_p3 = {{add_ln58_fu_1083_p2}, {2'd0}};

assign shl_ln58_2_fu_1118_p3 = {{j_3_reg_353}, {3'd0}};

assign shl_ln58_3_fu_1130_p3 = {{j_3_reg_353}, {1'd0}};

assign shl_ln58_4_fu_1157_p3 = {{trunc_ln58_1_fu_1153_p1}, {6'd0}};

assign shl_ln58_5_fu_1165_p3 = {{add_ln58_1_fu_1148_p2}, {2'd0}};

assign shl_ln_fu_567_p3 = {{trunc_ln32_fu_563_p1}, {6'd0}};

assign sub_ln1311_1_fu_937_p2 = (11'd1023 - tmp_17_reg_1589);

assign sub_ln1311_2_fu_1361_p2 = (11'd1023 - tmp_19_reg_1744);

assign sub_ln1311_fu_690_p2 = (11'd1023 - tmp_15_reg_1524);

assign sub_ln31_fu_533_p2 = ($signed(6'd56) - $signed(i_reg_265));

assign sub_ln32_fu_587_p2 = ($signed(shl_ln_fu_567_p3) - $signed(sext_ln32_fu_583_p1));

assign sub_ln44_fu_844_p2 = ($signed(shl_ln1_fu_824_p3) - $signed(sext_ln44_fu_840_p1));

assign sub_ln58_1_fu_1142_p2 = (zext_ln58_fu_1126_p1 - zext_ln58_1_fu_1138_p1);

assign sub_ln58_2_fu_1177_p2 = ($signed(shl_ln58_4_fu_1157_p3) - $signed(sext_ln58_1_fu_1173_p1));

assign sub_ln58_fu_1112_p2 = ($signed(shl_ln2_fu_1092_p3) - $signed(sext_ln58_fu_1108_p1));

assign tmp_10_fu_974_p3 = r_V_2_fu_962_p2[32'd53];

assign tmp_14_fu_1398_p3 = r_V_4_fu_1386_p2[32'd53];

assign tmp_16_fu_656_p1 = data_V_fu_642_p1[51:0];

assign tmp_18_fu_903_p1 = data_V_1_fu_889_p1[51:0];

assign tmp_20_fu_1327_p1 = data_V_2_fu_1313_p1[51:0];

assign tmp_2_fu_986_p4 = {{r_V_3_fu_968_p2[60:53]}};

assign tmp_4_fu_1410_p4 = {{r_V_5_fu_1392_p2[60:53]}};

assign tmp_fu_727_p3 = r_V_fu_715_p2[32'd53];

assign tmp_s_fu_739_p4 = {{r_V_1_fu_721_p2[60:53]}};

assign trunc_ln32_fu_563_p1 = add_ln32_fu_558_p2[8:0];

assign trunc_ln44_fu_820_p1 = add_ln44_fu_815_p2[8:0];

assign trunc_ln58_1_fu_1153_p1 = add_ln58_1_fu_1148_p2[8:0];

assign trunc_ln58_fu_1088_p1 = add_ln58_fu_1083_p2[8:0];

assign ush_1_fu_946_p3 = ((isNeg_1_fu_929_p3[0:0] == 1'b1) ? sext_ln1311_1_fu_942_p1 : add_ln510_1_fu_923_p2);

assign ush_2_fu_1370_p3 = ((isNeg_2_fu_1353_p3[0:0] == 1'b1) ? sext_ln1311_2_fu_1366_p1 : add_ln510_2_fu_1347_p2);

assign ush_fu_699_p3 = ((isNeg_fu_682_p3[0:0] == 1'b1) ? sext_ln1311_fu_695_p1 : add_ln510_fu_676_p2);

assign val_1_fu_996_p3 = ((isNeg_1_fu_929_p3[0:0] == 1'b1) ? zext_ln662_1_fu_982_p1 : tmp_2_fu_986_p4);

assign val_2_fu_1420_p3 = ((isNeg_2_fu_1353_p3[0:0] == 1'b1) ? zext_ln662_2_fu_1406_p1 : tmp_4_fu_1410_p4);

assign val_fu_749_p3 = ((isNeg_fu_682_p3[0:0] == 1'b1) ? zext_ln662_fu_735_p1 : tmp_s_fu_739_p4);

assign zext_ln122_1_fu_604_p1 = i_6_reg_287;

assign zext_ln122_2_fu_856_p1 = i_8_reg_320;

assign zext_ln122_3_fu_1278_p1 = i_10_reg_430;

assign zext_ln122_fu_599_p1 = i_6_reg_287;

assign zext_ln125_1_fu_624_p1 = temp_q0;

assign zext_ln125_2_fu_628_p1 = vec_1_q0;

assign zext_ln125_3_fu_638_p1 = add_ln125_1_reg_1514;

assign zext_ln125_4_fu_871_p1 = add_ln125_2_fu_866_p2;

assign zext_ln125_5_fu_876_p1 = temp_q0;

assign zext_ln125_6_fu_885_p1 = add_ln125_3_reg_1579;

assign zext_ln125_7_fu_1295_p1 = v1_0_i_reg_419;

assign zext_ln125_8_fu_1299_p1 = vec_q0;

assign zext_ln125_9_fu_1309_p1 = add_ln125_4_reg_1734;

assign zext_ln125_fu_619_p1 = add_ln125_fu_614_p2;

assign zext_ln26_fu_548_p1 = j_reg_276;

assign zext_ln37_fu_539_p1 = P1;

assign zext_ln41_fu_805_p1 = j_1_reg_309;

assign zext_ln510_1_fu_920_p1 = tmp_17_reg_1589;

assign zext_ln510_2_fu_1344_p1 = tmp_19_reg_1744;

assign zext_ln510_fu_673_p1 = tmp_15_reg_1524;

assign zext_ln51_fu_1027_p1 = i_5_reg_342;

assign zext_ln55_fu_1073_p1 = j_3_reg_353;

assign zext_ln58_1_fu_1138_p1 = shl_ln58_3_fu_1130_p3;

assign zext_ln58_fu_1126_p1 = shl_ln58_2_fu_1118_p3;

assign zext_ln63_fu_1230_p1 = i_11_reg_375;

assign zext_ln662_1_fu_982_p1 = tmp_10_fu_974_p3;

assign zext_ln662_2_fu_1406_p1 = tmp_14_fu_1398_p3;

assign zext_ln662_fu_735_p1 = tmp_fu_727_p3;

assign zext_ln68_1_fu_916_p1 = mantissa_1_fu_907_p4;

assign zext_ln68_2_fu_1340_p1 = mantissa_2_fu_1331_p4;

assign zext_ln68_fu_669_p1 = mantissa_fu_660_p4;

always @ (posedge ap_clk) begin
    empty_47_reg_1468[0] <= 1'b0;
    zext_ln37_reg_1478[8] <= 1'b0;
    sub_ln32_reg_1491[1:0] <= 2'b00;
    empty_51_reg_1548[0] <= 1'b0;
    sub_ln44_reg_1561[1:0] <= 2'b00;
    zext_ln51_reg_1618[9:3] <= 7'b0000000;
    empty_58_reg_1626[2:0] <= 3'b000;
    sub_ln58_reg_1639[1:0] <= 2'b00;
    sub_ln58_2_reg_1644[1:0] <= 2'b00;
    zext_ln63_reg_1677[63:3] <= 61'b0000000000000000000000000000000000000000000000000000000000000;
end

endmodule //computeP2
