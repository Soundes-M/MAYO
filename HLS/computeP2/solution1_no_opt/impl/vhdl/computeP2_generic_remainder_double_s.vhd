-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
-- Version: 2020.2
-- Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity computeP2_generic_remainder_double_s is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    x : IN STD_LOGIC_VECTOR (63 downto 0);
    ap_return : OUT STD_LOGIC_VECTOR (63 downto 0) );
end;


architecture behav of computeP2_generic_remainder_double_s is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (12 downto 0) := "0000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (12 downto 0) := "0000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (12 downto 0) := "0000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (12 downto 0) := "0000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (12 downto 0) := "0000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (12 downto 0) := "0000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (12 downto 0) := "0001000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (12 downto 0) := "0010000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (12 downto 0) := "0100000000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (12 downto 0) := "1000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv12_0 : STD_LOGIC_VECTOR (11 downto 0) := "000000000000";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv54_1EFFFFFFFFFFFF : STD_LOGIC_VECTOR (53 downto 0) := "011110111111111111111111111111111111111111111111111111";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv32_34 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110100";
    constant ap_const_lv32_3E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111110";
    constant ap_const_lv11_0 : STD_LOGIC_VECTOR (10 downto 0) := "00000000000";
    constant ap_const_lv11_7FF : STD_LOGIC_VECTOR (10 downto 0) := "11111111111";
    constant ap_const_lv11_403 : STD_LOGIC_VECTOR (10 downto 0) := "10000000011";
    constant ap_const_lv12_403 : STD_LOGIC_VECTOR (11 downto 0) := "010000000011";
    constant ap_const_lv12_1 : STD_LOGIC_VECTOR (11 downto 0) := "000000000001";
    constant ap_const_lv52_F000000000000 : STD_LOGIC_VECTOR (51 downto 0) := "1111000000000000000000000000000000000000000000000000";
    constant ap_const_lv53_0 : STD_LOGIC_VECTOR (52 downto 0) := "00000000000000000000000000000000000000000000000000000";
    constant ap_const_lv52_F000000000001 : STD_LOGIC_VECTOR (51 downto 0) := "1111000000000000000000000000000000000000000000000001";
    constant ap_const_lv32_33 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110011";
    constant ap_const_lv12_FFF : STD_LOGIC_VECTOR (11 downto 0) := "111111111111";
    constant ap_const_lv7_1 : STD_LOGIC_VECTOR (6 downto 0) := "0000001";
    constant ap_const_lv7_34 : STD_LOGIC_VECTOR (6 downto 0) := "0110100";
    constant ap_const_lv52_FFFFFFFFFFFFF : STD_LOGIC_VECTOR (51 downto 0) := "1111111111111111111111111111111111111111111111111111";
    constant ap_const_lv6_35 : STD_LOGIC_VECTOR (5 downto 0) := "110101";
    constant ap_const_lv6_34 : STD_LOGIC_VECTOR (5 downto 0) := "110100";
    constant ap_const_lv6_1 : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    constant ap_const_lv54_3FFFFFFFFFFFFF : STD_LOGIC_VECTOR (53 downto 0) := "111111111111111111111111111111111111111111111111111111";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv32_35 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110101";
    constant ap_const_lv54_1FFFFFFFFFFFFF : STD_LOGIC_VECTOR (53 downto 0) := "011111111111111111111111111111111111111111111111111111";
    constant ap_const_lv12_BFD : STD_LOGIC_VECTOR (11 downto 0) := "101111111101";
    constant ap_const_lv12_832 : STD_LOGIC_VECTOR (11 downto 0) := "100000110010";
    constant ap_const_lv13_0 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000000";
    constant ap_const_lv13_1FFF : STD_LOGIC_VECTOR (12 downto 0) := "1111111111111";
    constant ap_const_lv54_1 : STD_LOGIC_VECTOR (53 downto 0) := "000000000000000000000000000000000000000000000000000001";
    constant ap_const_lv54_2000000000000 : STD_LOGIC_VECTOR (53 downto 0) := "000010000000000000000000000000000000000000000000000000";
    constant ap_const_lv54_21000000000000 : STD_LOGIC_VECTOR (53 downto 0) := "100001000000000000000000000000000000000000000000000000";
    constant ap_const_lv54_1F000000000000 : STD_LOGIC_VECTOR (53 downto 0) := "011111000000000000000000000000000000000000000000000000";
    constant ap_const_lv54_3E000000000000 : STD_LOGIC_VECTOR (53 downto 0) := "111110000000000000000000000000000000000000000000000000";
    constant ap_const_lv54_0 : STD_LOGIC_VECTOR (53 downto 0) := "000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv10_3FF : STD_LOGIC_VECTOR (9 downto 0) := "1111111111";
    constant ap_const_lv32_FFFFFFFF : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111111111111";
    constant ap_const_lv12_5 : STD_LOGIC_VECTOR (11 downto 0) := "000000000101";
    constant ap_const_lv12_C01 : STD_LOGIC_VECTOR (11 downto 0) := "110000000001";
    constant ap_const_lv11_3FF : STD_LOGIC_VECTOR (10 downto 0) := "01111111111";
    constant ap_const_lv13_1C02 : STD_LOGIC_VECTOR (12 downto 0) := "1110000000010";
    constant ap_const_lv63_0 : STD_LOGIC_VECTOR (62 downto 0) := "000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv63_7FFFFFFFFFFFFFFF : STD_LOGIC_VECTOR (62 downto 0) := "111111111111111111111111111111111111111111111111111111111111111";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (12 downto 0) := "0000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal ret_18_fu_213_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ret_18_reg_1003 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_Repl2_2_reg_1011 : STD_LOGIC_VECTOR (0 downto 0);
    signal ret_19_fu_235_p1 : STD_LOGIC_VECTOR (51 downto 0);
    signal ret_19_reg_1022 : STD_LOGIC_VECTOR (51 downto 0);
    signal isZ_e_x_fu_239_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal isZ_e_x_reg_1029 : STD_LOGIC_VECTOR (0 downto 0);
    signal isF_e_x_fu_245_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal isF_e_x_reg_1033 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln169_fu_257_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln169_reg_1037 : STD_LOGIC_VECTOR (11 downto 0);
    signal isyBx_1e_fu_267_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal isyBx_1e_reg_1042 : STD_LOGIC_VECTOR (0 downto 0);
    signal isyBx_2e_fu_283_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal isyBx_2e_reg_1046 : STD_LOGIC_VECTOR (0 downto 0);
    signal isxEy_m_fu_289_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal isxEy_m_reg_1050 : STD_LOGIC_VECTOR (0 downto 0);
    signal isyBx_m_fu_295_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal isyBx_m_reg_1054 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln414_fu_313_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln414_reg_1058 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln844_fu_323_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln844_reg_1062 : STD_LOGIC_VECTOR (0 downto 0);
    signal LZ_V_fu_355_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal LZ_V_reg_1066 : STD_LOGIC_VECTOR (5 downto 0);
    signal LZ_V_cast_fu_359_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal LZ_V_cast_reg_1072 : STD_LOGIC_VECTOR (6 downto 0);
    signal icmp_ln368_fu_369_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln368_reg_1077 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln368_fu_375_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal trunc_ln368_reg_1085 : STD_LOGIC_VECTOR (5 downto 0);
    signal p_Result_44_fu_379_p3 : STD_LOGIC_VECTOR (52 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal p_Result_39_fu_395_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal shl_ln368_fu_462_p2 : STD_LOGIC_VECTOR (53 downto 0);
    signal shl_ln368_reg_1103 : STD_LOGIC_VECTOR (53 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal and_ln368_fu_480_p2 : STD_LOGIC_VECTOR (53 downto 0);
    signal and_ln368_reg_1109 : STD_LOGIC_VECTOR (53 downto 0);
    signal sext_ln1301_1_fu_491_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal trunc_ln345_fu_542_p1 : STD_LOGIC_VECTOR (52 downto 0);
    signal ret_20_fu_546_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal ret_20_reg_1124 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal sext_ln1301_2_fu_552_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal zext_ln368_fu_556_p1 : STD_LOGIC_VECTOR (53 downto 0);
    signal loop_V_1_fu_560_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal r_sh_V_7_fu_604_p3 : STD_LOGIC_VECTOR (53 downto 0);
    signal icmp_ln832_fu_566_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_V_3_fu_612_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal and_ln503_fu_626_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln503_reg_1157 : STD_LOGIC_VECTOR (0 downto 0);
    signal r_sh_V_4_fu_638_p3 : STD_LOGIC_VECTOR (53 downto 0);
    signal r_sh_V_4_reg_1162 : STD_LOGIC_VECTOR (53 downto 0);
    signal icmp_ln832_1_fu_646_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln832_1_reg_1173 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln645_fu_651_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal trunc_ln645_reg_1177 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal r_sh_V_fu_768_p3 : STD_LOGIC_VECTOR (53 downto 0);
    signal r_sh_V_reg_1182 : STD_LOGIC_VECTOR (53 downto 0);
    signal s_r_V_3_fu_798_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal s_r_V_3_reg_1190 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln824_5_fu_805_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln824_5_reg_1196 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal r_4_fu_896_p3 : STD_LOGIC_VECTOR (53 downto 0);
    signal r_4_reg_1200 : STD_LOGIC_VECTOR (53 downto 0);
    signal icmp_ln836_2_fu_904_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln836_2_reg_1206 : STD_LOGIC_VECTOR (0 downto 0);
    signal fz_exp_V_fu_916_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal fz_exp_V_reg_1212 : STD_LOGIC_VECTOR (10 downto 0);
    signal n_V_fu_926_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal n_V_reg_1217 : STD_LOGIC_VECTOR (12 downto 0);
    signal p_Result_45_fu_932_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_Result_38_fu_981_p4 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal p_Result_37_fu_989_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state12 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state12 : signal is "none";
    signal p_Result_36_fu_996_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state13 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state13 : signal is "none";
    signal ap_mx_V_reg_136 : STD_LOGIC_VECTOR (52 downto 0);
    signal ix_0_in_reg_145 : STD_LOGIC_VECTOR (11 downto 0);
    signal loop_V_reg_154 : STD_LOGIC_VECTOR (11 downto 0);
    signal i_V_1_reg_165 : STD_LOGIC_VECTOR (12 downto 0);
    signal r_sh_V_3_reg_175 : STD_LOGIC_VECTOR (53 downto 0);
    signal ap_phi_mux_retval_0_in_phi_fu_187_p18 : STD_LOGIC_VECTOR (63 downto 0);
    signal retval_0_in_reg_184 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_Result_47_fu_967_p4 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal ret_10_fu_225_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal ret_fu_261_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_4_fu_273_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal icmp_ln824_fu_251_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_35_fu_301_p5 : STD_LOGIC_VECTOR (52 downto 0);
    signal trunc_ln628_fu_319_p1 : STD_LOGIC_VECTOR (51 downto 0);
    signal p_Result_s_fu_329_p4 : STD_LOGIC_VECTOR (51 downto 0);
    signal p_Result_40_fu_339_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_7_fu_347_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln461_fu_363_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_fu_386_p4 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln628_fu_403_p1 : STD_LOGIC_VECTOR (51 downto 0);
    signal lshr_ln628_fu_406_p2 : STD_LOGIC_VECTOR (51 downto 0);
    signal p_Result_41_fu_412_p2 : STD_LOGIC_VECTOR (51 downto 0);
    signal sub_ln368_fu_421_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal sub_ln368_1_fu_438_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal select_ln368_1_fu_432_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal select_ln368_fu_426_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal select_ln368_2_fu_443_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln169_1_fu_417_p1 : STD_LOGIC_VECTOR (53 downto 0);
    signal zext_ln368_1_fu_450_p1 : STD_LOGIC_VECTOR (53 downto 0);
    signal zext_ln368_2_fu_454_p1 : STD_LOGIC_VECTOR (53 downto 0);
    signal zext_ln368_3_fu_458_p1 : STD_LOGIC_VECTOR (53 downto 0);
    signal shl_ln368_1_fu_468_p2 : STD_LOGIC_VECTOR (53 downto 0);
    signal lshr_ln368_fu_474_p2 : STD_LOGIC_VECTOR (53 downto 0);
    signal p_neg_fu_486_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_6_fu_495_p4 : STD_LOGIC_VECTOR (53 downto 0);
    signal select_ln368_3_fu_504_p3 : STD_LOGIC_VECTOR (53 downto 0);
    signal sub_ln345_fu_515_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln345_fu_520_p1 : STD_LOGIC_VECTOR (53 downto 0);
    signal lshr_ln345_fu_524_p2 : STD_LOGIC_VECTOR (53 downto 0);
    signal p_Result_42_fu_510_p2 : STD_LOGIC_VECTOR (53 downto 0);
    signal xor_ln345_fu_530_p2 : STD_LOGIC_VECTOR (53 downto 0);
    signal p_Result_43_fu_536_p2 : STD_LOGIC_VECTOR (53 downto 0);
    signal r_3_fu_584_p2 : STD_LOGIC_VECTOR (53 downto 0);
    signal grp_fu_207_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal r_sh_V_5_fu_590_p2 : STD_LOGIC_VECTOR (53 downto 0);
    signal icmp_ln840_fu_572_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln497_fu_596_p3 : STD_LOGIC_VECTOR (53 downto 0);
    signal i_V_2_fu_578_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal icmp_ln824_3_fu_620_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal r_sh_V_2_fu_632_p2 : STD_LOGIC_VECTOR (53 downto 0);
    signal r_fu_655_p2 : STD_LOGIC_VECTOR (53 downto 0);
    signal s_r_V_fu_672_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln832_2_fu_660_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln824_4_fu_666_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln832_fu_703_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln824_fu_709_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln824_8_fu_722_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln832_3_fu_683_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln832_fu_728_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal r_sh_V_8_fu_688_p2 : STD_LOGIC_VECTOR (53 downto 0);
    signal r_sh_V_10_fu_715_p3 : STD_LOGIC_VECTOR (53 downto 0);
    signal icmp_ln840_1_fu_693_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln832_1_fu_742_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln840_fu_748_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln840_1_fu_754_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal r_sh_V_9_fu_698_p2 : STD_LOGIC_VECTOR (53 downto 0);
    signal r_sh_V_11_fu_734_p3 : STD_LOGIC_VECTOR (53 downto 0);
    signal r_sh_V_12_fu_760_p3 : STD_LOGIC_VECTOR (53 downto 0);
    signal select_ln517_fu_677_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln824_fu_775_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln832_fu_782_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln840_fu_790_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_5_fu_810_p4 : STD_LOGIC_VECTOR (53 downto 0);
    signal p_Result_46_fu_819_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_8_fu_827_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln1010_fu_835_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln646_fu_845_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal iy_V_fu_849_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal lshr_ln_fu_874_p4 : STD_LOGIC_VECTOR (52 downto 0);
    signal add_ln534_fu_839_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln1451_fu_887_p1 : STD_LOGIC_VECTOR (53 downto 0);
    signal icmp_ln1451_fu_868_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln1451_1_fu_883_p1 : STD_LOGIC_VECTOR (53 downto 0);
    signal shl_ln1451_fu_891_p2 : STD_LOGIC_VECTOR (53 downto 0);
    signal iy_V_1_fu_863_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal trunc_ln645_1_fu_855_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln167_fu_910_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal trunc_ln645_2_fu_859_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal sext_ln1301_fu_922_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal zext_ln803_fu_939_p1 : STD_LOGIC_VECTOR (53 downto 0);
    signal ap_mx_2_V_fu_942_p2 : STD_LOGIC_VECTOR (53 downto 0);
    signal trunc_ln836_fu_953_p1 : STD_LOGIC_VECTOR (51 downto 0);
    signal trunc_ln836_1_fu_956_p1 : STD_LOGIC_VECTOR (51 downto 0);
    signal ret_15_fu_947_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal fz_sig_V_fu_960_p3 : STD_LOGIC_VECTOR (51 downto 0);
    signal bitcast_ln521_fu_977_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_return_preg : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_ce_reg : STD_LOGIC;


begin




    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_return_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_return_preg <= ap_const_lv64_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
                    ap_return_preg <= bitcast_ln521_fu_977_p1;
                end if; 
            end if;
        end if;
    end process;


    ap_mx_V_reg_136_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
                ap_mx_V_reg_136 <= p_Result_44_fu_379_p3;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
                ap_mx_V_reg_136 <= trunc_ln345_fu_542_p1;
            end if; 
        end if;
    end process;

    i_V_1_reg_165_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state7) and (icmp_ln832_fu_566_p2 = ap_const_lv1_0))) then 
                i_V_1_reg_165 <= i_V_3_fu_612_p3;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
                i_V_1_reg_165 <= sext_ln1301_2_fu_552_p1;
            end if; 
        end if;
    end process;

    ix_0_in_reg_145_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
                ix_0_in_reg_145 <= zext_ln169_reg_1037;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
                ix_0_in_reg_145 <= sext_ln1301_1_fu_491_p1;
            end if; 
        end if;
    end process;

    loop_V_reg_154_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state7) and (icmp_ln832_fu_566_p2 = ap_const_lv1_0))) then 
                loop_V_reg_154 <= loop_V_1_fu_560_p2;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
                loop_V_reg_154 <= ap_const_lv12_0;
            end if; 
        end if;
    end process;

    r_sh_V_3_reg_175_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state7) and (icmp_ln832_fu_566_p2 = ap_const_lv1_0))) then 
                r_sh_V_3_reg_175 <= r_sh_V_7_fu_604_p3;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
                r_sh_V_3_reg_175 <= zext_ln368_fu_556_p1;
            end if; 
        end if;
    end process;

    retval_0_in_reg_184_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state8) and (icmp_ln832_1_reg_1173 = ap_const_lv1_1))) then 
                retval_0_in_reg_184 <= ret_18_reg_1003;
            elsif ((((ap_const_lv1_0 = and_ln414_fu_313_p2) and (isyBx_m_fu_295_p2 = ap_const_lv1_1) and (isyBx_2e_fu_283_p2 = ap_const_lv1_0) and (isyBx_1e_fu_267_p2 = ap_const_lv1_1) and (isF_e_x_fu_245_p2 = ap_const_lv1_0) and (isZ_e_x_fu_239_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1)) or ((ap_const_lv1_0 = and_ln414_fu_313_p2) and (isyBx_2e_fu_283_p2 = ap_const_lv1_1) and (isF_e_x_fu_245_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1)))) then 
                retval_0_in_reg_184 <= ret_18_fu_213_p1;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
                retval_0_in_reg_184 <= p_Result_39_fu_395_p3;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state10) and ((((icmp_ln844_reg_1062 = ap_const_lv1_0) and (ap_const_lv1_0 = and_ln414_reg_1058) and (isyBx_2e_reg_1046 = ap_const_lv1_0) and (isF_e_x_reg_1033 = ap_const_lv1_0) and (isZ_e_x_reg_1029 = ap_const_lv1_1) and (icmp_ln824_5_reg_1196 = ap_const_lv1_0) and (icmp_ln832_1_reg_1173 = ap_const_lv1_0)) or ((ap_const_lv1_0 = and_ln414_reg_1058) and (isyBx_m_reg_1054 = ap_const_lv1_0) and (isxEy_m_reg_1050 = ap_const_lv1_0) and (isyBx_2e_reg_1046 = ap_const_lv1_0) and (isF_e_x_reg_1033 = ap_const_lv1_0) and (isZ_e_x_reg_1029 = ap_const_lv1_0) and (icmp_ln824_5_reg_1196 = ap_const_lv1_0) and (icmp_ln832_1_reg_1173 = ap_const_lv1_0))) or ((ap_const_lv1_0 = and_ln414_reg_1058) and (isyBx_2e_reg_1046 = ap_const_lv1_0) and (isyBx_1e_reg_1042 = ap_const_lv1_0) and (isF_e_x_reg_1033 = ap_const_lv1_0) and (icmp_ln824_5_reg_1196 = ap_const_lv1_0) and (icmp_ln832_1_reg_1173 = ap_const_lv1_0))))) then 
                retval_0_in_reg_184 <= p_Result_47_fu_967_p4;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state9) and (icmp_ln824_5_fu_805_p2 = ap_const_lv1_1))) then 
                retval_0_in_reg_184 <= p_Result_45_fu_932_p3;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
                retval_0_in_reg_184 <= p_Result_38_fu_981_p4;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
                retval_0_in_reg_184 <= p_Result_37_fu_989_p3;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
                retval_0_in_reg_184 <= p_Result_36_fu_996_p3;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state1) and (((icmp_ln844_fu_323_p2 = ap_const_lv1_0) and (ap_const_lv1_0 = and_ln414_fu_313_p2) and (isyBx_2e_fu_283_p2 = ap_const_lv1_0) and (isF_e_x_fu_245_p2 = ap_const_lv1_0) and (isZ_e_x_fu_239_p2 = ap_const_lv1_1)) or ((ap_const_lv1_0 = and_ln414_fu_313_p2) and (isyBx_2e_fu_283_p2 = ap_const_lv1_0) and (isyBx_1e_fu_267_p2 = ap_const_lv1_0) and (isF_e_x_fu_245_p2 = ap_const_lv1_0) and (isZ_e_x_fu_239_p2 = ap_const_lv1_1))))) then
                    LZ_V_cast_reg_1072(5 downto 0) <= LZ_V_cast_fu_359_p1(5 downto 0);
                LZ_V_reg_1066 <= LZ_V_fu_355_p1;
                icmp_ln368_reg_1077 <= icmp_ln368_fu_369_p2;
                trunc_ln368_reg_1085 <= trunc_ln368_fu_375_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then
                and_ln368_reg_1109 <= and_ln368_fu_480_p2;
                shl_ln368_reg_1103 <= shl_ln368_fu_462_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((isF_e_x_fu_245_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                and_ln414_reg_1058 <= and_ln414_fu_313_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state7) and (icmp_ln832_fu_566_p2 = ap_const_lv1_1))) then
                and_ln503_reg_1157 <= and_ln503_fu_626_p2;
                icmp_ln832_1_reg_1173 <= icmp_ln832_1_fu_646_p2;
                r_sh_V_4_reg_1162 <= r_sh_V_4_fu_638_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state9) and (icmp_ln824_5_fu_805_p2 = ap_const_lv1_0))) then
                fz_exp_V_reg_1212 <= fz_exp_V_fu_916_p2;
                icmp_ln836_2_reg_1206 <= icmp_ln836_2_fu_904_p2;
                n_V_reg_1217 <= n_V_fu_926_p2;
                r_4_reg_1200 <= r_4_fu_896_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state9)) then
                icmp_ln824_5_reg_1196 <= icmp_ln824_5_fu_805_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_0 = and_ln414_fu_313_p2) and (isyBx_2e_fu_283_p2 = ap_const_lv1_0) and (isyBx_1e_fu_267_p2 = ap_const_lv1_1) and (isF_e_x_fu_245_p2 = ap_const_lv1_0) and (isZ_e_x_fu_239_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                icmp_ln844_reg_1062 <= icmp_ln844_fu_323_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state1)) then
                isF_e_x_reg_1033 <= isF_e_x_fu_245_p2;
                isZ_e_x_reg_1029 <= isZ_e_x_fu_239_p2;
                isxEy_m_reg_1050 <= isxEy_m_fu_289_p2;
                isyBx_1e_reg_1042 <= isyBx_1e_fu_267_p2;
                isyBx_2e_reg_1046 <= isyBx_2e_fu_283_p2;
                isyBx_m_reg_1054 <= isyBx_m_fu_295_p2;
                p_Repl2_2_reg_1011 <= ret_18_fu_213_p1(63 downto 63);
                ret_18_reg_1003 <= ret_18_fu_213_p1;
                ret_19_reg_1022 <= ret_19_fu_235_p1;
                    zext_ln169_reg_1037(10 downto 0) <= zext_ln169_fu_257_p1(10 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state8) and (icmp_ln832_1_reg_1173 = ap_const_lv1_0))) then
                r_sh_V_reg_1182 <= r_sh_V_fu_768_p3;
                s_r_V_3_reg_1190 <= s_r_V_3_fu_798_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
                ret_20_reg_1124 <= ret_20_fu_546_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state8)) then
                trunc_ln645_reg_1177 <= trunc_ln645_fu_651_p1;
            end if;
        end if;
    end process;
    zext_ln169_reg_1037(11) <= '0';
    LZ_V_cast_reg_1072(6) <= '0';

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, isZ_e_x_fu_239_p2, isF_e_x_fu_245_p2, isyBx_1e_fu_267_p2, isyBx_2e_fu_283_p2, isxEy_m_fu_289_p2, isyBx_m_fu_295_p2, and_ln414_fu_313_p2, icmp_ln844_fu_323_p2, ap_CS_fsm_state7, icmp_ln832_fu_566_p2, icmp_ln832_1_reg_1173, ap_CS_fsm_state8)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((icmp_ln844_fu_323_p2 = ap_const_lv1_1) and (ap_const_lv1_0 = and_ln414_fu_313_p2) and (isyBx_2e_fu_283_p2 = ap_const_lv1_0) and (isyBx_1e_fu_267_p2 = ap_const_lv1_1) and (isF_e_x_fu_245_p2 = ap_const_lv1_0) and (isZ_e_x_fu_239_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state11;
                elsif (((ap_const_lv1_0 = and_ln414_fu_313_p2) and (isyBx_m_fu_295_p2 = ap_const_lv1_0) and (isxEy_m_fu_289_p2 = ap_const_lv1_1) and (isyBx_2e_fu_283_p2 = ap_const_lv1_0) and (isyBx_1e_fu_267_p2 = ap_const_lv1_1) and (isF_e_x_fu_245_p2 = ap_const_lv1_0) and (isZ_e_x_fu_239_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1) and (((icmp_ln844_fu_323_p2 = ap_const_lv1_0) and (ap_const_lv1_0 = and_ln414_fu_313_p2) and (isyBx_2e_fu_283_p2 = ap_const_lv1_0) and (isF_e_x_fu_245_p2 = ap_const_lv1_0) and (isZ_e_x_fu_239_p2 = ap_const_lv1_1)) or ((ap_const_lv1_0 = and_ln414_fu_313_p2) and (isyBx_2e_fu_283_p2 = ap_const_lv1_0) and (isyBx_1e_fu_267_p2 = ap_const_lv1_0) and (isF_e_x_fu_245_p2 = ap_const_lv1_0) and (isZ_e_x_fu_239_p2 = ap_const_lv1_1))))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1) and (((ap_const_lv1_0 = and_ln414_fu_313_p2) and (isyBx_m_fu_295_p2 = ap_const_lv1_0) and (isxEy_m_fu_289_p2 = ap_const_lv1_0) and (isyBx_2e_fu_283_p2 = ap_const_lv1_0) and (isF_e_x_fu_245_p2 = ap_const_lv1_0) and (isZ_e_x_fu_239_p2 = ap_const_lv1_0)) or ((ap_const_lv1_0 = and_ln414_fu_313_p2) and (isyBx_2e_fu_283_p2 = ap_const_lv1_0) and (isyBx_1e_fu_267_p2 = ap_const_lv1_0) and (isF_e_x_fu_245_p2 = ap_const_lv1_0) and (isZ_e_x_fu_239_p2 = ap_const_lv1_0))))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1) and (((ap_const_lv1_0 = and_ln414_fu_313_p2) and (isyBx_m_fu_295_p2 = ap_const_lv1_1) and (isyBx_1e_fu_267_p2 = ap_const_lv1_1) and (isF_e_x_fu_245_p2 = ap_const_lv1_0) and (isZ_e_x_fu_239_p2 = ap_const_lv1_0)) or ((ap_const_lv1_0 = and_ln414_fu_313_p2) and (isyBx_2e_fu_283_p2 = ap_const_lv1_1) and (isF_e_x_fu_245_p2 = ap_const_lv1_0))))) then
                    ap_NS_fsm <= ap_ST_fsm_state10;
                elsif (((ap_const_lv1_1 = and_ln414_fu_313_p2) and (isF_e_x_fu_245_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state12;
                elsif (((isF_e_x_fu_245_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state13;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state10;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state7;
            when ap_ST_fsm_state7 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state7) and (icmp_ln832_fu_566_p2 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state7;
                else
                    ap_NS_fsm <= ap_ST_fsm_state8;
                end if;
            when ap_ST_fsm_state8 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state8) and (icmp_ln832_1_reg_1173 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state10;
                else
                    ap_NS_fsm <= ap_ST_fsm_state9;
                end if;
            when ap_ST_fsm_state9 => 
                ap_NS_fsm <= ap_ST_fsm_state10;
            when ap_ST_fsm_state10 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when ap_ST_fsm_state11 => 
                ap_NS_fsm <= ap_ST_fsm_state10;
            when ap_ST_fsm_state12 => 
                ap_NS_fsm <= ap_ST_fsm_state10;
            when ap_ST_fsm_state13 => 
                ap_NS_fsm <= ap_ST_fsm_state10;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXX";
        end case;
    end process;
    LZ_V_cast_fu_359_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(LZ_V_fu_355_p1),7));
    LZ_V_fu_355_p1 <= tmp_7_fu_347_p3(6 - 1 downto 0);
    add_ln167_fu_910_p2 <= std_logic_vector(unsigned(trunc_ln645_1_fu_855_p1) + unsigned(ap_const_lv11_3FF));
    add_ln461_fu_363_p2 <= std_logic_vector(unsigned(LZ_V_cast_fu_359_p1) + unsigned(ap_const_lv7_1));
    add_ln534_fu_839_p2 <= std_logic_vector(unsigned(trunc_ln1010_fu_835_p1) + unsigned(ap_const_lv32_FFFFFFFF));
    and_ln368_fu_480_p2 <= (shl_ln368_1_fu_468_p2 and lshr_ln368_fu_474_p2);
    and_ln414_fu_313_p2 <= (isxEy_m_fu_289_p2 and icmp_ln824_fu_251_p2);
    and_ln503_fu_626_p2 <= (icmp_ln824_3_fu_620_p2 and grp_fu_207_p2);
    and_ln824_fu_709_p2 <= (xor_ln832_fu_703_p2 and icmp_ln824_4_fu_666_p2);
    and_ln832_fu_728_p2 <= (icmp_ln832_3_fu_683_p2 and icmp_ln824_8_fu_722_p2);
    and_ln840_1_fu_754_p2 <= (icmp_ln824_8_fu_722_p2 and and_ln840_fu_748_p2);
    and_ln840_fu_748_p2 <= (xor_ln832_1_fu_742_p2 and icmp_ln840_1_fu_693_p2);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state10 <= ap_CS_fsm(9);
    ap_CS_fsm_state11 <= ap_CS_fsm(10);
    ap_CS_fsm_state12 <= ap_CS_fsm(11);
    ap_CS_fsm_state13 <= ap_CS_fsm(12);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);
    ap_CS_fsm_state9 <= ap_CS_fsm(8);

    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state10)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state10) or ((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_0)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;

    ap_mx_2_V_fu_942_p2 <= std_logic_vector(shift_right(unsigned(r_4_reg_1200),to_integer(unsigned('0' & zext_ln803_fu_939_p1(31-1 downto 0)))));

    ap_phi_mux_retval_0_in_phi_fu_187_p18_assign_proc : process(isZ_e_x_reg_1029, isF_e_x_reg_1033, isyBx_1e_reg_1042, isyBx_2e_reg_1046, isxEy_m_reg_1050, isyBx_m_reg_1054, and_ln414_reg_1058, icmp_ln844_reg_1062, icmp_ln832_1_reg_1173, icmp_ln824_5_reg_1196, retval_0_in_reg_184, p_Result_47_fu_967_p4, ap_CS_fsm_state10)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state10) and ((((icmp_ln844_reg_1062 = ap_const_lv1_0) and (ap_const_lv1_0 = and_ln414_reg_1058) and (isyBx_2e_reg_1046 = ap_const_lv1_0) and (isF_e_x_reg_1033 = ap_const_lv1_0) and (isZ_e_x_reg_1029 = ap_const_lv1_1) and (icmp_ln824_5_reg_1196 = ap_const_lv1_0) and (icmp_ln832_1_reg_1173 = ap_const_lv1_0)) or ((ap_const_lv1_0 = and_ln414_reg_1058) and (isyBx_m_reg_1054 = ap_const_lv1_0) and (isxEy_m_reg_1050 = ap_const_lv1_0) and (isyBx_2e_reg_1046 = ap_const_lv1_0) and (isF_e_x_reg_1033 = ap_const_lv1_0) and (isZ_e_x_reg_1029 = ap_const_lv1_0) and (icmp_ln824_5_reg_1196 = ap_const_lv1_0) and (icmp_ln832_1_reg_1173 = ap_const_lv1_0))) or ((ap_const_lv1_0 = and_ln414_reg_1058) and (isyBx_2e_reg_1046 = ap_const_lv1_0) and (isyBx_1e_reg_1042 = ap_const_lv1_0) and (isF_e_x_reg_1033 = ap_const_lv1_0) and (icmp_ln824_5_reg_1196 = ap_const_lv1_0) and (icmp_ln832_1_reg_1173 = ap_const_lv1_0))))) then 
            ap_phi_mux_retval_0_in_phi_fu_187_p18 <= p_Result_47_fu_967_p4;
        else 
            ap_phi_mux_retval_0_in_phi_fu_187_p18 <= retval_0_in_reg_184;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state10)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_return_assign_proc : process(ap_CS_fsm_state10, bitcast_ln521_fu_977_p1, ap_return_preg)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            ap_return <= bitcast_ln521_fu_977_p1;
        else 
            ap_return <= ap_return_preg;
        end if; 
    end process;

    bitcast_ln521_fu_977_p1 <= ap_phi_mux_retval_0_in_phi_fu_187_p18;
    fz_exp_V_fu_916_p2 <= std_logic_vector(unsigned(add_ln167_fu_910_p2) + unsigned(trunc_ln645_2_fu_859_p1));
    fz_sig_V_fu_960_p3 <= 
        trunc_ln836_fu_953_p1 when (icmp_ln836_2_reg_1206(0) = '1') else 
        trunc_ln836_1_fu_956_p1;
    grp_fu_207_p2 <= "1" when (unsigned(r_sh_V_3_reg_175) > unsigned(ap_const_lv54_1EFFFFFFFFFFFF)) else "0";
    i_V_2_fu_578_p2 <= std_logic_vector(unsigned(i_V_1_reg_165) + unsigned(ap_const_lv13_1FFF));
    i_V_3_fu_612_p3 <= 
        i_V_2_fu_578_p2 when (icmp_ln840_fu_572_p2(0) = '1') else 
        i_V_1_reg_165;
    icmp_ln1451_fu_868_p2 <= "1" when (trunc_ln1010_fu_835_p1 = ap_const_lv32_0) else "0";
    icmp_ln368_fu_369_p2 <= "1" when (unsigned(add_ln461_fu_363_p2) > unsigned(ap_const_lv7_34)) else "0";
    icmp_ln824_3_fu_620_p2 <= "1" when (i_V_1_reg_165 = ap_const_lv13_0) else "0";
    icmp_ln824_4_fu_666_p2 <= "1" when (r_fu_655_p2 = ap_const_lv54_1F000000000000) else "0";
    icmp_ln824_5_fu_805_p2 <= "1" when (r_sh_V_reg_1182 = ap_const_lv54_0) else "0";
    icmp_ln824_8_fu_722_p2 <= "1" when (unsigned(r_fu_655_p2) > unsigned(ap_const_lv54_1F000000000000)) else "0";
    icmp_ln824_fu_251_p2 <= "1" when (ret_10_fu_225_p4 = ap_const_lv11_403) else "0";
    icmp_ln832_1_fu_646_p2 <= "1" when (signed(ret_20_reg_1124) < signed(ap_const_lv12_FFF)) else "0";
    icmp_ln832_2_fu_660_p2 <= "1" when (unsigned(r_fu_655_p2) < unsigned(ap_const_lv54_1F000000000000)) else "0";
    icmp_ln832_3_fu_683_p2 <= "1" when (unsigned(r_sh_V_4_reg_1162) < unsigned(ap_const_lv54_1F000000000000)) else "0";
    icmp_ln832_fu_566_p2 <= "1" when (loop_V_reg_154 = ap_const_lv12_832) else "0";
    icmp_ln836_2_fu_904_p2 <= "1" when (signed(iy_V_1_fu_863_p2) > signed(ap_const_lv12_C01)) else "0";
    icmp_ln840_1_fu_693_p2 <= "1" when (unsigned(r_sh_V_4_reg_1162) > unsigned(ap_const_lv54_1F000000000000)) else "0";
    icmp_ln840_fu_572_p2 <= "1" when (signed(i_V_1_reg_165) > signed(ap_const_lv13_0)) else "0";
    icmp_ln844_fu_323_p2 <= "1" when (unsigned(trunc_ln628_fu_319_p1) < unsigned(ap_const_lv52_F000000000001)) else "0";
    isF_e_x_fu_245_p2 <= "1" when (ret_10_fu_225_p4 = ap_const_lv11_7FF) else "0";
    isZ_e_x_fu_239_p2 <= "1" when (ret_10_fu_225_p4 = ap_const_lv11_0) else "0";
    isxEy_m_fu_289_p2 <= "1" when (ret_19_fu_235_p1 = ap_const_lv52_F000000000000) else "0";
    isyBx_1e_fu_267_p2 <= "1" when (ret_fu_261_p2 = ap_const_lv12_1) else "0";
    isyBx_2e_fu_283_p2 <= "1" when (signed(tmp_4_fu_273_p4) > signed(ap_const_lv11_0)) else "0";
    isyBx_m_fu_295_p2 <= "1" when (unsigned(ret_19_fu_235_p1) < unsigned(ap_const_lv52_F000000000000)) else "0";
    iy_V_1_fu_863_p2 <= std_logic_vector(unsigned(iy_V_fu_849_p2) + unsigned(trunc_ln645_reg_1177));
    iy_V_fu_849_p2 <= std_logic_vector(unsigned(ap_const_lv12_5) - unsigned(trunc_ln646_fu_845_p1));
    loop_V_1_fu_560_p2 <= std_logic_vector(unsigned(loop_V_reg_154) + unsigned(ap_const_lv12_1));
    lshr_ln345_fu_524_p2 <= std_logic_vector(shift_right(unsigned(ap_const_lv54_3FFFFFFFFFFFFF),to_integer(unsigned('0' & zext_ln345_fu_520_p1(31-1 downto 0)))));
    lshr_ln368_fu_474_p2 <= std_logic_vector(shift_right(unsigned(ap_const_lv54_3FFFFFFFFFFFFF),to_integer(unsigned('0' & zext_ln368_3_fu_458_p1(31-1 downto 0)))));
    lshr_ln628_fu_406_p2 <= std_logic_vector(shift_right(unsigned(ap_const_lv52_FFFFFFFFFFFFF),to_integer(unsigned('0' & zext_ln628_fu_403_p1(31-1 downto 0)))));
    lshr_ln_fu_874_p4 <= r_sh_V_reg_1182(53 downto 1);
    n_V_fu_926_p2 <= std_logic_vector(signed(ap_const_lv13_1C02) - signed(sext_ln1301_fu_922_p1));
    p_Result_35_fu_301_p5 <= (ret_19_fu_235_p1 & ap_const_lv53_0(0 downto 0));
    p_Result_36_fu_996_p3 <= (p_Repl2_2_reg_1011 & ap_const_lv63_7FFFFFFFFFFFFFFF);
    p_Result_37_fu_989_p3 <= (p_Repl2_2_reg_1011 & ap_const_lv63_0);
    p_Result_38_fu_981_p4 <= ((p_Repl2_2_reg_1011 & ap_const_lv11_0) & ret_19_reg_1022);
    p_Result_39_fu_395_p3 <= (tmp_fu_386_p4 & ap_const_lv52_F000000000000);
    p_Result_40_fu_339_p3 <= (ap_const_lv12_FFF & p_Result_s_fu_329_p4);
    p_Result_41_fu_412_p2 <= (ret_19_reg_1022 and lshr_ln628_fu_406_p2);
    p_Result_42_fu_510_p2 <= (select_ln368_3_fu_504_p3 and and_ln368_reg_1109);
    p_Result_43_fu_536_p2 <= (xor_ln345_fu_530_p2 and p_Result_42_fu_510_p2);
    p_Result_44_fu_379_p3 <= (ap_const_lv1_1 & ret_19_reg_1022);
    p_Result_45_fu_932_p3 <= (s_r_V_3_reg_1190 & ap_const_lv63_0);
    p_Result_46_fu_819_p3 <= (ap_const_lv10_3FF & p_Result_5_fu_810_p4);
    p_Result_47_fu_967_p4 <= ((s_r_V_3_reg_1190 & ret_15_fu_947_p3) & fz_sig_V_fu_960_p3);
    
    p_Result_5_fu_810_p4_proc : process(r_sh_V_reg_1182)
    variable vlo_cpy : STD_LOGIC_VECTOR(54+32 - 1 downto 0);
    variable vhi_cpy : STD_LOGIC_VECTOR(54+32 - 1 downto 0);
    variable v0_cpy : STD_LOGIC_VECTOR(54 - 1 downto 0);
    variable p_Result_5_fu_810_p4_i : integer;
    variable section : STD_LOGIC_VECTOR(54 - 1 downto 0);
    variable tmp_mask : STD_LOGIC_VECTOR(54 - 1 downto 0);
    variable resvalue, res_value, res_mask : STD_LOGIC_VECTOR(54 - 1 downto 0);
    begin
        vlo_cpy := (others => '0');
        vlo_cpy(6 - 1 downto 0) := ap_const_lv32_35(6 - 1 downto 0);
        vhi_cpy := (others => '0');
        vhi_cpy(6 - 1 downto 0) := ap_const_lv32_0(6 - 1 downto 0);
        v0_cpy := r_sh_V_reg_1182;
        if (vlo_cpy(6 - 1 downto 0) > vhi_cpy(6 - 1 downto 0)) then
            vhi_cpy(6-1 downto 0) := std_logic_vector(54-1-unsigned(ap_const_lv32_0(6-1 downto 0)));
            vlo_cpy(6-1 downto 0) := std_logic_vector(54-1-unsigned(ap_const_lv32_35(6-1 downto 0)));
            for p_Result_5_fu_810_p4_i in 0 to 54-1 loop
                v0_cpy(p_Result_5_fu_810_p4_i) := r_sh_V_reg_1182(54-1-p_Result_5_fu_810_p4_i);
            end loop;
        end if;
        res_value := std_logic_vector(shift_right(unsigned(v0_cpy), to_integer(unsigned('0' & vlo_cpy(6-1 downto 0)))));

        section := (others=>'0');
        section(6-1 downto 0) := std_logic_vector(unsigned(vhi_cpy(6-1 downto 0)) - unsigned(vlo_cpy(6-1 downto 0)));
        tmp_mask := (others => '1');
        res_mask := std_logic_vector(shift_left(unsigned(tmp_mask),to_integer(unsigned('0' & section(31-1 downto 0)))));
        res_mask := res_mask(54-2 downto 0) & '0';
        resvalue := res_value and not res_mask;
        p_Result_5_fu_810_p4 <= resvalue(54-1 downto 0);
    end process;

    
    p_Result_s_fu_329_p4_proc : process(ret_18_fu_213_p1)
    variable vlo_cpy : STD_LOGIC_VECTOR(64+32 - 1 downto 0);
    variable vhi_cpy : STD_LOGIC_VECTOR(64+32 - 1 downto 0);
    variable v0_cpy : STD_LOGIC_VECTOR(64 - 1 downto 0);
    variable p_Result_s_fu_329_p4_i : integer;
    variable section : STD_LOGIC_VECTOR(64 - 1 downto 0);
    variable tmp_mask : STD_LOGIC_VECTOR(64 - 1 downto 0);
    variable resvalue, res_value, res_mask : STD_LOGIC_VECTOR(64 - 1 downto 0);
    begin
        vlo_cpy := (others => '0');
        vlo_cpy(6 - 1 downto 0) := ap_const_lv32_33(6 - 1 downto 0);
        vhi_cpy := (others => '0');
        vhi_cpy(6 - 1 downto 0) := ap_const_lv32_0(6 - 1 downto 0);
        v0_cpy := ret_18_fu_213_p1;
        if (vlo_cpy(6 - 1 downto 0) > vhi_cpy(6 - 1 downto 0)) then
            vhi_cpy(6-1 downto 0) := std_logic_vector(64-1-unsigned(ap_const_lv32_0(6-1 downto 0)));
            vlo_cpy(6-1 downto 0) := std_logic_vector(64-1-unsigned(ap_const_lv32_33(6-1 downto 0)));
            for p_Result_s_fu_329_p4_i in 0 to 64-1 loop
                v0_cpy(p_Result_s_fu_329_p4_i) := ret_18_fu_213_p1(64-1-p_Result_s_fu_329_p4_i);
            end loop;
        end if;
        res_value := std_logic_vector(shift_right(unsigned(v0_cpy), to_integer(unsigned('0' & vlo_cpy(6-1 downto 0)))));

        section := (others=>'0');
        section(6-1 downto 0) := std_logic_vector(unsigned(vhi_cpy(6-1 downto 0)) - unsigned(vlo_cpy(6-1 downto 0)));
        tmp_mask := (others => '1');
        res_mask := std_logic_vector(shift_left(unsigned(tmp_mask),to_integer(unsigned('0' & section(31-1 downto 0)))));
        res_mask := res_mask(64-2 downto 0) & '0';
        resvalue := res_value and not res_mask;
        p_Result_s_fu_329_p4 <= resvalue(52-1 downto 0);
    end process;

    p_neg_fu_486_p2 <= std_logic_vector(unsigned(ap_const_lv7_0) - unsigned(LZ_V_cast_reg_1072));
    r_3_fu_584_p2 <= std_logic_vector(shift_left(unsigned(r_sh_V_3_reg_175),to_integer(unsigned('0' & ap_const_lv54_1(31-1 downto 0)))));
    r_4_fu_896_p3 <= 
        zext_ln1451_1_fu_883_p1 when (icmp_ln1451_fu_868_p2(0) = '1') else 
        shl_ln1451_fu_891_p2;
    r_fu_655_p2 <= std_logic_vector(shift_left(unsigned(r_sh_V_4_reg_1162),to_integer(unsigned('0' & ap_const_lv54_1(31-1 downto 0)))));
    r_sh_V_10_fu_715_p3 <= 
        r_sh_V_4_reg_1162 when (and_ln824_fu_709_p2(0) = '1') else 
        ap_const_lv54_1F000000000000;
    r_sh_V_11_fu_734_p3 <= 
        r_sh_V_8_fu_688_p2 when (and_ln832_fu_728_p2(0) = '1') else 
        r_sh_V_10_fu_715_p3;
    r_sh_V_12_fu_760_p3 <= 
        r_sh_V_9_fu_698_p2 when (and_ln840_1_fu_754_p2(0) = '1') else 
        r_sh_V_11_fu_734_p3;
    r_sh_V_2_fu_632_p2 <= std_logic_vector(unsigned(r_sh_V_3_reg_175) + unsigned(ap_const_lv54_21000000000000));
    r_sh_V_4_fu_638_p3 <= 
        r_sh_V_2_fu_632_p2 when (and_ln503_fu_626_p2(0) = '1') else 
        r_sh_V_3_reg_175;
    r_sh_V_5_fu_590_p2 <= std_logic_vector(unsigned(r_3_fu_584_p2) + unsigned(ap_const_lv54_2000000000000));
    r_sh_V_7_fu_604_p3 <= 
        select_ln497_fu_596_p3 when (icmp_ln840_fu_572_p2(0) = '1') else 
        r_sh_V_3_reg_175;
    r_sh_V_8_fu_688_p2 <= std_logic_vector(unsigned(ap_const_lv54_1F000000000000) - unsigned(r_sh_V_4_reg_1162));
    r_sh_V_9_fu_698_p2 <= std_logic_vector(signed(ap_const_lv54_3E000000000000) - signed(r_sh_V_4_reg_1162));
    r_sh_V_fu_768_p3 <= 
        r_sh_V_4_reg_1162 when (icmp_ln832_2_fu_660_p2(0) = '1') else 
        r_sh_V_12_fu_760_p3;
    ret_10_fu_225_p4 <= ret_18_fu_213_p1(62 downto 52);
    ret_15_fu_947_p3 <= 
        fz_exp_V_reg_1212 when (icmp_ln836_2_reg_1206(0) = '1') else 
        ap_const_lv11_0;
    ret_18_fu_213_p1 <= x;
    ret_19_fu_235_p1 <= ret_18_fu_213_p1(52 - 1 downto 0);
    ret_20_fu_546_p2 <= std_logic_vector(unsigned(ix_0_in_reg_145) + unsigned(ap_const_lv12_BFD));
    ret_fu_261_p2 <= std_logic_vector(unsigned(ap_const_lv12_403) - unsigned(zext_ln169_fu_257_p1));
    s_r_V_3_fu_798_p3 <= 
        p_Repl2_2_reg_1011 when (icmp_ln832_2_fu_660_p2(0) = '1') else 
        select_ln840_fu_790_p3;
    s_r_V_fu_672_p2 <= (p_Repl2_2_reg_1011 xor ap_const_lv1_1);
    select_ln368_1_fu_432_p3 <= 
        sub_ln368_fu_421_p2 when (icmp_ln368_reg_1077(0) = '1') else 
        trunc_ln368_reg_1085;
    select_ln368_2_fu_443_p3 <= 
        sub_ln368_1_fu_438_p2 when (icmp_ln368_reg_1077(0) = '1') else 
        ap_const_lv6_1;
    select_ln368_3_fu_504_p3 <= 
        tmp_6_fu_495_p4 when (icmp_ln368_reg_1077(0) = '1') else 
        shl_ln368_reg_1103;
    select_ln368_fu_426_p3 <= 
        ap_const_lv6_34 when (icmp_ln368_reg_1077(0) = '1') else 
        trunc_ln368_reg_1085;
    select_ln497_fu_596_p3 <= 
        r_sh_V_5_fu_590_p2 when (grp_fu_207_p2(0) = '1') else 
        r_3_fu_584_p2;
    select_ln517_fu_677_p3 <= 
        s_r_V_fu_672_p2 when (and_ln503_reg_1157(0) = '1') else 
        p_Repl2_2_reg_1011;
    select_ln824_fu_775_p3 <= 
        select_ln517_fu_677_p3 when (and_ln824_fu_709_p2(0) = '1') else 
        p_Repl2_2_reg_1011;
    select_ln832_fu_782_p3 <= 
        s_r_V_fu_672_p2 when (and_ln832_fu_728_p2(0) = '1') else 
        select_ln824_fu_775_p3;
    select_ln840_fu_790_p3 <= 
        s_r_V_fu_672_p2 when (and_ln840_1_fu_754_p2(0) = '1') else 
        select_ln832_fu_782_p3;
        sext_ln1301_1_fu_491_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_neg_fu_486_p2),12));

        sext_ln1301_2_fu_552_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ret_20_fu_546_p2),13));

        sext_ln1301_fu_922_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(iy_V_1_fu_863_p2),13));

    shl_ln1451_fu_891_p2 <= std_logic_vector(shift_left(unsigned(r_sh_V_reg_1182),to_integer(unsigned('0' & zext_ln1451_fu_887_p1(31-1 downto 0)))));
    shl_ln368_1_fu_468_p2 <= std_logic_vector(shift_left(unsigned(ap_const_lv54_3FFFFFFFFFFFFF),to_integer(unsigned('0' & zext_ln368_2_fu_454_p1(31-1 downto 0)))));
    shl_ln368_fu_462_p2 <= std_logic_vector(shift_left(unsigned(zext_ln169_1_fu_417_p1),to_integer(unsigned('0' & zext_ln368_1_fu_450_p1(31-1 downto 0)))));
    sub_ln345_fu_515_p2 <= std_logic_vector(signed(ap_const_lv6_35) - signed(LZ_V_reg_1066));
    sub_ln368_1_fu_438_p2 <= std_logic_vector(signed(ap_const_lv6_35) - signed(trunc_ln368_reg_1085));
    sub_ln368_fu_421_p2 <= std_logic_vector(signed(ap_const_lv6_35) - signed(trunc_ln368_reg_1085));
    tmp_4_fu_273_p4 <= ret_fu_261_p2(11 downto 1);
    
    tmp_6_fu_495_p4_proc : process(shl_ln368_reg_1103)
    variable vlo_cpy : STD_LOGIC_VECTOR(54+32 - 1 downto 0);
    variable vhi_cpy : STD_LOGIC_VECTOR(54+32 - 1 downto 0);
    variable v0_cpy : STD_LOGIC_VECTOR(54 - 1 downto 0);
    variable tmp_6_fu_495_p4_i : integer;
    variable section : STD_LOGIC_VECTOR(54 - 1 downto 0);
    variable tmp_mask : STD_LOGIC_VECTOR(54 - 1 downto 0);
    variable resvalue, res_value, res_mask : STD_LOGIC_VECTOR(54 - 1 downto 0);
    begin
        vlo_cpy := (others => '0');
        vlo_cpy(6 - 1 downto 0) := ap_const_lv32_35(6 - 1 downto 0);
        vhi_cpy := (others => '0');
        vhi_cpy(6 - 1 downto 0) := ap_const_lv32_0(6 - 1 downto 0);
        v0_cpy := shl_ln368_reg_1103;
        if (vlo_cpy(6 - 1 downto 0) > vhi_cpy(6 - 1 downto 0)) then
            vhi_cpy(6-1 downto 0) := std_logic_vector(54-1-unsigned(ap_const_lv32_0(6-1 downto 0)));
            vlo_cpy(6-1 downto 0) := std_logic_vector(54-1-unsigned(ap_const_lv32_35(6-1 downto 0)));
            for tmp_6_fu_495_p4_i in 0 to 54-1 loop
                v0_cpy(tmp_6_fu_495_p4_i) := shl_ln368_reg_1103(54-1-tmp_6_fu_495_p4_i);
            end loop;
        end if;
        res_value := std_logic_vector(shift_right(unsigned(v0_cpy), to_integer(unsigned('0' & vlo_cpy(6-1 downto 0)))));

        section := (others=>'0');
        section(6-1 downto 0) := std_logic_vector(unsigned(vhi_cpy(6-1 downto 0)) - unsigned(vlo_cpy(6-1 downto 0)));
        tmp_mask := (others => '1');
        res_mask := std_logic_vector(shift_left(unsigned(tmp_mask),to_integer(unsigned('0' & section(31-1 downto 0)))));
        res_mask := res_mask(54-2 downto 0) & '0';
        resvalue := res_value and not res_mask;
        tmp_6_fu_495_p4 <= resvalue(54-1 downto 0);
    end process;

    
    tmp_7_fu_347_p3_proc : process(p_Result_40_fu_339_p3)
    begin
        tmp_7_fu_347_p3 <= std_logic_vector(to_unsigned(64, 64));
        for i in 0 to 64 - 1 loop
            if p_Result_40_fu_339_p3(i) = '1' then
                tmp_7_fu_347_p3 <= std_logic_vector(to_unsigned(i,64));
                exit;
            end if;
        end loop;
    end process;

    
    tmp_8_fu_827_p3_proc : process(p_Result_46_fu_819_p3)
    begin
        tmp_8_fu_827_p3 <= std_logic_vector(to_unsigned(64, 64));
        for i in 0 to 64 - 1 loop
            if p_Result_46_fu_819_p3(i) = '1' then
                tmp_8_fu_827_p3 <= std_logic_vector(to_unsigned(i,64));
                exit;
            end if;
        end loop;
    end process;

    tmp_fu_386_p4 <= ret_18_reg_1003(63 downto 52);
    trunc_ln1010_fu_835_p1 <= tmp_8_fu_827_p3(32 - 1 downto 0);
    trunc_ln345_fu_542_p1 <= p_Result_43_fu_536_p2(53 - 1 downto 0);
    trunc_ln368_fu_375_p1 <= add_ln461_fu_363_p2(6 - 1 downto 0);
    trunc_ln628_fu_319_p1 <= p_Result_35_fu_301_p5(52 - 1 downto 0);
    trunc_ln645_1_fu_855_p1 <= i_V_1_reg_165(11 - 1 downto 0);
    trunc_ln645_2_fu_859_p1 <= iy_V_fu_849_p2(11 - 1 downto 0);
    trunc_ln645_fu_651_p1 <= i_V_1_reg_165(12 - 1 downto 0);
    trunc_ln646_fu_845_p1 <= tmp_8_fu_827_p3(12 - 1 downto 0);
    trunc_ln836_1_fu_956_p1 <= ap_mx_2_V_fu_942_p2(52 - 1 downto 0);
    trunc_ln836_fu_953_p1 <= r_4_reg_1200(52 - 1 downto 0);
    xor_ln345_fu_530_p2 <= (lshr_ln345_fu_524_p2 xor ap_const_lv54_1FFFFFFFFFFFFF);
    xor_ln832_1_fu_742_p2 <= (icmp_ln832_3_fu_683_p2 xor ap_const_lv1_1);
    xor_ln832_fu_703_p2 <= (icmp_ln832_2_fu_660_p2 xor ap_const_lv1_1);
    zext_ln1451_1_fu_883_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lshr_ln_fu_874_p4),54));
    zext_ln1451_fu_887_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln534_fu_839_p2),54));
    zext_ln169_1_fu_417_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_41_fu_412_p2),54));
    zext_ln169_fu_257_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ret_10_fu_225_p4),12));
    zext_ln345_fu_520_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sub_ln345_fu_515_p2),54));
    zext_ln368_1_fu_450_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln368_1_fu_432_p3),54));
    zext_ln368_2_fu_454_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln368_fu_426_p3),54));
    zext_ln368_3_fu_458_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln368_2_fu_443_p3),54));
    zext_ln368_fu_556_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_mx_V_reg_136),54));
    zext_ln628_fu_403_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(LZ_V_reg_1066),52));
    zext_ln803_fu_939_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(n_V_reg_1217),54));
end behav;
