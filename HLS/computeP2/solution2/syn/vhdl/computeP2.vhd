-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
-- Version: 2020.2
-- Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity computeP2 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    oil_space : IN STD_LOGIC_VECTOR (7 downto 0);
    P1 : IN STD_LOGIC_VECTOR (7 downto 0);
    P2_i : IN STD_LOGIC_VECTOR (7 downto 0);
    P2_o : OUT STD_LOGIC_VECTOR (7 downto 0);
    P2_o_ap_vld : OUT STD_LOGIC );
end;


architecture behav of computeP2 is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "computeP2_computeP2,hls_ip_2020_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020-clg484-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=7.007750,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=27,HLS_SYN_DSP=0,HLS_SYN_FF=2683,HLS_SYN_LUT=4525,HLS_VERSION=2020_2}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (41 downto 0) := "000000000000000000000000000000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (41 downto 0) := "000000000000000000000000000000000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (41 downto 0) := "000000000000000000000000000000000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (41 downto 0) := "000000000000000000000000000000000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (41 downto 0) := "000000000000000000000000000000000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (41 downto 0) := "000000000000000000000000000000000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (41 downto 0) := "000000000000000000000000000000000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (41 downto 0) := "000000000000000000000000000000000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (41 downto 0) := "000000000000000000000000000000000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (41 downto 0) := "000000000000000000000000000000001000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (41 downto 0) := "000000000000000000000000000000010000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (41 downto 0) := "000000000000000000000000000000100000000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (41 downto 0) := "000000000000000000000000000001000000000000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (41 downto 0) := "000000000000000000000000000010000000000000";
    constant ap_ST_fsm_state15 : STD_LOGIC_VECTOR (41 downto 0) := "000000000000000000000000000100000000000000";
    constant ap_ST_fsm_state16 : STD_LOGIC_VECTOR (41 downto 0) := "000000000000000000000000001000000000000000";
    constant ap_ST_fsm_state17 : STD_LOGIC_VECTOR (41 downto 0) := "000000000000000000000000010000000000000000";
    constant ap_ST_fsm_state18 : STD_LOGIC_VECTOR (41 downto 0) := "000000000000000000000000100000000000000000";
    constant ap_ST_fsm_state19 : STD_LOGIC_VECTOR (41 downto 0) := "000000000000000000000001000000000000000000";
    constant ap_ST_fsm_state20 : STD_LOGIC_VECTOR (41 downto 0) := "000000000000000000000010000000000000000000";
    constant ap_ST_fsm_state21 : STD_LOGIC_VECTOR (41 downto 0) := "000000000000000000000100000000000000000000";
    constant ap_ST_fsm_state22 : STD_LOGIC_VECTOR (41 downto 0) := "000000000000000000001000000000000000000000";
    constant ap_ST_fsm_state23 : STD_LOGIC_VECTOR (41 downto 0) := "000000000000000000010000000000000000000000";
    constant ap_ST_fsm_state24 : STD_LOGIC_VECTOR (41 downto 0) := "000000000000000000100000000000000000000000";
    constant ap_ST_fsm_state25 : STD_LOGIC_VECTOR (41 downto 0) := "000000000000000001000000000000000000000000";
    constant ap_ST_fsm_state26 : STD_LOGIC_VECTOR (41 downto 0) := "000000000000000010000000000000000000000000";
    constant ap_ST_fsm_state27 : STD_LOGIC_VECTOR (41 downto 0) := "000000000000000100000000000000000000000000";
    constant ap_ST_fsm_state28 : STD_LOGIC_VECTOR (41 downto 0) := "000000000000001000000000000000000000000000";
    constant ap_ST_fsm_state29 : STD_LOGIC_VECTOR (41 downto 0) := "000000000000010000000000000000000000000000";
    constant ap_ST_fsm_state30 : STD_LOGIC_VECTOR (41 downto 0) := "000000000000100000000000000000000000000000";
    constant ap_ST_fsm_state31 : STD_LOGIC_VECTOR (41 downto 0) := "000000000001000000000000000000000000000000";
    constant ap_ST_fsm_state32 : STD_LOGIC_VECTOR (41 downto 0) := "000000000010000000000000000000000000000000";
    constant ap_ST_fsm_state33 : STD_LOGIC_VECTOR (41 downto 0) := "000000000100000000000000000000000000000000";
    constant ap_ST_fsm_state34 : STD_LOGIC_VECTOR (41 downto 0) := "000000001000000000000000000000000000000000";
    constant ap_ST_fsm_state35 : STD_LOGIC_VECTOR (41 downto 0) := "000000010000000000000000000000000000000000";
    constant ap_ST_fsm_state36 : STD_LOGIC_VECTOR (41 downto 0) := "000000100000000000000000000000000000000000";
    constant ap_ST_fsm_state37 : STD_LOGIC_VECTOR (41 downto 0) := "000001000000000000000000000000000000000000";
    constant ap_ST_fsm_state38 : STD_LOGIC_VECTOR (41 downto 0) := "000010000000000000000000000000000000000000";
    constant ap_ST_fsm_state39 : STD_LOGIC_VECTOR (41 downto 0) := "000100000000000000000000000000000000000000";
    constant ap_ST_fsm_state40 : STD_LOGIC_VECTOR (41 downto 0) := "001000000000000000000000000000000000000000";
    constant ap_ST_fsm_state41 : STD_LOGIC_VECTOR (41 downto 0) := "010000000000000000000000000000000000000000";
    constant ap_ST_fsm_state42 : STD_LOGIC_VECTOR (41 downto 0) := "100000000000000000000000000000000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant ap_const_lv32_15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010101";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv32_1B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011011";
    constant ap_const_lv32_1D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011101";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv32_21 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100001";
    constant ap_const_lv32_22 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100010";
    constant ap_const_lv32_23 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100011";
    constant ap_const_lv32_24 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100100";
    constant ap_const_lv32_25 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100101";
    constant ap_const_lv32_26 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100110";
    constant ap_const_lv32_28 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101000";
    constant ap_const_lv32_29 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101001";
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv15_0 : STD_LOGIC_VECTOR (14 downto 0) := "000000000000000";
    constant ap_const_lv32_16 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010110";
    constant ap_const_lv32_1C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011100";
    constant ap_const_lv11_0 : STD_LOGIC_VECTOR (10 downto 0) := "00000000000";
    constant ap_const_lv32_27 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100111";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv6_1 : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    constant ap_const_lv6_38 : STD_LOGIC_VECTOR (5 downto 0) := "111000";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv3_6 : STD_LOGIC_VECTOR (2 downto 0) := "110";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv6_3C : STD_LOGIC_VECTOR (5 downto 0) := "111100";
    constant ap_const_lv6_4 : STD_LOGIC_VECTOR (5 downto 0) := "000100";
    constant ap_const_lv6_2 : STD_LOGIC_VECTOR (5 downto 0) := "000010";
    constant ap_const_lv6_3 : STD_LOGIC_VECTOR (5 downto 0) := "000011";
    constant ap_const_lv15_1 : STD_LOGIC_VECTOR (14 downto 0) := "000000000000001";
    constant ap_const_lv15_4EC0 : STD_LOGIC_VECTOR (14 downto 0) := "100111011000000";
    constant ap_const_lv15_D20 : STD_LOGIC_VECTOR (14 downto 0) := "000110100100000";
    constant ap_const_lv64_6 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000110";
    constant ap_const_lv64_1 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000001";
    constant ap_const_lv11_4EC : STD_LOGIC_VECTOR (10 downto 0) := "10011101100";
    constant ap_const_lv11_2 : STD_LOGIC_VECTOR (10 downto 0) := "00000000010";
    constant ap_const_boolean_1 : BOOLEAN := true;

    signal ap_CS_fsm : STD_LOGIC_VECTOR (41 downto 0) := "000000000000000000000000000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal grp_remainder_fu_553_ap_return : STD_LOGIC_VECTOR (5 downto 0);
    signal reg_563 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal grp_remainder_fu_553_ap_ready : STD_LOGIC;
    signal grp_remainder_fu_553_ap_done : STD_LOGIC;
    signal grp_remainder_fu_558_ap_ready : STD_LOGIC;
    signal grp_remainder_fu_558_ap_done : STD_LOGIC;
    signal ap_block_state8_on_subcall_done : BOOLEAN;
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal ap_block_state9_on_subcall_done : BOOLEAN;
    signal ap_CS_fsm_state16 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state16 : signal is "none";
    signal ap_block_state16_on_subcall_done : BOOLEAN;
    signal ap_CS_fsm_state17 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state17 : signal is "none";
    signal ap_block_state17_on_subcall_done : BOOLEAN;
    signal grp_remainder_fu_558_ap_return : STD_LOGIC_VECTOR (5 downto 0);
    signal reg_568 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln19_fu_573_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln19_reg_1544 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal empty_46_fu_609_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal empty_46_reg_1552 : STD_LOGIC_VECTOR (9 downto 0);
    signal icmp_ln19_fu_579_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_ln28_fu_615_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal sub_ln28_reg_1557 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln34_fu_621_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln34_reg_1562 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln23_fu_624_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln23_reg_1570 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal sub_ln29_fu_669_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal sub_ln29_reg_1578 : STD_LOGIC_VECTOR (14 downto 0);
    signal icmp_ln23_fu_634_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln122_fu_690_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln122_reg_1589 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal icmp_ln122_fu_684_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal temp_addr_reg_1594 : STD_LOGIC_VECTOR (14 downto 0);
    signal temp_addr_1_reg_1604 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_fu_747_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_reg_1614 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal tmp_10_fu_769_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_10_reg_1619 : STD_LOGIC_VECTOR (8 downto 0);
    signal temp_addr_2_reg_1624 : STD_LOGIC_VECTOR (14 downto 0);
    signal temp_addr_3_reg_1634 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_11_fu_841_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_11_reg_1644 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal tmp_16_fu_863_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_16_reg_1649 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln34_fu_869_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln34_reg_1654 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_CS_fsm_state11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal empty_50_fu_905_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal empty_50_reg_1662 : STD_LOGIC_VECTOR (9 downto 0);
    signal icmp_ln34_fu_875_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln38_fu_911_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln38_reg_1667 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_state12 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state12 : signal is "none";
    signal sub_ln41_fu_956_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal sub_ln41_reg_1675 : STD_LOGIC_VECTOR (14 downto 0);
    signal icmp_ln38_fu_921_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln122_1_fu_972_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln122_1_reg_1686 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_CS_fsm_state13 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state13 : signal is "none";
    signal icmp_ln122_1_fu_966_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal temp_addr_4_reg_1691 : STD_LOGIC_VECTOR (14 downto 0);
    signal temp_addr_5_reg_1696 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_17_fu_1016_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_17_reg_1701 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_CS_fsm_state14 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state14 : signal is "none";
    signal tmp_18_fu_1029_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_18_reg_1706 : STD_LOGIC_VECTOR (8 downto 0);
    signal temp_addr_6_reg_1711 : STD_LOGIC_VECTOR (14 downto 0);
    signal temp_addr_7_reg_1716 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_19_fu_1082_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_19_reg_1721 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_CS_fsm_state15 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state15 : signal is "none";
    signal tmp_20_fu_1095_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_20_reg_1726 : STD_LOGIC_VECTOR (8 downto 0);
    signal empty_54_fu_1100_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal ap_CS_fsm_state19 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state19 : signal is "none";
    signal add_ln48_fu_1117_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln48_reg_1739 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_state20 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state20 : signal is "none";
    signal zext_ln48_fu_1123_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln48_reg_1744 : STD_LOGIC_VECTOR (9 downto 0);
    signal empty_57_fu_1157_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal empty_57_reg_1752 : STD_LOGIC_VECTOR (9 downto 0);
    signal icmp_ln48_fu_1127_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln52_fu_1163_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln52_reg_1757 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_CS_fsm_state21 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state21 : signal is "none";
    signal sub_ln55_fu_1208_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal sub_ln55_reg_1765 : STD_LOGIC_VECTOR (14 downto 0);
    signal icmp_ln52_fu_1173_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_ln55_2_fu_1273_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal sub_ln55_2_reg_1770 : STD_LOGIC_VECTOR (14 downto 0);
    signal empty_59_fu_1279_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal empty_59_reg_1775 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_CS_fsm_state22 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state22 : signal is "none";
    signal exitcond426_fu_1289_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ptr523_sum_fu_1305_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal add_ptr523_sum_reg_1788 : STD_LOGIC_VECTOR (14 downto 0);
    signal add_ln60_fu_1314_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln60_reg_1793 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_state24 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state24 : signal is "none";
    signal add_ln60_1_fu_1320_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal add_ln60_1_reg_1798 : STD_LOGIC_VECTOR (14 downto 0);
    signal zext_ln60_fu_1326_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln60_reg_1803 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state25 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state25 : signal is "none";
    signal icmp_ln64_fu_1336_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln69_fu_1346_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln69_reg_1820 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_1524_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal mul_ln67_reg_1824 : STD_LOGIC_VECTOR (14 downto 0);
    signal ap_CS_fsm_state28 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state28 : signal is "none";
    signal empty_64_fu_1351_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_CS_fsm_state30 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state30 : signal is "none";
    signal ap_CS_fsm_state31 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state31 : signal is "none";
    signal add_ln122_2_fu_1379_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln122_2_reg_1845 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_CS_fsm_state32 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state32 : signal is "none";
    signal icmp_ln122_2_fu_1373_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln64_fu_1385_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_21_fu_1403_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_21_reg_1860 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_CS_fsm_state33 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state33 : signal is "none";
    signal ap_CS_fsm_state34 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state34 : signal is "none";
    signal tmp_22_fu_1436_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_22_reg_1870 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_CS_fsm_state35 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state35 : signal is "none";
    signal ap_CS_fsm_state36 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state36 : signal is "none";
    signal tmp_23_fu_1469_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_23_reg_1880 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_CS_fsm_state37 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state37 : signal is "none";
    signal ap_CS_fsm_state38 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state38 : signal is "none";
    signal tmp_24_fu_1502_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_24_reg_1890 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_CS_fsm_state39 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state39 : signal is "none";
    signal sext_ln122_fu_1508_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state41 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state41 : signal is "none";
    signal add_ln85_fu_1518_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_CS_fsm_state42 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state42 : signal is "none";
    signal icmp_ln85_fu_1512_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal temp_address0 : STD_LOGIC_VECTOR (14 downto 0);
    signal temp_ce0 : STD_LOGIC;
    signal temp_we0 : STD_LOGIC;
    signal temp_q0 : STD_LOGIC_VECTOR (5 downto 0);
    signal temp_address1 : STD_LOGIC_VECTOR (14 downto 0);
    signal temp_ce1 : STD_LOGIC;
    signal temp_we1 : STD_LOGIC;
    signal temp_q1 : STD_LOGIC_VECTOR (5 downto 0);
    signal vec_1_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal vec_1_ce0 : STD_LOGIC;
    signal vec_1_we0 : STD_LOGIC;
    signal vec_1_q0 : STD_LOGIC_VECTOR (5 downto 0);
    signal vec_1_address1 : STD_LOGIC_VECTOR (5 downto 0);
    signal vec_1_ce1 : STD_LOGIC;
    signal vec_1_q1 : STD_LOGIC_VECTOR (5 downto 0);
    signal tempt_address0 : STD_LOGIC_VECTOR (14 downto 0);
    signal tempt_ce0 : STD_LOGIC;
    signal tempt_we0 : STD_LOGIC;
    signal tempt_d0 : STD_LOGIC_VECTOR (5 downto 0);
    signal tempt_q0 : STD_LOGIC_VECTOR (5 downto 0);
    signal vec_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal vec_ce0 : STD_LOGIC;
    signal vec_we0 : STD_LOGIC;
    signal vec_d0 : STD_LOGIC_VECTOR (5 downto 0);
    signal vec_q0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_linear_combination_fu_527_ap_start : STD_LOGIC;
    signal grp_linear_combination_fu_527_ap_done : STD_LOGIC;
    signal grp_linear_combination_fu_527_ap_idle : STD_LOGIC;
    signal grp_linear_combination_fu_527_ap_ready : STD_LOGIC;
    signal grp_linear_combination_fu_527_out_r_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_linear_combination_fu_527_out_r_ce0 : STD_LOGIC;
    signal grp_linear_combination_fu_527_out_r_we0 : STD_LOGIC;
    signal grp_linear_combination_fu_527_out_r_d0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_linear_combination_2_fu_535_ap_start : STD_LOGIC;
    signal grp_linear_combination_2_fu_535_ap_done : STD_LOGIC;
    signal grp_linear_combination_2_fu_535_ap_idle : STD_LOGIC;
    signal grp_linear_combination_2_fu_535_ap_ready : STD_LOGIC;
    signal grp_linear_combination_2_fu_535_vecs_address0 : STD_LOGIC_VECTOR (14 downto 0);
    signal grp_linear_combination_2_fu_535_vecs_ce0 : STD_LOGIC;
    signal grp_linear_combination_2_fu_535_out_r_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_linear_combination_2_fu_535_out_r_ce0 : STD_LOGIC;
    signal grp_linear_combination_2_fu_535_out_r_we0 : STD_LOGIC;
    signal grp_linear_combination_2_fu_535_out_r_d0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_linear_combination_1_fu_544_ap_start : STD_LOGIC;
    signal grp_linear_combination_1_fu_544_ap_done : STD_LOGIC;
    signal grp_linear_combination_1_fu_544_ap_idle : STD_LOGIC;
    signal grp_linear_combination_1_fu_544_ap_ready : STD_LOGIC;
    signal grp_linear_combination_1_fu_544_out_r : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_linear_combination_1_fu_544_out_r_ap_vld : STD_LOGIC;
    signal grp_linear_combination_1_fu_544_vecs_address0 : STD_LOGIC_VECTOR (14 downto 0);
    signal grp_linear_combination_1_fu_544_vecs_ce0 : STD_LOGIC;
    signal grp_remainder_fu_553_ap_start : STD_LOGIC;
    signal grp_remainder_fu_553_ap_idle : STD_LOGIC;
    signal grp_remainder_fu_553_x : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_remainder_fu_558_ap_start : STD_LOGIC;
    signal grp_remainder_fu_558_ap_idle : STD_LOGIC;
    signal grp_remainder_fu_558_x : STD_LOGIC_VECTOR (8 downto 0);
    signal i_reg_337 : STD_LOGIC_VECTOR (5 downto 0);
    signal j_reg_348 : STD_LOGIC_VECTOR (2 downto 0);
    signal i_6_reg_359 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_CS_fsm_state10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal i_4_reg_371 : STD_LOGIC_VECTOR (5 downto 0);
    signal j_1_reg_382 : STD_LOGIC_VECTOR (2 downto 0);
    signal i_8_reg_393 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_CS_fsm_state18 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state18 : signal is "none";
    signal empty_53_reg_405 : STD_LOGIC_VECTOR (14 downto 0);
    signal exitcond5511_fu_1111_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_5_reg_416 : STD_LOGIC_VECTOR (2 downto 0);
    signal j_3_reg_427 : STD_LOGIC_VECTOR (5 downto 0);
    signal loop_index_reg_438 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_CS_fsm_state23 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state23 : signal is "none";
    signal i_11_reg_449 : STD_LOGIC_VECTOR (2 downto 0);
    signal phi_mul_reg_460 : STD_LOGIC_VECTOR (14 downto 0);
    signal j_4_reg_472 : STD_LOGIC_VECTOR (63 downto 0);
    signal icmp_ln60_fu_1330_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal empty_63_reg_482 : STD_LOGIC_VECTOR (5 downto 0);
    signal exitcond2_fu_1362_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state29 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state29 : signal is "none";
    signal v1_0_i_reg_493 : STD_LOGIC_VECTOR (7 downto 0);
    signal i_10_reg_504 : STD_LOGIC_VECTOR (5 downto 0);
    signal i_7_reg_516 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_linear_combination_fu_527_ap_start_reg : STD_LOGIC := '0';
    signal grp_linear_combination_2_fu_535_ap_start_reg : STD_LOGIC := '0';
    signal grp_linear_combination_1_fu_544_ap_start_reg : STD_LOGIC := '0';
    signal grp_remainder_fu_553_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state40 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state40 : signal is "none";
    signal grp_remainder_fu_558_ap_start_reg : STD_LOGIC := '0';
    signal zext_ln124_fu_701_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln122_fu_675_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln124_5_fu_726_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln124_3_fu_712_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln124_10_fu_795_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln124_8_fu_781_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln124_15_fu_820_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln124_13_fu_806_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln124_18_fu_983_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln124_21_fu_1003_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln124_24_fu_1049_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln124_27_fu_1069_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast_fu_1106_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ptr584_sum_cast_fu_1300_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ptr523_sum_cast_fu_1310_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast18_fu_1357_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln122_3_fu_1368_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln124_31_fu_1415_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln124_34_fu_1448_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln124_37_fu_1481_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_shl_fu_585_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_shl1_fu_597_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal p_shl_cast_fu_593_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal p_shl14_cast_fu_605_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln23_fu_630_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln29_fu_640_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal trunc_ln29_fu_645_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal shl_ln29_1_fu_657_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal shl_ln_fu_649_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal sext_ln29_fu_665_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal zext_ln122_1_fu_680_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal add_ln124_fu_696_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal or_ln122_fu_706_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln124_4_fu_717_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal add_ln124_2_fu_721_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal sext_ln124_fu_731_p0 : STD_LOGIC_VECTOR (5 downto 0);
    signal sext_ln124_fu_731_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal sext_ln124_1_fu_739_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln124_2_fu_743_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln124_1_fu_735_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal sext_ln124_2_fu_753_p0 : STD_LOGIC_VECTOR (5 downto 0);
    signal sext_ln124_2_fu_753_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal sext_ln124_3_fu_761_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln124_7_fu_765_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln124_6_fu_757_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal or_ln122_1_fu_775_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln124_9_fu_786_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal add_ln124_4_fu_790_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal or_ln122_2_fu_800_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln124_14_fu_811_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal add_ln124_6_fu_815_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal sext_ln124_4_fu_825_p0 : STD_LOGIC_VECTOR (5 downto 0);
    signal sext_ln124_4_fu_825_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal sext_ln124_5_fu_833_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln124_12_fu_837_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln124_11_fu_829_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal sext_ln124_6_fu_847_p0 : STD_LOGIC_VECTOR (5 downto 0);
    signal sext_ln124_6_fu_847_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal sext_ln124_7_fu_855_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln124_17_fu_859_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln124_16_fu_851_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_shl2_fu_881_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_shl3_fu_893_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal p_shl17_cast_fu_889_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal p_shl18_cast_fu_901_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln38_fu_917_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln41_fu_927_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal trunc_ln41_fu_932_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal shl_ln41_1_fu_944_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal shl_ln1_fu_936_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal sext_ln41_fu_952_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal zext_ln122_2_fu_962_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal add_ln124_8_fu_978_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal or_ln122_3_fu_988_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln124_20_fu_994_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal add_ln124_10_fu_998_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal sext_ln124_8_fu_1008_p0 : STD_LOGIC_VECTOR (5 downto 0);
    signal sext_ln124_8_fu_1008_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln124_19_fu_1012_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal sext_ln124_9_fu_1021_p0 : STD_LOGIC_VECTOR (5 downto 0);
    signal sext_ln124_9_fu_1021_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln124_22_fu_1025_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal or_ln122_4_fu_1034_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln124_23_fu_1040_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal add_ln124_12_fu_1044_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal or_ln122_5_fu_1054_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln124_26_fu_1060_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal add_ln124_14_fu_1064_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal sext_ln124_10_fu_1074_p0 : STD_LOGIC_VECTOR (5 downto 0);
    signal sext_ln124_10_fu_1074_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln124_25_fu_1078_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal sext_ln124_11_fu_1087_p0 : STD_LOGIC_VECTOR (5 downto 0);
    signal sext_ln124_11_fu_1087_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln124_28_fu_1091_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_shl4_fu_1133_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_shl5_fu_1145_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal p_shl21_cast_fu_1141_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal p_shl22_cast_fu_1153_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln52_fu_1169_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln55_fu_1179_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal trunc_ln55_fu_1184_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal shl_ln55_1_fu_1196_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal shl_ln2_fu_1188_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal sext_ln55_fu_1204_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal shl_ln55_2_fu_1214_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal shl_ln55_3_fu_1226_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal zext_ln55_fu_1222_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln55_1_fu_1234_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal sub_ln55_1_fu_1238_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln55_1_fu_1244_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal trunc_ln55_1_fu_1249_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal shl_ln55_5_fu_1261_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal shl_ln55_4_fu_1253_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal sext_ln55_1_fu_1269_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal loop_index_cast_fu_1285_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal add_ptr584_sum_fu_1295_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal sext_ln124_12_fu_1395_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln124_30_fu_1399_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln124_29_fu_1391_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal or_ln122_6_fu_1409_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal sext_ln124_13_fu_1420_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal sext_ln124_14_fu_1428_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln124_32_fu_1424_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln124_33_fu_1432_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal or_ln122_7_fu_1442_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal sext_ln124_15_fu_1453_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal sext_ln124_16_fu_1461_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln124_35_fu_1457_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln124_36_fu_1465_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal or_ln122_8_fu_1475_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal sext_ln124_17_fu_1486_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal sext_ln124_18_fu_1494_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln124_38_fu_1490_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln124_39_fu_1498_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_fu_1524_p0 : STD_LOGIC_VECTOR (14 downto 0);
    signal grp_fu_1524_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (41 downto 0);
    signal ap_ce_reg : STD_LOGIC;

    component computeP2_linear_combination IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        vecs_read : IN STD_LOGIC_VECTOR (7 downto 0);
        coeffs_read : IN STD_LOGIC_VECTOR (7 downto 0);
        len : IN STD_LOGIC_VECTOR (5 downto 0);
        out_r_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        out_r_ce0 : OUT STD_LOGIC;
        out_r_we0 : OUT STD_LOGIC;
        out_r_d0 : OUT STD_LOGIC_VECTOR (5 downto 0) );
    end component;


    component computeP2_linear_combination_2 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        coeffs_read : IN STD_LOGIC_VECTOR (7 downto 0);
        vecs_address0 : OUT STD_LOGIC_VECTOR (14 downto 0);
        vecs_ce0 : OUT STD_LOGIC;
        vecs_q0 : IN STD_LOGIC_VECTOR (5 downto 0);
        vecs_offset : IN STD_LOGIC_VECTOR (14 downto 0);
        out_r_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        out_r_ce0 : OUT STD_LOGIC;
        out_r_we0 : OUT STD_LOGIC;
        out_r_d0 : OUT STD_LOGIC_VECTOR (5 downto 0) );
    end component;


    component computeP2_linear_combination_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        coeffs_read : IN STD_LOGIC_VECTOR (7 downto 0);
        out_r : OUT STD_LOGIC_VECTOR (7 downto 0);
        out_r_ap_vld : OUT STD_LOGIC;
        vecs_address0 : OUT STD_LOGIC_VECTOR (14 downto 0);
        vecs_ce0 : OUT STD_LOGIC;
        vecs_q0 : IN STD_LOGIC_VECTOR (5 downto 0);
        vecs_offset : IN STD_LOGIC_VECTOR (14 downto 0) );
    end component;


    component computeP2_remainder IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        x : IN STD_LOGIC_VECTOR (8 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (5 downto 0) );
    end component;


    component computeP2_mul_mul_15s_13ns_15_4_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (14 downto 0);
        din1 : IN STD_LOGIC_VECTOR (12 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (14 downto 0) );
    end component;


    component computeP2_temp IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (14 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (5 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        address1 : IN STD_LOGIC_VECTOR (14 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (5 downto 0);
        q1 : OUT STD_LOGIC_VECTOR (5 downto 0) );
    end component;


    component computeP2_vec_1 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (5 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (5 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        address1 : IN STD_LOGIC_VECTOR (5 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (5 downto 0) );
    end component;


    component computeP2_tempt IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (14 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (5 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (5 downto 0) );
    end component;


    component computeP2_vec IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (5 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (5 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (5 downto 0) );
    end component;



begin
    temp_U : component computeP2_temp
    generic map (
        DataWidth => 6,
        AddressRange => 20160,
        AddressWidth => 15)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => temp_address0,
        ce0 => temp_ce0,
        we0 => temp_we0,
        d0 => reg_568,
        q0 => temp_q0,
        address1 => temp_address1,
        ce1 => temp_ce1,
        we1 => temp_we1,
        d1 => reg_563,
        q1 => temp_q1);

    vec_1_U : component computeP2_vec_1
    generic map (
        DataWidth => 6,
        AddressRange => 60,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => vec_1_address0,
        ce0 => vec_1_ce0,
        we0 => vec_1_we0,
        d0 => grp_linear_combination_fu_527_out_r_d0,
        q0 => vec_1_q0,
        address1 => vec_1_address1,
        ce1 => vec_1_ce1,
        q1 => vec_1_q1);

    tempt_U : component computeP2_tempt
    generic map (
        DataWidth => 6,
        AddressRange => 20160,
        AddressWidth => 15)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => tempt_address0,
        ce0 => tempt_ce0,
        we0 => tempt_we0,
        d0 => tempt_d0,
        q0 => tempt_q0);

    vec_U : component computeP2_vec
    generic map (
        DataWidth => 6,
        AddressRange => 60,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => vec_address0,
        ce0 => vec_ce0,
        we0 => vec_we0,
        d0 => vec_d0,
        q0 => vec_q0);

    grp_linear_combination_fu_527 : component computeP2_linear_combination
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_linear_combination_fu_527_ap_start,
        ap_done => grp_linear_combination_fu_527_ap_done,
        ap_idle => grp_linear_combination_fu_527_ap_idle,
        ap_ready => grp_linear_combination_fu_527_ap_ready,
        vecs_read => P1,
        coeffs_read => oil_space,
        len => sub_ln28_reg_1557,
        out_r_address0 => grp_linear_combination_fu_527_out_r_address0,
        out_r_ce0 => grp_linear_combination_fu_527_out_r_ce0,
        out_r_we0 => grp_linear_combination_fu_527_out_r_we0,
        out_r_d0 => grp_linear_combination_fu_527_out_r_d0);

    grp_linear_combination_2_fu_535 : component computeP2_linear_combination_2
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_linear_combination_2_fu_535_ap_start,
        ap_done => grp_linear_combination_2_fu_535_ap_done,
        ap_idle => grp_linear_combination_2_fu_535_ap_idle,
        ap_ready => grp_linear_combination_2_fu_535_ap_ready,
        coeffs_read => oil_space,
        vecs_address0 => grp_linear_combination_2_fu_535_vecs_address0,
        vecs_ce0 => grp_linear_combination_2_fu_535_vecs_ce0,
        vecs_q0 => tempt_q0,
        vecs_offset => phi_mul_reg_460,
        out_r_address0 => grp_linear_combination_2_fu_535_out_r_address0,
        out_r_ce0 => grp_linear_combination_2_fu_535_out_r_ce0,
        out_r_we0 => grp_linear_combination_2_fu_535_out_r_we0,
        out_r_d0 => grp_linear_combination_2_fu_535_out_r_d0);

    grp_linear_combination_1_fu_544 : component computeP2_linear_combination_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_linear_combination_1_fu_544_ap_start,
        ap_done => grp_linear_combination_1_fu_544_ap_done,
        ap_idle => grp_linear_combination_1_fu_544_ap_idle,
        ap_ready => grp_linear_combination_1_fu_544_ap_ready,
        coeffs_read => oil_space,
        out_r => grp_linear_combination_1_fu_544_out_r,
        out_r_ap_vld => grp_linear_combination_1_fu_544_out_r_ap_vld,
        vecs_address0 => grp_linear_combination_1_fu_544_vecs_address0,
        vecs_ce0 => grp_linear_combination_1_fu_544_vecs_ce0,
        vecs_q0 => tempt_q0,
        vecs_offset => mul_ln67_reg_1824);

    grp_remainder_fu_553 : component computeP2_remainder
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_remainder_fu_553_ap_start,
        ap_done => grp_remainder_fu_553_ap_done,
        ap_idle => grp_remainder_fu_553_ap_idle,
        ap_ready => grp_remainder_fu_553_ap_ready,
        x => grp_remainder_fu_553_x,
        ap_return => grp_remainder_fu_553_ap_return);

    grp_remainder_fu_558 : component computeP2_remainder
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_remainder_fu_558_ap_start,
        ap_done => grp_remainder_fu_558_ap_done,
        ap_idle => grp_remainder_fu_558_ap_idle,
        ap_ready => grp_remainder_fu_558_ap_ready,
        x => grp_remainder_fu_558_x,
        ap_return => grp_remainder_fu_558_ap_return);

    mul_mul_15s_13ns_15_4_1_U26 : component computeP2_mul_mul_15s_13ns_15_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 15,
        din1_WIDTH => 13,
        dout_WIDTH => 15)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1524_p0,
        din1 => grp_fu_1524_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_1524_p2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    grp_linear_combination_1_fu_544_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_linear_combination_1_fu_544_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state28)) then 
                    grp_linear_combination_1_fu_544_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_linear_combination_1_fu_544_ap_ready = ap_const_logic_1)) then 
                    grp_linear_combination_1_fu_544_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_linear_combination_2_fu_535_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_linear_combination_2_fu_535_ap_start_reg <= ap_const_logic_0;
            else
                if (((exitcond2_fu_1362_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state30))) then 
                    grp_linear_combination_2_fu_535_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_linear_combination_2_fu_535_ap_ready = ap_const_logic_1)) then 
                    grp_linear_combination_2_fu_535_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_linear_combination_fu_527_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_linear_combination_fu_527_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state3) and (icmp_ln23_fu_634_p2 = ap_const_lv1_0))) then 
                    grp_linear_combination_fu_527_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_linear_combination_fu_527_ap_ready = ap_const_logic_1)) then 
                    grp_linear_combination_fu_527_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_remainder_fu_553_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_remainder_fu_553_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state40) or (ap_const_logic_1 = ap_CS_fsm_state38) or (ap_const_logic_1 = ap_CS_fsm_state36) or (ap_const_logic_1 = ap_CS_fsm_state34) or (ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state7) or ((ap_const_boolean_0 = ap_block_state8_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state8)) or ((ap_const_boolean_0 = ap_block_state16_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state16)))) then 
                    grp_remainder_fu_553_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_remainder_fu_553_ap_ready = ap_const_logic_1)) then 
                    grp_remainder_fu_553_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_remainder_fu_558_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_remainder_fu_558_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state7) or ((ap_const_boolean_0 = ap_block_state8_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state8)) or ((ap_const_boolean_0 = ap_block_state16_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state16)))) then 
                    grp_remainder_fu_558_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_remainder_fu_558_ap_ready = ap_const_logic_1)) then 
                    grp_remainder_fu_558_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    empty_53_reg_405_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln34_fu_875_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state11))) then 
                empty_53_reg_405 <= ap_const_lv15_0;
            elsif (((exitcond5511_fu_1111_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state19))) then 
                empty_53_reg_405 <= empty_54_fu_1100_p2;
            end if; 
        end if;
    end process;

    empty_63_reg_482_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_linear_combination_1_fu_544_ap_done = ap_const_logic_1) and (icmp_ln69_reg_1820 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state29))) then 
                empty_63_reg_482 <= ap_const_lv6_0;
            elsif (((exitcond2_fu_1362_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state30))) then 
                empty_63_reg_482 <= empty_64_fu_1351_p2;
            end if; 
        end if;
    end process;

    i_10_reg_504_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_remainder_fu_553_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state41))) then 
                i_10_reg_504 <= add_ln122_2_reg_1845;
            elsif (((grp_linear_combination_2_fu_535_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state31))) then 
                i_10_reg_504 <= ap_const_lv6_0;
            end if; 
        end if;
    end process;

    i_11_reg_449_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln48_fu_1127_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state20))) then 
                i_11_reg_449 <= ap_const_lv3_0;
            elsif (((icmp_ln64_fu_1336_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state25))) then 
                i_11_reg_449 <= add_ln60_reg_1793;
            end if; 
        end if;
    end process;

    i_4_reg_371_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln19_fu_579_p2 = ap_const_lv1_1))) then 
                i_4_reg_371 <= ap_const_lv6_0;
            elsif (((icmp_ln38_fu_921_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state12))) then 
                i_4_reg_371 <= add_ln34_reg_1654;
            end if; 
        end if;
    end process;

    i_5_reg_416_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond5511_fu_1111_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state19))) then 
                i_5_reg_416 <= ap_const_lv3_0;
            elsif (((icmp_ln52_fu_1173_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state21))) then 
                i_5_reg_416 <= add_ln48_reg_1739;
            end if; 
        end if;
    end process;

    i_6_reg_359_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_linear_combination_fu_527_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
                i_6_reg_359 <= ap_const_lv6_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
                i_6_reg_359 <= add_ln122_reg_1589;
            end if; 
        end if;
    end process;

    i_7_reg_516_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln60_fu_1330_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state24))) then 
                i_7_reg_516 <= ap_const_lv11_0;
            elsif (((icmp_ln85_fu_1512_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state42))) then 
                i_7_reg_516 <= add_ln85_fu_1518_p2;
            end if; 
        end if;
    end process;

    i_8_reg_393_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln38_fu_921_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state12))) then 
                i_8_reg_393 <= ap_const_lv6_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
                i_8_reg_393 <= add_ln122_1_reg_1686;
            end if; 
        end if;
    end process;

    i_reg_337_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                i_reg_337 <= ap_const_lv6_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state3) and (icmp_ln23_fu_634_p2 = ap_const_lv1_1))) then 
                i_reg_337 <= add_ln19_reg_1544;
            end if; 
        end if;
    end process;

    j_1_reg_382_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln34_fu_875_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state11))) then 
                j_1_reg_382 <= ap_const_lv3_0;
            elsif (((icmp_ln122_1_fu_966_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state13))) then 
                j_1_reg_382 <= add_ln38_reg_1667;
            end if; 
        end if;
    end process;

    j_3_reg_427_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln48_fu_1127_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state20))) then 
                j_3_reg_427 <= ap_const_lv6_0;
            elsif (((exitcond426_fu_1289_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state22))) then 
                j_3_reg_427 <= add_ln52_reg_1757;
            end if; 
        end if;
    end process;

    j_4_reg_472_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state32) and ((icmp_ln122_2_fu_1373_p2 = ap_const_lv1_1) or (icmp_ln69_reg_1820 = ap_const_lv1_1)))) then 
                j_4_reg_472 <= add_ln64_fu_1385_p2;
            elsif (((icmp_ln60_fu_1330_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state24))) then 
                j_4_reg_472 <= zext_ln60_fu_1326_p1;
            end if; 
        end if;
    end process;

    j_reg_348_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln19_fu_579_p2 = ap_const_lv1_0))) then 
                j_reg_348 <= ap_const_lv3_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state5) and (icmp_ln122_fu_684_p2 = ap_const_lv1_1))) then 
                j_reg_348 <= add_ln23_reg_1570;
            end if; 
        end if;
    end process;

    loop_index_reg_438_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state23)) then 
                loop_index_reg_438 <= empty_59_reg_1775;
            elsif (((icmp_ln52_fu_1173_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state21))) then 
                loop_index_reg_438 <= ap_const_lv6_0;
            end if; 
        end if;
    end process;

    phi_mul_reg_460_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln48_fu_1127_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state20))) then 
                phi_mul_reg_460 <= ap_const_lv15_0;
            elsif (((icmp_ln64_fu_1336_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state25))) then 
                phi_mul_reg_460 <= add_ln60_1_reg_1798;
            end if; 
        end if;
    end process;

    v1_0_i_reg_493_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_remainder_fu_553_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state41))) then 
                v1_0_i_reg_493 <= sext_ln122_fu_1508_p1;
            elsif (((grp_linear_combination_2_fu_535_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state31))) then 
                v1_0_i_reg_493 <= P2_i;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln122_1_fu_966_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state13))) then
                add_ln122_1_reg_1686 <= add_ln122_1_fu_972_p2;
                temp_addr_4_reg_1691 <= zext_ln124_18_fu_983_p1(15 - 1 downto 0);
                    temp_addr_5_reg_1696(14 downto 1) <= zext_ln124_21_fu_1003_p1(15 - 1 downto 0)(14 downto 1);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln122_2_fu_1373_p2 = ap_const_lv1_0) and (icmp_ln69_reg_1820 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state32))) then
                add_ln122_2_reg_1845 <= add_ln122_2_fu_1379_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state5) and (icmp_ln122_fu_684_p2 = ap_const_lv1_0))) then
                add_ln122_reg_1589 <= add_ln122_fu_690_p2;
                    temp_addr_1_reg_1604(14 downto 1) <= zext_ln124_5_fu_726_p1(15 - 1 downto 0)(14 downto 1);
                temp_addr_reg_1594 <= zext_ln124_fu_701_p1(15 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                add_ln19_reg_1544 <= add_ln19_fu_573_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then
                add_ln23_reg_1570 <= add_ln23_fu_624_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state11)) then
                add_ln34_reg_1654 <= add_ln34_fu_869_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state12)) then
                add_ln38_reg_1667 <= add_ln38_fu_911_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state20)) then
                add_ln48_reg_1739 <= add_ln48_fu_1117_p2;
                    zext_ln48_reg_1744(2 downto 0) <= zext_ln48_fu_1123_p1(2 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state21)) then
                add_ln52_reg_1757 <= add_ln52_fu_1163_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state24)) then
                add_ln60_1_reg_1798 <= add_ln60_1_fu_1320_p2;
                add_ln60_reg_1793 <= add_ln60_fu_1314_p2;
                    zext_ln60_reg_1803(2 downto 0) <= zext_ln60_fu_1326_p1(2 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond426_fu_1289_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state22))) then
                add_ptr523_sum_reg_1788 <= add_ptr523_sum_fu_1305_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln19_fu_579_p2 = ap_const_lv1_0))) then
                    empty_46_reg_1552(9 downto 1) <= empty_46_fu_609_p2(9 downto 1);
                sub_ln28_reg_1557 <= sub_ln28_fu_615_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln34_fu_875_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state11))) then
                    empty_50_reg_1662(9 downto 1) <= empty_50_fu_905_p2(9 downto 1);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln48_fu_1127_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state20))) then
                    empty_57_reg_1752(9 downto 3) <= empty_57_fu_1157_p2(9 downto 3);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state22)) then
                empty_59_reg_1775 <= empty_59_fu_1279_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln64_fu_1336_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state25))) then
                icmp_ln69_reg_1820 <= icmp_ln69_fu_1346_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state28)) then
                mul_ln67_reg_1824 <= grp_fu_1524_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_boolean_0 = ap_block_state9_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state9)) or ((ap_const_boolean_0 = ap_block_state8_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state8)) or ((ap_const_boolean_0 = ap_block_state17_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state17)) or ((ap_const_boolean_0 = ap_block_state16_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state16)))) then
                reg_563 <= grp_remainder_fu_553_ap_return;
                reg_568 <= grp_remainder_fu_558_ap_return;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state3) and (icmp_ln23_fu_634_p2 = ap_const_lv1_0))) then
                    sub_ln29_reg_1578(14 downto 2) <= sub_ln29_fu_669_p2(14 downto 2);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln38_fu_921_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state12))) then
                    sub_ln41_reg_1675(14 downto 2) <= sub_ln41_fu_956_p2(14 downto 2);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln52_fu_1173_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state21))) then
                    sub_ln55_2_reg_1770(14 downto 2) <= sub_ln55_2_fu_1273_p2(14 downto 2);
                    sub_ln55_reg_1765(14 downto 2) <= sub_ln55_fu_1208_p2(14 downto 2);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
                temp_addr_2_reg_1624 <= zext_ln124_10_fu_795_p1(15 - 1 downto 0);
                    temp_addr_3_reg_1634(14 downto 2) <= zext_ln124_15_fu_820_p1(15 - 1 downto 0)(14 downto 2);
                tmp_10_reg_1619 <= tmp_10_fu_769_p2;
                tmp_reg_1614 <= tmp_fu_747_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state14)) then
                temp_addr_6_reg_1711 <= zext_ln124_24_fu_1049_p1(15 - 1 downto 0);
                    temp_addr_7_reg_1716(14 downto 2) <= zext_ln124_27_fu_1069_p1(15 - 1 downto 0)(14 downto 2);
                tmp_17_reg_1701 <= tmp_17_fu_1016_p2;
                tmp_18_reg_1706 <= tmp_18_fu_1029_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state7)) then
                tmp_11_reg_1644 <= tmp_11_fu_841_p2;
                tmp_16_reg_1649 <= tmp_16_fu_863_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state15)) then
                tmp_19_reg_1721 <= tmp_19_fu_1082_p2;
                tmp_20_reg_1726 <= tmp_20_fu_1095_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state33)) then
                tmp_21_reg_1860 <= tmp_21_fu_1403_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state35)) then
                tmp_22_reg_1870 <= tmp_22_fu_1436_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state37)) then
                tmp_23_reg_1880 <= tmp_23_fu_1469_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state39)) then
                tmp_24_reg_1890 <= tmp_24_fu_1502_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln19_fu_579_p2 = ap_const_lv1_1))) then
                    zext_ln34_reg_1562(7 downto 0) <= zext_ln34_fu_621_p1(7 downto 0);
            end if;
        end if;
    end process;
    empty_46_reg_1552(0) <= '0';
    zext_ln34_reg_1562(8) <= '0';
    sub_ln29_reg_1578(1 downto 0) <= "00";
    temp_addr_1_reg_1604(0) <= '1';
    temp_addr_3_reg_1634(1 downto 0) <= "11";
    empty_50_reg_1662(0) <= '0';
    sub_ln41_reg_1675(1 downto 0) <= "00";
    temp_addr_5_reg_1696(0) <= '1';
    temp_addr_7_reg_1716(1 downto 0) <= "11";
    zext_ln48_reg_1744(9 downto 3) <= "0000000";
    empty_57_reg_1752(2 downto 0) <= "000";
    sub_ln55_reg_1765(1 downto 0) <= "00";
    sub_ln55_2_reg_1770(1 downto 0) <= "00";
    zext_ln60_reg_1803(63 downto 3) <= "0000000000000000000000000000000000000000000000000000000000000";

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_state8, grp_remainder_fu_553_ap_done, ap_block_state8_on_subcall_done, ap_CS_fsm_state9, ap_block_state9_on_subcall_done, ap_CS_fsm_state16, ap_block_state16_on_subcall_done, ap_CS_fsm_state17, ap_block_state17_on_subcall_done, ap_CS_fsm_state2, icmp_ln19_fu_579_p2, ap_CS_fsm_state3, icmp_ln23_fu_634_p2, ap_CS_fsm_state5, icmp_ln122_fu_684_p2, ap_CS_fsm_state11, icmp_ln34_fu_875_p2, ap_CS_fsm_state12, icmp_ln38_fu_921_p2, ap_CS_fsm_state13, icmp_ln122_1_fu_966_p2, ap_CS_fsm_state19, ap_CS_fsm_state20, icmp_ln48_fu_1127_p2, ap_CS_fsm_state21, icmp_ln52_fu_1173_p2, ap_CS_fsm_state22, exitcond426_fu_1289_p2, ap_CS_fsm_state24, ap_CS_fsm_state25, icmp_ln64_fu_1336_p2, icmp_ln69_reg_1820, ap_CS_fsm_state30, ap_CS_fsm_state31, ap_CS_fsm_state32, icmp_ln122_2_fu_1373_p2, ap_CS_fsm_state35, ap_CS_fsm_state37, ap_CS_fsm_state39, ap_CS_fsm_state41, ap_CS_fsm_state42, icmp_ln85_fu_1512_p2, grp_linear_combination_fu_527_ap_done, grp_linear_combination_2_fu_535_ap_done, grp_linear_combination_1_fu_544_ap_done, ap_CS_fsm_state4, exitcond5511_fu_1111_p2, icmp_ln60_fu_1330_p2, exitcond2_fu_1362_p2, ap_CS_fsm_state29)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln19_fu_579_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state11;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state3 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state3) and (icmp_ln23_fu_634_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state4;
                end if;
            when ap_ST_fsm_state4 => 
                if (((grp_linear_combination_fu_527_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                    ap_NS_fsm <= ap_ST_fsm_state5;
                else
                    ap_NS_fsm <= ap_ST_fsm_state4;
                end if;
            when ap_ST_fsm_state5 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state5) and (icmp_ln122_fu_684_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state6;
                end if;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state7;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state8;
            when ap_ST_fsm_state8 => 
                if (((ap_const_boolean_0 = ap_block_state8_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state8))) then
                    ap_NS_fsm <= ap_ST_fsm_state9;
                else
                    ap_NS_fsm <= ap_ST_fsm_state8;
                end if;
            when ap_ST_fsm_state9 => 
                if (((ap_const_boolean_0 = ap_block_state9_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state9))) then
                    ap_NS_fsm <= ap_ST_fsm_state10;
                else
                    ap_NS_fsm <= ap_ST_fsm_state9;
                end if;
            when ap_ST_fsm_state10 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_state11 => 
                if (((icmp_ln34_fu_875_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state11))) then
                    ap_NS_fsm <= ap_ST_fsm_state19;
                else
                    ap_NS_fsm <= ap_ST_fsm_state12;
                end if;
            when ap_ST_fsm_state12 => 
                if (((icmp_ln38_fu_921_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state12))) then
                    ap_NS_fsm <= ap_ST_fsm_state11;
                else
                    ap_NS_fsm <= ap_ST_fsm_state13;
                end if;
            when ap_ST_fsm_state13 => 
                if (((icmp_ln122_1_fu_966_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state13))) then
                    ap_NS_fsm <= ap_ST_fsm_state12;
                else
                    ap_NS_fsm <= ap_ST_fsm_state14;
                end if;
            when ap_ST_fsm_state14 => 
                ap_NS_fsm <= ap_ST_fsm_state15;
            when ap_ST_fsm_state15 => 
                ap_NS_fsm <= ap_ST_fsm_state16;
            when ap_ST_fsm_state16 => 
                if (((ap_const_boolean_0 = ap_block_state16_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state16))) then
                    ap_NS_fsm <= ap_ST_fsm_state17;
                else
                    ap_NS_fsm <= ap_ST_fsm_state16;
                end if;
            when ap_ST_fsm_state17 => 
                if (((ap_const_boolean_0 = ap_block_state17_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state17))) then
                    ap_NS_fsm <= ap_ST_fsm_state18;
                else
                    ap_NS_fsm <= ap_ST_fsm_state17;
                end if;
            when ap_ST_fsm_state18 => 
                ap_NS_fsm <= ap_ST_fsm_state13;
            when ap_ST_fsm_state19 => 
                if (((exitcond5511_fu_1111_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state19))) then
                    ap_NS_fsm <= ap_ST_fsm_state20;
                else
                    ap_NS_fsm <= ap_ST_fsm_state19;
                end if;
            when ap_ST_fsm_state20 => 
                if (((icmp_ln48_fu_1127_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state20))) then
                    ap_NS_fsm <= ap_ST_fsm_state24;
                else
                    ap_NS_fsm <= ap_ST_fsm_state21;
                end if;
            when ap_ST_fsm_state21 => 
                if (((icmp_ln52_fu_1173_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state21))) then
                    ap_NS_fsm <= ap_ST_fsm_state20;
                else
                    ap_NS_fsm <= ap_ST_fsm_state22;
                end if;
            when ap_ST_fsm_state22 => 
                if (((exitcond426_fu_1289_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state22))) then
                    ap_NS_fsm <= ap_ST_fsm_state21;
                else
                    ap_NS_fsm <= ap_ST_fsm_state23;
                end if;
            when ap_ST_fsm_state23 => 
                ap_NS_fsm <= ap_ST_fsm_state22;
            when ap_ST_fsm_state24 => 
                if (((icmp_ln60_fu_1330_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state24))) then
                    ap_NS_fsm <= ap_ST_fsm_state42;
                else
                    ap_NS_fsm <= ap_ST_fsm_state25;
                end if;
            when ap_ST_fsm_state25 => 
                if (((icmp_ln64_fu_1336_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state25))) then
                    ap_NS_fsm <= ap_ST_fsm_state24;
                else
                    ap_NS_fsm <= ap_ST_fsm_state26;
                end if;
            when ap_ST_fsm_state26 => 
                ap_NS_fsm <= ap_ST_fsm_state27;
            when ap_ST_fsm_state27 => 
                ap_NS_fsm <= ap_ST_fsm_state28;
            when ap_ST_fsm_state28 => 
                ap_NS_fsm <= ap_ST_fsm_state29;
            when ap_ST_fsm_state29 => 
                if (((grp_linear_combination_1_fu_544_ap_done = ap_const_logic_1) and (icmp_ln69_reg_1820 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state29))) then
                    ap_NS_fsm <= ap_ST_fsm_state30;
                elsif (((grp_linear_combination_1_fu_544_ap_done = ap_const_logic_1) and (icmp_ln69_reg_1820 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state29))) then
                    ap_NS_fsm <= ap_ST_fsm_state32;
                else
                    ap_NS_fsm <= ap_ST_fsm_state29;
                end if;
            when ap_ST_fsm_state30 => 
                if (((exitcond2_fu_1362_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state30))) then
                    ap_NS_fsm <= ap_ST_fsm_state30;
                else
                    ap_NS_fsm <= ap_ST_fsm_state31;
                end if;
            when ap_ST_fsm_state31 => 
                if (((grp_linear_combination_2_fu_535_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state31))) then
                    ap_NS_fsm <= ap_ST_fsm_state32;
                else
                    ap_NS_fsm <= ap_ST_fsm_state31;
                end if;
            when ap_ST_fsm_state32 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state32) and ((icmp_ln122_2_fu_1373_p2 = ap_const_lv1_1) or (icmp_ln69_reg_1820 = ap_const_lv1_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_state25;
                else
                    ap_NS_fsm <= ap_ST_fsm_state33;
                end if;
            when ap_ST_fsm_state33 => 
                ap_NS_fsm <= ap_ST_fsm_state34;
            when ap_ST_fsm_state34 => 
                ap_NS_fsm <= ap_ST_fsm_state35;
            when ap_ST_fsm_state35 => 
                if (((grp_remainder_fu_553_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state35))) then
                    ap_NS_fsm <= ap_ST_fsm_state36;
                else
                    ap_NS_fsm <= ap_ST_fsm_state35;
                end if;
            when ap_ST_fsm_state36 => 
                ap_NS_fsm <= ap_ST_fsm_state37;
            when ap_ST_fsm_state37 => 
                if (((grp_remainder_fu_553_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state37))) then
                    ap_NS_fsm <= ap_ST_fsm_state38;
                else
                    ap_NS_fsm <= ap_ST_fsm_state37;
                end if;
            when ap_ST_fsm_state38 => 
                ap_NS_fsm <= ap_ST_fsm_state39;
            when ap_ST_fsm_state39 => 
                if (((grp_remainder_fu_553_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state39))) then
                    ap_NS_fsm <= ap_ST_fsm_state40;
                else
                    ap_NS_fsm <= ap_ST_fsm_state39;
                end if;
            when ap_ST_fsm_state40 => 
                ap_NS_fsm <= ap_ST_fsm_state41;
            when ap_ST_fsm_state41 => 
                if (((grp_remainder_fu_553_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state41))) then
                    ap_NS_fsm <= ap_ST_fsm_state32;
                else
                    ap_NS_fsm <= ap_ST_fsm_state41;
                end if;
            when ap_ST_fsm_state42 => 
                if (((icmp_ln85_fu_1512_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state42))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state42;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end case;
    end process;

    P2_o_assign_proc : process(P2_i, icmp_ln69_reg_1820, ap_CS_fsm_state32, icmp_ln122_2_fu_1373_p2, ap_CS_fsm_state42, icmp_ln85_fu_1512_p2, grp_linear_combination_1_fu_544_out_r, grp_linear_combination_1_fu_544_out_r_ap_vld, ap_CS_fsm_state29, v1_0_i_reg_493)
    begin
        if (((icmp_ln85_fu_1512_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state42))) then 
            P2_o <= ap_const_lv8_0;
        elsif (((icmp_ln122_2_fu_1373_p2 = ap_const_lv1_1) and (icmp_ln69_reg_1820 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state32))) then 
            P2_o <= v1_0_i_reg_493;
        elsif (((grp_linear_combination_1_fu_544_out_r_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state29))) then 
            P2_o <= grp_linear_combination_1_fu_544_out_r;
        else 
            P2_o <= P2_i;
        end if; 
    end process;


    P2_o_ap_vld_assign_proc : process(icmp_ln69_reg_1820, ap_CS_fsm_state32, icmp_ln122_2_fu_1373_p2, ap_CS_fsm_state42, icmp_ln85_fu_1512_p2, grp_linear_combination_1_fu_544_out_r_ap_vld, ap_CS_fsm_state29)
    begin
        if ((((icmp_ln85_fu_1512_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state42)) or ((icmp_ln122_2_fu_1373_p2 = ap_const_lv1_1) and (icmp_ln69_reg_1820 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state32)))) then 
            P2_o_ap_vld <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            P2_o_ap_vld <= grp_linear_combination_1_fu_544_out_r_ap_vld;
        else 
            P2_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    add_ln122_1_fu_972_p2 <= std_logic_vector(unsigned(i_8_reg_393) + unsigned(ap_const_lv6_4));
    add_ln122_2_fu_1379_p2 <= std_logic_vector(unsigned(i_10_reg_504) + unsigned(ap_const_lv6_4));
    add_ln122_fu_690_p2 <= std_logic_vector(unsigned(i_6_reg_359) + unsigned(ap_const_lv6_4));
    add_ln124_10_fu_998_p2 <= std_logic_vector(unsigned(zext_ln124_20_fu_994_p1) + unsigned(sub_ln41_reg_1675));
    add_ln124_12_fu_1044_p2 <= std_logic_vector(unsigned(zext_ln124_23_fu_1040_p1) + unsigned(sub_ln41_reg_1675));
    add_ln124_14_fu_1064_p2 <= std_logic_vector(unsigned(zext_ln124_26_fu_1060_p1) + unsigned(sub_ln41_reg_1675));
    add_ln124_2_fu_721_p2 <= std_logic_vector(unsigned(zext_ln124_4_fu_717_p1) + unsigned(sub_ln29_reg_1578));
    add_ln124_4_fu_790_p2 <= std_logic_vector(unsigned(zext_ln124_9_fu_786_p1) + unsigned(sub_ln29_reg_1578));
    add_ln124_6_fu_815_p2 <= std_logic_vector(unsigned(zext_ln124_14_fu_811_p1) + unsigned(sub_ln29_reg_1578));
    add_ln124_8_fu_978_p2 <= std_logic_vector(unsigned(zext_ln122_2_fu_962_p1) + unsigned(sub_ln41_reg_1675));
    add_ln124_fu_696_p2 <= std_logic_vector(unsigned(zext_ln122_1_fu_680_p1) + unsigned(sub_ln29_reg_1578));
    add_ln19_fu_573_p2 <= std_logic_vector(unsigned(i_reg_337) + unsigned(ap_const_lv6_1));
    add_ln23_fu_624_p2 <= std_logic_vector(unsigned(j_reg_348) + unsigned(ap_const_lv3_1));
    add_ln29_fu_640_p2 <= std_logic_vector(unsigned(zext_ln23_fu_630_p1) + unsigned(empty_46_reg_1552));
    add_ln34_fu_869_p2 <= std_logic_vector(unsigned(i_4_reg_371) + unsigned(ap_const_lv6_1));
    add_ln38_fu_911_p2 <= std_logic_vector(unsigned(j_1_reg_382) + unsigned(ap_const_lv3_1));
    add_ln41_fu_927_p2 <= std_logic_vector(unsigned(zext_ln38_fu_917_p1) + unsigned(empty_50_reg_1662));
    add_ln48_fu_1117_p2 <= std_logic_vector(unsigned(i_5_reg_416) + unsigned(ap_const_lv3_1));
    add_ln52_fu_1163_p2 <= std_logic_vector(unsigned(j_3_reg_427) + unsigned(ap_const_lv6_1));
    add_ln55_1_fu_1244_p2 <= std_logic_vector(unsigned(sub_ln55_1_fu_1238_p2) + unsigned(zext_ln48_reg_1744));
    add_ln55_fu_1179_p2 <= std_logic_vector(unsigned(zext_ln52_fu_1169_p1) + unsigned(empty_57_reg_1752));
    add_ln60_1_fu_1320_p2 <= std_logic_vector(unsigned(phi_mul_reg_460) + unsigned(ap_const_lv15_D20));
    add_ln60_fu_1314_p2 <= std_logic_vector(unsigned(i_11_reg_449) + unsigned(ap_const_lv3_1));
    add_ln64_fu_1385_p2 <= std_logic_vector(unsigned(j_4_reg_472) + unsigned(ap_const_lv64_1));
    add_ln85_fu_1518_p2 <= std_logic_vector(unsigned(i_7_reg_516) + unsigned(ap_const_lv11_2));
    add_ptr523_sum_cast_fu_1310_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ptr523_sum_reg_1788),64));
    add_ptr523_sum_fu_1305_p2 <= std_logic_vector(unsigned(loop_index_cast_fu_1285_p1) + unsigned(sub_ln55_reg_1765));
    add_ptr584_sum_cast_fu_1300_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ptr584_sum_fu_1295_p2),64));
    add_ptr584_sum_fu_1295_p2 <= std_logic_vector(unsigned(loop_index_cast_fu_1285_p1) + unsigned(sub_ln55_2_reg_1770));
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state10 <= ap_CS_fsm(9);
    ap_CS_fsm_state11 <= ap_CS_fsm(10);
    ap_CS_fsm_state12 <= ap_CS_fsm(11);
    ap_CS_fsm_state13 <= ap_CS_fsm(12);
    ap_CS_fsm_state14 <= ap_CS_fsm(13);
    ap_CS_fsm_state15 <= ap_CS_fsm(14);
    ap_CS_fsm_state16 <= ap_CS_fsm(15);
    ap_CS_fsm_state17 <= ap_CS_fsm(16);
    ap_CS_fsm_state18 <= ap_CS_fsm(17);
    ap_CS_fsm_state19 <= ap_CS_fsm(18);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state20 <= ap_CS_fsm(19);
    ap_CS_fsm_state21 <= ap_CS_fsm(20);
    ap_CS_fsm_state22 <= ap_CS_fsm(21);
    ap_CS_fsm_state23 <= ap_CS_fsm(22);
    ap_CS_fsm_state24 <= ap_CS_fsm(23);
    ap_CS_fsm_state25 <= ap_CS_fsm(24);
    ap_CS_fsm_state28 <= ap_CS_fsm(27);
    ap_CS_fsm_state29 <= ap_CS_fsm(28);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state30 <= ap_CS_fsm(29);
    ap_CS_fsm_state31 <= ap_CS_fsm(30);
    ap_CS_fsm_state32 <= ap_CS_fsm(31);
    ap_CS_fsm_state33 <= ap_CS_fsm(32);
    ap_CS_fsm_state34 <= ap_CS_fsm(33);
    ap_CS_fsm_state35 <= ap_CS_fsm(34);
    ap_CS_fsm_state36 <= ap_CS_fsm(35);
    ap_CS_fsm_state37 <= ap_CS_fsm(36);
    ap_CS_fsm_state38 <= ap_CS_fsm(37);
    ap_CS_fsm_state39 <= ap_CS_fsm(38);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state40 <= ap_CS_fsm(39);
    ap_CS_fsm_state41 <= ap_CS_fsm(40);
    ap_CS_fsm_state42 <= ap_CS_fsm(41);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);
    ap_CS_fsm_state9 <= ap_CS_fsm(8);

    ap_block_state16_on_subcall_done_assign_proc : process(grp_remainder_fu_553_ap_done, grp_remainder_fu_558_ap_done)
    begin
                ap_block_state16_on_subcall_done <= ((grp_remainder_fu_558_ap_done = ap_const_logic_0) or (grp_remainder_fu_553_ap_done = ap_const_logic_0));
    end process;


    ap_block_state17_on_subcall_done_assign_proc : process(grp_remainder_fu_553_ap_done, grp_remainder_fu_558_ap_done)
    begin
                ap_block_state17_on_subcall_done <= ((grp_remainder_fu_558_ap_done = ap_const_logic_0) or (grp_remainder_fu_553_ap_done = ap_const_logic_0));
    end process;


    ap_block_state8_on_subcall_done_assign_proc : process(grp_remainder_fu_553_ap_done, grp_remainder_fu_558_ap_done)
    begin
                ap_block_state8_on_subcall_done <= ((grp_remainder_fu_558_ap_done = ap_const_logic_0) or (grp_remainder_fu_553_ap_done = ap_const_logic_0));
    end process;


    ap_block_state9_on_subcall_done_assign_proc : process(grp_remainder_fu_553_ap_done, grp_remainder_fu_558_ap_done)
    begin
                ap_block_state9_on_subcall_done <= ((grp_remainder_fu_558_ap_done = ap_const_logic_0) or (grp_remainder_fu_553_ap_done = ap_const_logic_0));
    end process;


    ap_done_assign_proc : process(ap_CS_fsm_state42, icmp_ln85_fu_1512_p2)
    begin
        if (((icmp_ln85_fu_1512_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state42))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state42, icmp_ln85_fu_1512_p2)
    begin
        if (((icmp_ln85_fu_1512_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state42))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    empty_46_fu_609_p2 <= std_logic_vector(unsigned(p_shl_cast_fu_593_p1) - unsigned(p_shl14_cast_fu_605_p1));
    empty_50_fu_905_p2 <= std_logic_vector(unsigned(p_shl17_cast_fu_889_p1) - unsigned(p_shl18_cast_fu_901_p1));
    empty_54_fu_1100_p2 <= std_logic_vector(unsigned(empty_53_reg_405) + unsigned(ap_const_lv15_1));
    empty_57_fu_1157_p2 <= std_logic_vector(unsigned(p_shl21_cast_fu_1141_p1) - unsigned(p_shl22_cast_fu_1153_p1));
    empty_59_fu_1279_p2 <= std_logic_vector(unsigned(loop_index_reg_438) + unsigned(ap_const_lv6_1));
    empty_64_fu_1351_p2 <= std_logic_vector(unsigned(empty_63_reg_482) + unsigned(ap_const_lv6_1));
    exitcond2_fu_1362_p2 <= "1" when (empty_63_reg_482 = ap_const_lv6_3C) else "0";
    exitcond426_fu_1289_p2 <= "1" when (loop_index_reg_438 = ap_const_lv6_3C) else "0";
    exitcond5511_fu_1111_p2 <= "1" when (empty_53_reg_405 = ap_const_lv15_4EC0) else "0";
    grp_fu_1524_p0 <= j_4_reg_472(15 - 1 downto 0);
    grp_fu_1524_p1 <= ap_const_lv15_D20(13 - 1 downto 0);
    grp_linear_combination_1_fu_544_ap_start <= grp_linear_combination_1_fu_544_ap_start_reg;
    grp_linear_combination_2_fu_535_ap_start <= grp_linear_combination_2_fu_535_ap_start_reg;
    grp_linear_combination_fu_527_ap_start <= grp_linear_combination_fu_527_ap_start_reg;
    grp_remainder_fu_553_ap_start <= grp_remainder_fu_553_ap_start_reg;

    grp_remainder_fu_553_x_assign_proc : process(ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state16, ap_CS_fsm_state17, tmp_reg_1614, tmp_11_reg_1644, tmp_17_reg_1701, tmp_19_reg_1721, tmp_21_reg_1860, tmp_22_reg_1870, ap_CS_fsm_state35, tmp_23_reg_1880, ap_CS_fsm_state37, tmp_24_reg_1890, ap_CS_fsm_state39, ap_CS_fsm_state41)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state41)) then 
            grp_remainder_fu_553_x <= tmp_24_reg_1890;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state39)) then 
            grp_remainder_fu_553_x <= tmp_23_reg_1880;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state37)) then 
            grp_remainder_fu_553_x <= tmp_22_reg_1870;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state35)) then 
            grp_remainder_fu_553_x <= tmp_21_reg_1860;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            grp_remainder_fu_553_x <= tmp_19_reg_1721;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            grp_remainder_fu_553_x <= tmp_17_reg_1701;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            grp_remainder_fu_553_x <= tmp_11_reg_1644;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            grp_remainder_fu_553_x <= tmp_reg_1614;
        else 
            grp_remainder_fu_553_x <= "XXXXXXXXX";
        end if; 
    end process;

    grp_remainder_fu_558_ap_start <= grp_remainder_fu_558_ap_start_reg;

    grp_remainder_fu_558_x_assign_proc : process(ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state16, ap_CS_fsm_state17, tmp_10_reg_1619, tmp_16_reg_1649, tmp_18_reg_1706, tmp_20_reg_1726)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            grp_remainder_fu_558_x <= tmp_20_reg_1726;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            grp_remainder_fu_558_x <= tmp_18_reg_1706;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            grp_remainder_fu_558_x <= tmp_16_reg_1649;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            grp_remainder_fu_558_x <= tmp_10_reg_1619;
        else 
            grp_remainder_fu_558_x <= "XXXXXXXXX";
        end if; 
    end process;

    icmp_ln122_1_fu_966_p2 <= "1" when (i_8_reg_393 = ap_const_lv6_3C) else "0";
    icmp_ln122_2_fu_1373_p2 <= "1" when (i_10_reg_504 = ap_const_lv6_3C) else "0";
    icmp_ln122_fu_684_p2 <= "1" when (i_6_reg_359 = ap_const_lv6_3C) else "0";
    icmp_ln19_fu_579_p2 <= "1" when (i_reg_337 = ap_const_lv6_38) else "0";
    icmp_ln23_fu_634_p2 <= "1" when (j_reg_348 = ap_const_lv3_6) else "0";
    icmp_ln34_fu_875_p2 <= "1" when (i_4_reg_371 = ap_const_lv6_38) else "0";
    icmp_ln38_fu_921_p2 <= "1" when (j_1_reg_382 = ap_const_lv3_6) else "0";
    icmp_ln48_fu_1127_p2 <= "1" when (i_5_reg_416 = ap_const_lv3_6) else "0";
    icmp_ln52_fu_1173_p2 <= "1" when (j_3_reg_427 = ap_const_lv6_38) else "0";
    icmp_ln60_fu_1330_p2 <= "1" when (i_11_reg_449 = ap_const_lv3_6) else "0";
    icmp_ln64_fu_1336_p2 <= "1" when (j_4_reg_472 = ap_const_lv64_6) else "0";
    icmp_ln69_fu_1346_p2 <= "1" when (j_4_reg_472 = zext_ln60_reg_1803) else "0";
    icmp_ln85_fu_1512_p2 <= "1" when (unsigned(i_7_reg_516) < unsigned(ap_const_lv11_4EC)) else "0";
    loop_index_cast_fu_1285_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(loop_index_reg_438),15));
    or_ln122_1_fu_775_p2 <= (i_6_reg_359 or ap_const_lv6_2);
    or_ln122_2_fu_800_p2 <= (i_6_reg_359 or ap_const_lv6_3);
    or_ln122_3_fu_988_p2 <= (i_8_reg_393 or ap_const_lv6_1);
    or_ln122_4_fu_1034_p2 <= (i_8_reg_393 or ap_const_lv6_2);
    or_ln122_5_fu_1054_p2 <= (i_8_reg_393 or ap_const_lv6_3);
    or_ln122_6_fu_1409_p2 <= (i_10_reg_504 or ap_const_lv6_1);
    or_ln122_7_fu_1442_p2 <= (i_10_reg_504 or ap_const_lv6_2);
    or_ln122_8_fu_1475_p2 <= (i_10_reg_504 or ap_const_lv6_3);
    or_ln122_fu_706_p2 <= (i_6_reg_359 or ap_const_lv6_1);
    p_cast18_fu_1357_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_63_reg_482),64));
    p_cast_fu_1106_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_53_reg_405),64));
    p_shl14_cast_fu_605_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_shl1_fu_597_p3),10));
    p_shl17_cast_fu_889_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_shl2_fu_881_p3),10));
    p_shl18_cast_fu_901_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_shl3_fu_893_p3),10));
    p_shl1_fu_597_p3 <= (i_reg_337 & ap_const_lv1_0);
    p_shl21_cast_fu_1141_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_shl4_fu_1133_p3),10));
    p_shl22_cast_fu_1153_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_shl5_fu_1145_p3),10));
    p_shl2_fu_881_p3 <= (i_4_reg_371 & ap_const_lv3_0);
    p_shl3_fu_893_p3 <= (i_4_reg_371 & ap_const_lv1_0);
    p_shl4_fu_1133_p3 <= (i_5_reg_416 & ap_const_lv6_0);
    p_shl5_fu_1145_p3 <= (i_5_reg_416 & ap_const_lv3_0);
    p_shl_cast_fu_593_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_shl_fu_585_p3),10));
    p_shl_fu_585_p3 <= (i_reg_337 & ap_const_lv3_0);
        sext_ln122_fu_1508_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(grp_remainder_fu_553_ap_return),8));

    sext_ln124_10_fu_1074_p0 <= temp_q1;
        sext_ln124_10_fu_1074_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln124_10_fu_1074_p0),8));

    sext_ln124_11_fu_1087_p0 <= temp_q0;
        sext_ln124_11_fu_1087_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln124_11_fu_1087_p0),8));

        sext_ln124_12_fu_1395_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(vec_q0),8));

        sext_ln124_13_fu_1420_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(grp_remainder_fu_553_ap_return),8));

        sext_ln124_14_fu_1428_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(vec_q0),8));

        sext_ln124_15_fu_1453_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(grp_remainder_fu_553_ap_return),8));

        sext_ln124_16_fu_1461_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(vec_q0),8));

        sext_ln124_17_fu_1486_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(grp_remainder_fu_553_ap_return),8));

        sext_ln124_18_fu_1494_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(vec_q0),8));

        sext_ln124_1_fu_739_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(vec_1_q1),8));

    sext_ln124_2_fu_753_p0 <= temp_q0;
        sext_ln124_2_fu_753_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln124_2_fu_753_p0),8));

        sext_ln124_3_fu_761_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(vec_1_q0),8));

    sext_ln124_4_fu_825_p0 <= temp_q1;
        sext_ln124_4_fu_825_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln124_4_fu_825_p0),8));

        sext_ln124_5_fu_833_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(vec_1_q1),8));

    sext_ln124_6_fu_847_p0 <= temp_q0;
        sext_ln124_6_fu_847_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln124_6_fu_847_p0),8));

        sext_ln124_7_fu_855_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(vec_1_q0),8));

    sext_ln124_8_fu_1008_p0 <= temp_q1;
        sext_ln124_8_fu_1008_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln124_8_fu_1008_p0),8));

    sext_ln124_9_fu_1021_p0 <= temp_q0;
        sext_ln124_9_fu_1021_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln124_9_fu_1021_p0),8));

    sext_ln124_fu_731_p0 <= temp_q1;
        sext_ln124_fu_731_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln124_fu_731_p0),8));

        sext_ln29_fu_665_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln29_1_fu_657_p3),15));

        sext_ln41_fu_952_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln41_1_fu_944_p3),15));

        sext_ln55_1_fu_1269_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln55_5_fu_1261_p3),15));

        sext_ln55_fu_1204_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln55_1_fu_1196_p3),15));

    shl_ln1_fu_936_p3 <= (trunc_ln41_fu_932_p1 & ap_const_lv6_0);
    shl_ln29_1_fu_657_p3 <= (add_ln29_fu_640_p2 & ap_const_lv2_0);
    shl_ln2_fu_1188_p3 <= (trunc_ln55_fu_1184_p1 & ap_const_lv6_0);
    shl_ln41_1_fu_944_p3 <= (add_ln41_fu_927_p2 & ap_const_lv2_0);
    shl_ln55_1_fu_1196_p3 <= (add_ln55_fu_1179_p2 & ap_const_lv2_0);
    shl_ln55_2_fu_1214_p3 <= (j_3_reg_427 & ap_const_lv3_0);
    shl_ln55_3_fu_1226_p3 <= (j_3_reg_427 & ap_const_lv1_0);
    shl_ln55_4_fu_1253_p3 <= (trunc_ln55_1_fu_1249_p1 & ap_const_lv6_0);
    shl_ln55_5_fu_1261_p3 <= (add_ln55_1_fu_1244_p2 & ap_const_lv2_0);
    shl_ln_fu_649_p3 <= (trunc_ln29_fu_645_p1 & ap_const_lv6_0);
    sub_ln28_fu_615_p2 <= std_logic_vector(signed(ap_const_lv6_38) - signed(i_reg_337));
    sub_ln29_fu_669_p2 <= std_logic_vector(unsigned(shl_ln_fu_649_p3) - unsigned(sext_ln29_fu_665_p1));
    sub_ln41_fu_956_p2 <= std_logic_vector(unsigned(shl_ln1_fu_936_p3) - unsigned(sext_ln41_fu_952_p1));
    sub_ln55_1_fu_1238_p2 <= std_logic_vector(unsigned(zext_ln55_fu_1222_p1) - unsigned(zext_ln55_1_fu_1234_p1));
    sub_ln55_2_fu_1273_p2 <= std_logic_vector(unsigned(shl_ln55_4_fu_1253_p3) - unsigned(sext_ln55_1_fu_1269_p1));
    sub_ln55_fu_1208_p2 <= std_logic_vector(unsigned(shl_ln2_fu_1188_p3) - unsigned(sext_ln55_fu_1204_p1));

    temp_address0_assign_proc : process(ap_CS_fsm_state9, ap_CS_fsm_state17, ap_CS_fsm_state5, temp_addr_1_reg_1604, ap_CS_fsm_state6, temp_addr_3_reg_1634, ap_CS_fsm_state13, temp_addr_5_reg_1696, ap_CS_fsm_state14, temp_addr_7_reg_1716, ap_CS_fsm_state22, ap_CS_fsm_state10, ap_CS_fsm_state18, zext_ln124_5_fu_726_p1, zext_ln124_15_fu_820_p1, zext_ln124_21_fu_1003_p1, zext_ln124_27_fu_1069_p1, add_ptr584_sum_cast_fu_1300_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state22)) then 
            temp_address0 <= add_ptr584_sum_cast_fu_1300_p1(15 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
            temp_address0 <= temp_addr_7_reg_1716;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            temp_address0 <= temp_addr_5_reg_1696;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            temp_address0 <= zext_ln124_27_fu_1069_p1(15 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            temp_address0 <= zext_ln124_21_fu_1003_p1(15 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            temp_address0 <= temp_addr_3_reg_1634;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            temp_address0 <= temp_addr_1_reg_1604;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            temp_address0 <= zext_ln124_15_fu_820_p1(15 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            temp_address0 <= zext_ln124_5_fu_726_p1(15 - 1 downto 0);
        else 
            temp_address0 <= "XXXXXXXXXXXXXXX";
        end if; 
    end process;


    temp_address1_assign_proc : process(ap_CS_fsm_state9, ap_CS_fsm_state17, ap_CS_fsm_state5, temp_addr_reg_1594, ap_CS_fsm_state6, temp_addr_2_reg_1624, ap_CS_fsm_state13, temp_addr_4_reg_1691, ap_CS_fsm_state14, temp_addr_6_reg_1711, ap_CS_fsm_state10, ap_CS_fsm_state18, zext_ln124_fu_701_p1, zext_ln124_10_fu_795_p1, zext_ln124_18_fu_983_p1, zext_ln124_24_fu_1049_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
            temp_address1 <= temp_addr_6_reg_1711;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            temp_address1 <= temp_addr_4_reg_1691;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            temp_address1 <= zext_ln124_24_fu_1049_p1(15 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            temp_address1 <= zext_ln124_18_fu_983_p1(15 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            temp_address1 <= temp_addr_2_reg_1624;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            temp_address1 <= temp_addr_reg_1594;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            temp_address1 <= zext_ln124_10_fu_795_p1(15 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            temp_address1 <= zext_ln124_fu_701_p1(15 - 1 downto 0);
        else 
            temp_address1 <= "XXXXXXXXXXXXXXX";
        end if; 
    end process;


    temp_ce0_assign_proc : process(ap_CS_fsm_state9, ap_block_state9_on_subcall_done, ap_CS_fsm_state17, ap_block_state17_on_subcall_done, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state13, ap_CS_fsm_state14, ap_CS_fsm_state22, ap_CS_fsm_state10, ap_CS_fsm_state18)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state18) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state22) or (ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state5) or ((ap_const_boolean_0 = ap_block_state9_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state9)) or ((ap_const_boolean_0 = ap_block_state17_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state17)))) then 
            temp_ce0 <= ap_const_logic_1;
        else 
            temp_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    temp_ce1_assign_proc : process(ap_CS_fsm_state9, ap_block_state9_on_subcall_done, ap_CS_fsm_state17, ap_block_state17_on_subcall_done, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state13, ap_CS_fsm_state14, ap_CS_fsm_state10, ap_CS_fsm_state18)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state18) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state5) or ((ap_const_boolean_0 = ap_block_state9_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state9)) or ((ap_const_boolean_0 = ap_block_state17_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state17)))) then 
            temp_ce1 <= ap_const_logic_1;
        else 
            temp_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    temp_we0_assign_proc : process(ap_CS_fsm_state9, ap_block_state9_on_subcall_done, ap_CS_fsm_state17, ap_block_state17_on_subcall_done, ap_CS_fsm_state10, ap_CS_fsm_state18)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state18) or (ap_const_logic_1 = ap_CS_fsm_state10) or ((ap_const_boolean_0 = ap_block_state9_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state9)) or ((ap_const_boolean_0 = ap_block_state17_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state17)))) then 
            temp_we0 <= ap_const_logic_1;
        else 
            temp_we0 <= ap_const_logic_0;
        end if; 
    end process;


    temp_we1_assign_proc : process(ap_CS_fsm_state9, ap_block_state9_on_subcall_done, ap_CS_fsm_state17, ap_block_state17_on_subcall_done, ap_CS_fsm_state10, ap_CS_fsm_state18)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state18) or (ap_const_logic_1 = ap_CS_fsm_state10) or ((ap_const_boolean_0 = ap_block_state9_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state9)) or ((ap_const_boolean_0 = ap_block_state17_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state17)))) then 
            temp_we1 <= ap_const_logic_1;
        else 
            temp_we1 <= ap_const_logic_0;
        end if; 
    end process;


    tempt_address0_assign_proc : process(ap_CS_fsm_state19, ap_CS_fsm_state31, grp_linear_combination_2_fu_535_vecs_address0, grp_linear_combination_1_fu_544_vecs_address0, ap_CS_fsm_state23, ap_CS_fsm_state29, p_cast_fu_1106_p1, add_ptr523_sum_cast_fu_1310_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state23)) then 
            tempt_address0 <= add_ptr523_sum_cast_fu_1310_p1(15 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            tempt_address0 <= p_cast_fu_1106_p1(15 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            tempt_address0 <= grp_linear_combination_1_fu_544_vecs_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state31)) then 
            tempt_address0 <= grp_linear_combination_2_fu_535_vecs_address0;
        else 
            tempt_address0 <= "XXXXXXXXXXXXXXX";
        end if; 
    end process;


    tempt_ce0_assign_proc : process(ap_CS_fsm_state19, ap_CS_fsm_state31, grp_linear_combination_2_fu_535_vecs_ce0, grp_linear_combination_1_fu_544_vecs_ce0, ap_CS_fsm_state23, ap_CS_fsm_state29)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state23) or (ap_const_logic_1 = ap_CS_fsm_state19))) then 
            tempt_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            tempt_ce0 <= grp_linear_combination_1_fu_544_vecs_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state31)) then 
            tempt_ce0 <= grp_linear_combination_2_fu_535_vecs_ce0;
        else 
            tempt_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    tempt_d0_assign_proc : process(ap_CS_fsm_state19, temp_q0, ap_CS_fsm_state23)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state23)) then 
            tempt_d0 <= temp_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            tempt_d0 <= ap_const_lv6_0;
        else 
            tempt_d0 <= "XXXXXX";
        end if; 
    end process;


    tempt_we0_assign_proc : process(ap_CS_fsm_state19, exitcond5511_fu_1111_p2, ap_CS_fsm_state23)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state23) or ((exitcond5511_fu_1111_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state19)))) then 
            tempt_we0 <= ap_const_logic_1;
        else 
            tempt_we0 <= ap_const_logic_0;
        end if; 
    end process;

    tmp_10_fu_769_p2 <= std_logic_vector(unsigned(zext_ln124_7_fu_765_p1) + unsigned(zext_ln124_6_fu_757_p1));
    tmp_11_fu_841_p2 <= std_logic_vector(unsigned(zext_ln124_12_fu_837_p1) + unsigned(zext_ln124_11_fu_829_p1));
    tmp_16_fu_863_p2 <= std_logic_vector(unsigned(zext_ln124_17_fu_859_p1) + unsigned(zext_ln124_16_fu_851_p1));
    tmp_17_fu_1016_p2 <= std_logic_vector(unsigned(zext_ln124_19_fu_1012_p1) + unsigned(zext_ln34_reg_1562));
    tmp_18_fu_1029_p2 <= std_logic_vector(unsigned(zext_ln124_22_fu_1025_p1) + unsigned(zext_ln34_reg_1562));
    tmp_19_fu_1082_p2 <= std_logic_vector(unsigned(zext_ln124_25_fu_1078_p1) + unsigned(zext_ln34_reg_1562));
    tmp_20_fu_1095_p2 <= std_logic_vector(unsigned(zext_ln124_28_fu_1091_p1) + unsigned(zext_ln34_reg_1562));
    tmp_21_fu_1403_p2 <= std_logic_vector(unsigned(zext_ln124_30_fu_1399_p1) + unsigned(zext_ln124_29_fu_1391_p1));
    tmp_22_fu_1436_p2 <= std_logic_vector(unsigned(zext_ln124_32_fu_1424_p1) + unsigned(zext_ln124_33_fu_1432_p1));
    tmp_23_fu_1469_p2 <= std_logic_vector(unsigned(zext_ln124_35_fu_1457_p1) + unsigned(zext_ln124_36_fu_1465_p1));
    tmp_24_fu_1502_p2 <= std_logic_vector(unsigned(zext_ln124_38_fu_1490_p1) + unsigned(zext_ln124_39_fu_1498_p1));
    tmp_fu_747_p2 <= std_logic_vector(unsigned(zext_ln124_2_fu_743_p1) + unsigned(zext_ln124_1_fu_735_p1));
    trunc_ln29_fu_645_p1 <= add_ln29_fu_640_p2(9 - 1 downto 0);
    trunc_ln41_fu_932_p1 <= add_ln41_fu_927_p2(9 - 1 downto 0);
    trunc_ln55_1_fu_1249_p1 <= add_ln55_1_fu_1244_p2(9 - 1 downto 0);
    trunc_ln55_fu_1184_p1 <= add_ln55_fu_1179_p2(9 - 1 downto 0);

    vec_1_address0_assign_proc : process(ap_CS_fsm_state5, ap_CS_fsm_state6, grp_linear_combination_fu_527_out_r_address0, ap_CS_fsm_state4, zext_ln124_3_fu_712_p1, zext_ln124_13_fu_806_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            vec_1_address0 <= zext_ln124_13_fu_806_p1(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            vec_1_address0 <= zext_ln124_3_fu_712_p1(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            vec_1_address0 <= grp_linear_combination_fu_527_out_r_address0;
        else 
            vec_1_address0 <= "XXXXXX";
        end if; 
    end process;


    vec_1_address1_assign_proc : process(ap_CS_fsm_state5, ap_CS_fsm_state6, zext_ln122_fu_675_p1, zext_ln124_8_fu_781_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            vec_1_address1 <= zext_ln124_8_fu_781_p1(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            vec_1_address1 <= zext_ln122_fu_675_p1(6 - 1 downto 0);
        else 
            vec_1_address1 <= "XXXXXX";
        end if; 
    end process;


    vec_1_ce0_assign_proc : process(ap_CS_fsm_state5, ap_CS_fsm_state6, grp_linear_combination_fu_527_out_r_ce0, ap_CS_fsm_state4)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            vec_1_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            vec_1_ce0 <= grp_linear_combination_fu_527_out_r_ce0;
        else 
            vec_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    vec_1_ce1_assign_proc : process(ap_CS_fsm_state5, ap_CS_fsm_state6)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            vec_1_ce1 <= ap_const_logic_1;
        else 
            vec_1_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    vec_1_we0_assign_proc : process(grp_linear_combination_fu_527_out_r_we0, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            vec_1_we0 <= grp_linear_combination_fu_527_out_r_we0;
        else 
            vec_1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    vec_address0_assign_proc : process(ap_CS_fsm_state30, ap_CS_fsm_state31, ap_CS_fsm_state32, ap_CS_fsm_state34, ap_CS_fsm_state36, ap_CS_fsm_state38, grp_linear_combination_2_fu_535_out_r_address0, exitcond2_fu_1362_p2, p_cast18_fu_1357_p1, zext_ln122_3_fu_1368_p1, zext_ln124_31_fu_1415_p1, zext_ln124_34_fu_1448_p1, zext_ln124_37_fu_1481_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state38)) then 
            vec_address0 <= zext_ln124_37_fu_1481_p1(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state36)) then 
            vec_address0 <= zext_ln124_34_fu_1448_p1(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state34)) then 
            vec_address0 <= zext_ln124_31_fu_1415_p1(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state32)) then 
            vec_address0 <= zext_ln122_3_fu_1368_p1(6 - 1 downto 0);
        elsif (((exitcond2_fu_1362_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state30))) then 
            vec_address0 <= p_cast18_fu_1357_p1(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state31)) then 
            vec_address0 <= grp_linear_combination_2_fu_535_out_r_address0;
        else 
            vec_address0 <= "XXXXXX";
        end if; 
    end process;


    vec_ce0_assign_proc : process(ap_CS_fsm_state30, ap_CS_fsm_state31, ap_CS_fsm_state32, ap_CS_fsm_state34, ap_CS_fsm_state36, ap_CS_fsm_state38, grp_linear_combination_2_fu_535_out_r_ce0, exitcond2_fu_1362_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state38) or (ap_const_logic_1 = ap_CS_fsm_state36) or (ap_const_logic_1 = ap_CS_fsm_state34) or (ap_const_logic_1 = ap_CS_fsm_state32) or ((exitcond2_fu_1362_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state30)))) then 
            vec_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state31)) then 
            vec_ce0 <= grp_linear_combination_2_fu_535_out_r_ce0;
        else 
            vec_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    vec_d0_assign_proc : process(ap_CS_fsm_state30, ap_CS_fsm_state31, grp_linear_combination_2_fu_535_out_r_d0, exitcond2_fu_1362_p2)
    begin
        if (((exitcond2_fu_1362_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state30))) then 
            vec_d0 <= ap_const_lv6_0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state31)) then 
            vec_d0 <= grp_linear_combination_2_fu_535_out_r_d0;
        else 
            vec_d0 <= "XXXXXX";
        end if; 
    end process;


    vec_we0_assign_proc : process(ap_CS_fsm_state30, ap_CS_fsm_state31, grp_linear_combination_2_fu_535_out_r_we0, exitcond2_fu_1362_p2)
    begin
        if (((exitcond2_fu_1362_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state30))) then 
            vec_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state31)) then 
            vec_we0 <= grp_linear_combination_2_fu_535_out_r_we0;
        else 
            vec_we0 <= ap_const_logic_0;
        end if; 
    end process;

    zext_ln122_1_fu_680_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_6_reg_359),15));
    zext_ln122_2_fu_962_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_8_reg_393),15));
    zext_ln122_3_fu_1368_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_10_reg_504),64));
    zext_ln122_fu_675_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_6_reg_359),64));
    zext_ln124_10_fu_795_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln124_4_fu_790_p2),64));
    zext_ln124_11_fu_829_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln124_4_fu_825_p1),9));
    zext_ln124_12_fu_837_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln124_5_fu_833_p1),9));
    zext_ln124_13_fu_806_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln122_2_fu_800_p2),64));
    zext_ln124_14_fu_811_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln122_2_fu_800_p2),15));
    zext_ln124_15_fu_820_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln124_6_fu_815_p2),64));
    zext_ln124_16_fu_851_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln124_6_fu_847_p1),9));
    zext_ln124_17_fu_859_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln124_7_fu_855_p1),9));
    zext_ln124_18_fu_983_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln124_8_fu_978_p2),64));
    zext_ln124_19_fu_1012_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln124_8_fu_1008_p1),9));
    zext_ln124_1_fu_735_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln124_fu_731_p1),9));
    zext_ln124_20_fu_994_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln122_3_fu_988_p2),15));
    zext_ln124_21_fu_1003_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln124_10_fu_998_p2),64));
    zext_ln124_22_fu_1025_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln124_9_fu_1021_p1),9));
    zext_ln124_23_fu_1040_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln122_4_fu_1034_p2),15));
    zext_ln124_24_fu_1049_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln124_12_fu_1044_p2),64));
    zext_ln124_25_fu_1078_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln124_10_fu_1074_p1),9));
    zext_ln124_26_fu_1060_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln122_5_fu_1054_p2),15));
    zext_ln124_27_fu_1069_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln124_14_fu_1064_p2),64));
    zext_ln124_28_fu_1091_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln124_11_fu_1087_p1),9));
    zext_ln124_29_fu_1391_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(v1_0_i_reg_493),9));
    zext_ln124_2_fu_743_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln124_1_fu_739_p1),9));
    zext_ln124_30_fu_1399_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln124_12_fu_1395_p1),9));
    zext_ln124_31_fu_1415_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln122_6_fu_1409_p2),64));
    zext_ln124_32_fu_1424_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln124_13_fu_1420_p1),9));
    zext_ln124_33_fu_1432_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln124_14_fu_1428_p1),9));
    zext_ln124_34_fu_1448_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln122_7_fu_1442_p2),64));
    zext_ln124_35_fu_1457_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln124_15_fu_1453_p1),9));
    zext_ln124_36_fu_1465_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln124_16_fu_1461_p1),9));
    zext_ln124_37_fu_1481_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln122_8_fu_1475_p2),64));
    zext_ln124_38_fu_1490_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln124_17_fu_1486_p1),9));
    zext_ln124_39_fu_1498_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln124_18_fu_1494_p1),9));
    zext_ln124_3_fu_712_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln122_fu_706_p2),64));
    zext_ln124_4_fu_717_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln122_fu_706_p2),15));
    zext_ln124_5_fu_726_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln124_2_fu_721_p2),64));
    zext_ln124_6_fu_757_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln124_2_fu_753_p1),9));
    zext_ln124_7_fu_765_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln124_3_fu_761_p1),9));
    zext_ln124_8_fu_781_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln122_1_fu_775_p2),64));
    zext_ln124_9_fu_786_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln122_1_fu_775_p2),15));
    zext_ln124_fu_701_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln124_fu_696_p2),64));
    zext_ln23_fu_630_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(j_reg_348),10));
    zext_ln34_fu_621_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(P1),9));
    zext_ln38_fu_917_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(j_1_reg_382),10));
    zext_ln48_fu_1123_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_5_reg_416),10));
    zext_ln52_fu_1169_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(j_3_reg_427),10));
    zext_ln55_1_fu_1234_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln55_3_fu_1226_p3),10));
    zext_ln55_fu_1222_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln55_2_fu_1214_p3),10));
    zext_ln60_fu_1326_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_11_reg_449),64));
end behav;
