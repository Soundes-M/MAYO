// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Version: 2020.2
// Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module computeP2_add_vectors_2 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        P2_address0,
        P2_ce0,
        P2_we0,
        P2_d0,
        P2_q0,
        v1,
        v2_address0,
        v2_ce0,
        v2_q0,
        v2_address1,
        v2_ce1,
        v2_q1
);

parameter    ap_ST_fsm_state1 = 61'd1;
parameter    ap_ST_fsm_state2 = 61'd2;
parameter    ap_ST_fsm_state3 = 61'd4;
parameter    ap_ST_fsm_state4 = 61'd8;
parameter    ap_ST_fsm_state5 = 61'd16;
parameter    ap_ST_fsm_state6 = 61'd32;
parameter    ap_ST_fsm_state7 = 61'd64;
parameter    ap_ST_fsm_state8 = 61'd128;
parameter    ap_ST_fsm_state9 = 61'd256;
parameter    ap_ST_fsm_state10 = 61'd512;
parameter    ap_ST_fsm_state11 = 61'd1024;
parameter    ap_ST_fsm_state12 = 61'd2048;
parameter    ap_ST_fsm_state13 = 61'd4096;
parameter    ap_ST_fsm_state14 = 61'd8192;
parameter    ap_ST_fsm_state15 = 61'd16384;
parameter    ap_ST_fsm_state16 = 61'd32768;
parameter    ap_ST_fsm_state17 = 61'd65536;
parameter    ap_ST_fsm_state18 = 61'd131072;
parameter    ap_ST_fsm_state19 = 61'd262144;
parameter    ap_ST_fsm_state20 = 61'd524288;
parameter    ap_ST_fsm_state21 = 61'd1048576;
parameter    ap_ST_fsm_state22 = 61'd2097152;
parameter    ap_ST_fsm_state23 = 61'd4194304;
parameter    ap_ST_fsm_state24 = 61'd8388608;
parameter    ap_ST_fsm_state25 = 61'd16777216;
parameter    ap_ST_fsm_state26 = 61'd33554432;
parameter    ap_ST_fsm_state27 = 61'd67108864;
parameter    ap_ST_fsm_state28 = 61'd134217728;
parameter    ap_ST_fsm_state29 = 61'd268435456;
parameter    ap_ST_fsm_state30 = 61'd536870912;
parameter    ap_ST_fsm_state31 = 61'd1073741824;
parameter    ap_ST_fsm_state32 = 61'd2147483648;
parameter    ap_ST_fsm_state33 = 61'd4294967296;
parameter    ap_ST_fsm_state34 = 61'd8589934592;
parameter    ap_ST_fsm_state35 = 61'd17179869184;
parameter    ap_ST_fsm_state36 = 61'd34359738368;
parameter    ap_ST_fsm_state37 = 61'd68719476736;
parameter    ap_ST_fsm_state38 = 61'd137438953472;
parameter    ap_ST_fsm_state39 = 61'd274877906944;
parameter    ap_ST_fsm_state40 = 61'd549755813888;
parameter    ap_ST_fsm_state41 = 61'd1099511627776;
parameter    ap_ST_fsm_state42 = 61'd2199023255552;
parameter    ap_ST_fsm_state43 = 61'd4398046511104;
parameter    ap_ST_fsm_state44 = 61'd8796093022208;
parameter    ap_ST_fsm_state45 = 61'd17592186044416;
parameter    ap_ST_fsm_state46 = 61'd35184372088832;
parameter    ap_ST_fsm_state47 = 61'd70368744177664;
parameter    ap_ST_fsm_state48 = 61'd140737488355328;
parameter    ap_ST_fsm_state49 = 61'd281474976710656;
parameter    ap_ST_fsm_state50 = 61'd562949953421312;
parameter    ap_ST_fsm_state51 = 61'd1125899906842624;
parameter    ap_ST_fsm_state52 = 61'd2251799813685248;
parameter    ap_ST_fsm_state53 = 61'd4503599627370496;
parameter    ap_ST_fsm_state54 = 61'd9007199254740992;
parameter    ap_ST_fsm_state55 = 61'd18014398509481984;
parameter    ap_ST_fsm_state56 = 61'd36028797018963968;
parameter    ap_ST_fsm_state57 = 61'd72057594037927936;
parameter    ap_ST_fsm_state58 = 61'd144115188075855872;
parameter    ap_ST_fsm_state59 = 61'd288230376151711744;
parameter    ap_ST_fsm_state60 = 61'd576460752303423488;
parameter    ap_ST_fsm_state61 = 61'd1152921504606846976;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [10:0] P2_address0;
output   P2_ce0;
output   P2_we0;
output  [7:0] P2_d0;
input  [7:0] P2_q0;
input  [10:0] v1;
output  [5:0] v2_address0;
output   v2_ce0;
input  [4:0] v2_q0;
output  [5:0] v2_address1;
output   v2_ce1;
input  [4:0] v2_q1;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[10:0] P2_address0;
reg P2_ce0;
reg P2_we0;
reg[7:0] P2_d0;
reg[5:0] v2_address0;
reg v2_ce0;
reg v2_ce1;

(* fsm_encoding = "none" *) reg   [60:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [5:0] add_ln117_fu_153_p2;
reg   [5:0] add_ln117_reg_349;
wire    ap_CS_fsm_state2;
wire   [0:0] icmp_ln117_fu_147_p2;
reg   [10:0] P2_addr_reg_354;
wire   [8:0] tmp_fu_177_p2;
reg   [8:0] tmp_reg_364;
wire    ap_CS_fsm_state3;
reg   [10:0] P2_addr_2_reg_369;
wire    ap_CS_fsm_state17;
wire   [8:0] tmp_4_fu_226_p2;
reg   [8:0] tmp_4_reg_379;
wire    ap_CS_fsm_state18;
reg   [10:0] P2_addr_3_reg_384;
wire    ap_CS_fsm_state32;
wire   [10:0] add_ln119_6_fu_282_p2;
reg   [10:0] add_ln119_6_reg_394;
wire   [8:0] tmp_5_fu_295_p2;
reg   [8:0] tmp_5_reg_404;
wire    ap_CS_fsm_state33;
reg   [4:0] v2_load_3_reg_409;
reg   [10:0] P2_addr_4_reg_414;
wire    ap_CS_fsm_state47;
wire   [8:0] tmp_6_fu_322_p2;
reg   [8:0] tmp_6_reg_419;
wire    ap_CS_fsm_state48;
reg   [5:0] i_reg_126;
wire    ap_CS_fsm_state61;
wire   [63:0] zext_ln119_fu_164_p1;
wire   [63:0] zext_ln117_fu_138_p1;
wire   [63:0] zext_ln119_22_fu_213_p1;
wire   [63:0] zext_ln119_20_fu_199_p1;
wire   [63:0] zext_ln119_27_fu_262_p1;
wire   [63:0] zext_ln119_25_fu_248_p1;
wire   [63:0] zext_ln119_30_fu_273_p1;
wire   [63:0] zext_ln119_32_fu_311_p1;
wire    ap_CS_fsm_state16;
wire   [7:0] trunc_ln121_fu_188_p1;
wire    ap_CS_fsm_state31;
wire   [7:0] trunc_ln121_4_fu_237_p1;
wire    ap_CS_fsm_state46;
wire   [7:0] trunc_ln121_5_fu_306_p1;
wire   [7:0] trunc_ln121_6_fu_333_p1;
wire   [10:0] zext_ln117_2_fu_143_p1;
wire   [10:0] add_ln119_fu_159_p2;
wire   [8:0] zext_ln119_19_fu_173_p1;
wire   [8:0] zext_ln119_18_fu_169_p1;
wire   [5:0] grp_fu_183_p1;
wire    ap_CS_fsm_state4;
wire   [7:0] grp_fu_183_p2;
wire   [5:0] or_ln117_fu_193_p2;
wire   [10:0] zext_ln119_21_fu_204_p1;
wire   [10:0] add_ln119_2_fu_208_p2;
wire   [8:0] zext_ln119_24_fu_222_p1;
wire   [8:0] zext_ln119_23_fu_218_p1;
wire   [5:0] grp_fu_232_p1;
wire    ap_CS_fsm_state19;
wire   [7:0] grp_fu_232_p2;
wire   [5:0] or_ln117_1_fu_242_p2;
wire   [10:0] zext_ln119_26_fu_253_p1;
wire   [10:0] add_ln119_4_fu_257_p2;
wire   [5:0] or_ln117_2_fu_267_p2;
wire   [10:0] zext_ln119_31_fu_278_p1;
wire   [8:0] zext_ln119_29_fu_291_p1;
wire   [8:0] zext_ln119_28_fu_287_p1;
wire   [5:0] grp_fu_301_p1;
wire    ap_CS_fsm_state34;
wire   [7:0] grp_fu_301_p2;
wire   [8:0] zext_ln119_34_fu_319_p1;
wire   [8:0] zext_ln119_33_fu_315_p1;
wire   [5:0] grp_fu_328_p1;
wire    ap_CS_fsm_state49;
wire   [7:0] grp_fu_328_p2;
reg    grp_fu_183_ap_start;
wire    grp_fu_183_ap_done;
reg    grp_fu_232_ap_start;
wire    grp_fu_232_ap_done;
reg    grp_fu_301_ap_start;
wire    grp_fu_301_ap_done;
reg    grp_fu_328_ap_start;
wire    grp_fu_328_ap_done;
reg   [60:0] ap_NS_fsm;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 61'd1;
end

computeP2_urem_9ns_6ns_8_13_seq_1 #(
    .ID( 1 ),
    .NUM_STAGE( 13 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 6 ),
    .dout_WIDTH( 8 ))
urem_9ns_6ns_8_13_seq_1_U38(
    .clk(ap_clk),
    .reset(ap_rst),
    .start(grp_fu_183_ap_start),
    .done(grp_fu_183_ap_done),
    .din0(tmp_reg_364),
    .din1(grp_fu_183_p1),
    .ce(1'b1),
    .dout(grp_fu_183_p2)
);

computeP2_urem_9ns_6ns_8_13_seq_1 #(
    .ID( 1 ),
    .NUM_STAGE( 13 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 6 ),
    .dout_WIDTH( 8 ))
urem_9ns_6ns_8_13_seq_1_U39(
    .clk(ap_clk),
    .reset(ap_rst),
    .start(grp_fu_232_ap_start),
    .done(grp_fu_232_ap_done),
    .din0(tmp_4_reg_379),
    .din1(grp_fu_232_p1),
    .ce(1'b1),
    .dout(grp_fu_232_p2)
);

computeP2_urem_9ns_6ns_8_13_seq_1 #(
    .ID( 1 ),
    .NUM_STAGE( 13 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 6 ),
    .dout_WIDTH( 8 ))
urem_9ns_6ns_8_13_seq_1_U40(
    .clk(ap_clk),
    .reset(ap_rst),
    .start(grp_fu_301_ap_start),
    .done(grp_fu_301_ap_done),
    .din0(tmp_5_reg_404),
    .din1(grp_fu_301_p1),
    .ce(1'b1),
    .dout(grp_fu_301_p2)
);

computeP2_urem_9ns_6ns_8_13_seq_1 #(
    .ID( 1 ),
    .NUM_STAGE( 13 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 6 ),
    .dout_WIDTH( 8 ))
urem_9ns_6ns_8_13_seq_1_U41(
    .clk(ap_clk),
    .reset(ap_rst),
    .start(grp_fu_328_ap_start),
    .done(grp_fu_328_ap_done),
    .din0(tmp_6_reg_419),
    .din1(grp_fu_328_p1),
    .ce(1'b1),
    .dout(grp_fu_328_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        i_reg_126 <= 6'd0;
    end else if ((1'b1 == ap_CS_fsm_state61)) begin
        i_reg_126 <= add_ln117_reg_349;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        P2_addr_2_reg_369 <= zext_ln119_22_fu_213_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state32)) begin
        P2_addr_3_reg_384 <= zext_ln119_27_fu_262_p1;
        add_ln119_6_reg_394 <= add_ln119_6_fu_282_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state47)) begin
        P2_addr_4_reg_414 <= zext_ln119_32_fu_311_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln117_fu_147_p2 == 1'd0))) begin
        P2_addr_reg_354 <= zext_ln119_fu_164_p1;
        add_ln117_reg_349 <= add_ln117_fu_153_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        tmp_4_reg_379 <= tmp_4_fu_226_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state33)) begin
        tmp_5_reg_404 <= tmp_5_fu_295_p2;
        v2_load_3_reg_409 <= v2_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state48)) begin
        tmp_6_reg_419 <= tmp_6_fu_322_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        tmp_reg_364 <= tmp_fu_177_p2;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state61)) begin
        P2_address0 = P2_addr_4_reg_414;
    end else if ((1'b1 == ap_CS_fsm_state47)) begin
        P2_address0 = zext_ln119_32_fu_311_p1;
    end else if ((1'b1 == ap_CS_fsm_state46)) begin
        P2_address0 = P2_addr_3_reg_384;
    end else if ((1'b1 == ap_CS_fsm_state32)) begin
        P2_address0 = zext_ln119_27_fu_262_p1;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        P2_address0 = P2_addr_2_reg_369;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        P2_address0 = zext_ln119_22_fu_213_p1;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        P2_address0 = P2_addr_reg_354;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        P2_address0 = zext_ln119_fu_164_p1;
    end else begin
        P2_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state61) | (1'b1 == ap_CS_fsm_state47) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state2))) begin
        P2_ce0 = 1'b1;
    end else begin
        P2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state61)) begin
        P2_d0 = trunc_ln121_6_fu_333_p1;
    end else if ((1'b1 == ap_CS_fsm_state46)) begin
        P2_d0 = trunc_ln121_5_fu_306_p1;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        P2_d0 = trunc_ln121_4_fu_237_p1;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        P2_d0 = trunc_ln121_fu_188_p1;
    end else begin
        P2_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state61))) begin
        P2_we0 = 1'b1;
    end else begin
        P2_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) | ((1'b1 == ap_CS_fsm_state2) & (icmp_ln117_fu_147_p2 == 1'd1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln117_fu_147_p2 == 1'd1))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        grp_fu_183_ap_start = 1'b1;
    end else begin
        grp_fu_183_ap_start = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        grp_fu_232_ap_start = 1'b1;
    end else begin
        grp_fu_232_ap_start = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state34)) begin
        grp_fu_301_ap_start = 1'b1;
    end else begin
        grp_fu_301_ap_start = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state49)) begin
        grp_fu_328_ap_start = 1'b1;
    end else begin
        grp_fu_328_ap_start = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state32)) begin
        v2_address0 = zext_ln119_30_fu_273_p1;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        v2_address0 = zext_ln119_20_fu_199_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        v2_address0 = zext_ln117_fu_138_p1;
    end else begin
        v2_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state2))) begin
        v2_ce0 = 1'b1;
    end else begin
        v2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state32)) begin
        v2_ce1 = 1'b1;
    end else begin
        v2_ce1 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln117_fu_147_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state30;
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state31;
        end
        ap_ST_fsm_state31 : begin
            ap_NS_fsm = ap_ST_fsm_state32;
        end
        ap_ST_fsm_state32 : begin
            ap_NS_fsm = ap_ST_fsm_state33;
        end
        ap_ST_fsm_state33 : begin
            ap_NS_fsm = ap_ST_fsm_state34;
        end
        ap_ST_fsm_state34 : begin
            ap_NS_fsm = ap_ST_fsm_state35;
        end
        ap_ST_fsm_state35 : begin
            ap_NS_fsm = ap_ST_fsm_state36;
        end
        ap_ST_fsm_state36 : begin
            ap_NS_fsm = ap_ST_fsm_state37;
        end
        ap_ST_fsm_state37 : begin
            ap_NS_fsm = ap_ST_fsm_state38;
        end
        ap_ST_fsm_state38 : begin
            ap_NS_fsm = ap_ST_fsm_state39;
        end
        ap_ST_fsm_state39 : begin
            ap_NS_fsm = ap_ST_fsm_state40;
        end
        ap_ST_fsm_state40 : begin
            ap_NS_fsm = ap_ST_fsm_state41;
        end
        ap_ST_fsm_state41 : begin
            ap_NS_fsm = ap_ST_fsm_state42;
        end
        ap_ST_fsm_state42 : begin
            ap_NS_fsm = ap_ST_fsm_state43;
        end
        ap_ST_fsm_state43 : begin
            ap_NS_fsm = ap_ST_fsm_state44;
        end
        ap_ST_fsm_state44 : begin
            ap_NS_fsm = ap_ST_fsm_state45;
        end
        ap_ST_fsm_state45 : begin
            ap_NS_fsm = ap_ST_fsm_state46;
        end
        ap_ST_fsm_state46 : begin
            ap_NS_fsm = ap_ST_fsm_state47;
        end
        ap_ST_fsm_state47 : begin
            ap_NS_fsm = ap_ST_fsm_state48;
        end
        ap_ST_fsm_state48 : begin
            ap_NS_fsm = ap_ST_fsm_state49;
        end
        ap_ST_fsm_state49 : begin
            ap_NS_fsm = ap_ST_fsm_state50;
        end
        ap_ST_fsm_state50 : begin
            ap_NS_fsm = ap_ST_fsm_state51;
        end
        ap_ST_fsm_state51 : begin
            ap_NS_fsm = ap_ST_fsm_state52;
        end
        ap_ST_fsm_state52 : begin
            ap_NS_fsm = ap_ST_fsm_state53;
        end
        ap_ST_fsm_state53 : begin
            ap_NS_fsm = ap_ST_fsm_state54;
        end
        ap_ST_fsm_state54 : begin
            ap_NS_fsm = ap_ST_fsm_state55;
        end
        ap_ST_fsm_state55 : begin
            ap_NS_fsm = ap_ST_fsm_state56;
        end
        ap_ST_fsm_state56 : begin
            ap_NS_fsm = ap_ST_fsm_state57;
        end
        ap_ST_fsm_state57 : begin
            ap_NS_fsm = ap_ST_fsm_state58;
        end
        ap_ST_fsm_state58 : begin
            ap_NS_fsm = ap_ST_fsm_state59;
        end
        ap_ST_fsm_state59 : begin
            ap_NS_fsm = ap_ST_fsm_state60;
        end
        ap_ST_fsm_state60 : begin
            ap_NS_fsm = ap_ST_fsm_state61;
        end
        ap_ST_fsm_state61 : begin
            ap_NS_fsm = ap_ST_fsm_state2;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln117_fu_153_p2 = (i_reg_126 + 6'd4);

assign add_ln119_2_fu_208_p2 = (zext_ln119_21_fu_204_p1 + v1);

assign add_ln119_4_fu_257_p2 = (zext_ln119_26_fu_253_p1 + v1);

assign add_ln119_6_fu_282_p2 = (zext_ln119_31_fu_278_p1 + v1);

assign add_ln119_fu_159_p2 = (zext_ln117_2_fu_143_p1 + v1);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state31 = ap_CS_fsm[32'd30];

assign ap_CS_fsm_state32 = ap_CS_fsm[32'd31];

assign ap_CS_fsm_state33 = ap_CS_fsm[32'd32];

assign ap_CS_fsm_state34 = ap_CS_fsm[32'd33];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state46 = ap_CS_fsm[32'd45];

assign ap_CS_fsm_state47 = ap_CS_fsm[32'd46];

assign ap_CS_fsm_state48 = ap_CS_fsm[32'd47];

assign ap_CS_fsm_state49 = ap_CS_fsm[32'd48];

assign ap_CS_fsm_state61 = ap_CS_fsm[32'd60];

assign grp_fu_183_p1 = 9'd31;

assign grp_fu_232_p1 = 9'd31;

assign grp_fu_301_p1 = 9'd31;

assign grp_fu_328_p1 = 9'd31;

assign icmp_ln117_fu_147_p2 = ((i_reg_126 == 6'd60) ? 1'b1 : 1'b0);

assign or_ln117_1_fu_242_p2 = (i_reg_126 | 6'd2);

assign or_ln117_2_fu_267_p2 = (i_reg_126 | 6'd3);

assign or_ln117_fu_193_p2 = (i_reg_126 | 6'd1);

assign tmp_4_fu_226_p2 = (zext_ln119_24_fu_222_p1 + zext_ln119_23_fu_218_p1);

assign tmp_5_fu_295_p2 = (zext_ln119_29_fu_291_p1 + zext_ln119_28_fu_287_p1);

assign tmp_6_fu_322_p2 = (zext_ln119_34_fu_319_p1 + zext_ln119_33_fu_315_p1);

assign tmp_fu_177_p2 = (zext_ln119_19_fu_173_p1 + zext_ln119_18_fu_169_p1);

assign trunc_ln121_4_fu_237_p1 = grp_fu_232_p2[7:0];

assign trunc_ln121_5_fu_306_p1 = grp_fu_301_p2[7:0];

assign trunc_ln121_6_fu_333_p1 = grp_fu_328_p2[7:0];

assign trunc_ln121_fu_188_p1 = grp_fu_183_p2[7:0];

assign v2_address1 = zext_ln119_25_fu_248_p1;

assign zext_ln117_2_fu_143_p1 = i_reg_126;

assign zext_ln117_fu_138_p1 = i_reg_126;

assign zext_ln119_18_fu_169_p1 = P2_q0;

assign zext_ln119_19_fu_173_p1 = v2_q0;

assign zext_ln119_20_fu_199_p1 = or_ln117_fu_193_p2;

assign zext_ln119_21_fu_204_p1 = or_ln117_fu_193_p2;

assign zext_ln119_22_fu_213_p1 = add_ln119_2_fu_208_p2;

assign zext_ln119_23_fu_218_p1 = P2_q0;

assign zext_ln119_24_fu_222_p1 = v2_q0;

assign zext_ln119_25_fu_248_p1 = or_ln117_1_fu_242_p2;

assign zext_ln119_26_fu_253_p1 = or_ln117_1_fu_242_p2;

assign zext_ln119_27_fu_262_p1 = add_ln119_4_fu_257_p2;

assign zext_ln119_28_fu_287_p1 = P2_q0;

assign zext_ln119_29_fu_291_p1 = v2_q1;

assign zext_ln119_30_fu_273_p1 = or_ln117_2_fu_267_p2;

assign zext_ln119_31_fu_278_p1 = or_ln117_2_fu_267_p2;

assign zext_ln119_32_fu_311_p1 = add_ln119_6_reg_394;

assign zext_ln119_33_fu_315_p1 = P2_q0;

assign zext_ln119_34_fu_319_p1 = v2_load_3_reg_409;

assign zext_ln119_fu_164_p1 = add_ln119_fu_159_p2;

endmodule //computeP2_add_vectors_2
