// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Version: 2020.2
// Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="hls_linear_combination_hls_linear_combination,hls_ip_2020_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020-clg484-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=6.912000,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=4604,HLS_SYN_LUT=4793,HLS_VERSION=2020_2}" *)

module hls_linear_combination (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        vecs,
        coeffs,
        len,
        out_r,
        out_r_ap_vld
);

parameter    ap_ST_fsm_state1 = 10'd1;
parameter    ap_ST_fsm_state2 = 10'd2;
parameter    ap_ST_fsm_state3 = 10'd4;
parameter    ap_ST_fsm_state4 = 10'd8;
parameter    ap_ST_fsm_state5 = 10'd16;
parameter    ap_ST_fsm_state6 = 10'd32;
parameter    ap_ST_fsm_state7 = 10'd64;
parameter    ap_ST_fsm_state8 = 10'd128;
parameter    ap_ST_fsm_pp2_stage0 = 10'd256;
parameter    ap_ST_fsm_state46 = 10'd512;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [7:0] vecs;
input  [7:0] coeffs;
input  [31:0] len;
output  [7:0] out_r;
output   out_r_ap_vld;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg out_r_ap_vld;

(* fsm_encoding = "none" *) reg   [9:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [5:0] i_1_reg_387;
wire    ap_block_state9_pp2_stage0_iter0;
wire    ap_block_state10_pp2_stage0_iter1;
wire    ap_block_state11_pp2_stage0_iter2;
wire    ap_block_state12_pp2_stage0_iter3;
wire    ap_block_state13_pp2_stage0_iter4;
wire    ap_block_state14_pp2_stage0_iter5;
wire    ap_block_state15_pp2_stage0_iter6;
wire    ap_block_state16_pp2_stage0_iter7;
wire    ap_block_state17_pp2_stage0_iter8;
wire    ap_block_state18_pp2_stage0_iter9;
wire    ap_block_state19_pp2_stage0_iter10;
wire    ap_block_state20_pp2_stage0_iter11;
wire    ap_block_state21_pp2_stage0_iter12;
wire    ap_block_state22_pp2_stage0_iter13;
wire    ap_block_state23_pp2_stage0_iter14;
wire    ap_block_state24_pp2_stage0_iter15;
wire    ap_block_state25_pp2_stage0_iter16;
wire    ap_block_state26_pp2_stage0_iter17;
wire    ap_block_state27_pp2_stage0_iter18;
wire    ap_block_state28_pp2_stage0_iter19;
wire    ap_block_state29_pp2_stage0_iter20;
wire    ap_block_state30_pp2_stage0_iter21;
wire    ap_block_state31_pp2_stage0_iter22;
wire    ap_block_state32_pp2_stage0_iter23;
wire    ap_block_state33_pp2_stage0_iter24;
wire    ap_block_state34_pp2_stage0_iter25;
wire    ap_block_state35_pp2_stage0_iter26;
wire    ap_block_state36_pp2_stage0_iter27;
wire    ap_block_state37_pp2_stage0_iter28;
wire    ap_block_state38_pp2_stage0_iter29;
wire    ap_block_state39_pp2_stage0_iter30;
wire    ap_block_state40_pp2_stage0_iter31;
wire    ap_block_state41_pp2_stage0_iter32;
wire    ap_block_state42_pp2_stage0_iter33;
wire    ap_block_state43_pp2_stage0_iter34;
wire    ap_block_state44_pp2_stage0_iter35;
wire    ap_block_state45_pp2_stage0_iter36;
wire    ap_block_pp2_stage0_11001;
wire   [5:0] empty_8_fu_436_p2;
wire    ap_CS_fsm_state2;
wire   [15:0] mul_ln10_fu_770_p2;
reg   [15:0] mul_ln10_reg_1848;
wire    ap_CS_fsm_state3;
wire    ap_CS_fsm_state4;
wire   [31:0] grp_fu_779_p2;
reg   [31:0] mul_ln10_1_reg_1858;
wire    ap_CS_fsm_state5;
wire   [31:0] accumulators_0_0_fu_964_p2;
reg   [31:0] accumulators_0_0_reg_1922;
wire    ap_CS_fsm_state6;
wire   [31:0] accumulators_0_1_fu_969_p2;
reg   [31:0] accumulators_0_1_reg_1927;
wire   [31:0] accumulators_0_2_fu_974_p2;
reg   [31:0] accumulators_0_2_reg_1932;
wire   [31:0] accumulators_0_3_fu_979_p2;
reg   [31:0] accumulators_0_3_reg_1937;
wire   [31:0] accumulators_1_0_fu_984_p2;
reg   [31:0] accumulators_1_0_reg_1942;
wire   [31:0] accumulators_1_1_fu_989_p2;
reg   [31:0] accumulators_1_1_reg_1947;
wire   [31:0] accumulators_1_2_fu_994_p2;
reg   [31:0] accumulators_1_2_reg_1952;
wire   [31:0] accumulators_1_3_fu_999_p2;
reg   [31:0] accumulators_1_3_reg_1957;
wire   [31:0] accumulators_2_0_fu_1004_p2;
reg   [31:0] accumulators_2_0_reg_1962;
wire   [31:0] accumulators_2_1_fu_1009_p2;
reg   [31:0] accumulators_2_1_reg_1967;
wire   [31:0] accumulators_2_2_fu_1014_p2;
reg   [31:0] accumulators_2_2_reg_1972;
wire   [31:0] accumulators_2_3_fu_1019_p2;
reg   [31:0] accumulators_2_3_reg_1977;
wire   [31:0] accumulators_3_0_fu_1024_p2;
reg   [31:0] accumulators_3_0_reg_1982;
wire   [31:0] accumulators_3_1_fu_1029_p2;
reg   [31:0] accumulators_3_1_reg_1987;
wire   [31:0] accumulators_3_2_fu_1034_p2;
reg   [31:0] accumulators_3_2_reg_1992;
wire   [31:0] accumulators_3_3_fu_1039_p2;
reg   [31:0] accumulators_3_3_reg_1997;
wire   [31:0] accumulators_4_0_fu_1044_p2;
reg   [31:0] accumulators_4_0_reg_2002;
wire   [31:0] accumulators_4_1_fu_1049_p2;
reg   [31:0] accumulators_4_1_reg_2007;
wire   [31:0] accumulators_4_2_fu_1054_p2;
reg   [31:0] accumulators_4_2_reg_2012;
wire   [31:0] accumulators_4_3_fu_1059_p2;
reg   [31:0] accumulators_4_3_reg_2017;
wire   [31:0] accumulators_5_0_fu_1064_p2;
reg   [31:0] accumulators_5_0_reg_2022;
wire   [31:0] accumulators_5_1_fu_1069_p2;
reg   [31:0] accumulators_5_1_reg_2027;
wire   [31:0] accumulators_5_2_fu_1074_p2;
reg   [31:0] accumulators_5_2_reg_2032;
wire   [31:0] accumulators_5_3_fu_1079_p2;
reg   [31:0] accumulators_5_3_reg_2037;
wire   [31:0] accumulators_6_0_fu_1084_p2;
reg   [31:0] accumulators_6_0_reg_2042;
wire   [31:0] accumulators_6_1_fu_1089_p2;
reg   [31:0] accumulators_6_1_reg_2047;
wire   [31:0] accumulators_6_2_fu_1094_p2;
reg   [31:0] accumulators_6_2_reg_2052;
wire   [31:0] accumulators_6_3_fu_1099_p2;
reg   [31:0] accumulators_6_3_reg_2057;
wire   [31:0] accumulators_7_0_fu_1104_p2;
reg   [31:0] accumulators_7_0_reg_2062;
wire   [31:0] accumulators_7_1_fu_1109_p2;
reg   [31:0] accumulators_7_1_reg_2067;
wire   [31:0] accumulators_7_2_fu_1114_p2;
reg   [31:0] accumulators_7_2_reg_2072;
wire   [31:0] accumulators_7_3_fu_1119_p2;
reg   [31:0] accumulators_7_3_reg_2077;
wire   [31:0] accumulators_8_0_fu_1124_p2;
reg   [31:0] accumulators_8_0_reg_2082;
wire   [31:0] accumulators_8_1_fu_1129_p2;
reg   [31:0] accumulators_8_1_reg_2087;
wire   [31:0] accumulators_8_2_fu_1134_p2;
reg   [31:0] accumulators_8_2_reg_2092;
wire   [31:0] accumulators_8_3_fu_1139_p2;
reg   [31:0] accumulators_8_3_reg_2097;
wire   [31:0] accumulators_9_0_fu_1144_p2;
reg   [31:0] accumulators_9_0_reg_2102;
wire   [31:0] accumulators_9_1_fu_1149_p2;
reg   [31:0] accumulators_9_1_reg_2107;
wire   [31:0] accumulators_9_2_fu_1154_p2;
reg   [31:0] accumulators_9_2_reg_2112;
wire   [31:0] accumulators_9_3_fu_1159_p2;
reg   [31:0] accumulators_9_3_reg_2117;
wire   [31:0] accumulators_10_0_fu_1164_p2;
reg   [31:0] accumulators_10_0_reg_2122;
wire   [31:0] accumulators_10_1_fu_1169_p2;
reg   [31:0] accumulators_10_1_reg_2127;
wire   [31:0] accumulators_10_2_fu_1174_p2;
reg   [31:0] accumulators_10_2_reg_2132;
wire   [31:0] accumulators_10_3_fu_1179_p2;
reg   [31:0] accumulators_10_3_reg_2137;
wire   [31:0] accumulators_11_0_fu_1184_p2;
reg   [31:0] accumulators_11_0_reg_2142;
wire   [31:0] accumulators_11_1_fu_1189_p2;
reg   [31:0] accumulators_11_1_reg_2147;
wire   [31:0] accumulators_11_2_fu_1194_p2;
reg   [31:0] accumulators_11_2_reg_2152;
wire   [31:0] accumulators_11_3_fu_1199_p2;
reg   [31:0] accumulators_11_3_reg_2157;
wire   [31:0] accumulators_12_0_fu_1204_p2;
reg   [31:0] accumulators_12_0_reg_2162;
wire   [31:0] accumulators_12_1_fu_1209_p2;
reg   [31:0] accumulators_12_1_reg_2167;
wire   [31:0] accumulators_12_2_fu_1214_p2;
reg   [31:0] accumulators_12_2_reg_2172;
wire   [31:0] accumulators_13_0_fu_1219_p2;
reg   [31:0] accumulators_13_0_reg_2177;
wire   [31:0] accumulators_13_1_fu_1224_p2;
reg   [31:0] accumulators_13_1_reg_2182;
wire   [31:0] accumulators_13_2_fu_1229_p2;
reg   [31:0] accumulators_13_2_reg_2187;
wire   [31:0] accumulators_14_0_fu_1234_p2;
reg   [31:0] accumulators_14_0_reg_2192;
wire   [31:0] accumulators_14_1_fu_1239_p2;
reg   [31:0] accumulators_14_1_reg_2197;
wire   [31:0] accumulators_14_2_fu_1244_p2;
reg   [31:0] accumulators_14_2_reg_2202;
wire   [31:0] accumulators_15_0_fu_1249_p2;
reg   [31:0] accumulators_15_0_reg_2207;
wire   [31:0] accumulators_15_1_fu_1254_p2;
reg   [31:0] accumulators_15_1_reg_2212;
wire   [31:0] accumulators_15_2_fu_1259_p2;
reg   [31:0] accumulators_15_2_reg_2217;
wire   [31:0] add_ln10_fu_1264_p2;
wire    ap_CS_fsm_state7;
wire   [5:0] add_ln17_fu_1275_p2;
wire    ap_CS_fsm_pp2_stage0;
reg    ap_enable_reg_pp2_iter0;
wire   [0:0] icmp_ln17_fu_1281_p2;
reg   [0:0] icmp_ln17_reg_2235;
reg   [0:0] icmp_ln17_reg_2235_pp2_iter1_reg;
reg   [0:0] icmp_ln17_reg_2235_pp2_iter2_reg;
reg   [0:0] icmp_ln17_reg_2235_pp2_iter3_reg;
reg   [0:0] icmp_ln17_reg_2235_pp2_iter4_reg;
reg   [0:0] icmp_ln17_reg_2235_pp2_iter5_reg;
reg   [0:0] icmp_ln17_reg_2235_pp2_iter6_reg;
reg   [0:0] icmp_ln17_reg_2235_pp2_iter7_reg;
reg   [0:0] icmp_ln17_reg_2235_pp2_iter8_reg;
reg   [0:0] icmp_ln17_reg_2235_pp2_iter9_reg;
reg   [0:0] icmp_ln17_reg_2235_pp2_iter10_reg;
reg   [0:0] icmp_ln17_reg_2235_pp2_iter11_reg;
reg   [0:0] icmp_ln17_reg_2235_pp2_iter12_reg;
reg   [0:0] icmp_ln17_reg_2235_pp2_iter13_reg;
reg   [0:0] icmp_ln17_reg_2235_pp2_iter14_reg;
reg   [0:0] icmp_ln17_reg_2235_pp2_iter15_reg;
reg   [0:0] icmp_ln17_reg_2235_pp2_iter16_reg;
reg   [0:0] icmp_ln17_reg_2235_pp2_iter17_reg;
reg   [0:0] icmp_ln17_reg_2235_pp2_iter18_reg;
reg   [0:0] icmp_ln17_reg_2235_pp2_iter19_reg;
reg   [0:0] icmp_ln17_reg_2235_pp2_iter20_reg;
reg   [0:0] icmp_ln17_reg_2235_pp2_iter21_reg;
reg   [0:0] icmp_ln17_reg_2235_pp2_iter22_reg;
reg   [0:0] icmp_ln17_reg_2235_pp2_iter23_reg;
reg   [0:0] icmp_ln17_reg_2235_pp2_iter24_reg;
reg   [0:0] icmp_ln17_reg_2235_pp2_iter25_reg;
reg   [0:0] icmp_ln17_reg_2235_pp2_iter26_reg;
reg   [0:0] icmp_ln17_reg_2235_pp2_iter27_reg;
reg   [0:0] icmp_ln17_reg_2235_pp2_iter28_reg;
reg   [0:0] icmp_ln17_reg_2235_pp2_iter29_reg;
reg   [0:0] icmp_ln17_reg_2235_pp2_iter30_reg;
reg   [0:0] icmp_ln17_reg_2235_pp2_iter31_reg;
reg   [0:0] icmp_ln17_reg_2235_pp2_iter32_reg;
reg   [0:0] icmp_ln17_reg_2235_pp2_iter33_reg;
reg   [0:0] icmp_ln17_reg_2235_pp2_iter34_reg;
reg   [0:0] icmp_ln17_reg_2235_pp2_iter35_reg;
wire   [3:0] trunc_ln23_fu_1287_p1;
wire   [31:0] tmp_14_fu_1301_p5;
wire   [31:0] tmp_13_fu_1310_p5;
wire   [31:0] tmp_12_fu_1319_p5;
wire   [31:0] tmp_11_fu_1328_p6;
wire   [31:0] tmp_10_fu_1338_p6;
wire   [31:0] tmp_s_fu_1348_p6;
wire   [31:0] tmp_9_fu_1358_p6;
wire   [31:0] tmp_8_fu_1368_p6;
wire   [31:0] tmp_7_fu_1378_p6;
wire   [31:0] tmp_6_fu_1388_p6;
wire   [31:0] tmp_5_fu_1398_p6;
wire   [31:0] tmp_4_fu_1408_p6;
wire   [31:0] tmp_3_fu_1418_p6;
wire   [31:0] tmp_2_fu_1428_p6;
wire   [31:0] tmp_1_fu_1438_p6;
wire   [31:0] tmp_fu_1448_p5;
wire    ap_CS_fsm_state8;
wire    ap_block_pp2_stage0_subdone;
reg    ap_condition_pp2_exit_iter0_state9;
reg    ap_enable_reg_pp2_iter1;
reg    ap_enable_reg_pp2_iter2;
reg    ap_enable_reg_pp2_iter3;
reg    ap_enable_reg_pp2_iter4;
reg    ap_enable_reg_pp2_iter5;
reg    ap_enable_reg_pp2_iter6;
reg    ap_enable_reg_pp2_iter7;
reg    ap_enable_reg_pp2_iter8;
reg    ap_enable_reg_pp2_iter9;
reg    ap_enable_reg_pp2_iter10;
reg    ap_enable_reg_pp2_iter11;
reg    ap_enable_reg_pp2_iter12;
reg    ap_enable_reg_pp2_iter13;
reg    ap_enable_reg_pp2_iter14;
reg    ap_enable_reg_pp2_iter15;
reg    ap_enable_reg_pp2_iter16;
reg    ap_enable_reg_pp2_iter17;
reg    ap_enable_reg_pp2_iter18;
reg    ap_enable_reg_pp2_iter19;
reg    ap_enable_reg_pp2_iter20;
reg    ap_enable_reg_pp2_iter21;
reg    ap_enable_reg_pp2_iter22;
reg    ap_enable_reg_pp2_iter23;
reg    ap_enable_reg_pp2_iter24;
reg    ap_enable_reg_pp2_iter25;
reg    ap_enable_reg_pp2_iter26;
reg    ap_enable_reg_pp2_iter27;
reg    ap_enable_reg_pp2_iter28;
reg    ap_enable_reg_pp2_iter29;
reg    ap_enable_reg_pp2_iter30;
reg    ap_enable_reg_pp2_iter31;
reg    ap_enable_reg_pp2_iter32;
reg    ap_enable_reg_pp2_iter33;
reg    ap_enable_reg_pp2_iter34;
reg    ap_enable_reg_pp2_iter35;
reg    ap_enable_reg_pp2_iter36;
reg   [5:0] empty_reg_365;
wire   [0:0] exitcond136_fu_442_p2;
reg   [31:0] i_reg_376;
wire   [0:0] icmp_ln10_fu_1270_p2;
wire   [31:0] ap_phi_reg_pp2_iter0_phi_ln23_reg_398;
reg   [31:0] ap_phi_reg_pp2_iter1_phi_ln23_reg_398;
wire   [31:0] accumulators_0_0_0_fu_100;
wire   [3:0] empty_10_fu_448_p1;
wire   [1:0] newIndex1055_t_fu_452_p4;
wire   [31:0] accumulators_0_1_0_fu_104;
wire   [31:0] accumulators_0_2_0_fu_108;
wire   [31:0] accumulators_0_3_0_fu_112;
wire   [31:0] accumulators_1_0_0_fu_116;
wire   [31:0] accumulators_1_1_0_fu_120;
wire   [31:0] accumulators_1_2_0_fu_124;
wire   [31:0] accumulators_1_3_0_fu_128;
wire   [31:0] accumulators_2_0_0_fu_132;
wire   [31:0] accumulators_2_1_0_fu_136;
wire   [31:0] accumulators_2_2_0_fu_140;
wire   [31:0] accumulators_2_3_0_fu_144;
wire   [31:0] accumulators_3_0_0_fu_148;
wire   [31:0] accumulators_3_1_0_fu_152;
wire   [31:0] accumulators_3_2_0_fu_156;
wire   [31:0] accumulators_3_3_0_fu_160;
wire   [31:0] accumulators_4_0_0_fu_164;
wire   [31:0] accumulators_4_1_0_fu_168;
wire   [31:0] accumulators_4_2_0_fu_172;
wire   [31:0] accumulators_4_3_0_fu_176;
wire   [31:0] accumulators_5_0_0_fu_180;
wire   [31:0] accumulators_5_1_0_fu_184;
wire   [31:0] accumulators_5_2_0_fu_188;
wire   [31:0] accumulators_5_3_0_fu_192;
wire   [31:0] accumulators_6_0_0_fu_196;
wire   [31:0] accumulators_6_1_0_fu_200;
wire   [31:0] accumulators_6_2_0_fu_204;
wire   [31:0] accumulators_6_3_0_fu_208;
wire   [31:0] accumulators_7_0_0_fu_212;
wire   [31:0] accumulators_7_1_0_fu_216;
wire   [31:0] accumulators_7_2_0_fu_220;
wire   [31:0] accumulators_7_3_0_fu_224;
wire   [31:0] accumulators_8_0_0_fu_228;
wire   [31:0] accumulators_8_1_0_fu_232;
wire   [31:0] accumulators_8_2_0_fu_236;
wire   [31:0] accumulators_8_3_0_fu_240;
wire   [31:0] accumulators_9_0_0_fu_244;
wire   [31:0] accumulators_9_1_0_fu_248;
wire   [31:0] accumulators_9_2_0_fu_252;
wire   [31:0] accumulators_9_3_0_fu_256;
wire   [31:0] accumulators_10_0_0_fu_260;
wire   [31:0] accumulators_10_1_0_fu_264;
wire   [31:0] accumulators_10_2_0_fu_268;
wire   [31:0] accumulators_10_3_0_fu_272;
wire   [31:0] accumulators_11_0_0_fu_276;
wire   [31:0] accumulators_11_1_0_fu_280;
wire   [31:0] accumulators_11_2_0_fu_284;
wire   [31:0] accumulators_11_3_0_fu_288;
wire   [31:0] accumulators_12_0_0_fu_292;
wire   [31:0] accumulators_12_1_0_fu_296;
wire   [31:0] accumulators_12_2_0_fu_300;
wire   [31:0] accumulators_13_0_0_fu_304;
wire   [31:0] accumulators_13_1_0_fu_308;
wire   [31:0] accumulators_13_2_0_fu_312;
wire   [31:0] accumulators_14_0_0_fu_316;
wire   [31:0] accumulators_14_1_0_fu_320;
wire   [31:0] accumulators_14_2_0_fu_324;
wire   [31:0] accumulators_15_0_0_fu_328;
wire   [31:0] accumulators_15_1_0_fu_332;
wire   [31:0] accumulators_15_2_0_fu_336;
wire    ap_block_pp2_stage0_01001;
wire   [7:0] mul_ln10_fu_770_p0;
wire   [7:0] mul_ln10_fu_770_p1;
wire   [15:0] grp_fu_779_p0;
wire  signed [31:0] icmp_ln10_fu_1270_p1;
wire    ap_block_pp2_stage0;
wire   [1:0] tmp_14_fu_1301_p4;
wire   [1:0] tmp_13_fu_1310_p4;
wire   [1:0] tmp_12_fu_1319_p4;
wire   [1:0] tmp_11_fu_1328_p5;
wire   [1:0] tmp_10_fu_1338_p5;
wire   [1:0] tmp_s_fu_1348_p5;
wire   [1:0] tmp_9_fu_1358_p5;
wire   [1:0] tmp_8_fu_1368_p5;
wire   [1:0] tmp_7_fu_1378_p5;
wire   [1:0] tmp_6_fu_1388_p5;
wire   [1:0] tmp_5_fu_1398_p5;
wire   [1:0] tmp_4_fu_1408_p5;
wire   [1:0] tmp_3_fu_1418_p5;
wire   [1:0] tmp_2_fu_1428_p5;
wire   [1:0] tmp_1_fu_1438_p5;
wire   [1:0] tmp_fu_1448_p4;
wire   [5:0] grp_fu_1457_p1;
wire   [7:0] grp_fu_1457_p2;
wire    ap_CS_fsm_state46;
reg   [9:0] ap_NS_fsm;
reg    ap_idle_pp2;
wire    ap_enable_pp2;
wire   [31:0] grp_fu_779_p00;
wire   [15:0] mul_ln10_fu_770_p00;
wire   [15:0] mul_ln10_fu_770_p10;
reg    ap_condition_286;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 10'd1;
#0 ap_enable_reg_pp2_iter0 = 1'b0;
#0 ap_enable_reg_pp2_iter1 = 1'b0;
#0 ap_enable_reg_pp2_iter2 = 1'b0;
#0 ap_enable_reg_pp2_iter3 = 1'b0;
#0 ap_enable_reg_pp2_iter4 = 1'b0;
#0 ap_enable_reg_pp2_iter5 = 1'b0;
#0 ap_enable_reg_pp2_iter6 = 1'b0;
#0 ap_enable_reg_pp2_iter7 = 1'b0;
#0 ap_enable_reg_pp2_iter8 = 1'b0;
#0 ap_enable_reg_pp2_iter9 = 1'b0;
#0 ap_enable_reg_pp2_iter10 = 1'b0;
#0 ap_enable_reg_pp2_iter11 = 1'b0;
#0 ap_enable_reg_pp2_iter12 = 1'b0;
#0 ap_enable_reg_pp2_iter13 = 1'b0;
#0 ap_enable_reg_pp2_iter14 = 1'b0;
#0 ap_enable_reg_pp2_iter15 = 1'b0;
#0 ap_enable_reg_pp2_iter16 = 1'b0;
#0 ap_enable_reg_pp2_iter17 = 1'b0;
#0 ap_enable_reg_pp2_iter18 = 1'b0;
#0 ap_enable_reg_pp2_iter19 = 1'b0;
#0 ap_enable_reg_pp2_iter20 = 1'b0;
#0 ap_enable_reg_pp2_iter21 = 1'b0;
#0 ap_enable_reg_pp2_iter22 = 1'b0;
#0 ap_enable_reg_pp2_iter23 = 1'b0;
#0 ap_enable_reg_pp2_iter24 = 1'b0;
#0 ap_enable_reg_pp2_iter25 = 1'b0;
#0 ap_enable_reg_pp2_iter26 = 1'b0;
#0 ap_enable_reg_pp2_iter27 = 1'b0;
#0 ap_enable_reg_pp2_iter28 = 1'b0;
#0 ap_enable_reg_pp2_iter29 = 1'b0;
#0 ap_enable_reg_pp2_iter30 = 1'b0;
#0 ap_enable_reg_pp2_iter31 = 1'b0;
#0 ap_enable_reg_pp2_iter32 = 1'b0;
#0 ap_enable_reg_pp2_iter33 = 1'b0;
#0 ap_enable_reg_pp2_iter34 = 1'b0;
#0 ap_enable_reg_pp2_iter35 = 1'b0;
#0 ap_enable_reg_pp2_iter36 = 1'b0;
end

hls_linear_combination_mul_8ns_8ns_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 16 ))
mul_8ns_8ns_16_1_1_U1(
    .din0(mul_ln10_fu_770_p0),
    .din1(mul_ln10_fu_770_p1),
    .dout(mul_ln10_fu_770_p2)
);

hls_linear_combination_mul_16ns_32s_32_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mul_16ns_32s_32_2_1_U2(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_779_p0),
    .din1(len),
    .ce(1'b1),
    .dout(grp_fu_779_p2)
);

hls_linear_combination_mux_32_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
mux_32_32_1_1_U3(
    .din0(accumulators_14_0_reg_2192),
    .din1(accumulators_14_1_reg_2197),
    .din2(accumulators_14_2_reg_2202),
    .din3(tmp_14_fu_1301_p4),
    .dout(tmp_14_fu_1301_p5)
);

hls_linear_combination_mux_32_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
mux_32_32_1_1_U4(
    .din0(accumulators_13_0_reg_2177),
    .din1(accumulators_13_1_reg_2182),
    .din2(accumulators_13_2_reg_2187),
    .din3(tmp_13_fu_1310_p4),
    .dout(tmp_13_fu_1310_p5)
);

hls_linear_combination_mux_32_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
mux_32_32_1_1_U5(
    .din0(accumulators_12_0_reg_2162),
    .din1(accumulators_12_1_reg_2167),
    .din2(accumulators_12_2_reg_2172),
    .din3(tmp_12_fu_1319_p4),
    .dout(tmp_12_fu_1319_p5)
);

hls_linear_combination_mux_42_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
mux_42_32_1_1_U6(
    .din0(accumulators_11_0_reg_2142),
    .din1(accumulators_11_1_reg_2147),
    .din2(accumulators_11_2_reg_2152),
    .din3(accumulators_11_3_reg_2157),
    .din4(tmp_11_fu_1328_p5),
    .dout(tmp_11_fu_1328_p6)
);

hls_linear_combination_mux_42_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
mux_42_32_1_1_U7(
    .din0(accumulators_10_0_reg_2122),
    .din1(accumulators_10_1_reg_2127),
    .din2(accumulators_10_2_reg_2132),
    .din3(accumulators_10_3_reg_2137),
    .din4(tmp_10_fu_1338_p5),
    .dout(tmp_10_fu_1338_p6)
);

hls_linear_combination_mux_42_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
mux_42_32_1_1_U8(
    .din0(accumulators_9_0_reg_2102),
    .din1(accumulators_9_1_reg_2107),
    .din2(accumulators_9_2_reg_2112),
    .din3(accumulators_9_3_reg_2117),
    .din4(tmp_s_fu_1348_p5),
    .dout(tmp_s_fu_1348_p6)
);

hls_linear_combination_mux_42_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
mux_42_32_1_1_U9(
    .din0(accumulators_8_0_reg_2082),
    .din1(accumulators_8_1_reg_2087),
    .din2(accumulators_8_2_reg_2092),
    .din3(accumulators_8_3_reg_2097),
    .din4(tmp_9_fu_1358_p5),
    .dout(tmp_9_fu_1358_p6)
);

hls_linear_combination_mux_42_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
mux_42_32_1_1_U10(
    .din0(accumulators_7_0_reg_2062),
    .din1(accumulators_7_1_reg_2067),
    .din2(accumulators_7_2_reg_2072),
    .din3(accumulators_7_3_reg_2077),
    .din4(tmp_8_fu_1368_p5),
    .dout(tmp_8_fu_1368_p6)
);

hls_linear_combination_mux_42_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
mux_42_32_1_1_U11(
    .din0(accumulators_6_0_reg_2042),
    .din1(accumulators_6_1_reg_2047),
    .din2(accumulators_6_2_reg_2052),
    .din3(accumulators_6_3_reg_2057),
    .din4(tmp_7_fu_1378_p5),
    .dout(tmp_7_fu_1378_p6)
);

hls_linear_combination_mux_42_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
mux_42_32_1_1_U12(
    .din0(accumulators_5_0_reg_2022),
    .din1(accumulators_5_1_reg_2027),
    .din2(accumulators_5_2_reg_2032),
    .din3(accumulators_5_3_reg_2037),
    .din4(tmp_6_fu_1388_p5),
    .dout(tmp_6_fu_1388_p6)
);

hls_linear_combination_mux_42_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
mux_42_32_1_1_U13(
    .din0(accumulators_4_0_reg_2002),
    .din1(accumulators_4_1_reg_2007),
    .din2(accumulators_4_2_reg_2012),
    .din3(accumulators_4_3_reg_2017),
    .din4(tmp_5_fu_1398_p5),
    .dout(tmp_5_fu_1398_p6)
);

hls_linear_combination_mux_42_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
mux_42_32_1_1_U14(
    .din0(accumulators_3_0_reg_1982),
    .din1(accumulators_3_1_reg_1987),
    .din2(accumulators_3_2_reg_1992),
    .din3(accumulators_3_3_reg_1997),
    .din4(tmp_4_fu_1408_p5),
    .dout(tmp_4_fu_1408_p6)
);

hls_linear_combination_mux_42_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
mux_42_32_1_1_U15(
    .din0(accumulators_2_0_reg_1962),
    .din1(accumulators_2_1_reg_1967),
    .din2(accumulators_2_2_reg_1972),
    .din3(accumulators_2_3_reg_1977),
    .din4(tmp_3_fu_1418_p5),
    .dout(tmp_3_fu_1418_p6)
);

hls_linear_combination_mux_42_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
mux_42_32_1_1_U16(
    .din0(accumulators_1_0_reg_1942),
    .din1(accumulators_1_1_reg_1947),
    .din2(accumulators_1_2_reg_1952),
    .din3(accumulators_1_3_reg_1957),
    .din4(tmp_2_fu_1428_p5),
    .dout(tmp_2_fu_1428_p6)
);

hls_linear_combination_mux_42_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
mux_42_32_1_1_U17(
    .din0(accumulators_0_0_reg_1922),
    .din1(accumulators_0_1_reg_1927),
    .din2(accumulators_0_2_reg_1932),
    .din3(accumulators_0_3_reg_1937),
    .din4(tmp_1_fu_1438_p5),
    .dout(tmp_1_fu_1438_p6)
);

hls_linear_combination_mux_32_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
mux_32_32_1_1_U18(
    .din0(accumulators_15_0_reg_2207),
    .din1(accumulators_15_1_reg_2212),
    .din2(accumulators_15_2_reg_2217),
    .din3(tmp_fu_1448_p4),
    .dout(tmp_fu_1448_p5)
);

hls_linear_combination_urem_32ns_6ns_8_36_1 #(
    .ID( 1 ),
    .NUM_STAGE( 36 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 6 ),
    .dout_WIDTH( 8 ))
urem_32ns_6ns_8_36_1_U19(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(ap_phi_reg_pp2_iter1_phi_ln23_reg_398),
    .din1(grp_fu_1457_p1),
    .ce(1'b1),
    .dout(grp_fu_1457_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp2_stage0_subdone) & (1'b1 == ap_condition_pp2_exit_iter0_state9) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
            ap_enable_reg_pp2_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state8)) begin
            ap_enable_reg_pp2_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp2_exit_iter0_state9)) begin
                ap_enable_reg_pp2_iter1 <= (1'b1 ^ ap_condition_pp2_exit_iter0_state9);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp2_iter1 <= ap_enable_reg_pp2_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter10 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter10 <= ap_enable_reg_pp2_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter11 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter11 <= ap_enable_reg_pp2_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter12 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter12 <= ap_enable_reg_pp2_iter11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter13 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter13 <= ap_enable_reg_pp2_iter12;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter14 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter14 <= ap_enable_reg_pp2_iter13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter15 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter15 <= ap_enable_reg_pp2_iter14;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter16 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter16 <= ap_enable_reg_pp2_iter15;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter17 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter17 <= ap_enable_reg_pp2_iter16;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter18 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter18 <= ap_enable_reg_pp2_iter17;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter19 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter19 <= ap_enable_reg_pp2_iter18;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter2 <= ap_enable_reg_pp2_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter20 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter20 <= ap_enable_reg_pp2_iter19;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter21 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter21 <= ap_enable_reg_pp2_iter20;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter22 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter22 <= ap_enable_reg_pp2_iter21;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter23 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter23 <= ap_enable_reg_pp2_iter22;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter24 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter24 <= ap_enable_reg_pp2_iter23;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter25 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter25 <= ap_enable_reg_pp2_iter24;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter26 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter26 <= ap_enable_reg_pp2_iter25;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter27 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter27 <= ap_enable_reg_pp2_iter26;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter28 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter28 <= ap_enable_reg_pp2_iter27;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter29 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter29 <= ap_enable_reg_pp2_iter28;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter3 <= ap_enable_reg_pp2_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter30 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter30 <= ap_enable_reg_pp2_iter29;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter31 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter31 <= ap_enable_reg_pp2_iter30;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter32 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter32 <= ap_enable_reg_pp2_iter31;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter33 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter33 <= ap_enable_reg_pp2_iter32;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter34 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter34 <= ap_enable_reg_pp2_iter33;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter35 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter35 <= ap_enable_reg_pp2_iter34;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter36 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter36 <= ap_enable_reg_pp2_iter35;
        end else if ((1'b1 == ap_CS_fsm_state8)) begin
            ap_enable_reg_pp2_iter36 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter4 <= ap_enable_reg_pp2_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter5 <= ap_enable_reg_pp2_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter6 <= ap_enable_reg_pp2_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter7 <= ap_enable_reg_pp2_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter8 <= ap_enable_reg_pp2_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter9 <= ap_enable_reg_pp2_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_286)) begin
        if (((trunc_ln23_fu_1287_p1 == 4'd15) & (icmp_ln17_fu_1281_p2 == 1'd0))) begin
            ap_phi_reg_pp2_iter1_phi_ln23_reg_398 <= tmp_fu_1448_p5;
        end else if (((trunc_ln23_fu_1287_p1 == 4'd14) & (icmp_ln17_fu_1281_p2 == 1'd0))) begin
            ap_phi_reg_pp2_iter1_phi_ln23_reg_398 <= tmp_14_fu_1301_p5;
        end else if (((trunc_ln23_fu_1287_p1 == 4'd13) & (icmp_ln17_fu_1281_p2 == 1'd0))) begin
            ap_phi_reg_pp2_iter1_phi_ln23_reg_398 <= tmp_13_fu_1310_p5;
        end else if (((trunc_ln23_fu_1287_p1 == 4'd12) & (icmp_ln17_fu_1281_p2 == 1'd0))) begin
            ap_phi_reg_pp2_iter1_phi_ln23_reg_398 <= tmp_12_fu_1319_p5;
        end else if (((trunc_ln23_fu_1287_p1 == 4'd11) & (icmp_ln17_fu_1281_p2 == 1'd0))) begin
            ap_phi_reg_pp2_iter1_phi_ln23_reg_398 <= tmp_11_fu_1328_p6;
        end else if (((trunc_ln23_fu_1287_p1 == 4'd10) & (icmp_ln17_fu_1281_p2 == 1'd0))) begin
            ap_phi_reg_pp2_iter1_phi_ln23_reg_398 <= tmp_10_fu_1338_p6;
        end else if (((trunc_ln23_fu_1287_p1 == 4'd9) & (icmp_ln17_fu_1281_p2 == 1'd0))) begin
            ap_phi_reg_pp2_iter1_phi_ln23_reg_398 <= tmp_s_fu_1348_p6;
        end else if (((trunc_ln23_fu_1287_p1 == 4'd8) & (icmp_ln17_fu_1281_p2 == 1'd0))) begin
            ap_phi_reg_pp2_iter1_phi_ln23_reg_398 <= tmp_9_fu_1358_p6;
        end else if (((trunc_ln23_fu_1287_p1 == 4'd7) & (icmp_ln17_fu_1281_p2 == 1'd0))) begin
            ap_phi_reg_pp2_iter1_phi_ln23_reg_398 <= tmp_8_fu_1368_p6;
        end else if (((trunc_ln23_fu_1287_p1 == 4'd6) & (icmp_ln17_fu_1281_p2 == 1'd0))) begin
            ap_phi_reg_pp2_iter1_phi_ln23_reg_398 <= tmp_7_fu_1378_p6;
        end else if (((trunc_ln23_fu_1287_p1 == 4'd5) & (icmp_ln17_fu_1281_p2 == 1'd0))) begin
            ap_phi_reg_pp2_iter1_phi_ln23_reg_398 <= tmp_6_fu_1388_p6;
        end else if (((trunc_ln23_fu_1287_p1 == 4'd4) & (icmp_ln17_fu_1281_p2 == 1'd0))) begin
            ap_phi_reg_pp2_iter1_phi_ln23_reg_398 <= tmp_5_fu_1398_p6;
        end else if (((trunc_ln23_fu_1287_p1 == 4'd3) & (icmp_ln17_fu_1281_p2 == 1'd0))) begin
            ap_phi_reg_pp2_iter1_phi_ln23_reg_398 <= tmp_4_fu_1408_p6;
        end else if (((trunc_ln23_fu_1287_p1 == 4'd2) & (icmp_ln17_fu_1281_p2 == 1'd0))) begin
            ap_phi_reg_pp2_iter1_phi_ln23_reg_398 <= tmp_3_fu_1418_p6;
        end else if (((trunc_ln23_fu_1287_p1 == 4'd1) & (icmp_ln17_fu_1281_p2 == 1'd0))) begin
            ap_phi_reg_pp2_iter1_phi_ln23_reg_398 <= tmp_2_fu_1428_p6;
        end else if (((trunc_ln23_fu_1287_p1 == 4'd0) & (icmp_ln17_fu_1281_p2 == 1'd0))) begin
            ap_phi_reg_pp2_iter1_phi_ln23_reg_398 <= tmp_1_fu_1438_p6;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp2_iter1_phi_ln23_reg_398 <= ap_phi_reg_pp2_iter0_phi_ln23_reg_398;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond136_fu_442_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        empty_reg_365 <= empty_8_fu_436_p2;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        empty_reg_365 <= 6'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        i_1_reg_387 <= 6'd0;
    end else if (((1'b0 == ap_block_pp2_stage0_11001) & (icmp_ln17_fu_1281_p2 == 1'd0) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        i_1_reg_387 <= add_ln17_fu_1275_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln10_fu_1270_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state7))) begin
        i_reg_376 <= add_ln10_fu_1264_p2;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        i_reg_376 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        accumulators_0_0_reg_1922 <= accumulators_0_0_fu_964_p2;
        accumulators_0_1_reg_1927 <= accumulators_0_1_fu_969_p2;
        accumulators_0_2_reg_1932 <= accumulators_0_2_fu_974_p2;
        accumulators_0_3_reg_1937 <= accumulators_0_3_fu_979_p2;
        accumulators_10_0_reg_2122 <= accumulators_10_0_fu_1164_p2;
        accumulators_10_1_reg_2127 <= accumulators_10_1_fu_1169_p2;
        accumulators_10_2_reg_2132 <= accumulators_10_2_fu_1174_p2;
        accumulators_10_3_reg_2137 <= accumulators_10_3_fu_1179_p2;
        accumulators_11_0_reg_2142 <= accumulators_11_0_fu_1184_p2;
        accumulators_11_1_reg_2147 <= accumulators_11_1_fu_1189_p2;
        accumulators_11_2_reg_2152 <= accumulators_11_2_fu_1194_p2;
        accumulators_11_3_reg_2157 <= accumulators_11_3_fu_1199_p2;
        accumulators_12_0_reg_2162 <= accumulators_12_0_fu_1204_p2;
        accumulators_12_1_reg_2167 <= accumulators_12_1_fu_1209_p2;
        accumulators_12_2_reg_2172 <= accumulators_12_2_fu_1214_p2;
        accumulators_13_0_reg_2177 <= accumulators_13_0_fu_1219_p2;
        accumulators_13_1_reg_2182 <= accumulators_13_1_fu_1224_p2;
        accumulators_13_2_reg_2187 <= accumulators_13_2_fu_1229_p2;
        accumulators_14_0_reg_2192 <= accumulators_14_0_fu_1234_p2;
        accumulators_14_1_reg_2197 <= accumulators_14_1_fu_1239_p2;
        accumulators_14_2_reg_2202 <= accumulators_14_2_fu_1244_p2;
        accumulators_15_0_reg_2207 <= accumulators_15_0_fu_1249_p2;
        accumulators_15_1_reg_2212 <= accumulators_15_1_fu_1254_p2;
        accumulators_15_2_reg_2217 <= accumulators_15_2_fu_1259_p2;
        accumulators_1_0_reg_1942 <= accumulators_1_0_fu_984_p2;
        accumulators_1_1_reg_1947 <= accumulators_1_1_fu_989_p2;
        accumulators_1_2_reg_1952 <= accumulators_1_2_fu_994_p2;
        accumulators_1_3_reg_1957 <= accumulators_1_3_fu_999_p2;
        accumulators_2_0_reg_1962 <= accumulators_2_0_fu_1004_p2;
        accumulators_2_1_reg_1967 <= accumulators_2_1_fu_1009_p2;
        accumulators_2_2_reg_1972 <= accumulators_2_2_fu_1014_p2;
        accumulators_2_3_reg_1977 <= accumulators_2_3_fu_1019_p2;
        accumulators_3_0_reg_1982 <= accumulators_3_0_fu_1024_p2;
        accumulators_3_1_reg_1987 <= accumulators_3_1_fu_1029_p2;
        accumulators_3_2_reg_1992 <= accumulators_3_2_fu_1034_p2;
        accumulators_3_3_reg_1997 <= accumulators_3_3_fu_1039_p2;
        accumulators_4_0_reg_2002 <= accumulators_4_0_fu_1044_p2;
        accumulators_4_1_reg_2007 <= accumulators_4_1_fu_1049_p2;
        accumulators_4_2_reg_2012 <= accumulators_4_2_fu_1054_p2;
        accumulators_4_3_reg_2017 <= accumulators_4_3_fu_1059_p2;
        accumulators_5_0_reg_2022 <= accumulators_5_0_fu_1064_p2;
        accumulators_5_1_reg_2027 <= accumulators_5_1_fu_1069_p2;
        accumulators_5_2_reg_2032 <= accumulators_5_2_fu_1074_p2;
        accumulators_5_3_reg_2037 <= accumulators_5_3_fu_1079_p2;
        accumulators_6_0_reg_2042 <= accumulators_6_0_fu_1084_p2;
        accumulators_6_1_reg_2047 <= accumulators_6_1_fu_1089_p2;
        accumulators_6_2_reg_2052 <= accumulators_6_2_fu_1094_p2;
        accumulators_6_3_reg_2057 <= accumulators_6_3_fu_1099_p2;
        accumulators_7_0_reg_2062 <= accumulators_7_0_fu_1104_p2;
        accumulators_7_1_reg_2067 <= accumulators_7_1_fu_1109_p2;
        accumulators_7_2_reg_2072 <= accumulators_7_2_fu_1114_p2;
        accumulators_7_3_reg_2077 <= accumulators_7_3_fu_1119_p2;
        accumulators_8_0_reg_2082 <= accumulators_8_0_fu_1124_p2;
        accumulators_8_1_reg_2087 <= accumulators_8_1_fu_1129_p2;
        accumulators_8_2_reg_2092 <= accumulators_8_2_fu_1134_p2;
        accumulators_8_3_reg_2097 <= accumulators_8_3_fu_1139_p2;
        accumulators_9_0_reg_2102 <= accumulators_9_0_fu_1144_p2;
        accumulators_9_1_reg_2107 <= accumulators_9_1_fu_1149_p2;
        accumulators_9_2_reg_2112 <= accumulators_9_2_fu_1154_p2;
        accumulators_9_3_reg_2117 <= accumulators_9_3_fu_1159_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        icmp_ln17_reg_2235 <= icmp_ln17_fu_1281_p2;
        icmp_ln17_reg_2235_pp2_iter1_reg <= icmp_ln17_reg_2235;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp2_stage0_11001)) begin
        icmp_ln17_reg_2235_pp2_iter10_reg <= icmp_ln17_reg_2235_pp2_iter9_reg;
        icmp_ln17_reg_2235_pp2_iter11_reg <= icmp_ln17_reg_2235_pp2_iter10_reg;
        icmp_ln17_reg_2235_pp2_iter12_reg <= icmp_ln17_reg_2235_pp2_iter11_reg;
        icmp_ln17_reg_2235_pp2_iter13_reg <= icmp_ln17_reg_2235_pp2_iter12_reg;
        icmp_ln17_reg_2235_pp2_iter14_reg <= icmp_ln17_reg_2235_pp2_iter13_reg;
        icmp_ln17_reg_2235_pp2_iter15_reg <= icmp_ln17_reg_2235_pp2_iter14_reg;
        icmp_ln17_reg_2235_pp2_iter16_reg <= icmp_ln17_reg_2235_pp2_iter15_reg;
        icmp_ln17_reg_2235_pp2_iter17_reg <= icmp_ln17_reg_2235_pp2_iter16_reg;
        icmp_ln17_reg_2235_pp2_iter18_reg <= icmp_ln17_reg_2235_pp2_iter17_reg;
        icmp_ln17_reg_2235_pp2_iter19_reg <= icmp_ln17_reg_2235_pp2_iter18_reg;
        icmp_ln17_reg_2235_pp2_iter20_reg <= icmp_ln17_reg_2235_pp2_iter19_reg;
        icmp_ln17_reg_2235_pp2_iter21_reg <= icmp_ln17_reg_2235_pp2_iter20_reg;
        icmp_ln17_reg_2235_pp2_iter22_reg <= icmp_ln17_reg_2235_pp2_iter21_reg;
        icmp_ln17_reg_2235_pp2_iter23_reg <= icmp_ln17_reg_2235_pp2_iter22_reg;
        icmp_ln17_reg_2235_pp2_iter24_reg <= icmp_ln17_reg_2235_pp2_iter23_reg;
        icmp_ln17_reg_2235_pp2_iter25_reg <= icmp_ln17_reg_2235_pp2_iter24_reg;
        icmp_ln17_reg_2235_pp2_iter26_reg <= icmp_ln17_reg_2235_pp2_iter25_reg;
        icmp_ln17_reg_2235_pp2_iter27_reg <= icmp_ln17_reg_2235_pp2_iter26_reg;
        icmp_ln17_reg_2235_pp2_iter28_reg <= icmp_ln17_reg_2235_pp2_iter27_reg;
        icmp_ln17_reg_2235_pp2_iter29_reg <= icmp_ln17_reg_2235_pp2_iter28_reg;
        icmp_ln17_reg_2235_pp2_iter2_reg <= icmp_ln17_reg_2235_pp2_iter1_reg;
        icmp_ln17_reg_2235_pp2_iter30_reg <= icmp_ln17_reg_2235_pp2_iter29_reg;
        icmp_ln17_reg_2235_pp2_iter31_reg <= icmp_ln17_reg_2235_pp2_iter30_reg;
        icmp_ln17_reg_2235_pp2_iter32_reg <= icmp_ln17_reg_2235_pp2_iter31_reg;
        icmp_ln17_reg_2235_pp2_iter33_reg <= icmp_ln17_reg_2235_pp2_iter32_reg;
        icmp_ln17_reg_2235_pp2_iter34_reg <= icmp_ln17_reg_2235_pp2_iter33_reg;
        icmp_ln17_reg_2235_pp2_iter35_reg <= icmp_ln17_reg_2235_pp2_iter34_reg;
        icmp_ln17_reg_2235_pp2_iter3_reg <= icmp_ln17_reg_2235_pp2_iter2_reg;
        icmp_ln17_reg_2235_pp2_iter4_reg <= icmp_ln17_reg_2235_pp2_iter3_reg;
        icmp_ln17_reg_2235_pp2_iter5_reg <= icmp_ln17_reg_2235_pp2_iter4_reg;
        icmp_ln17_reg_2235_pp2_iter6_reg <= icmp_ln17_reg_2235_pp2_iter5_reg;
        icmp_ln17_reg_2235_pp2_iter7_reg <= icmp_ln17_reg_2235_pp2_iter6_reg;
        icmp_ln17_reg_2235_pp2_iter8_reg <= icmp_ln17_reg_2235_pp2_iter7_reg;
        icmp_ln17_reg_2235_pp2_iter9_reg <= icmp_ln17_reg_2235_pp2_iter8_reg;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        mul_ln10_1_reg_1858 <= grp_fu_779_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        mul_ln10_reg_1848 <= mul_ln10_fu_770_p2;
    end
end

always @ (*) begin
    if ((icmp_ln17_fu_1281_p2 == 1'd1)) begin
        ap_condition_pp2_exit_iter0_state9 = 1'b1;
    end else begin
        ap_condition_pp2_exit_iter0_state9 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state46)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter36 == 1'b0) & (ap_enable_reg_pp2_iter35 == 1'b0) & (ap_enable_reg_pp2_iter34 == 1'b0) & (ap_enable_reg_pp2_iter33 == 1'b0) & (ap_enable_reg_pp2_iter32 == 1'b0) & (ap_enable_reg_pp2_iter31 == 1'b0) & (ap_enable_reg_pp2_iter30 == 1'b0) & (ap_enable_reg_pp2_iter29 == 1'b0) & (ap_enable_reg_pp2_iter28 == 1'b0) & (ap_enable_reg_pp2_iter27 == 1'b0) & (ap_enable_reg_pp2_iter26 == 1'b0) & (ap_enable_reg_pp2_iter25 == 1'b0) & (ap_enable_reg_pp2_iter24 == 1'b0) & (ap_enable_reg_pp2_iter23 == 1'b0) & (ap_enable_reg_pp2_iter22 == 1'b0) & (ap_enable_reg_pp2_iter21 == 1'b0) & (ap_enable_reg_pp2_iter20 == 1'b0) & (ap_enable_reg_pp2_iter19 == 1'b0) & (ap_enable_reg_pp2_iter18 == 1'b0) & (ap_enable_reg_pp2_iter17 == 1'b0) & (ap_enable_reg_pp2_iter16 == 1'b0) & (ap_enable_reg_pp2_iter15 == 1'b0) & (ap_enable_reg_pp2_iter14 == 1'b0) & (ap_enable_reg_pp2_iter13 == 1'b0) & (ap_enable_reg_pp2_iter12 == 1'b0) & (ap_enable_reg_pp2_iter11 == 1'b0) & (ap_enable_reg_pp2_iter10 == 1'b0) & (ap_enable_reg_pp2_iter9 == 1'b0) & (ap_enable_reg_pp2_iter8 == 1'b0) & (ap_enable_reg_pp2_iter7 == 1'b0) & (ap_enable_reg_pp2_iter6 == 1'b0) & (ap_enable_reg_pp2_iter5 == 1'b0) & (ap_enable_reg_pp2_iter4 == 1'b0) & (ap_enable_reg_pp2_iter3 == 1'b0) & (ap_enable_reg_pp2_iter2 == 1'b0) & (ap_enable_reg_pp2_iter1 == 1'b0) & (ap_enable_reg_pp2_iter0 == 1'b0))) begin
        ap_idle_pp2 = 1'b1;
    end else begin
        ap_idle_pp2 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state46)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter36 == 1'b1) & (icmp_ln17_reg_2235_pp2_iter35_reg == 1'd0))) begin
        out_r_ap_vld = 1'b1;
    end else begin
        out_r_ap_vld = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((exitcond136_fu_442_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            if (((icmp_ln10_fu_1270_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state7))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_pp2_stage0;
        end
        ap_ST_fsm_pp2_stage0 : begin
            if ((~((1'b0 == ap_block_pp2_stage0_subdone) & (ap_enable_reg_pp2_iter1 == 1'b0) & (icmp_ln17_fu_1281_p2 == 1'd1) & (ap_enable_reg_pp2_iter0 == 1'b1)) & ~((1'b0 == ap_block_pp2_stage0_subdone) & (ap_enable_reg_pp2_iter36 == 1'b1) & (ap_enable_reg_pp2_iter35 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end else if ((((1'b0 == ap_block_pp2_stage0_subdone) & (ap_enable_reg_pp2_iter36 == 1'b1) & (ap_enable_reg_pp2_iter35 == 1'b0)) | ((1'b0 == ap_block_pp2_stage0_subdone) & (ap_enable_reg_pp2_iter1 == 1'b0) & (icmp_ln17_fu_1281_p2 == 1'd1) & (ap_enable_reg_pp2_iter0 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state46;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end
        end
        ap_ST_fsm_state46 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign accumulators_0_0_0_fu_100 = 32'd0;

assign accumulators_0_0_fu_964_p2 = (accumulators_0_0_0_fu_100 + mul_ln10_1_reg_1858);

assign accumulators_0_1_0_fu_104 = 32'd0;

assign accumulators_0_1_fu_969_p2 = (accumulators_0_1_0_fu_104 + mul_ln10_1_reg_1858);

assign accumulators_0_2_0_fu_108 = 32'd0;

assign accumulators_0_2_fu_974_p2 = (accumulators_0_2_0_fu_108 + mul_ln10_1_reg_1858);

assign accumulators_0_3_0_fu_112 = 32'd0;

assign accumulators_0_3_fu_979_p2 = (accumulators_0_3_0_fu_112 + mul_ln10_1_reg_1858);

assign accumulators_10_0_0_fu_260 = 32'd0;

assign accumulators_10_0_fu_1164_p2 = (accumulators_10_0_0_fu_260 + mul_ln10_1_reg_1858);

assign accumulators_10_1_0_fu_264 = 32'd0;

assign accumulators_10_1_fu_1169_p2 = (accumulators_10_1_0_fu_264 + mul_ln10_1_reg_1858);

assign accumulators_10_2_0_fu_268 = 32'd0;

assign accumulators_10_2_fu_1174_p2 = (accumulators_10_2_0_fu_268 + mul_ln10_1_reg_1858);

assign accumulators_10_3_0_fu_272 = 32'd0;

assign accumulators_10_3_fu_1179_p2 = (accumulators_10_3_0_fu_272 + mul_ln10_1_reg_1858);

assign accumulators_11_0_0_fu_276 = 32'd0;

assign accumulators_11_0_fu_1184_p2 = (accumulators_11_0_0_fu_276 + mul_ln10_1_reg_1858);

assign accumulators_11_1_0_fu_280 = 32'd0;

assign accumulators_11_1_fu_1189_p2 = (accumulators_11_1_0_fu_280 + mul_ln10_1_reg_1858);

assign accumulators_11_2_0_fu_284 = 32'd0;

assign accumulators_11_2_fu_1194_p2 = (accumulators_11_2_0_fu_284 + mul_ln10_1_reg_1858);

assign accumulators_11_3_0_fu_288 = 32'd0;

assign accumulators_11_3_fu_1199_p2 = (accumulators_11_3_0_fu_288 + mul_ln10_1_reg_1858);

assign accumulators_12_0_0_fu_292 = 32'd0;

assign accumulators_12_0_fu_1204_p2 = (accumulators_12_0_0_fu_292 + mul_ln10_1_reg_1858);

assign accumulators_12_1_0_fu_296 = 32'd0;

assign accumulators_12_1_fu_1209_p2 = (accumulators_12_1_0_fu_296 + mul_ln10_1_reg_1858);

assign accumulators_12_2_0_fu_300 = 32'd0;

assign accumulators_12_2_fu_1214_p2 = (accumulators_12_2_0_fu_300 + mul_ln10_1_reg_1858);

assign accumulators_13_0_0_fu_304 = 32'd0;

assign accumulators_13_0_fu_1219_p2 = (accumulators_13_0_0_fu_304 + mul_ln10_1_reg_1858);

assign accumulators_13_1_0_fu_308 = 32'd0;

assign accumulators_13_1_fu_1224_p2 = (accumulators_13_1_0_fu_308 + mul_ln10_1_reg_1858);

assign accumulators_13_2_0_fu_312 = 32'd0;

assign accumulators_13_2_fu_1229_p2 = (accumulators_13_2_0_fu_312 + mul_ln10_1_reg_1858);

assign accumulators_14_0_0_fu_316 = 32'd0;

assign accumulators_14_0_fu_1234_p2 = (accumulators_14_0_0_fu_316 + mul_ln10_1_reg_1858);

assign accumulators_14_1_0_fu_320 = 32'd0;

assign accumulators_14_1_fu_1239_p2 = (accumulators_14_1_0_fu_320 + mul_ln10_1_reg_1858);

assign accumulators_14_2_0_fu_324 = 32'd0;

assign accumulators_14_2_fu_1244_p2 = (accumulators_14_2_0_fu_324 + mul_ln10_1_reg_1858);

assign accumulators_15_0_0_fu_328 = 32'd0;

assign accumulators_15_0_fu_1249_p2 = (accumulators_15_0_0_fu_328 + mul_ln10_1_reg_1858);

assign accumulators_15_1_0_fu_332 = 32'd0;

assign accumulators_15_1_fu_1254_p2 = (accumulators_15_1_0_fu_332 + mul_ln10_1_reg_1858);

assign accumulators_15_2_0_fu_336 = 32'd0;

assign accumulators_15_2_fu_1259_p2 = (accumulators_15_2_0_fu_336 + mul_ln10_1_reg_1858);

assign accumulators_1_0_0_fu_116 = 32'd0;

assign accumulators_1_0_fu_984_p2 = (accumulators_1_0_0_fu_116 + mul_ln10_1_reg_1858);

assign accumulators_1_1_0_fu_120 = 32'd0;

assign accumulators_1_1_fu_989_p2 = (accumulators_1_1_0_fu_120 + mul_ln10_1_reg_1858);

assign accumulators_1_2_0_fu_124 = 32'd0;

assign accumulators_1_2_fu_994_p2 = (accumulators_1_2_0_fu_124 + mul_ln10_1_reg_1858);

assign accumulators_1_3_0_fu_128 = 32'd0;

assign accumulators_1_3_fu_999_p2 = (accumulators_1_3_0_fu_128 + mul_ln10_1_reg_1858);

assign accumulators_2_0_0_fu_132 = 32'd0;

assign accumulators_2_0_fu_1004_p2 = (accumulators_2_0_0_fu_132 + mul_ln10_1_reg_1858);

assign accumulators_2_1_0_fu_136 = 32'd0;

assign accumulators_2_1_fu_1009_p2 = (accumulators_2_1_0_fu_136 + mul_ln10_1_reg_1858);

assign accumulators_2_2_0_fu_140 = 32'd0;

assign accumulators_2_2_fu_1014_p2 = (accumulators_2_2_0_fu_140 + mul_ln10_1_reg_1858);

assign accumulators_2_3_0_fu_144 = 32'd0;

assign accumulators_2_3_fu_1019_p2 = (accumulators_2_3_0_fu_144 + mul_ln10_1_reg_1858);

assign accumulators_3_0_0_fu_148 = 32'd0;

assign accumulators_3_0_fu_1024_p2 = (accumulators_3_0_0_fu_148 + mul_ln10_1_reg_1858);

assign accumulators_3_1_0_fu_152 = 32'd0;

assign accumulators_3_1_fu_1029_p2 = (accumulators_3_1_0_fu_152 + mul_ln10_1_reg_1858);

assign accumulators_3_2_0_fu_156 = 32'd0;

assign accumulators_3_2_fu_1034_p2 = (accumulators_3_2_0_fu_156 + mul_ln10_1_reg_1858);

assign accumulators_3_3_0_fu_160 = 32'd0;

assign accumulators_3_3_fu_1039_p2 = (accumulators_3_3_0_fu_160 + mul_ln10_1_reg_1858);

assign accumulators_4_0_0_fu_164 = 32'd0;

assign accumulators_4_0_fu_1044_p2 = (accumulators_4_0_0_fu_164 + mul_ln10_1_reg_1858);

assign accumulators_4_1_0_fu_168 = 32'd0;

assign accumulators_4_1_fu_1049_p2 = (accumulators_4_1_0_fu_168 + mul_ln10_1_reg_1858);

assign accumulators_4_2_0_fu_172 = 32'd0;

assign accumulators_4_2_fu_1054_p2 = (accumulators_4_2_0_fu_172 + mul_ln10_1_reg_1858);

assign accumulators_4_3_0_fu_176 = 32'd0;

assign accumulators_4_3_fu_1059_p2 = (accumulators_4_3_0_fu_176 + mul_ln10_1_reg_1858);

assign accumulators_5_0_0_fu_180 = 32'd0;

assign accumulators_5_0_fu_1064_p2 = (accumulators_5_0_0_fu_180 + mul_ln10_1_reg_1858);

assign accumulators_5_1_0_fu_184 = 32'd0;

assign accumulators_5_1_fu_1069_p2 = (accumulators_5_1_0_fu_184 + mul_ln10_1_reg_1858);

assign accumulators_5_2_0_fu_188 = 32'd0;

assign accumulators_5_2_fu_1074_p2 = (accumulators_5_2_0_fu_188 + mul_ln10_1_reg_1858);

assign accumulators_5_3_0_fu_192 = 32'd0;

assign accumulators_5_3_fu_1079_p2 = (accumulators_5_3_0_fu_192 + mul_ln10_1_reg_1858);

assign accumulators_6_0_0_fu_196 = 32'd0;

assign accumulators_6_0_fu_1084_p2 = (accumulators_6_0_0_fu_196 + mul_ln10_1_reg_1858);

assign accumulators_6_1_0_fu_200 = 32'd0;

assign accumulators_6_1_fu_1089_p2 = (accumulators_6_1_0_fu_200 + mul_ln10_1_reg_1858);

assign accumulators_6_2_0_fu_204 = 32'd0;

assign accumulators_6_2_fu_1094_p2 = (accumulators_6_2_0_fu_204 + mul_ln10_1_reg_1858);

assign accumulators_6_3_0_fu_208 = 32'd0;

assign accumulators_6_3_fu_1099_p2 = (accumulators_6_3_0_fu_208 + mul_ln10_1_reg_1858);

assign accumulators_7_0_0_fu_212 = 32'd0;

assign accumulators_7_0_fu_1104_p2 = (accumulators_7_0_0_fu_212 + mul_ln10_1_reg_1858);

assign accumulators_7_1_0_fu_216 = 32'd0;

assign accumulators_7_1_fu_1109_p2 = (accumulators_7_1_0_fu_216 + mul_ln10_1_reg_1858);

assign accumulators_7_2_0_fu_220 = 32'd0;

assign accumulators_7_2_fu_1114_p2 = (accumulators_7_2_0_fu_220 + mul_ln10_1_reg_1858);

assign accumulators_7_3_0_fu_224 = 32'd0;

assign accumulators_7_3_fu_1119_p2 = (accumulators_7_3_0_fu_224 + mul_ln10_1_reg_1858);

assign accumulators_8_0_0_fu_228 = 32'd0;

assign accumulators_8_0_fu_1124_p2 = (accumulators_8_0_0_fu_228 + mul_ln10_1_reg_1858);

assign accumulators_8_1_0_fu_232 = 32'd0;

assign accumulators_8_1_fu_1129_p2 = (accumulators_8_1_0_fu_232 + mul_ln10_1_reg_1858);

assign accumulators_8_2_0_fu_236 = 32'd0;

assign accumulators_8_2_fu_1134_p2 = (accumulators_8_2_0_fu_236 + mul_ln10_1_reg_1858);

assign accumulators_8_3_0_fu_240 = 32'd0;

assign accumulators_8_3_fu_1139_p2 = (accumulators_8_3_0_fu_240 + mul_ln10_1_reg_1858);

assign accumulators_9_0_0_fu_244 = 32'd0;

assign accumulators_9_0_fu_1144_p2 = (accumulators_9_0_0_fu_244 + mul_ln10_1_reg_1858);

assign accumulators_9_1_0_fu_248 = 32'd0;

assign accumulators_9_1_fu_1149_p2 = (accumulators_9_1_0_fu_248 + mul_ln10_1_reg_1858);

assign accumulators_9_2_0_fu_252 = 32'd0;

assign accumulators_9_2_fu_1154_p2 = (accumulators_9_2_0_fu_252 + mul_ln10_1_reg_1858);

assign accumulators_9_3_0_fu_256 = 32'd0;

assign accumulators_9_3_fu_1159_p2 = (accumulators_9_3_0_fu_256 + mul_ln10_1_reg_1858);

assign add_ln10_fu_1264_p2 = (i_reg_376 + 32'd1);

assign add_ln17_fu_1275_p2 = (i_1_reg_387 + 6'd1);

assign ap_CS_fsm_pp2_stage0 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state46 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_block_pp2_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage0_01001 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_state10_pp2_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp2_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp2_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp2_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp2_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp2_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp2_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp2_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp2_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp2_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp2_stage0_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp2_stage0_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp2_stage0_iter13 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp2_stage0_iter14 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp2_stage0_iter15 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp2_stage0_iter16 = ~(1'b1 == 1'b1);

assign ap_block_state26_pp2_stage0_iter17 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp2_stage0_iter18 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp2_stage0_iter19 = ~(1'b1 == 1'b1);

assign ap_block_state29_pp2_stage0_iter20 = ~(1'b1 == 1'b1);

assign ap_block_state30_pp2_stage0_iter21 = ~(1'b1 == 1'b1);

assign ap_block_state31_pp2_stage0_iter22 = ~(1'b1 == 1'b1);

assign ap_block_state32_pp2_stage0_iter23 = ~(1'b1 == 1'b1);

assign ap_block_state33_pp2_stage0_iter24 = ~(1'b1 == 1'b1);

assign ap_block_state34_pp2_stage0_iter25 = ~(1'b1 == 1'b1);

assign ap_block_state35_pp2_stage0_iter26 = ~(1'b1 == 1'b1);

assign ap_block_state36_pp2_stage0_iter27 = ~(1'b1 == 1'b1);

assign ap_block_state37_pp2_stage0_iter28 = ~(1'b1 == 1'b1);

assign ap_block_state38_pp2_stage0_iter29 = ~(1'b1 == 1'b1);

assign ap_block_state39_pp2_stage0_iter30 = ~(1'b1 == 1'b1);

assign ap_block_state40_pp2_stage0_iter31 = ~(1'b1 == 1'b1);

assign ap_block_state41_pp2_stage0_iter32 = ~(1'b1 == 1'b1);

assign ap_block_state42_pp2_stage0_iter33 = ~(1'b1 == 1'b1);

assign ap_block_state43_pp2_stage0_iter34 = ~(1'b1 == 1'b1);

assign ap_block_state44_pp2_stage0_iter35 = ~(1'b1 == 1'b1);

assign ap_block_state45_pp2_stage0_iter36 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp2_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_condition_286 = ((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0));
end

assign ap_enable_pp2 = (ap_idle_pp2 ^ 1'b1);

assign ap_phi_reg_pp2_iter0_phi_ln23_reg_398 = 'bx;

assign empty_10_fu_448_p1 = empty_reg_365[3:0];

assign empty_8_fu_436_p2 = (empty_reg_365 + 6'd1);

assign exitcond136_fu_442_p2 = ((empty_reg_365 == 6'd60) ? 1'b1 : 1'b0);

assign grp_fu_1457_p1 = 32'd31;

assign grp_fu_779_p0 = grp_fu_779_p00;

assign grp_fu_779_p00 = mul_ln10_reg_1848;

assign icmp_ln10_fu_1270_p1 = len;

assign icmp_ln10_fu_1270_p2 = ((i_reg_376 == icmp_ln10_fu_1270_p1) ? 1'b1 : 1'b0);

assign icmp_ln17_fu_1281_p2 = ((i_1_reg_387 == 6'd60) ? 1'b1 : 1'b0);

assign mul_ln10_fu_770_p0 = mul_ln10_fu_770_p00;

assign mul_ln10_fu_770_p00 = vecs;

assign mul_ln10_fu_770_p1 = mul_ln10_fu_770_p10;

assign mul_ln10_fu_770_p10 = coeffs;

assign newIndex1055_t_fu_452_p4 = {{empty_reg_365[5:4]}};

assign out_r = grp_fu_1457_p2[7:0];

assign tmp_10_fu_1338_p5 = {{i_1_reg_387[5:4]}};

assign tmp_11_fu_1328_p5 = {{i_1_reg_387[5:4]}};

assign tmp_12_fu_1319_p4 = {{i_1_reg_387[5:4]}};

assign tmp_13_fu_1310_p4 = {{i_1_reg_387[5:4]}};

assign tmp_14_fu_1301_p4 = {{i_1_reg_387[5:4]}};

assign tmp_1_fu_1438_p5 = {{i_1_reg_387[5:4]}};

assign tmp_2_fu_1428_p5 = {{i_1_reg_387[5:4]}};

assign tmp_3_fu_1418_p5 = {{i_1_reg_387[5:4]}};

assign tmp_4_fu_1408_p5 = {{i_1_reg_387[5:4]}};

assign tmp_5_fu_1398_p5 = {{i_1_reg_387[5:4]}};

assign tmp_6_fu_1388_p5 = {{i_1_reg_387[5:4]}};

assign tmp_7_fu_1378_p5 = {{i_1_reg_387[5:4]}};

assign tmp_8_fu_1368_p5 = {{i_1_reg_387[5:4]}};

assign tmp_9_fu_1358_p5 = {{i_1_reg_387[5:4]}};

assign tmp_fu_1448_p4 = {{i_1_reg_387[5:4]}};

assign tmp_s_fu_1348_p5 = {{i_1_reg_387[5:4]}};

assign trunc_ln23_fu_1287_p1 = i_1_reg_387[3:0];

endmodule //hls_linear_combination
