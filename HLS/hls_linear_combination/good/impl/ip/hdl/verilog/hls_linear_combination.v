// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Version: 2020.2
// Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="hls_linear_combination_hls_linear_combination,hls_ip_2020_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020-clg484-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=6.716000,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=54,HLS_SYN_DSP=0,HLS_SYN_FF=6729,HLS_SYN_LUT=5357,HLS_VERSION=2020_2}" *)

module hls_linear_combination (
        ap_clk,
        ap_rst_n,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        vecs_V_TDATA,
        vecs_V_TVALID,
        vecs_V_TREADY,
        coeffs_V_TDATA,
        coeffs_V_TVALID,
        coeffs_V_TREADY,
        len,
        out_V_TDATA,
        out_V_TVALID,
        out_V_TREADY
);

parameter    ap_ST_fsm_state1 = 18'd1;
parameter    ap_ST_fsm_state2 = 18'd2;
parameter    ap_ST_fsm_state3 = 18'd4;
parameter    ap_ST_fsm_state4 = 18'd8;
parameter    ap_ST_fsm_state5 = 18'd16;
parameter    ap_ST_fsm_state6 = 18'd32;
parameter    ap_ST_fsm_state7 = 18'd64;
parameter    ap_ST_fsm_state8 = 18'd128;
parameter    ap_ST_fsm_state9 = 18'd256;
parameter    ap_ST_fsm_state10 = 18'd512;
parameter    ap_ST_fsm_state11 = 18'd1024;
parameter    ap_ST_fsm_state12 = 18'd2048;
parameter    ap_ST_fsm_pp5_stage0 = 18'd4096;
parameter    ap_ST_fsm_state18 = 18'd8192;
parameter    ap_ST_fsm_pp6_stage0 = 18'd16384;
parameter    ap_ST_fsm_state56 = 18'd32768;
parameter    ap_ST_fsm_pp7_stage0 = 18'd65536;
parameter    ap_ST_fsm_state60 = 18'd131072;

input   ap_clk;
input   ap_rst_n;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [15:0] vecs_V_TDATA;
input   vecs_V_TVALID;
output   vecs_V_TREADY;
input  [15:0] coeffs_V_TDATA;
input   coeffs_V_TVALID;
output   coeffs_V_TREADY;
input  [31:0] len;
output  [15:0] out_V_TDATA;
output   out_V_TVALID;
input   out_V_TREADY;

reg ap_done;
reg ap_idle;
reg ap_ready;

 reg    ap_rst_n_inv;
(* fsm_encoding = "none" *) reg   [17:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [31:0] accumulators_15_0;
reg   [31:0] accumulators_15_1;
reg   [31:0] accumulators_15_2;
reg   [31:0] accumulators_0_0;
reg   [31:0] accumulators_0_1;
reg   [31:0] accumulators_0_2;
reg   [31:0] accumulators_0_3;
reg   [31:0] accumulators_1_0;
reg   [31:0] accumulators_1_1;
reg   [31:0] accumulators_1_2;
reg   [31:0] accumulators_1_3;
reg   [31:0] accumulators_2_0;
reg   [31:0] accumulators_2_1;
reg   [31:0] accumulators_2_2;
reg   [31:0] accumulators_2_3;
reg   [31:0] accumulators_3_0;
reg   [31:0] accumulators_3_1;
reg   [31:0] accumulators_3_2;
reg   [31:0] accumulators_3_3;
reg   [31:0] accumulators_4_0;
reg   [31:0] accumulators_4_1;
reg   [31:0] accumulators_4_2;
reg   [31:0] accumulators_4_3;
reg   [31:0] accumulators_5_0;
reg   [31:0] accumulators_5_1;
reg   [31:0] accumulators_5_2;
reg   [31:0] accumulators_5_3;
reg   [31:0] accumulators_6_0;
reg   [31:0] accumulators_6_1;
reg   [31:0] accumulators_6_2;
reg   [31:0] accumulators_6_3;
reg   [31:0] accumulators_7_0;
reg   [31:0] accumulators_7_1;
reg   [31:0] accumulators_7_2;
reg   [31:0] accumulators_7_3;
reg   [31:0] accumulators_8_0;
reg   [31:0] accumulators_8_1;
reg   [31:0] accumulators_8_2;
reg   [31:0] accumulators_8_3;
reg   [31:0] accumulators_9_0;
reg   [31:0] accumulators_9_1;
reg   [31:0] accumulators_9_2;
reg   [31:0] accumulators_9_3;
reg   [31:0] accumulators_10_0;
reg   [31:0] accumulators_10_1;
reg   [31:0] accumulators_10_2;
reg   [31:0] accumulators_10_3;
reg   [31:0] accumulators_11_0;
reg   [31:0] accumulators_11_1;
reg   [31:0] accumulators_11_2;
reg   [31:0] accumulators_11_3;
reg   [31:0] accumulators_12_0;
reg   [31:0] accumulators_12_1;
reg   [31:0] accumulators_12_2;
reg   [31:0] accumulators_13_0;
reg   [31:0] accumulators_13_1;
reg   [31:0] accumulators_13_2;
reg   [31:0] accumulators_14_0;
reg   [31:0] accumulators_14_1;
reg   [31:0] accumulators_14_2;
reg    vecs_V_TDATA_blk_n;
wire    ap_CS_fsm_state3;
wire   [0:0] icmp_ln16_fu_1967_p2;
wire    ap_CS_fsm_state5;
wire   [0:0] icmp_ln16_1_fu_2089_p2;
wire    ap_CS_fsm_state7;
wire   [0:0] icmp_ln16_2_fu_2211_p2;
wire    ap_CS_fsm_state9;
wire   [0:0] icmp_ln16_3_fu_2333_p2;
reg    coeffs_V_TDATA_blk_n;
wire    ap_CS_fsm_state11;
wire   [0:0] icmp_ln22_fu_2420_p2;
reg    out_V_TDATA_blk_n;
wire    ap_CS_fsm_pp7_stage0;
reg    ap_enable_reg_pp7_iter1;
wire    ap_block_pp7_stage0;
reg   [0:0] icmp_ln47_reg_4939;
reg    ap_enable_reg_pp7_iter2;
reg   [0:0] icmp_ln47_reg_4939_pp7_iter1_reg;
reg   [31:0] i_1_reg_1370;
reg   [5:0] i_2_reg_1381;
reg   [5:0] i_2_reg_1381_pp6_iter1_reg;
wire    ap_CS_fsm_pp6_stage0;
wire    ap_block_state19_pp6_stage0_iter0;
wire    ap_block_state20_pp6_stage0_iter1;
wire    ap_block_state21_pp6_stage0_iter2;
wire    ap_block_state22_pp6_stage0_iter3;
wire    ap_block_state23_pp6_stage0_iter4;
wire    ap_block_state24_pp6_stage0_iter5;
wire    ap_block_state25_pp6_stage0_iter6;
wire    ap_block_state26_pp6_stage0_iter7;
wire    ap_block_state27_pp6_stage0_iter8;
wire    ap_block_state28_pp6_stage0_iter9;
wire    ap_block_state29_pp6_stage0_iter10;
wire    ap_block_state30_pp6_stage0_iter11;
wire    ap_block_state31_pp6_stage0_iter12;
wire    ap_block_state32_pp6_stage0_iter13;
wire    ap_block_state33_pp6_stage0_iter14;
wire    ap_block_state34_pp6_stage0_iter15;
wire    ap_block_state35_pp6_stage0_iter16;
wire    ap_block_state36_pp6_stage0_iter17;
wire    ap_block_state37_pp6_stage0_iter18;
wire    ap_block_state38_pp6_stage0_iter19;
wire    ap_block_state39_pp6_stage0_iter20;
wire    ap_block_state40_pp6_stage0_iter21;
wire    ap_block_state41_pp6_stage0_iter22;
wire    ap_block_state42_pp6_stage0_iter23;
wire    ap_block_state43_pp6_stage0_iter24;
wire    ap_block_state44_pp6_stage0_iter25;
wire    ap_block_state45_pp6_stage0_iter26;
wire    ap_block_state46_pp6_stage0_iter27;
wire    ap_block_state47_pp6_stage0_iter28;
wire    ap_block_state48_pp6_stage0_iter29;
wire    ap_block_state49_pp6_stage0_iter30;
wire    ap_block_state50_pp6_stage0_iter31;
wire    ap_block_state51_pp6_stage0_iter32;
wire    ap_block_state52_pp6_stage0_iter33;
wire    ap_block_state53_pp6_stage0_iter34;
wire    ap_block_state54_pp6_stage0_iter35;
wire    ap_block_state55_pp6_stage0_iter36;
wire    ap_block_pp6_stage0_11001;
reg   [5:0] i_2_reg_1381_pp6_iter2_reg;
reg   [5:0] i_2_reg_1381_pp6_iter3_reg;
reg   [5:0] i_2_reg_1381_pp6_iter4_reg;
reg   [5:0] i_2_reg_1381_pp6_iter5_reg;
reg   [5:0] i_2_reg_1381_pp6_iter6_reg;
reg   [5:0] i_2_reg_1381_pp6_iter7_reg;
reg   [5:0] i_2_reg_1381_pp6_iter8_reg;
reg   [5:0] i_2_reg_1381_pp6_iter9_reg;
reg   [5:0] i_2_reg_1381_pp6_iter10_reg;
reg   [5:0] i_2_reg_1381_pp6_iter11_reg;
reg   [5:0] i_2_reg_1381_pp6_iter12_reg;
reg   [5:0] i_2_reg_1381_pp6_iter13_reg;
reg   [5:0] i_2_reg_1381_pp6_iter14_reg;
reg   [5:0] i_2_reg_1381_pp6_iter15_reg;
reg   [5:0] i_2_reg_1381_pp6_iter16_reg;
reg   [5:0] i_2_reg_1381_pp6_iter17_reg;
reg   [5:0] i_2_reg_1381_pp6_iter18_reg;
reg   [5:0] i_2_reg_1381_pp6_iter19_reg;
reg   [5:0] i_2_reg_1381_pp6_iter20_reg;
reg   [5:0] i_2_reg_1381_pp6_iter21_reg;
reg   [5:0] i_2_reg_1381_pp6_iter22_reg;
reg   [5:0] i_2_reg_1381_pp6_iter23_reg;
reg   [5:0] i_2_reg_1381_pp6_iter24_reg;
reg   [5:0] i_2_reg_1381_pp6_iter25_reg;
reg   [5:0] i_2_reg_1381_pp6_iter26_reg;
reg   [5:0] i_2_reg_1381_pp6_iter27_reg;
reg   [5:0] i_2_reg_1381_pp6_iter28_reg;
reg   [5:0] i_2_reg_1381_pp6_iter29_reg;
reg   [5:0] i_2_reg_1381_pp6_iter30_reg;
reg   [5:0] i_2_reg_1381_pp6_iter31_reg;
reg   [5:0] i_2_reg_1381_pp6_iter32_reg;
reg   [5:0] i_2_reg_1381_pp6_iter33_reg;
reg   [5:0] i_2_reg_1381_pp6_iter34_reg;
reg   [5:0] i_2_reg_1381_pp6_iter35_reg;
reg   [5:0] i_3_reg_1431;
reg   [31:0] grp_load_fu_1442_p1;
reg   [31:0] reg_1682;
reg    ap_enable_reg_pp5_iter3;
wire    ap_block_state13_pp5_stage0_iter0;
wire    ap_block_state14_pp5_stage0_iter1;
wire    ap_block_state15_pp5_stage0_iter2;
wire    ap_block_state16_pp5_stage0_iter3;
wire    ap_block_state17_pp5_stage0_iter4;
wire    ap_block_pp5_stage0_11001;
reg   [0:0] icmp_ln30_reg_4168;
reg   [0:0] icmp_ln30_reg_4168_pp5_iter2_reg;
wire    ap_CS_fsm_state18;
reg   [31:0] grp_load_fu_1446_p1;
reg   [31:0] reg_1686;
reg   [31:0] grp_load_fu_1450_p1;
reg   [31:0] reg_1690;
reg   [31:0] grp_load_fu_1454_p1;
reg   [31:0] reg_1694;
reg   [31:0] grp_load_fu_1458_p1;
reg   [31:0] reg_1698;
reg   [31:0] grp_load_fu_1462_p1;
reg   [31:0] reg_1702;
reg   [31:0] grp_load_fu_1466_p1;
reg   [31:0] reg_1706;
reg   [31:0] grp_load_fu_1470_p1;
reg   [31:0] reg_1710;
reg   [31:0] grp_load_fu_1474_p1;
reg   [31:0] reg_1714;
reg   [31:0] grp_load_fu_1478_p1;
reg   [31:0] reg_1718;
reg   [31:0] grp_load_fu_1482_p1;
reg   [31:0] reg_1722;
reg   [31:0] grp_load_fu_1486_p1;
reg   [31:0] reg_1726;
reg   [31:0] grp_load_fu_1490_p1;
reg   [31:0] reg_1730;
reg   [31:0] grp_load_fu_1494_p1;
reg   [31:0] reg_1734;
reg   [31:0] grp_load_fu_1498_p1;
reg   [31:0] reg_1738;
reg   [31:0] grp_load_fu_1502_p1;
reg   [31:0] reg_1742;
reg   [31:0] grp_load_fu_1506_p1;
reg   [31:0] reg_1746;
reg   [31:0] grp_load_fu_1510_p1;
reg   [31:0] reg_1750;
reg   [31:0] grp_load_fu_1514_p1;
reg   [31:0] reg_1754;
reg   [31:0] grp_load_fu_1518_p1;
reg   [31:0] reg_1758;
reg   [31:0] grp_load_fu_1522_p1;
reg   [31:0] reg_1762;
reg   [31:0] grp_load_fu_1526_p1;
reg   [31:0] reg_1766;
reg   [31:0] grp_load_fu_1530_p1;
reg   [31:0] reg_1770;
reg   [31:0] grp_load_fu_1534_p1;
reg   [31:0] reg_1774;
reg   [31:0] grp_load_fu_1538_p1;
reg   [31:0] reg_1778;
reg   [31:0] grp_load_fu_1542_p1;
reg   [31:0] reg_1782;
reg   [31:0] grp_load_fu_1546_p1;
reg   [31:0] reg_1786;
reg   [31:0] grp_load_fu_1550_p1;
reg   [31:0] reg_1790;
reg   [31:0] grp_load_fu_1554_p1;
reg   [31:0] reg_1794;
reg   [31:0] grp_load_fu_1558_p1;
reg   [31:0] reg_1798;
reg   [31:0] grp_load_fu_1562_p1;
reg   [31:0] reg_1802;
reg   [31:0] grp_load_fu_1566_p1;
reg   [31:0] reg_1806;
reg   [31:0] grp_load_fu_1570_p1;
reg   [31:0] reg_1810;
reg   [31:0] grp_load_fu_1574_p1;
reg   [31:0] reg_1814;
reg   [31:0] grp_load_fu_1578_p1;
reg   [31:0] reg_1818;
reg   [31:0] grp_load_fu_1582_p1;
reg   [31:0] reg_1822;
reg   [31:0] grp_load_fu_1586_p1;
reg   [31:0] reg_1826;
reg   [31:0] grp_load_fu_1590_p1;
reg   [31:0] reg_1830;
reg   [31:0] grp_load_fu_1594_p1;
reg   [31:0] reg_1834;
reg   [31:0] grp_load_fu_1598_p1;
reg   [31:0] reg_1838;
reg   [31:0] grp_load_fu_1602_p1;
reg   [31:0] reg_1842;
reg   [31:0] grp_load_fu_1606_p1;
reg   [31:0] reg_1846;
reg   [31:0] grp_load_fu_1610_p1;
reg   [31:0] reg_1850;
reg   [31:0] grp_load_fu_1614_p1;
reg   [31:0] reg_1854;
reg   [31:0] grp_load_fu_1618_p1;
reg   [31:0] reg_1858;
reg   [31:0] grp_load_fu_1622_p1;
reg   [31:0] reg_1862;
reg   [31:0] grp_load_fu_1626_p1;
reg   [31:0] reg_1866;
reg   [31:0] grp_load_fu_1630_p1;
reg   [31:0] reg_1870;
reg   [31:0] grp_load_fu_1634_p1;
reg   [31:0] reg_1874;
reg   [31:0] grp_load_fu_1638_p1;
reg   [31:0] reg_1878;
reg   [31:0] grp_load_fu_1642_p1;
reg   [31:0] reg_1882;
reg   [31:0] grp_load_fu_1646_p1;
reg   [31:0] reg_1886;
reg   [31:0] grp_load_fu_1650_p1;
reg   [31:0] reg_1890;
reg   [31:0] grp_load_fu_1654_p1;
reg   [31:0] reg_1894;
reg   [31:0] grp_load_fu_1658_p1;
reg   [31:0] reg_1898;
reg   [31:0] grp_load_fu_1662_p1;
reg   [31:0] reg_1902;
reg   [31:0] grp_load_fu_1666_p1;
reg   [31:0] reg_1906;
reg   [31:0] grp_load_fu_1670_p1;
reg   [31:0] reg_1910;
reg   [31:0] grp_load_fu_1674_p1;
reg   [31:0] reg_1914;
reg   [31:0] grp_load_fu_1678_p1;
reg   [31:0] reg_1918;
wire   [63:0] zext_ln15_fu_1922_p1;
reg   [63:0] zext_ln15_reg_4022;
wire   [9:0] add_ln18_fu_1950_p2;
reg   [9:0] add_ln18_reg_4030;
wire    ap_CS_fsm_state2;
wire   [0:0] icmp_ln15_fu_1956_p2;
reg   [0:0] icmp_ln15_reg_4035;
wire   [5:0] add_ln16_fu_1961_p2;
reg    ap_block_state3;
wire   [12:0] add_ln18_8_fu_1987_p2;
wire   [5:0] idx_urem_fu_2034_p3;
wire   [9:0] add_ln18_1_fu_2072_p2;
reg   [9:0] add_ln18_1_reg_4060;
wire    ap_CS_fsm_state4;
wire   [0:0] icmp_ln15_1_fu_2078_p2;
reg   [0:0] icmp_ln15_1_reg_4065;
wire   [5:0] add_ln16_1_fu_2083_p2;
reg    ap_block_state5;
wire   [12:0] add_ln18_9_fu_2109_p2;
wire   [5:0] idx_urem20_fu_2156_p3;
wire   [9:0] add_ln18_3_fu_2194_p2;
reg   [9:0] add_ln18_3_reg_4090;
wire    ap_CS_fsm_state6;
wire   [0:0] icmp_ln15_2_fu_2200_p2;
reg   [0:0] icmp_ln15_2_reg_4095;
wire   [5:0] add_ln16_2_fu_2205_p2;
reg    ap_block_state7;
wire   [12:0] add_ln18_10_fu_2231_p2;
wire   [5:0] idx_urem25_fu_2278_p3;
wire   [9:0] add_ln18_5_fu_2316_p2;
reg   [9:0] add_ln18_5_reg_4120;
wire    ap_CS_fsm_state8;
wire   [0:0] icmp_ln15_3_fu_2322_p2;
wire   [5:0] add_ln16_3_fu_2327_p2;
reg    ap_block_state9;
wire   [12:0] add_ln18_11_fu_2353_p2;
wire   [5:0] idx_urem30_fu_2400_p3;
wire   [63:0] add_ln15_fu_2408_p2;
wire    ap_CS_fsm_state10;
wire   [5:0] add_ln22_fu_2414_p2;
reg    ap_block_state11;
wire   [31:0] add_ln30_fu_2436_p2;
wire    ap_CS_fsm_pp5_stage0;
reg    ap_enable_reg_pp5_iter0;
wire   [0:0] icmp_ln30_fu_2442_p2;
reg   [0:0] icmp_ln30_reg_4168_pp5_iter1_reg;
reg   [0:0] icmp_ln30_reg_4168_pp5_iter3_reg;
wire   [15:0] zext_ln32_fu_2636_p1;
wire   [5:0] add_ln36_fu_3180_p2;
reg   [5:0] add_ln36_reg_4841;
reg    ap_enable_reg_pp6_iter0;
wire   [0:0] icmp_ln36_fu_3186_p2;
reg   [0:0] icmp_ln36_reg_4846;
reg   [0:0] icmp_ln36_reg_4846_pp6_iter1_reg;
reg   [0:0] icmp_ln36_reg_4846_pp6_iter2_reg;
reg   [0:0] icmp_ln36_reg_4846_pp6_iter3_reg;
reg   [0:0] icmp_ln36_reg_4846_pp6_iter4_reg;
reg   [0:0] icmp_ln36_reg_4846_pp6_iter5_reg;
reg   [0:0] icmp_ln36_reg_4846_pp6_iter6_reg;
reg   [0:0] icmp_ln36_reg_4846_pp6_iter7_reg;
reg   [0:0] icmp_ln36_reg_4846_pp6_iter8_reg;
reg   [0:0] icmp_ln36_reg_4846_pp6_iter9_reg;
reg   [0:0] icmp_ln36_reg_4846_pp6_iter10_reg;
reg   [0:0] icmp_ln36_reg_4846_pp6_iter11_reg;
reg   [0:0] icmp_ln36_reg_4846_pp6_iter12_reg;
reg   [0:0] icmp_ln36_reg_4846_pp6_iter13_reg;
reg   [0:0] icmp_ln36_reg_4846_pp6_iter14_reg;
reg   [0:0] icmp_ln36_reg_4846_pp6_iter15_reg;
reg   [0:0] icmp_ln36_reg_4846_pp6_iter16_reg;
reg   [0:0] icmp_ln36_reg_4846_pp6_iter17_reg;
reg   [0:0] icmp_ln36_reg_4846_pp6_iter18_reg;
reg   [0:0] icmp_ln36_reg_4846_pp6_iter19_reg;
reg   [0:0] icmp_ln36_reg_4846_pp6_iter20_reg;
reg   [0:0] icmp_ln36_reg_4846_pp6_iter21_reg;
reg   [0:0] icmp_ln36_reg_4846_pp6_iter22_reg;
reg   [0:0] icmp_ln36_reg_4846_pp6_iter23_reg;
reg   [0:0] icmp_ln36_reg_4846_pp6_iter24_reg;
reg   [0:0] icmp_ln36_reg_4846_pp6_iter25_reg;
reg   [0:0] icmp_ln36_reg_4846_pp6_iter26_reg;
reg   [0:0] icmp_ln36_reg_4846_pp6_iter27_reg;
reg   [0:0] icmp_ln36_reg_4846_pp6_iter28_reg;
reg   [0:0] icmp_ln36_reg_4846_pp6_iter29_reg;
reg   [0:0] icmp_ln36_reg_4846_pp6_iter30_reg;
reg   [0:0] icmp_ln36_reg_4846_pp6_iter31_reg;
reg   [0:0] icmp_ln36_reg_4846_pp6_iter32_reg;
reg   [0:0] icmp_ln36_reg_4846_pp6_iter33_reg;
reg   [0:0] icmp_ln36_reg_4846_pp6_iter34_reg;
reg   [0:0] icmp_ln36_reg_4846_pp6_iter35_reg;
wire   [3:0] trunc_ln41_fu_3192_p1;
wire   [31:0] tmp_16_fu_3206_p5;
wire   [31:0] tmp_15_fu_3218_p5;
wire   [31:0] tmp_14_fu_3230_p5;
wire   [31:0] tmp_13_fu_3242_p6;
wire   [31:0] tmp_12_fu_3256_p6;
wire   [31:0] tmp_11_fu_3270_p6;
wire   [31:0] tmp_10_fu_3284_p6;
wire   [31:0] tmp_s_fu_3298_p6;
wire   [31:0] tmp_9_fu_3312_p6;
wire   [31:0] tmp_8_fu_3326_p6;
wire   [31:0] tmp_7_fu_3340_p6;
wire   [31:0] tmp_6_fu_3354_p6;
wire   [31:0] tmp_5_fu_3368_p6;
wire   [31:0] tmp_4_fu_3382_p6;
wire   [31:0] tmp_3_fu_3396_p6;
wire   [31:0] tmp_2_fu_3410_p5;
wire   [5:0] add_ln47_fu_3438_p2;
reg    ap_enable_reg_pp7_iter0;
wire    ap_block_state57_pp7_stage0_iter0;
reg    ap_block_state58_pp7_stage0_iter1;
reg    ap_block_state58_io;
reg    ap_block_state59_pp7_stage0_iter2;
reg    ap_block_state59_io;
reg    ap_block_pp7_stage0_11001;
wire   [0:0] icmp_ln47_fu_3444_p2;
wire   [0:0] stream_l_last_V_fu_3455_p2;
reg   [0:0] stream_l_last_V_reg_4948;
wire    ap_CS_fsm_state12;
wire    ap_block_pp5_stage0_subdone;
reg    ap_condition_pp5_exit_iter0_state13;
reg    ap_enable_reg_pp5_iter1;
reg    ap_enable_reg_pp5_iter2;
reg    ap_enable_reg_pp5_iter4;
wire    ap_block_pp6_stage0_subdone;
reg    ap_condition_pp6_exit_iter0_state19;
reg    ap_enable_reg_pp6_iter1;
reg    ap_enable_reg_pp6_iter2;
reg    ap_enable_reg_pp6_iter3;
reg    ap_enable_reg_pp6_iter4;
reg    ap_enable_reg_pp6_iter5;
reg    ap_enable_reg_pp6_iter6;
reg    ap_enable_reg_pp6_iter7;
reg    ap_enable_reg_pp6_iter8;
reg    ap_enable_reg_pp6_iter9;
reg    ap_enable_reg_pp6_iter10;
reg    ap_enable_reg_pp6_iter11;
reg    ap_enable_reg_pp6_iter12;
reg    ap_enable_reg_pp6_iter13;
reg    ap_enable_reg_pp6_iter14;
reg    ap_enable_reg_pp6_iter15;
reg    ap_enable_reg_pp6_iter16;
reg    ap_enable_reg_pp6_iter17;
reg    ap_enable_reg_pp6_iter18;
reg    ap_enable_reg_pp6_iter19;
reg    ap_enable_reg_pp6_iter20;
reg    ap_enable_reg_pp6_iter21;
reg    ap_enable_reg_pp6_iter22;
reg    ap_enable_reg_pp6_iter23;
reg    ap_enable_reg_pp6_iter24;
reg    ap_enable_reg_pp6_iter25;
reg    ap_enable_reg_pp6_iter26;
reg    ap_enable_reg_pp6_iter27;
reg    ap_enable_reg_pp6_iter28;
reg    ap_enable_reg_pp6_iter29;
reg    ap_enable_reg_pp6_iter30;
reg    ap_enable_reg_pp6_iter31;
reg    ap_enable_reg_pp6_iter32;
reg    ap_enable_reg_pp6_iter33;
reg    ap_enable_reg_pp6_iter34;
reg    ap_enable_reg_pp6_iter35;
reg    ap_enable_reg_pp6_iter36;
wire    ap_CS_fsm_state56;
reg    ap_block_pp7_stage0_subdone;
reg    ap_condition_pp7_exit_iter0_state57;
reg   [9:0] vec_l_0_address0;
reg    vec_l_0_ce0;
reg    vec_l_0_we0;
reg   [7:0] vec_l_0_d0;
wire   [7:0] vec_l_0_q0;
wire   [9:0] vec_l_0_address1;
reg    vec_l_0_ce1;
wire   [7:0] vec_l_0_q1;
wire   [9:0] vec_l_0_address2;
reg    vec_l_0_ce2;
wire   [7:0] vec_l_0_q2;
wire   [9:0] vec_l_0_address3;
reg    vec_l_0_ce3;
wire   [7:0] vec_l_0_q3;
wire   [9:0] vec_l_0_address4;
reg    vec_l_0_ce4;
wire   [7:0] vec_l_0_q4;
wire   [9:0] vec_l_0_address5;
reg    vec_l_0_ce5;
wire   [7:0] vec_l_0_q5;
wire   [9:0] vec_l_0_address6;
reg    vec_l_0_ce6;
wire   [7:0] vec_l_0_q6;
wire   [9:0] vec_l_0_address7;
reg    vec_l_0_ce7;
wire   [7:0] vec_l_0_q7;
wire   [9:0] vec_l_0_address8;
reg    vec_l_0_ce8;
wire   [7:0] vec_l_0_q8;
wire   [9:0] vec_l_0_address9;
reg    vec_l_0_ce9;
wire   [7:0] vec_l_0_q9;
reg   [9:0] vec_l_1_address0;
reg    vec_l_1_ce0;
reg    vec_l_1_we0;
reg   [7:0] vec_l_1_d0;
wire   [7:0] vec_l_1_q0;
wire   [9:0] vec_l_1_address1;
reg    vec_l_1_ce1;
wire   [7:0] vec_l_1_q1;
wire   [9:0] vec_l_1_address2;
reg    vec_l_1_ce2;
wire   [7:0] vec_l_1_q2;
wire   [9:0] vec_l_1_address3;
reg    vec_l_1_ce3;
wire   [7:0] vec_l_1_q3;
wire   [9:0] vec_l_1_address4;
reg    vec_l_1_ce4;
wire   [7:0] vec_l_1_q4;
wire   [9:0] vec_l_1_address5;
reg    vec_l_1_ce5;
wire   [7:0] vec_l_1_q5;
wire   [9:0] vec_l_1_address6;
reg    vec_l_1_ce6;
wire   [7:0] vec_l_1_q6;
wire   [9:0] vec_l_1_address7;
reg    vec_l_1_ce7;
wire   [7:0] vec_l_1_q7;
wire   [9:0] vec_l_1_address8;
reg    vec_l_1_ce8;
wire   [7:0] vec_l_1_q8;
wire   [9:0] vec_l_1_address9;
reg    vec_l_1_ce9;
wire   [7:0] vec_l_1_q9;
reg   [9:0] vec_l_2_address0;
reg    vec_l_2_ce0;
reg    vec_l_2_we0;
reg   [7:0] vec_l_2_d0;
wire   [7:0] vec_l_2_q0;
wire   [9:0] vec_l_2_address1;
reg    vec_l_2_ce1;
wire   [7:0] vec_l_2_q1;
wire   [9:0] vec_l_2_address2;
reg    vec_l_2_ce2;
wire   [7:0] vec_l_2_q2;
wire   [9:0] vec_l_2_address3;
reg    vec_l_2_ce3;
wire   [7:0] vec_l_2_q3;
wire   [9:0] vec_l_2_address4;
reg    vec_l_2_ce4;
wire   [7:0] vec_l_2_q4;
wire   [9:0] vec_l_2_address5;
reg    vec_l_2_ce5;
wire   [7:0] vec_l_2_q5;
wire   [9:0] vec_l_2_address6;
reg    vec_l_2_ce6;
wire   [7:0] vec_l_2_q6;
wire   [9:0] vec_l_2_address7;
reg    vec_l_2_ce7;
wire   [7:0] vec_l_2_q7;
wire   [9:0] vec_l_2_address8;
reg    vec_l_2_ce8;
wire   [7:0] vec_l_2_q8;
wire   [9:0] vec_l_2_address9;
reg    vec_l_2_ce9;
wire   [7:0] vec_l_2_q9;
reg   [9:0] vec_l_3_address0;
reg    vec_l_3_ce0;
reg    vec_l_3_we0;
reg   [7:0] vec_l_3_d0;
wire   [7:0] vec_l_3_q0;
wire   [9:0] vec_l_3_address1;
reg    vec_l_3_ce1;
wire   [7:0] vec_l_3_q1;
wire   [9:0] vec_l_3_address2;
reg    vec_l_3_ce2;
wire   [7:0] vec_l_3_q2;
wire   [9:0] vec_l_3_address3;
reg    vec_l_3_ce3;
wire   [7:0] vec_l_3_q3;
wire   [9:0] vec_l_3_address4;
reg    vec_l_3_ce4;
wire   [7:0] vec_l_3_q4;
wire   [9:0] vec_l_3_address5;
reg    vec_l_3_ce5;
wire   [7:0] vec_l_3_q5;
wire   [9:0] vec_l_3_address6;
reg    vec_l_3_ce6;
wire   [7:0] vec_l_3_q6;
wire   [9:0] vec_l_3_address7;
reg    vec_l_3_ce7;
wire   [7:0] vec_l_3_q7;
wire   [9:0] vec_l_3_address8;
reg    vec_l_3_ce8;
wire   [7:0] vec_l_3_q8;
wire   [9:0] vec_l_3_address9;
reg    vec_l_3_ce9;
wire   [7:0] vec_l_3_q9;
reg   [9:0] vec_l_4_address0;
reg    vec_l_4_ce0;
reg    vec_l_4_we0;
reg   [7:0] vec_l_4_d0;
wire   [7:0] vec_l_4_q0;
wire   [9:0] vec_l_4_address1;
reg    vec_l_4_ce1;
wire   [7:0] vec_l_4_q1;
wire   [9:0] vec_l_4_address2;
reg    vec_l_4_ce2;
wire   [7:0] vec_l_4_q2;
wire   [9:0] vec_l_4_address3;
reg    vec_l_4_ce3;
wire   [7:0] vec_l_4_q3;
wire   [9:0] vec_l_4_address4;
reg    vec_l_4_ce4;
wire   [7:0] vec_l_4_q4;
wire   [9:0] vec_l_4_address5;
reg    vec_l_4_ce5;
wire   [7:0] vec_l_4_q5;
wire   [9:0] vec_l_4_address6;
reg    vec_l_4_ce6;
wire   [7:0] vec_l_4_q6;
wire   [9:0] vec_l_4_address7;
reg    vec_l_4_ce7;
wire   [7:0] vec_l_4_q7;
wire   [9:0] vec_l_4_address8;
reg    vec_l_4_ce8;
wire   [7:0] vec_l_4_q8;
wire   [9:0] vec_l_4_address9;
reg    vec_l_4_ce9;
wire   [7:0] vec_l_4_q9;
reg   [9:0] vec_l_5_address0;
reg    vec_l_5_ce0;
reg    vec_l_5_we0;
reg   [7:0] vec_l_5_d0;
wire   [7:0] vec_l_5_q0;
wire   [9:0] vec_l_5_address1;
reg    vec_l_5_ce1;
wire   [7:0] vec_l_5_q1;
wire   [9:0] vec_l_5_address2;
reg    vec_l_5_ce2;
wire   [7:0] vec_l_5_q2;
wire   [9:0] vec_l_5_address3;
reg    vec_l_5_ce3;
wire   [7:0] vec_l_5_q3;
wire   [9:0] vec_l_5_address4;
reg    vec_l_5_ce4;
wire   [7:0] vec_l_5_q4;
wire   [9:0] vec_l_5_address5;
reg    vec_l_5_ce5;
wire   [7:0] vec_l_5_q5;
wire   [9:0] vec_l_5_address6;
reg    vec_l_5_ce6;
wire   [7:0] vec_l_5_q6;
wire   [9:0] vec_l_5_address7;
reg    vec_l_5_ce7;
wire   [7:0] vec_l_5_q7;
wire   [9:0] vec_l_5_address8;
reg    vec_l_5_ce8;
wire   [7:0] vec_l_5_q8;
wire   [9:0] vec_l_5_address9;
reg    vec_l_5_ce9;
wire   [7:0] vec_l_5_q9;
reg   [5:0] coeffs_l_address0;
reg    coeffs_l_ce0;
reg    coeffs_l_we0;
wire   [7:0] coeffs_l_d0;
wire   [7:0] coeffs_l_q0;
reg   [5:0] out_l_address0;
reg    out_l_ce0;
reg    out_l_we0;
wire   [4:0] out_l_d0;
wire   [4:0] out_l_q0;
reg   [63:0] row_0_reg_1215;
reg   [5:0] m_0_reg_1227;
reg   [12:0] phi_mul_reg_1238;
reg   [5:0] phi_urem_reg_1249;
reg   [5:0] m_1_reg_1260;
reg   [12:0] phi_mul16_reg_1271;
reg   [5:0] phi_urem18_reg_1282;
reg   [5:0] m_2_reg_1293;
reg   [12:0] phi_mul21_reg_1304;
reg   [5:0] phi_urem23_reg_1315;
reg   [5:0] m_3_reg_1326;
reg   [12:0] phi_mul26_reg_1337;
reg   [5:0] phi_urem28_reg_1348;
reg   [5:0] i_reg_1359;
reg   [5:0] ap_phi_mux_i_2_phi_fu_1385_p4;
wire    ap_block_pp6_stage0;
wire   [31:0] ap_phi_reg_pp6_iter0_phi_ln41_reg_1393;
reg   [31:0] ap_phi_reg_pp6_iter1_phi_ln41_reg_1393;
wire   [63:0] zext_ln18_1_fu_2012_p1;
wire   [63:0] zext_ln18_3_fu_2134_p1;
wire   [63:0] zext_ln18_5_fu_2256_p1;
wire   [63:0] zext_ln18_7_fu_2378_p1;
wire   [63:0] i_cast_fu_2426_p1;
wire   [63:0] zext_ln32_121_fu_2482_p1;
wire    ap_block_pp5_stage0;
wire   [63:0] zext_ln32_122_fu_2498_p1;
wire   [63:0] zext_ln32_123_fu_2514_p1;
wire   [63:0] zext_ln32_124_fu_2530_p1;
wire   [63:0] zext_ln32_125_fu_2546_p1;
wire   [63:0] zext_ln32_126_fu_2562_p1;
wire   [63:0] zext_ln32_127_fu_2578_p1;
wire   [63:0] zext_ln32_128_fu_2594_p1;
wire   [63:0] zext_ln32_129_fu_2610_p1;
wire   [63:0] zext_ln32_130_fu_2626_p1;
wire   [63:0] i_1_cast_fu_2447_p1;
wire   [63:0] i_2_cast_fu_3428_p1;
wire   [63:0] i_3_cast_fu_3450_p1;
wire   [31:0] grp_fu_3612_p3;
reg   [31:0] ap_sig_allocacmp_accumulators_15_0_load;
wire   [31:0] grp_fu_3756_p3;
reg   [31:0] ap_sig_allocacmp_accumulators_15_1_load;
wire   [31:0] grp_fu_3900_p3;
reg   [31:0] ap_sig_allocacmp_accumulators_15_2_load;
wire   [31:0] grp_fu_3477_p3;
reg   [31:0] ap_sig_allocacmp_accumulators_0_0_load;
wire   [31:0] grp_fu_3621_p3;
reg   [31:0] ap_sig_allocacmp_accumulators_0_1_load;
wire   [31:0] grp_fu_3765_p3;
reg   [31:0] ap_sig_allocacmp_accumulators_0_2_load;
wire   [31:0] grp_fu_3909_p3;
reg   [31:0] ap_sig_allocacmp_accumulators_0_3_load;
wire   [31:0] grp_fu_3486_p3;
reg   [31:0] ap_sig_allocacmp_accumulators_1_0_load;
wire   [31:0] grp_fu_3630_p3;
reg   [31:0] ap_sig_allocacmp_accumulators_1_1_load;
wire   [31:0] grp_fu_3774_p3;
reg   [31:0] ap_sig_allocacmp_accumulators_1_2_load;
wire   [31:0] grp_fu_3918_p3;
reg   [31:0] ap_sig_allocacmp_accumulators_1_3_load;
wire   [31:0] grp_fu_3495_p3;
reg   [31:0] ap_sig_allocacmp_accumulators_2_0_load;
wire   [31:0] grp_fu_3639_p3;
reg   [31:0] ap_sig_allocacmp_accumulators_2_1_load;
wire   [31:0] grp_fu_3783_p3;
reg   [31:0] ap_sig_allocacmp_accumulators_2_2_load;
wire   [31:0] grp_fu_3927_p3;
reg   [31:0] ap_sig_allocacmp_accumulators_2_3_load;
wire   [31:0] grp_fu_3504_p3;
reg   [31:0] ap_sig_allocacmp_accumulators_3_0_load;
wire   [31:0] grp_fu_3648_p3;
reg   [31:0] ap_sig_allocacmp_accumulators_3_1_load;
wire   [31:0] grp_fu_3792_p3;
reg   [31:0] ap_sig_allocacmp_accumulators_3_2_load;
wire   [31:0] grp_fu_3936_p3;
reg   [31:0] ap_sig_allocacmp_accumulators_3_3_load;
wire   [31:0] grp_fu_3513_p3;
reg   [31:0] ap_sig_allocacmp_accumulators_4_0_load;
wire   [31:0] grp_fu_3657_p3;
reg   [31:0] ap_sig_allocacmp_accumulators_4_1_load;
wire   [31:0] grp_fu_3801_p3;
reg   [31:0] ap_sig_allocacmp_accumulators_4_2_load;
wire   [31:0] grp_fu_3945_p3;
reg   [31:0] ap_sig_allocacmp_accumulators_4_3_load;
wire   [31:0] grp_fu_3522_p3;
reg   [31:0] ap_sig_allocacmp_accumulators_5_0_load;
wire   [31:0] grp_fu_3666_p3;
reg   [31:0] ap_sig_allocacmp_accumulators_5_1_load;
wire   [31:0] grp_fu_3810_p3;
reg   [31:0] ap_sig_allocacmp_accumulators_5_2_load;
wire   [31:0] grp_fu_3954_p3;
reg   [31:0] ap_sig_allocacmp_accumulators_5_3_load;
wire   [31:0] grp_fu_3531_p3;
reg   [31:0] ap_sig_allocacmp_accumulators_6_0_load;
wire   [31:0] grp_fu_3675_p3;
reg   [31:0] ap_sig_allocacmp_accumulators_6_1_load;
wire   [31:0] grp_fu_3819_p3;
reg   [31:0] ap_sig_allocacmp_accumulators_6_2_load;
wire   [31:0] grp_fu_3963_p3;
reg   [31:0] ap_sig_allocacmp_accumulators_6_3_load;
wire   [31:0] grp_fu_3540_p3;
reg   [31:0] ap_sig_allocacmp_accumulators_7_0_load;
wire   [31:0] grp_fu_3684_p3;
reg   [31:0] ap_sig_allocacmp_accumulators_7_1_load;
wire   [31:0] grp_fu_3828_p3;
reg   [31:0] ap_sig_allocacmp_accumulators_7_2_load;
wire   [31:0] grp_fu_3972_p3;
reg   [31:0] ap_sig_allocacmp_accumulators_7_3_load;
wire   [31:0] grp_fu_3549_p3;
reg   [31:0] ap_sig_allocacmp_accumulators_8_0_load;
wire   [31:0] grp_fu_3693_p3;
reg   [31:0] ap_sig_allocacmp_accumulators_8_1_load;
wire   [31:0] grp_fu_3837_p3;
reg   [31:0] ap_sig_allocacmp_accumulators_8_2_load;
wire   [31:0] grp_fu_3981_p3;
reg   [31:0] ap_sig_allocacmp_accumulators_8_3_load;
wire   [31:0] grp_fu_3558_p3;
reg   [31:0] ap_sig_allocacmp_accumulators_9_0_load;
wire   [31:0] grp_fu_3702_p3;
reg   [31:0] ap_sig_allocacmp_accumulators_9_1_load;
wire   [31:0] grp_fu_3846_p3;
reg   [31:0] ap_sig_allocacmp_accumulators_9_2_load;
wire   [31:0] grp_fu_3990_p3;
reg   [31:0] ap_sig_allocacmp_accumulators_9_3_load;
wire   [31:0] grp_fu_3567_p3;
reg   [31:0] ap_sig_allocacmp_accumulators_10_0_load;
wire   [31:0] grp_fu_3711_p3;
reg   [31:0] ap_sig_allocacmp_accumulators_10_1_load;
wire   [31:0] grp_fu_3855_p3;
reg   [31:0] ap_sig_allocacmp_accumulators_10_2_load;
wire   [31:0] grp_fu_3999_p3;
reg   [31:0] ap_sig_allocacmp_accumulators_10_3_load;
wire   [31:0] grp_fu_3576_p3;
reg   [31:0] ap_sig_allocacmp_accumulators_11_0_load;
wire   [31:0] grp_fu_3720_p3;
reg   [31:0] ap_sig_allocacmp_accumulators_11_1_load;
wire   [31:0] grp_fu_3864_p3;
reg   [31:0] ap_sig_allocacmp_accumulators_11_2_load;
wire   [31:0] grp_fu_4008_p3;
reg   [31:0] ap_sig_allocacmp_accumulators_11_3_load;
wire   [31:0] grp_fu_3585_p3;
reg   [31:0] ap_sig_allocacmp_accumulators_12_0_load;
wire   [31:0] grp_fu_3729_p3;
reg   [31:0] ap_sig_allocacmp_accumulators_12_1_load;
wire   [31:0] grp_fu_3873_p3;
reg   [31:0] ap_sig_allocacmp_accumulators_12_2_load;
wire   [31:0] grp_fu_3594_p3;
reg   [31:0] ap_sig_allocacmp_accumulators_13_0_load;
wire   [31:0] grp_fu_3738_p3;
reg   [31:0] ap_sig_allocacmp_accumulators_13_1_load;
wire   [31:0] grp_fu_3882_p3;
reg   [31:0] ap_sig_allocacmp_accumulators_13_2_load;
wire   [31:0] grp_fu_3603_p3;
reg   [31:0] ap_sig_allocacmp_accumulators_14_0_load;
wire   [31:0] grp_fu_3747_p3;
reg   [31:0] ap_sig_allocacmp_accumulators_14_1_load;
wire   [31:0] grp_fu_3891_p3;
reg   [31:0] ap_sig_allocacmp_accumulators_14_2_load;
reg    ap_block_pp7_stage0_01001;
wire   [2:0] trunc_ln18_4_fu_1983_p1;
wire   [7:0] trunc_ln17_fu_1973_p1;
wire   [2:0] trunc_ln18_7_fu_2105_p1;
wire   [7:0] trunc_ln17_1_fu_2095_p1;
wire   [2:0] trunc_ln18_10_fu_2227_p1;
wire   [7:0] trunc_ln17_2_fu_2217_p1;
wire   [2:0] trunc_ln18_11_fu_2349_p1;
wire   [7:0] trunc_ln17_3_fu_2339_p1;
wire   [6:0] trunc_ln18_fu_1926_p1;
wire   [8:0] trunc_ln18_1_fu_1938_p1;
wire   [9:0] p_shl_cast_fu_1930_p3;
wire   [9:0] p_shl1_cast_fu_1942_p3;
wire   [3:0] tmp_fu_1993_p4;
wire   [9:0] zext_ln18_fu_2003_p1;
wire   [9:0] add_ln18_2_fu_2007_p2;
wire   [5:0] next_urem_fu_2022_p2;
wire   [0:0] empty_17_fu_2028_p2;
wire   [63:0] or_ln15_fu_2042_p2;
wire   [6:0] trunc_ln18_2_fu_2048_p1;
wire   [8:0] trunc_ln18_3_fu_2060_p1;
wire   [9:0] p_shl2_cast_fu_2052_p3;
wire   [9:0] p_shl3_cast_fu_2064_p3;
wire   [3:0] tmp_17_fu_2115_p4;
wire   [9:0] zext_ln18_2_fu_2125_p1;
wire   [9:0] add_ln18_4_fu_2129_p2;
wire   [5:0] next_urem19_fu_2144_p2;
wire   [0:0] empty_19_fu_2150_p2;
wire   [63:0] or_ln15_1_fu_2164_p2;
wire   [6:0] trunc_ln18_5_fu_2170_p1;
wire   [8:0] trunc_ln18_6_fu_2182_p1;
wire   [9:0] p_shl4_cast_fu_2174_p3;
wire   [9:0] p_shl5_cast_fu_2186_p3;
wire   [3:0] tmp_18_fu_2237_p4;
wire   [9:0] zext_ln18_4_fu_2247_p1;
wire   [9:0] add_ln18_6_fu_2251_p2;
wire   [5:0] next_urem24_fu_2266_p2;
wire   [0:0] empty_21_fu_2272_p2;
wire   [63:0] or_ln15_2_fu_2286_p2;
wire   [6:0] trunc_ln18_8_fu_2292_p1;
wire   [8:0] trunc_ln18_9_fu_2304_p1;
wire   [9:0] p_shl8_cast_fu_2296_p3;
wire   [9:0] p_shl9_cast_fu_2308_p3;
wire   [3:0] tmp_20_fu_2359_p4;
wire   [9:0] zext_ln18_6_fu_2369_p1;
wire   [9:0] add_ln18_7_fu_2373_p2;
wire   [5:0] next_urem29_fu_2388_p2;
wire   [0:0] empty_23_fu_2394_p2;
wire   [6:0] trunc_ln32_fu_2452_p1;
wire   [8:0] trunc_ln32_1_fu_2464_p1;
wire   [9:0] tmp_26_cast_fu_2456_p3;
wire   [9:0] tmp_27_cast_fu_2468_p3;
wire   [9:0] add_ln32_60_fu_2476_p2;
wire   [9:0] or_ln32_fu_2492_p2;
wire   [9:0] add_ln32_61_fu_2508_p2;
wire   [9:0] add_ln32_62_fu_2524_p2;
wire   [9:0] add_ln32_63_fu_2540_p2;
wire   [9:0] add_ln32_64_fu_2556_p2;
wire   [9:0] add_ln32_65_fu_2572_p2;
wire   [9:0] add_ln32_66_fu_2588_p2;
wire   [9:0] add_ln32_67_fu_2604_p2;
wire   [9:0] add_ln32_68_fu_2620_p2;
wire   [1:0] tmp_16_fu_3206_p4;
wire   [1:0] tmp_15_fu_3218_p4;
wire   [1:0] tmp_14_fu_3230_p4;
wire   [1:0] tmp_13_fu_3242_p5;
wire   [1:0] tmp_12_fu_3256_p5;
wire   [1:0] tmp_11_fu_3270_p5;
wire   [1:0] tmp_10_fu_3284_p5;
wire   [1:0] tmp_s_fu_3298_p5;
wire   [1:0] tmp_9_fu_3312_p5;
wire   [1:0] tmp_8_fu_3326_p5;
wire   [1:0] tmp_7_fu_3340_p5;
wire   [1:0] tmp_6_fu_3354_p5;
wire   [1:0] tmp_5_fu_3368_p5;
wire   [1:0] tmp_4_fu_3382_p5;
wire   [1:0] tmp_3_fu_3396_p5;
wire   [1:0] tmp_2_fu_3410_p4;
wire   [5:0] grp_fu_3422_p1;
wire   [4:0] grp_fu_3422_p2;
wire   [7:0] zext_ln11_fu_3461_p1;
wire   [8:0] tmp_1_fu_3465_p3;
wire   [7:0] grp_fu_3477_p0;
wire   [7:0] grp_fu_3477_p1;
wire   [7:0] grp_fu_3486_p0;
wire   [7:0] grp_fu_3486_p1;
wire   [7:0] grp_fu_3495_p0;
wire   [7:0] grp_fu_3495_p1;
wire   [7:0] grp_fu_3504_p0;
wire   [7:0] grp_fu_3504_p1;
wire   [7:0] grp_fu_3513_p0;
wire   [7:0] grp_fu_3513_p1;
wire   [7:0] grp_fu_3522_p0;
wire   [7:0] grp_fu_3522_p1;
wire   [7:0] grp_fu_3531_p0;
wire   [7:0] grp_fu_3531_p1;
wire   [7:0] grp_fu_3540_p0;
wire   [7:0] grp_fu_3540_p1;
wire   [7:0] grp_fu_3549_p0;
wire   [7:0] grp_fu_3549_p1;
wire   [7:0] grp_fu_3558_p0;
wire   [7:0] grp_fu_3558_p1;
wire   [7:0] grp_fu_3567_p0;
wire   [7:0] grp_fu_3567_p1;
wire   [7:0] grp_fu_3576_p0;
wire   [7:0] grp_fu_3576_p1;
wire   [7:0] grp_fu_3585_p0;
wire   [7:0] grp_fu_3585_p1;
wire   [7:0] grp_fu_3594_p0;
wire   [7:0] grp_fu_3594_p1;
wire   [7:0] grp_fu_3603_p0;
wire   [7:0] grp_fu_3603_p1;
wire   [7:0] grp_fu_3612_p0;
wire   [7:0] grp_fu_3612_p1;
wire   [7:0] grp_fu_3621_p0;
wire   [7:0] grp_fu_3621_p1;
wire   [7:0] grp_fu_3630_p0;
wire   [7:0] grp_fu_3630_p1;
wire   [7:0] grp_fu_3639_p0;
wire   [7:0] grp_fu_3639_p1;
wire   [7:0] grp_fu_3648_p0;
wire   [7:0] grp_fu_3648_p1;
wire   [7:0] grp_fu_3657_p0;
wire   [7:0] grp_fu_3657_p1;
wire   [7:0] grp_fu_3666_p0;
wire   [7:0] grp_fu_3666_p1;
wire   [7:0] grp_fu_3675_p0;
wire   [7:0] grp_fu_3675_p1;
wire   [7:0] grp_fu_3684_p0;
wire   [7:0] grp_fu_3684_p1;
wire   [7:0] grp_fu_3693_p0;
wire   [7:0] grp_fu_3693_p1;
wire   [7:0] grp_fu_3702_p0;
wire   [7:0] grp_fu_3702_p1;
wire   [7:0] grp_fu_3711_p0;
wire   [7:0] grp_fu_3711_p1;
wire   [7:0] grp_fu_3720_p0;
wire   [7:0] grp_fu_3720_p1;
wire   [7:0] grp_fu_3729_p0;
wire   [7:0] grp_fu_3729_p1;
wire   [7:0] grp_fu_3738_p0;
wire   [7:0] grp_fu_3738_p1;
wire   [7:0] grp_fu_3747_p0;
wire   [7:0] grp_fu_3747_p1;
wire   [7:0] grp_fu_3756_p0;
wire   [7:0] grp_fu_3756_p1;
wire   [7:0] grp_fu_3765_p0;
wire   [7:0] grp_fu_3765_p1;
wire   [7:0] grp_fu_3774_p0;
wire   [7:0] grp_fu_3774_p1;
wire   [7:0] grp_fu_3783_p0;
wire   [7:0] grp_fu_3783_p1;
wire   [7:0] grp_fu_3792_p0;
wire   [7:0] grp_fu_3792_p1;
wire   [7:0] grp_fu_3801_p0;
wire   [7:0] grp_fu_3801_p1;
wire   [7:0] grp_fu_3810_p0;
wire   [7:0] grp_fu_3810_p1;
wire   [7:0] grp_fu_3819_p0;
wire   [7:0] grp_fu_3819_p1;
wire   [7:0] grp_fu_3828_p0;
wire   [7:0] grp_fu_3828_p1;
wire   [7:0] grp_fu_3837_p0;
wire   [7:0] grp_fu_3837_p1;
wire   [7:0] grp_fu_3846_p0;
wire   [7:0] grp_fu_3846_p1;
wire   [7:0] grp_fu_3855_p0;
wire   [7:0] grp_fu_3855_p1;
wire   [7:0] grp_fu_3864_p0;
wire   [7:0] grp_fu_3864_p1;
wire   [7:0] grp_fu_3873_p0;
wire   [7:0] grp_fu_3873_p1;
wire   [7:0] grp_fu_3882_p0;
wire   [7:0] grp_fu_3882_p1;
wire   [7:0] grp_fu_3891_p0;
wire   [7:0] grp_fu_3891_p1;
wire   [7:0] grp_fu_3900_p0;
wire   [7:0] grp_fu_3900_p1;
wire   [7:0] grp_fu_3909_p0;
wire   [7:0] grp_fu_3909_p1;
wire   [7:0] grp_fu_3918_p0;
wire   [7:0] grp_fu_3918_p1;
wire   [7:0] grp_fu_3927_p0;
wire   [7:0] grp_fu_3927_p1;
wire   [7:0] grp_fu_3936_p0;
wire   [7:0] grp_fu_3936_p1;
wire   [7:0] grp_fu_3945_p0;
wire   [7:0] grp_fu_3945_p1;
wire   [7:0] grp_fu_3954_p0;
wire   [7:0] grp_fu_3954_p1;
wire   [7:0] grp_fu_3963_p0;
wire   [7:0] grp_fu_3963_p1;
wire   [7:0] grp_fu_3972_p0;
wire   [7:0] grp_fu_3972_p1;
wire   [7:0] grp_fu_3981_p0;
wire   [7:0] grp_fu_3981_p1;
wire   [7:0] grp_fu_3990_p0;
wire   [7:0] grp_fu_3990_p1;
wire   [7:0] grp_fu_3999_p0;
wire   [7:0] grp_fu_3999_p1;
wire   [7:0] grp_fu_4008_p0;
wire   [7:0] grp_fu_4008_p1;
wire    ap_CS_fsm_state60;
wire    regslice_both_out_V_U_apdone_blk;
reg   [17:0] ap_NS_fsm;
reg    ap_idle_pp5;
wire    ap_enable_pp5;
reg    ap_idle_pp6;
wire    ap_enable_pp6;
reg    ap_idle_pp7;
wire    ap_enable_pp7;
wire    regslice_both_vecs_V_U_apdone_blk;
wire   [15:0] vecs_V_TDATA_int_regslice;
wire    vecs_V_TVALID_int_regslice;
reg    vecs_V_TREADY_int_regslice;
wire    regslice_both_vecs_V_U_ack_in;
wire    regslice_both_coeffs_V_U_apdone_blk;
wire   [15:0] coeffs_V_TDATA_int_regslice;
wire    coeffs_V_TVALID_int_regslice;
reg    coeffs_V_TREADY_int_regslice;
wire    regslice_both_coeffs_V_U_ack_in;
wire   [15:0] out_V_TDATA_int_regslice;
reg    out_V_TVALID_int_regslice;
wire    out_V_TREADY_int_regslice;
wire    regslice_both_out_V_U_vld_out;
wire   [15:0] grp_fu_3477_p00;
wire   [15:0] grp_fu_3486_p00;
wire   [15:0] grp_fu_3495_p00;
wire   [15:0] grp_fu_3504_p00;
wire   [15:0] grp_fu_3513_p00;
wire   [15:0] grp_fu_3522_p00;
wire   [15:0] grp_fu_3531_p00;
wire   [15:0] grp_fu_3540_p00;
wire   [15:0] grp_fu_3549_p00;
wire   [15:0] grp_fu_3558_p00;
wire   [15:0] grp_fu_3567_p00;
wire   [15:0] grp_fu_3576_p00;
wire   [15:0] grp_fu_3585_p00;
wire   [15:0] grp_fu_3594_p00;
wire   [15:0] grp_fu_3603_p00;
wire   [15:0] grp_fu_3612_p00;
wire   [15:0] grp_fu_3621_p00;
wire   [15:0] grp_fu_3630_p00;
wire   [15:0] grp_fu_3639_p00;
wire   [15:0] grp_fu_3648_p00;
wire   [15:0] grp_fu_3657_p00;
wire   [15:0] grp_fu_3666_p00;
wire   [15:0] grp_fu_3675_p00;
wire   [15:0] grp_fu_3684_p00;
wire   [15:0] grp_fu_3693_p00;
wire   [15:0] grp_fu_3702_p00;
wire   [15:0] grp_fu_3711_p00;
wire   [15:0] grp_fu_3720_p00;
wire   [15:0] grp_fu_3729_p00;
wire   [15:0] grp_fu_3738_p00;
wire   [15:0] grp_fu_3747_p00;
wire   [15:0] grp_fu_3756_p00;
wire   [15:0] grp_fu_3765_p00;
wire   [15:0] grp_fu_3774_p00;
wire   [15:0] grp_fu_3783_p00;
wire   [15:0] grp_fu_3792_p00;
wire   [15:0] grp_fu_3801_p00;
wire   [15:0] grp_fu_3810_p00;
wire   [15:0] grp_fu_3819_p00;
wire   [15:0] grp_fu_3828_p00;
wire   [15:0] grp_fu_3837_p00;
wire   [15:0] grp_fu_3846_p00;
wire   [15:0] grp_fu_3855_p00;
wire   [15:0] grp_fu_3864_p00;
wire   [15:0] grp_fu_3873_p00;
wire   [15:0] grp_fu_3882_p00;
wire   [15:0] grp_fu_3891_p00;
wire   [15:0] grp_fu_3900_p00;
wire   [15:0] grp_fu_3909_p00;
wire   [15:0] grp_fu_3918_p00;
wire   [15:0] grp_fu_3927_p00;
wire   [15:0] grp_fu_3936_p00;
wire   [15:0] grp_fu_3945_p00;
wire   [15:0] grp_fu_3954_p00;
wire   [15:0] grp_fu_3963_p00;
wire   [15:0] grp_fu_3972_p00;
wire   [15:0] grp_fu_3981_p00;
wire   [15:0] grp_fu_3990_p00;
wire   [15:0] grp_fu_3999_p00;
wire   [15:0] grp_fu_4008_p00;
reg    ap_condition_818;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 18'd1;
#0 accumulators_15_0 = 32'd0;
#0 accumulators_15_1 = 32'd0;
#0 accumulators_15_2 = 32'd0;
#0 accumulators_0_0 = 32'd0;
#0 accumulators_0_1 = 32'd0;
#0 accumulators_0_2 = 32'd0;
#0 accumulators_0_3 = 32'd0;
#0 accumulators_1_0 = 32'd0;
#0 accumulators_1_1 = 32'd0;
#0 accumulators_1_2 = 32'd0;
#0 accumulators_1_3 = 32'd0;
#0 accumulators_2_0 = 32'd0;
#0 accumulators_2_1 = 32'd0;
#0 accumulators_2_2 = 32'd0;
#0 accumulators_2_3 = 32'd0;
#0 accumulators_3_0 = 32'd0;
#0 accumulators_3_1 = 32'd0;
#0 accumulators_3_2 = 32'd0;
#0 accumulators_3_3 = 32'd0;
#0 accumulators_4_0 = 32'd0;
#0 accumulators_4_1 = 32'd0;
#0 accumulators_4_2 = 32'd0;
#0 accumulators_4_3 = 32'd0;
#0 accumulators_5_0 = 32'd0;
#0 accumulators_5_1 = 32'd0;
#0 accumulators_5_2 = 32'd0;
#0 accumulators_5_3 = 32'd0;
#0 accumulators_6_0 = 32'd0;
#0 accumulators_6_1 = 32'd0;
#0 accumulators_6_2 = 32'd0;
#0 accumulators_6_3 = 32'd0;
#0 accumulators_7_0 = 32'd0;
#0 accumulators_7_1 = 32'd0;
#0 accumulators_7_2 = 32'd0;
#0 accumulators_7_3 = 32'd0;
#0 accumulators_8_0 = 32'd0;
#0 accumulators_8_1 = 32'd0;
#0 accumulators_8_2 = 32'd0;
#0 accumulators_8_3 = 32'd0;
#0 accumulators_9_0 = 32'd0;
#0 accumulators_9_1 = 32'd0;
#0 accumulators_9_2 = 32'd0;
#0 accumulators_9_3 = 32'd0;
#0 accumulators_10_0 = 32'd0;
#0 accumulators_10_1 = 32'd0;
#0 accumulators_10_2 = 32'd0;
#0 accumulators_10_3 = 32'd0;
#0 accumulators_11_0 = 32'd0;
#0 accumulators_11_1 = 32'd0;
#0 accumulators_11_2 = 32'd0;
#0 accumulators_11_3 = 32'd0;
#0 accumulators_12_0 = 32'd0;
#0 accumulators_12_1 = 32'd0;
#0 accumulators_12_2 = 32'd0;
#0 accumulators_13_0 = 32'd0;
#0 accumulators_13_1 = 32'd0;
#0 accumulators_13_2 = 32'd0;
#0 accumulators_14_0 = 32'd0;
#0 accumulators_14_1 = 32'd0;
#0 accumulators_14_2 = 32'd0;
#0 ap_enable_reg_pp7_iter1 = 1'b0;
#0 ap_enable_reg_pp7_iter2 = 1'b0;
#0 ap_enable_reg_pp5_iter3 = 1'b0;
#0 ap_enable_reg_pp5_iter0 = 1'b0;
#0 ap_enable_reg_pp6_iter0 = 1'b0;
#0 ap_enable_reg_pp7_iter0 = 1'b0;
#0 ap_enable_reg_pp5_iter1 = 1'b0;
#0 ap_enable_reg_pp5_iter2 = 1'b0;
#0 ap_enable_reg_pp5_iter4 = 1'b0;
#0 ap_enable_reg_pp6_iter1 = 1'b0;
#0 ap_enable_reg_pp6_iter2 = 1'b0;
#0 ap_enable_reg_pp6_iter3 = 1'b0;
#0 ap_enable_reg_pp6_iter4 = 1'b0;
#0 ap_enable_reg_pp6_iter5 = 1'b0;
#0 ap_enable_reg_pp6_iter6 = 1'b0;
#0 ap_enable_reg_pp6_iter7 = 1'b0;
#0 ap_enable_reg_pp6_iter8 = 1'b0;
#0 ap_enable_reg_pp6_iter9 = 1'b0;
#0 ap_enable_reg_pp6_iter10 = 1'b0;
#0 ap_enable_reg_pp6_iter11 = 1'b0;
#0 ap_enable_reg_pp6_iter12 = 1'b0;
#0 ap_enable_reg_pp6_iter13 = 1'b0;
#0 ap_enable_reg_pp6_iter14 = 1'b0;
#0 ap_enable_reg_pp6_iter15 = 1'b0;
#0 ap_enable_reg_pp6_iter16 = 1'b0;
#0 ap_enable_reg_pp6_iter17 = 1'b0;
#0 ap_enable_reg_pp6_iter18 = 1'b0;
#0 ap_enable_reg_pp6_iter19 = 1'b0;
#0 ap_enable_reg_pp6_iter20 = 1'b0;
#0 ap_enable_reg_pp6_iter21 = 1'b0;
#0 ap_enable_reg_pp6_iter22 = 1'b0;
#0 ap_enable_reg_pp6_iter23 = 1'b0;
#0 ap_enable_reg_pp6_iter24 = 1'b0;
#0 ap_enable_reg_pp6_iter25 = 1'b0;
#0 ap_enable_reg_pp6_iter26 = 1'b0;
#0 ap_enable_reg_pp6_iter27 = 1'b0;
#0 ap_enable_reg_pp6_iter28 = 1'b0;
#0 ap_enable_reg_pp6_iter29 = 1'b0;
#0 ap_enable_reg_pp6_iter30 = 1'b0;
#0 ap_enable_reg_pp6_iter31 = 1'b0;
#0 ap_enable_reg_pp6_iter32 = 1'b0;
#0 ap_enable_reg_pp6_iter33 = 1'b0;
#0 ap_enable_reg_pp6_iter34 = 1'b0;
#0 ap_enable_reg_pp6_iter35 = 1'b0;
#0 ap_enable_reg_pp6_iter36 = 1'b0;
end

hls_linear_combination_vec_l_0 #(
    .DataWidth( 8 ),
    .AddressRange( 600 ),
    .AddressWidth( 10 ))
vec_l_0_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(vec_l_0_address0),
    .ce0(vec_l_0_ce0),
    .we0(vec_l_0_we0),
    .d0(vec_l_0_d0),
    .q0(vec_l_0_q0),
    .address1(vec_l_0_address1),
    .ce1(vec_l_0_ce1),
    .q1(vec_l_0_q1),
    .address2(vec_l_0_address2),
    .ce2(vec_l_0_ce2),
    .q2(vec_l_0_q2),
    .address3(vec_l_0_address3),
    .ce3(vec_l_0_ce3),
    .q3(vec_l_0_q3),
    .address4(vec_l_0_address4),
    .ce4(vec_l_0_ce4),
    .q4(vec_l_0_q4),
    .address5(vec_l_0_address5),
    .ce5(vec_l_0_ce5),
    .q5(vec_l_0_q5),
    .address6(vec_l_0_address6),
    .ce6(vec_l_0_ce6),
    .q6(vec_l_0_q6),
    .address7(vec_l_0_address7),
    .ce7(vec_l_0_ce7),
    .q7(vec_l_0_q7),
    .address8(vec_l_0_address8),
    .ce8(vec_l_0_ce8),
    .q8(vec_l_0_q8),
    .address9(vec_l_0_address9),
    .ce9(vec_l_0_ce9),
    .q9(vec_l_0_q9)
);

hls_linear_combination_vec_l_0 #(
    .DataWidth( 8 ),
    .AddressRange( 600 ),
    .AddressWidth( 10 ))
vec_l_1_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(vec_l_1_address0),
    .ce0(vec_l_1_ce0),
    .we0(vec_l_1_we0),
    .d0(vec_l_1_d0),
    .q0(vec_l_1_q0),
    .address1(vec_l_1_address1),
    .ce1(vec_l_1_ce1),
    .q1(vec_l_1_q1),
    .address2(vec_l_1_address2),
    .ce2(vec_l_1_ce2),
    .q2(vec_l_1_q2),
    .address3(vec_l_1_address3),
    .ce3(vec_l_1_ce3),
    .q3(vec_l_1_q3),
    .address4(vec_l_1_address4),
    .ce4(vec_l_1_ce4),
    .q4(vec_l_1_q4),
    .address5(vec_l_1_address5),
    .ce5(vec_l_1_ce5),
    .q5(vec_l_1_q5),
    .address6(vec_l_1_address6),
    .ce6(vec_l_1_ce6),
    .q6(vec_l_1_q6),
    .address7(vec_l_1_address7),
    .ce7(vec_l_1_ce7),
    .q7(vec_l_1_q7),
    .address8(vec_l_1_address8),
    .ce8(vec_l_1_ce8),
    .q8(vec_l_1_q8),
    .address9(vec_l_1_address9),
    .ce9(vec_l_1_ce9),
    .q9(vec_l_1_q9)
);

hls_linear_combination_vec_l_0 #(
    .DataWidth( 8 ),
    .AddressRange( 600 ),
    .AddressWidth( 10 ))
vec_l_2_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(vec_l_2_address0),
    .ce0(vec_l_2_ce0),
    .we0(vec_l_2_we0),
    .d0(vec_l_2_d0),
    .q0(vec_l_2_q0),
    .address1(vec_l_2_address1),
    .ce1(vec_l_2_ce1),
    .q1(vec_l_2_q1),
    .address2(vec_l_2_address2),
    .ce2(vec_l_2_ce2),
    .q2(vec_l_2_q2),
    .address3(vec_l_2_address3),
    .ce3(vec_l_2_ce3),
    .q3(vec_l_2_q3),
    .address4(vec_l_2_address4),
    .ce4(vec_l_2_ce4),
    .q4(vec_l_2_q4),
    .address5(vec_l_2_address5),
    .ce5(vec_l_2_ce5),
    .q5(vec_l_2_q5),
    .address6(vec_l_2_address6),
    .ce6(vec_l_2_ce6),
    .q6(vec_l_2_q6),
    .address7(vec_l_2_address7),
    .ce7(vec_l_2_ce7),
    .q7(vec_l_2_q7),
    .address8(vec_l_2_address8),
    .ce8(vec_l_2_ce8),
    .q8(vec_l_2_q8),
    .address9(vec_l_2_address9),
    .ce9(vec_l_2_ce9),
    .q9(vec_l_2_q9)
);

hls_linear_combination_vec_l_0 #(
    .DataWidth( 8 ),
    .AddressRange( 600 ),
    .AddressWidth( 10 ))
vec_l_3_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(vec_l_3_address0),
    .ce0(vec_l_3_ce0),
    .we0(vec_l_3_we0),
    .d0(vec_l_3_d0),
    .q0(vec_l_3_q0),
    .address1(vec_l_3_address1),
    .ce1(vec_l_3_ce1),
    .q1(vec_l_3_q1),
    .address2(vec_l_3_address2),
    .ce2(vec_l_3_ce2),
    .q2(vec_l_3_q2),
    .address3(vec_l_3_address3),
    .ce3(vec_l_3_ce3),
    .q3(vec_l_3_q3),
    .address4(vec_l_3_address4),
    .ce4(vec_l_3_ce4),
    .q4(vec_l_3_q4),
    .address5(vec_l_3_address5),
    .ce5(vec_l_3_ce5),
    .q5(vec_l_3_q5),
    .address6(vec_l_3_address6),
    .ce6(vec_l_3_ce6),
    .q6(vec_l_3_q6),
    .address7(vec_l_3_address7),
    .ce7(vec_l_3_ce7),
    .q7(vec_l_3_q7),
    .address8(vec_l_3_address8),
    .ce8(vec_l_3_ce8),
    .q8(vec_l_3_q8),
    .address9(vec_l_3_address9),
    .ce9(vec_l_3_ce9),
    .q9(vec_l_3_q9)
);

hls_linear_combination_vec_l_0 #(
    .DataWidth( 8 ),
    .AddressRange( 600 ),
    .AddressWidth( 10 ))
vec_l_4_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(vec_l_4_address0),
    .ce0(vec_l_4_ce0),
    .we0(vec_l_4_we0),
    .d0(vec_l_4_d0),
    .q0(vec_l_4_q0),
    .address1(vec_l_4_address1),
    .ce1(vec_l_4_ce1),
    .q1(vec_l_4_q1),
    .address2(vec_l_4_address2),
    .ce2(vec_l_4_ce2),
    .q2(vec_l_4_q2),
    .address3(vec_l_4_address3),
    .ce3(vec_l_4_ce3),
    .q3(vec_l_4_q3),
    .address4(vec_l_4_address4),
    .ce4(vec_l_4_ce4),
    .q4(vec_l_4_q4),
    .address5(vec_l_4_address5),
    .ce5(vec_l_4_ce5),
    .q5(vec_l_4_q5),
    .address6(vec_l_4_address6),
    .ce6(vec_l_4_ce6),
    .q6(vec_l_4_q6),
    .address7(vec_l_4_address7),
    .ce7(vec_l_4_ce7),
    .q7(vec_l_4_q7),
    .address8(vec_l_4_address8),
    .ce8(vec_l_4_ce8),
    .q8(vec_l_4_q8),
    .address9(vec_l_4_address9),
    .ce9(vec_l_4_ce9),
    .q9(vec_l_4_q9)
);

hls_linear_combination_vec_l_0 #(
    .DataWidth( 8 ),
    .AddressRange( 600 ),
    .AddressWidth( 10 ))
vec_l_5_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(vec_l_5_address0),
    .ce0(vec_l_5_ce0),
    .we0(vec_l_5_we0),
    .d0(vec_l_5_d0),
    .q0(vec_l_5_q0),
    .address1(vec_l_5_address1),
    .ce1(vec_l_5_ce1),
    .q1(vec_l_5_q1),
    .address2(vec_l_5_address2),
    .ce2(vec_l_5_ce2),
    .q2(vec_l_5_q2),
    .address3(vec_l_5_address3),
    .ce3(vec_l_5_ce3),
    .q3(vec_l_5_q3),
    .address4(vec_l_5_address4),
    .ce4(vec_l_5_ce4),
    .q4(vec_l_5_q4),
    .address5(vec_l_5_address5),
    .ce5(vec_l_5_ce5),
    .q5(vec_l_5_q5),
    .address6(vec_l_5_address6),
    .ce6(vec_l_5_ce6),
    .q6(vec_l_5_q6),
    .address7(vec_l_5_address7),
    .ce7(vec_l_5_ce7),
    .q7(vec_l_5_q7),
    .address8(vec_l_5_address8),
    .ce8(vec_l_5_ce8),
    .q8(vec_l_5_q8),
    .address9(vec_l_5_address9),
    .ce9(vec_l_5_ce9),
    .q9(vec_l_5_q9)
);

hls_linear_combination_coeffs_l #(
    .DataWidth( 8 ),
    .AddressRange( 60 ),
    .AddressWidth( 6 ))
coeffs_l_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(coeffs_l_address0),
    .ce0(coeffs_l_ce0),
    .we0(coeffs_l_we0),
    .d0(coeffs_l_d0),
    .q0(coeffs_l_q0)
);

hls_linear_combination_out_l #(
    .DataWidth( 5 ),
    .AddressRange( 60 ),
    .AddressWidth( 6 ))
out_l_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(out_l_address0),
    .ce0(out_l_ce0),
    .we0(out_l_we0),
    .d0(out_l_d0),
    .q0(out_l_q0)
);

hls_linear_combination_mux_32_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
mux_32_32_1_1_U1(
    .din0(reg_1738),
    .din1(reg_1802),
    .din2(reg_1866),
    .din3(tmp_16_fu_3206_p4),
    .dout(tmp_16_fu_3206_p5)
);

hls_linear_combination_mux_32_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
mux_32_32_1_1_U2(
    .din0(reg_1734),
    .din1(reg_1798),
    .din2(reg_1862),
    .din3(tmp_15_fu_3218_p4),
    .dout(tmp_15_fu_3218_p5)
);

hls_linear_combination_mux_32_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
mux_32_32_1_1_U3(
    .din0(reg_1730),
    .din1(reg_1794),
    .din2(reg_1858),
    .din3(tmp_14_fu_3230_p4),
    .dout(tmp_14_fu_3230_p5)
);

hls_linear_combination_mux_42_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
mux_42_32_1_1_U4(
    .din0(reg_1726),
    .din1(reg_1790),
    .din2(reg_1854),
    .din3(reg_1918),
    .din4(tmp_13_fu_3242_p5),
    .dout(tmp_13_fu_3242_p6)
);

hls_linear_combination_mux_42_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
mux_42_32_1_1_U5(
    .din0(reg_1722),
    .din1(reg_1786),
    .din2(reg_1850),
    .din3(reg_1914),
    .din4(tmp_12_fu_3256_p5),
    .dout(tmp_12_fu_3256_p6)
);

hls_linear_combination_mux_42_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
mux_42_32_1_1_U6(
    .din0(reg_1718),
    .din1(reg_1782),
    .din2(reg_1846),
    .din3(reg_1910),
    .din4(tmp_11_fu_3270_p5),
    .dout(tmp_11_fu_3270_p6)
);

hls_linear_combination_mux_42_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
mux_42_32_1_1_U7(
    .din0(reg_1714),
    .din1(reg_1778),
    .din2(reg_1842),
    .din3(reg_1906),
    .din4(tmp_10_fu_3284_p5),
    .dout(tmp_10_fu_3284_p6)
);

hls_linear_combination_mux_42_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
mux_42_32_1_1_U8(
    .din0(reg_1710),
    .din1(reg_1774),
    .din2(reg_1838),
    .din3(reg_1902),
    .din4(tmp_s_fu_3298_p5),
    .dout(tmp_s_fu_3298_p6)
);

hls_linear_combination_mux_42_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
mux_42_32_1_1_U9(
    .din0(reg_1706),
    .din1(reg_1770),
    .din2(reg_1834),
    .din3(reg_1898),
    .din4(tmp_9_fu_3312_p5),
    .dout(tmp_9_fu_3312_p6)
);

hls_linear_combination_mux_42_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
mux_42_32_1_1_U10(
    .din0(reg_1702),
    .din1(reg_1766),
    .din2(reg_1830),
    .din3(reg_1894),
    .din4(tmp_8_fu_3326_p5),
    .dout(tmp_8_fu_3326_p6)
);

hls_linear_combination_mux_42_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
mux_42_32_1_1_U11(
    .din0(reg_1698),
    .din1(reg_1762),
    .din2(reg_1826),
    .din3(reg_1890),
    .din4(tmp_7_fu_3340_p5),
    .dout(tmp_7_fu_3340_p6)
);

hls_linear_combination_mux_42_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
mux_42_32_1_1_U12(
    .din0(reg_1694),
    .din1(reg_1758),
    .din2(reg_1822),
    .din3(reg_1886),
    .din4(tmp_6_fu_3354_p5),
    .dout(tmp_6_fu_3354_p6)
);

hls_linear_combination_mux_42_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
mux_42_32_1_1_U13(
    .din0(reg_1690),
    .din1(reg_1754),
    .din2(reg_1818),
    .din3(reg_1882),
    .din4(tmp_5_fu_3368_p5),
    .dout(tmp_5_fu_3368_p6)
);

hls_linear_combination_mux_42_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
mux_42_32_1_1_U14(
    .din0(reg_1686),
    .din1(reg_1750),
    .din2(reg_1814),
    .din3(reg_1878),
    .din4(tmp_4_fu_3382_p5),
    .dout(tmp_4_fu_3382_p6)
);

hls_linear_combination_mux_42_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
mux_42_32_1_1_U15(
    .din0(reg_1682),
    .din1(reg_1746),
    .din2(reg_1810),
    .din3(reg_1874),
    .din4(tmp_3_fu_3396_p5),
    .dout(tmp_3_fu_3396_p6)
);

hls_linear_combination_mux_32_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
mux_32_32_1_1_U16(
    .din0(reg_1742),
    .din1(reg_1806),
    .din2(reg_1870),
    .din3(tmp_2_fu_3410_p4),
    .dout(tmp_2_fu_3410_p5)
);

hls_linear_combination_urem_32ns_6ns_5_36_1 #(
    .ID( 1 ),
    .NUM_STAGE( 36 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 6 ),
    .dout_WIDTH( 5 ))
urem_32ns_6ns_5_36_1_U17(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(ap_phi_reg_pp6_iter1_phi_ln41_reg_1393),
    .din1(grp_fu_3422_p1),
    .ce(1'b1),
    .dout(grp_fu_3422_p2)
);

hls_linear_combination_mac_muladd_8ns_8ns_32ns_32_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mac_muladd_8ns_8ns_32ns_32_4_1_U18(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_3477_p0),
    .din1(grp_fu_3477_p1),
    .din2(grp_load_fu_1442_p1),
    .ce(1'b1),
    .dout(grp_fu_3477_p3)
);

hls_linear_combination_mac_muladd_8ns_8ns_32ns_32_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mac_muladd_8ns_8ns_32ns_32_4_1_U19(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_3486_p0),
    .din1(grp_fu_3486_p1),
    .din2(grp_load_fu_1446_p1),
    .ce(1'b1),
    .dout(grp_fu_3486_p3)
);

hls_linear_combination_mac_muladd_8ns_8ns_32ns_32_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mac_muladd_8ns_8ns_32ns_32_4_1_U20(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_3495_p0),
    .din1(grp_fu_3495_p1),
    .din2(grp_load_fu_1450_p1),
    .ce(1'b1),
    .dout(grp_fu_3495_p3)
);

hls_linear_combination_mac_muladd_8ns_8ns_32ns_32_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mac_muladd_8ns_8ns_32ns_32_4_1_U21(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_3504_p0),
    .din1(grp_fu_3504_p1),
    .din2(grp_load_fu_1454_p1),
    .ce(1'b1),
    .dout(grp_fu_3504_p3)
);

hls_linear_combination_mac_muladd_8ns_8ns_32ns_32_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mac_muladd_8ns_8ns_32ns_32_4_1_U22(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_3513_p0),
    .din1(grp_fu_3513_p1),
    .din2(grp_load_fu_1458_p1),
    .ce(1'b1),
    .dout(grp_fu_3513_p3)
);

hls_linear_combination_mac_muladd_8ns_8ns_32ns_32_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mac_muladd_8ns_8ns_32ns_32_4_1_U23(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_3522_p0),
    .din1(grp_fu_3522_p1),
    .din2(grp_load_fu_1462_p1),
    .ce(1'b1),
    .dout(grp_fu_3522_p3)
);

hls_linear_combination_mac_muladd_8ns_8ns_32ns_32_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mac_muladd_8ns_8ns_32ns_32_4_1_U24(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_3531_p0),
    .din1(grp_fu_3531_p1),
    .din2(grp_load_fu_1466_p1),
    .ce(1'b1),
    .dout(grp_fu_3531_p3)
);

hls_linear_combination_mac_muladd_8ns_8ns_32ns_32_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mac_muladd_8ns_8ns_32ns_32_4_1_U25(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_3540_p0),
    .din1(grp_fu_3540_p1),
    .din2(grp_load_fu_1470_p1),
    .ce(1'b1),
    .dout(grp_fu_3540_p3)
);

hls_linear_combination_mac_muladd_8ns_8ns_32ns_32_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mac_muladd_8ns_8ns_32ns_32_4_1_U26(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_3549_p0),
    .din1(grp_fu_3549_p1),
    .din2(grp_load_fu_1474_p1),
    .ce(1'b1),
    .dout(grp_fu_3549_p3)
);

hls_linear_combination_mac_muladd_8ns_8ns_32ns_32_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mac_muladd_8ns_8ns_32ns_32_4_1_U27(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_3558_p0),
    .din1(grp_fu_3558_p1),
    .din2(grp_load_fu_1478_p1),
    .ce(1'b1),
    .dout(grp_fu_3558_p3)
);

hls_linear_combination_mac_muladd_8ns_8ns_32ns_32_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mac_muladd_8ns_8ns_32ns_32_4_1_U28(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_3567_p0),
    .din1(grp_fu_3567_p1),
    .din2(grp_load_fu_1482_p1),
    .ce(1'b1),
    .dout(grp_fu_3567_p3)
);

hls_linear_combination_mac_muladd_8ns_8ns_32ns_32_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mac_muladd_8ns_8ns_32ns_32_4_1_U29(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_3576_p0),
    .din1(grp_fu_3576_p1),
    .din2(grp_load_fu_1486_p1),
    .ce(1'b1),
    .dout(grp_fu_3576_p3)
);

hls_linear_combination_mac_muladd_8ns_8ns_32ns_32_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mac_muladd_8ns_8ns_32ns_32_4_1_U30(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_3585_p0),
    .din1(grp_fu_3585_p1),
    .din2(grp_load_fu_1490_p1),
    .ce(1'b1),
    .dout(grp_fu_3585_p3)
);

hls_linear_combination_mac_muladd_8ns_8ns_32ns_32_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mac_muladd_8ns_8ns_32ns_32_4_1_U31(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_3594_p0),
    .din1(grp_fu_3594_p1),
    .din2(grp_load_fu_1494_p1),
    .ce(1'b1),
    .dout(grp_fu_3594_p3)
);

hls_linear_combination_mac_muladd_8ns_8ns_32ns_32_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mac_muladd_8ns_8ns_32ns_32_4_1_U32(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_3603_p0),
    .din1(grp_fu_3603_p1),
    .din2(grp_load_fu_1498_p1),
    .ce(1'b1),
    .dout(grp_fu_3603_p3)
);

hls_linear_combination_mac_muladd_8ns_8ns_32ns_32_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mac_muladd_8ns_8ns_32ns_32_4_1_U33(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_3612_p0),
    .din1(grp_fu_3612_p1),
    .din2(grp_load_fu_1502_p1),
    .ce(1'b1),
    .dout(grp_fu_3612_p3)
);

hls_linear_combination_mac_muladd_8ns_8ns_32ns_32_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mac_muladd_8ns_8ns_32ns_32_4_1_U34(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_3621_p0),
    .din1(grp_fu_3621_p1),
    .din2(grp_load_fu_1506_p1),
    .ce(1'b1),
    .dout(grp_fu_3621_p3)
);

hls_linear_combination_mac_muladd_8ns_8ns_32ns_32_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mac_muladd_8ns_8ns_32ns_32_4_1_U35(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_3630_p0),
    .din1(grp_fu_3630_p1),
    .din2(grp_load_fu_1510_p1),
    .ce(1'b1),
    .dout(grp_fu_3630_p3)
);

hls_linear_combination_mac_muladd_8ns_8ns_32ns_32_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mac_muladd_8ns_8ns_32ns_32_4_1_U36(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_3639_p0),
    .din1(grp_fu_3639_p1),
    .din2(grp_load_fu_1514_p1),
    .ce(1'b1),
    .dout(grp_fu_3639_p3)
);

hls_linear_combination_mac_muladd_8ns_8ns_32ns_32_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mac_muladd_8ns_8ns_32ns_32_4_1_U37(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_3648_p0),
    .din1(grp_fu_3648_p1),
    .din2(grp_load_fu_1518_p1),
    .ce(1'b1),
    .dout(grp_fu_3648_p3)
);

hls_linear_combination_mac_muladd_8ns_8ns_32ns_32_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mac_muladd_8ns_8ns_32ns_32_4_1_U38(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_3657_p0),
    .din1(grp_fu_3657_p1),
    .din2(grp_load_fu_1522_p1),
    .ce(1'b1),
    .dout(grp_fu_3657_p3)
);

hls_linear_combination_mac_muladd_8ns_8ns_32ns_32_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mac_muladd_8ns_8ns_32ns_32_4_1_U39(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_3666_p0),
    .din1(grp_fu_3666_p1),
    .din2(grp_load_fu_1526_p1),
    .ce(1'b1),
    .dout(grp_fu_3666_p3)
);

hls_linear_combination_mac_muladd_8ns_8ns_32ns_32_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mac_muladd_8ns_8ns_32ns_32_4_1_U40(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_3675_p0),
    .din1(grp_fu_3675_p1),
    .din2(grp_load_fu_1530_p1),
    .ce(1'b1),
    .dout(grp_fu_3675_p3)
);

hls_linear_combination_mac_muladd_8ns_8ns_32ns_32_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mac_muladd_8ns_8ns_32ns_32_4_1_U41(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_3684_p0),
    .din1(grp_fu_3684_p1),
    .din2(grp_load_fu_1534_p1),
    .ce(1'b1),
    .dout(grp_fu_3684_p3)
);

hls_linear_combination_mac_muladd_8ns_8ns_32ns_32_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mac_muladd_8ns_8ns_32ns_32_4_1_U42(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_3693_p0),
    .din1(grp_fu_3693_p1),
    .din2(grp_load_fu_1538_p1),
    .ce(1'b1),
    .dout(grp_fu_3693_p3)
);

hls_linear_combination_mac_muladd_8ns_8ns_32ns_32_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mac_muladd_8ns_8ns_32ns_32_4_1_U43(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_3702_p0),
    .din1(grp_fu_3702_p1),
    .din2(grp_load_fu_1542_p1),
    .ce(1'b1),
    .dout(grp_fu_3702_p3)
);

hls_linear_combination_mac_muladd_8ns_8ns_32ns_32_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mac_muladd_8ns_8ns_32ns_32_4_1_U44(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_3711_p0),
    .din1(grp_fu_3711_p1),
    .din2(grp_load_fu_1546_p1),
    .ce(1'b1),
    .dout(grp_fu_3711_p3)
);

hls_linear_combination_mac_muladd_8ns_8ns_32ns_32_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mac_muladd_8ns_8ns_32ns_32_4_1_U45(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_3720_p0),
    .din1(grp_fu_3720_p1),
    .din2(grp_load_fu_1550_p1),
    .ce(1'b1),
    .dout(grp_fu_3720_p3)
);

hls_linear_combination_mac_muladd_8ns_8ns_32ns_32_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mac_muladd_8ns_8ns_32ns_32_4_1_U46(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_3729_p0),
    .din1(grp_fu_3729_p1),
    .din2(grp_load_fu_1554_p1),
    .ce(1'b1),
    .dout(grp_fu_3729_p3)
);

hls_linear_combination_mac_muladd_8ns_8ns_32ns_32_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mac_muladd_8ns_8ns_32ns_32_4_1_U47(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_3738_p0),
    .din1(grp_fu_3738_p1),
    .din2(grp_load_fu_1558_p1),
    .ce(1'b1),
    .dout(grp_fu_3738_p3)
);

hls_linear_combination_mac_muladd_8ns_8ns_32ns_32_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mac_muladd_8ns_8ns_32ns_32_4_1_U48(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_3747_p0),
    .din1(grp_fu_3747_p1),
    .din2(grp_load_fu_1562_p1),
    .ce(1'b1),
    .dout(grp_fu_3747_p3)
);

hls_linear_combination_mac_muladd_8ns_8ns_32ns_32_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mac_muladd_8ns_8ns_32ns_32_4_1_U49(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_3756_p0),
    .din1(grp_fu_3756_p1),
    .din2(grp_load_fu_1566_p1),
    .ce(1'b1),
    .dout(grp_fu_3756_p3)
);

hls_linear_combination_mac_muladd_8ns_8ns_32ns_32_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mac_muladd_8ns_8ns_32ns_32_4_1_U50(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_3765_p0),
    .din1(grp_fu_3765_p1),
    .din2(grp_load_fu_1570_p1),
    .ce(1'b1),
    .dout(grp_fu_3765_p3)
);

hls_linear_combination_mac_muladd_8ns_8ns_32ns_32_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mac_muladd_8ns_8ns_32ns_32_4_1_U51(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_3774_p0),
    .din1(grp_fu_3774_p1),
    .din2(grp_load_fu_1574_p1),
    .ce(1'b1),
    .dout(grp_fu_3774_p3)
);

hls_linear_combination_mac_muladd_8ns_8ns_32ns_32_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mac_muladd_8ns_8ns_32ns_32_4_1_U52(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_3783_p0),
    .din1(grp_fu_3783_p1),
    .din2(grp_load_fu_1578_p1),
    .ce(1'b1),
    .dout(grp_fu_3783_p3)
);

hls_linear_combination_mac_muladd_8ns_8ns_32ns_32_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mac_muladd_8ns_8ns_32ns_32_4_1_U53(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_3792_p0),
    .din1(grp_fu_3792_p1),
    .din2(grp_load_fu_1582_p1),
    .ce(1'b1),
    .dout(grp_fu_3792_p3)
);

hls_linear_combination_mac_muladd_8ns_8ns_32ns_32_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mac_muladd_8ns_8ns_32ns_32_4_1_U54(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_3801_p0),
    .din1(grp_fu_3801_p1),
    .din2(grp_load_fu_1586_p1),
    .ce(1'b1),
    .dout(grp_fu_3801_p3)
);

hls_linear_combination_mac_muladd_8ns_8ns_32ns_32_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mac_muladd_8ns_8ns_32ns_32_4_1_U55(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_3810_p0),
    .din1(grp_fu_3810_p1),
    .din2(grp_load_fu_1590_p1),
    .ce(1'b1),
    .dout(grp_fu_3810_p3)
);

hls_linear_combination_mac_muladd_8ns_8ns_32ns_32_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mac_muladd_8ns_8ns_32ns_32_4_1_U56(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_3819_p0),
    .din1(grp_fu_3819_p1),
    .din2(grp_load_fu_1594_p1),
    .ce(1'b1),
    .dout(grp_fu_3819_p3)
);

hls_linear_combination_mac_muladd_8ns_8ns_32ns_32_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mac_muladd_8ns_8ns_32ns_32_4_1_U57(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_3828_p0),
    .din1(grp_fu_3828_p1),
    .din2(grp_load_fu_1598_p1),
    .ce(1'b1),
    .dout(grp_fu_3828_p3)
);

hls_linear_combination_mac_muladd_8ns_8ns_32ns_32_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mac_muladd_8ns_8ns_32ns_32_4_1_U58(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_3837_p0),
    .din1(grp_fu_3837_p1),
    .din2(grp_load_fu_1602_p1),
    .ce(1'b1),
    .dout(grp_fu_3837_p3)
);

hls_linear_combination_mac_muladd_8ns_8ns_32ns_32_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mac_muladd_8ns_8ns_32ns_32_4_1_U59(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_3846_p0),
    .din1(grp_fu_3846_p1),
    .din2(grp_load_fu_1606_p1),
    .ce(1'b1),
    .dout(grp_fu_3846_p3)
);

hls_linear_combination_mac_muladd_8ns_8ns_32ns_32_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mac_muladd_8ns_8ns_32ns_32_4_1_U60(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_3855_p0),
    .din1(grp_fu_3855_p1),
    .din2(grp_load_fu_1610_p1),
    .ce(1'b1),
    .dout(grp_fu_3855_p3)
);

hls_linear_combination_mac_muladd_8ns_8ns_32ns_32_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mac_muladd_8ns_8ns_32ns_32_4_1_U61(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_3864_p0),
    .din1(grp_fu_3864_p1),
    .din2(grp_load_fu_1614_p1),
    .ce(1'b1),
    .dout(grp_fu_3864_p3)
);

hls_linear_combination_mac_muladd_8ns_8ns_32ns_32_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mac_muladd_8ns_8ns_32ns_32_4_1_U62(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_3873_p0),
    .din1(grp_fu_3873_p1),
    .din2(grp_load_fu_1618_p1),
    .ce(1'b1),
    .dout(grp_fu_3873_p3)
);

hls_linear_combination_mac_muladd_8ns_8ns_32ns_32_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mac_muladd_8ns_8ns_32ns_32_4_1_U63(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_3882_p0),
    .din1(grp_fu_3882_p1),
    .din2(grp_load_fu_1622_p1),
    .ce(1'b1),
    .dout(grp_fu_3882_p3)
);

hls_linear_combination_mac_muladd_8ns_8ns_32ns_32_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mac_muladd_8ns_8ns_32ns_32_4_1_U64(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_3891_p0),
    .din1(grp_fu_3891_p1),
    .din2(grp_load_fu_1626_p1),
    .ce(1'b1),
    .dout(grp_fu_3891_p3)
);

hls_linear_combination_mac_muladd_8ns_8ns_32ns_32_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mac_muladd_8ns_8ns_32ns_32_4_1_U65(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_3900_p0),
    .din1(grp_fu_3900_p1),
    .din2(grp_load_fu_1630_p1),
    .ce(1'b1),
    .dout(grp_fu_3900_p3)
);

hls_linear_combination_mac_muladd_8ns_8ns_32ns_32_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mac_muladd_8ns_8ns_32ns_32_4_1_U66(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_3909_p0),
    .din1(grp_fu_3909_p1),
    .din2(grp_load_fu_1634_p1),
    .ce(1'b1),
    .dout(grp_fu_3909_p3)
);

hls_linear_combination_mac_muladd_8ns_8ns_32ns_32_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mac_muladd_8ns_8ns_32ns_32_4_1_U67(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_3918_p0),
    .din1(grp_fu_3918_p1),
    .din2(grp_load_fu_1638_p1),
    .ce(1'b1),
    .dout(grp_fu_3918_p3)
);

hls_linear_combination_mac_muladd_8ns_8ns_32ns_32_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mac_muladd_8ns_8ns_32ns_32_4_1_U68(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_3927_p0),
    .din1(grp_fu_3927_p1),
    .din2(grp_load_fu_1642_p1),
    .ce(1'b1),
    .dout(grp_fu_3927_p3)
);

hls_linear_combination_mac_muladd_8ns_8ns_32ns_32_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mac_muladd_8ns_8ns_32ns_32_4_1_U69(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_3936_p0),
    .din1(grp_fu_3936_p1),
    .din2(grp_load_fu_1646_p1),
    .ce(1'b1),
    .dout(grp_fu_3936_p3)
);

hls_linear_combination_mac_muladd_8ns_8ns_32ns_32_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mac_muladd_8ns_8ns_32ns_32_4_1_U70(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_3945_p0),
    .din1(grp_fu_3945_p1),
    .din2(grp_load_fu_1650_p1),
    .ce(1'b1),
    .dout(grp_fu_3945_p3)
);

hls_linear_combination_mac_muladd_8ns_8ns_32ns_32_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mac_muladd_8ns_8ns_32ns_32_4_1_U71(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_3954_p0),
    .din1(grp_fu_3954_p1),
    .din2(grp_load_fu_1654_p1),
    .ce(1'b1),
    .dout(grp_fu_3954_p3)
);

hls_linear_combination_mac_muladd_8ns_8ns_32ns_32_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mac_muladd_8ns_8ns_32ns_32_4_1_U72(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_3963_p0),
    .din1(grp_fu_3963_p1),
    .din2(grp_load_fu_1658_p1),
    .ce(1'b1),
    .dout(grp_fu_3963_p3)
);

hls_linear_combination_mac_muladd_8ns_8ns_32ns_32_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mac_muladd_8ns_8ns_32ns_32_4_1_U73(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_3972_p0),
    .din1(grp_fu_3972_p1),
    .din2(grp_load_fu_1662_p1),
    .ce(1'b1),
    .dout(grp_fu_3972_p3)
);

hls_linear_combination_mac_muladd_8ns_8ns_32ns_32_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mac_muladd_8ns_8ns_32ns_32_4_1_U74(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_3981_p0),
    .din1(grp_fu_3981_p1),
    .din2(grp_load_fu_1666_p1),
    .ce(1'b1),
    .dout(grp_fu_3981_p3)
);

hls_linear_combination_mac_muladd_8ns_8ns_32ns_32_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mac_muladd_8ns_8ns_32ns_32_4_1_U75(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_3990_p0),
    .din1(grp_fu_3990_p1),
    .din2(grp_load_fu_1670_p1),
    .ce(1'b1),
    .dout(grp_fu_3990_p3)
);

hls_linear_combination_mac_muladd_8ns_8ns_32ns_32_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mac_muladd_8ns_8ns_32ns_32_4_1_U76(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_3999_p0),
    .din1(grp_fu_3999_p1),
    .din2(grp_load_fu_1674_p1),
    .ce(1'b1),
    .dout(grp_fu_3999_p3)
);

hls_linear_combination_mac_muladd_8ns_8ns_32ns_32_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mac_muladd_8ns_8ns_32ns_32_4_1_U77(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_4008_p0),
    .din1(grp_fu_4008_p1),
    .din2(grp_load_fu_1678_p1),
    .ce(1'b1),
    .dout(grp_fu_4008_p3)
);

hls_linear_combination_regslice_both #(
    .DataWidth( 16 ))
regslice_both_vecs_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(vecs_V_TDATA),
    .vld_in(vecs_V_TVALID),
    .ack_in(regslice_both_vecs_V_U_ack_in),
    .data_out(vecs_V_TDATA_int_regslice),
    .vld_out(vecs_V_TVALID_int_regslice),
    .ack_out(vecs_V_TREADY_int_regslice),
    .apdone_blk(regslice_both_vecs_V_U_apdone_blk)
);

hls_linear_combination_regslice_both #(
    .DataWidth( 16 ))
regslice_both_coeffs_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(coeffs_V_TDATA),
    .vld_in(coeffs_V_TVALID),
    .ack_in(regslice_both_coeffs_V_U_ack_in),
    .data_out(coeffs_V_TDATA_int_regslice),
    .vld_out(coeffs_V_TVALID_int_regslice),
    .ack_out(coeffs_V_TREADY_int_regslice),
    .apdone_blk(regslice_both_coeffs_V_U_apdone_blk)
);

hls_linear_combination_regslice_both #(
    .DataWidth( 16 ))
regslice_both_out_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(out_V_TDATA_int_regslice),
    .vld_in(out_V_TVALID_int_regslice),
    .ack_in(out_V_TREADY_int_regslice),
    .data_out(out_V_TDATA),
    .vld_out(regslice_both_out_V_U_vld_out),
    .ack_out(out_V_TREADY),
    .apdone_blk(regslice_both_out_V_U_apdone_blk)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp5_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp5_stage0) & (1'b1 == ap_condition_pp5_exit_iter0_state13) & (1'b0 == ap_block_pp5_stage0_subdone))) begin
            ap_enable_reg_pp5_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state12)) begin
            ap_enable_reg_pp5_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp5_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp5_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp5_exit_iter0_state13)) begin
                ap_enable_reg_pp5_iter1 <= (1'b1 ^ ap_condition_pp5_exit_iter0_state13);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp5_iter1 <= ap_enable_reg_pp5_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp5_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp5_stage0_subdone)) begin
            ap_enable_reg_pp5_iter2 <= ap_enable_reg_pp5_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp5_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp5_stage0_subdone)) begin
            ap_enable_reg_pp5_iter3 <= ap_enable_reg_pp5_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp5_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp5_stage0_subdone)) begin
            ap_enable_reg_pp5_iter4 <= ap_enable_reg_pp5_iter3;
        end else if ((1'b1 == ap_CS_fsm_state12)) begin
            ap_enable_reg_pp5_iter4 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp6_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp6_stage0) & (1'b1 == ap_condition_pp6_exit_iter0_state19) & (1'b0 == ap_block_pp6_stage0_subdone))) begin
            ap_enable_reg_pp6_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state18)) begin
            ap_enable_reg_pp6_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp6_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp6_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp6_exit_iter0_state19)) begin
                ap_enable_reg_pp6_iter1 <= (1'b1 ^ ap_condition_pp6_exit_iter0_state19);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp6_iter1 <= ap_enable_reg_pp6_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp6_iter10 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp6_stage0_subdone)) begin
            ap_enable_reg_pp6_iter10 <= ap_enable_reg_pp6_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp6_iter11 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp6_stage0_subdone)) begin
            ap_enable_reg_pp6_iter11 <= ap_enable_reg_pp6_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp6_iter12 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp6_stage0_subdone)) begin
            ap_enable_reg_pp6_iter12 <= ap_enable_reg_pp6_iter11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp6_iter13 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp6_stage0_subdone)) begin
            ap_enable_reg_pp6_iter13 <= ap_enable_reg_pp6_iter12;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp6_iter14 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp6_stage0_subdone)) begin
            ap_enable_reg_pp6_iter14 <= ap_enable_reg_pp6_iter13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp6_iter15 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp6_stage0_subdone)) begin
            ap_enable_reg_pp6_iter15 <= ap_enable_reg_pp6_iter14;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp6_iter16 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp6_stage0_subdone)) begin
            ap_enable_reg_pp6_iter16 <= ap_enable_reg_pp6_iter15;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp6_iter17 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp6_stage0_subdone)) begin
            ap_enable_reg_pp6_iter17 <= ap_enable_reg_pp6_iter16;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp6_iter18 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp6_stage0_subdone)) begin
            ap_enable_reg_pp6_iter18 <= ap_enable_reg_pp6_iter17;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp6_iter19 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp6_stage0_subdone)) begin
            ap_enable_reg_pp6_iter19 <= ap_enable_reg_pp6_iter18;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp6_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp6_stage0_subdone)) begin
            ap_enable_reg_pp6_iter2 <= ap_enable_reg_pp6_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp6_iter20 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp6_stage0_subdone)) begin
            ap_enable_reg_pp6_iter20 <= ap_enable_reg_pp6_iter19;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp6_iter21 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp6_stage0_subdone)) begin
            ap_enable_reg_pp6_iter21 <= ap_enable_reg_pp6_iter20;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp6_iter22 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp6_stage0_subdone)) begin
            ap_enable_reg_pp6_iter22 <= ap_enable_reg_pp6_iter21;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp6_iter23 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp6_stage0_subdone)) begin
            ap_enable_reg_pp6_iter23 <= ap_enable_reg_pp6_iter22;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp6_iter24 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp6_stage0_subdone)) begin
            ap_enable_reg_pp6_iter24 <= ap_enable_reg_pp6_iter23;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp6_iter25 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp6_stage0_subdone)) begin
            ap_enable_reg_pp6_iter25 <= ap_enable_reg_pp6_iter24;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp6_iter26 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp6_stage0_subdone)) begin
            ap_enable_reg_pp6_iter26 <= ap_enable_reg_pp6_iter25;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp6_iter27 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp6_stage0_subdone)) begin
            ap_enable_reg_pp6_iter27 <= ap_enable_reg_pp6_iter26;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp6_iter28 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp6_stage0_subdone)) begin
            ap_enable_reg_pp6_iter28 <= ap_enable_reg_pp6_iter27;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp6_iter29 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp6_stage0_subdone)) begin
            ap_enable_reg_pp6_iter29 <= ap_enable_reg_pp6_iter28;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp6_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp6_stage0_subdone)) begin
            ap_enable_reg_pp6_iter3 <= ap_enable_reg_pp6_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp6_iter30 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp6_stage0_subdone)) begin
            ap_enable_reg_pp6_iter30 <= ap_enable_reg_pp6_iter29;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp6_iter31 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp6_stage0_subdone)) begin
            ap_enable_reg_pp6_iter31 <= ap_enable_reg_pp6_iter30;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp6_iter32 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp6_stage0_subdone)) begin
            ap_enable_reg_pp6_iter32 <= ap_enable_reg_pp6_iter31;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp6_iter33 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp6_stage0_subdone)) begin
            ap_enable_reg_pp6_iter33 <= ap_enable_reg_pp6_iter32;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp6_iter34 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp6_stage0_subdone)) begin
            ap_enable_reg_pp6_iter34 <= ap_enable_reg_pp6_iter33;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp6_iter35 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp6_stage0_subdone)) begin
            ap_enable_reg_pp6_iter35 <= ap_enable_reg_pp6_iter34;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp6_iter36 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp6_stage0_subdone)) begin
            ap_enable_reg_pp6_iter36 <= ap_enable_reg_pp6_iter35;
        end else if ((1'b1 == ap_CS_fsm_state18)) begin
            ap_enable_reg_pp6_iter36 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp6_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp6_stage0_subdone)) begin
            ap_enable_reg_pp6_iter4 <= ap_enable_reg_pp6_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp6_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp6_stage0_subdone)) begin
            ap_enable_reg_pp6_iter5 <= ap_enable_reg_pp6_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp6_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp6_stage0_subdone)) begin
            ap_enable_reg_pp6_iter6 <= ap_enable_reg_pp6_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp6_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp6_stage0_subdone)) begin
            ap_enable_reg_pp6_iter7 <= ap_enable_reg_pp6_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp6_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp6_stage0_subdone)) begin
            ap_enable_reg_pp6_iter8 <= ap_enable_reg_pp6_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp6_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp6_stage0_subdone)) begin
            ap_enable_reg_pp6_iter9 <= ap_enable_reg_pp6_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp7_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp7_stage0) & (1'b1 == ap_condition_pp7_exit_iter0_state57) & (1'b0 == ap_block_pp7_stage0_subdone))) begin
            ap_enable_reg_pp7_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state56)) begin
            ap_enable_reg_pp7_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp7_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp7_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp7_exit_iter0_state57)) begin
                ap_enable_reg_pp7_iter1 <= (1'b1 ^ ap_condition_pp7_exit_iter0_state57);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp7_iter1 <= ap_enable_reg_pp7_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp7_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp7_stage0_subdone)) begin
            ap_enable_reg_pp7_iter2 <= ap_enable_reg_pp7_iter1;
        end else if ((1'b1 == ap_CS_fsm_state56)) begin
            ap_enable_reg_pp7_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_818)) begin
        if (((trunc_ln41_fu_3192_p1 == 4'd15) & (icmp_ln36_fu_3186_p2 == 1'd0))) begin
            ap_phi_reg_pp6_iter1_phi_ln41_reg_1393 <= tmp_2_fu_3410_p5;
        end else if (((trunc_ln41_fu_3192_p1 == 4'd14) & (icmp_ln36_fu_3186_p2 == 1'd0))) begin
            ap_phi_reg_pp6_iter1_phi_ln41_reg_1393 <= tmp_16_fu_3206_p5;
        end else if (((trunc_ln41_fu_3192_p1 == 4'd13) & (icmp_ln36_fu_3186_p2 == 1'd0))) begin
            ap_phi_reg_pp6_iter1_phi_ln41_reg_1393 <= tmp_15_fu_3218_p5;
        end else if (((trunc_ln41_fu_3192_p1 == 4'd12) & (icmp_ln36_fu_3186_p2 == 1'd0))) begin
            ap_phi_reg_pp6_iter1_phi_ln41_reg_1393 <= tmp_14_fu_3230_p5;
        end else if (((trunc_ln41_fu_3192_p1 == 4'd11) & (icmp_ln36_fu_3186_p2 == 1'd0))) begin
            ap_phi_reg_pp6_iter1_phi_ln41_reg_1393 <= tmp_13_fu_3242_p6;
        end else if (((trunc_ln41_fu_3192_p1 == 4'd10) & (icmp_ln36_fu_3186_p2 == 1'd0))) begin
            ap_phi_reg_pp6_iter1_phi_ln41_reg_1393 <= tmp_12_fu_3256_p6;
        end else if (((trunc_ln41_fu_3192_p1 == 4'd9) & (icmp_ln36_fu_3186_p2 == 1'd0))) begin
            ap_phi_reg_pp6_iter1_phi_ln41_reg_1393 <= tmp_11_fu_3270_p6;
        end else if (((trunc_ln41_fu_3192_p1 == 4'd8) & (icmp_ln36_fu_3186_p2 == 1'd0))) begin
            ap_phi_reg_pp6_iter1_phi_ln41_reg_1393 <= tmp_10_fu_3284_p6;
        end else if (((trunc_ln41_fu_3192_p1 == 4'd7) & (icmp_ln36_fu_3186_p2 == 1'd0))) begin
            ap_phi_reg_pp6_iter1_phi_ln41_reg_1393 <= tmp_s_fu_3298_p6;
        end else if (((trunc_ln41_fu_3192_p1 == 4'd6) & (icmp_ln36_fu_3186_p2 == 1'd0))) begin
            ap_phi_reg_pp6_iter1_phi_ln41_reg_1393 <= tmp_9_fu_3312_p6;
        end else if (((trunc_ln41_fu_3192_p1 == 4'd5) & (icmp_ln36_fu_3186_p2 == 1'd0))) begin
            ap_phi_reg_pp6_iter1_phi_ln41_reg_1393 <= tmp_8_fu_3326_p6;
        end else if (((trunc_ln41_fu_3192_p1 == 4'd4) & (icmp_ln36_fu_3186_p2 == 1'd0))) begin
            ap_phi_reg_pp6_iter1_phi_ln41_reg_1393 <= tmp_7_fu_3340_p6;
        end else if (((trunc_ln41_fu_3192_p1 == 4'd3) & (icmp_ln36_fu_3186_p2 == 1'd0))) begin
            ap_phi_reg_pp6_iter1_phi_ln41_reg_1393 <= tmp_6_fu_3354_p6;
        end else if (((trunc_ln41_fu_3192_p1 == 4'd2) & (icmp_ln36_fu_3186_p2 == 1'd0))) begin
            ap_phi_reg_pp6_iter1_phi_ln41_reg_1393 <= tmp_5_fu_3368_p6;
        end else if (((trunc_ln41_fu_3192_p1 == 4'd1) & (icmp_ln36_fu_3186_p2 == 1'd0))) begin
            ap_phi_reg_pp6_iter1_phi_ln41_reg_1393 <= tmp_4_fu_3382_p6;
        end else if (((trunc_ln41_fu_3192_p1 == 4'd0) & (icmp_ln36_fu_3186_p2 == 1'd0))) begin
            ap_phi_reg_pp6_iter1_phi_ln41_reg_1393 <= tmp_3_fu_3396_p6;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp6_iter1_phi_ln41_reg_1393 <= ap_phi_reg_pp6_iter0_phi_ln41_reg_1393;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        i_1_reg_1370 <= 32'd0;
    end else if (((icmp_ln30_fu_2442_p2 == 1'd0) & (ap_enable_reg_pp5_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage0) & (1'b0 == ap_block_pp5_stage0_11001))) begin
        i_1_reg_1370 <= add_ln30_fu_2436_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        i_2_reg_1381 <= 6'd0;
    end else if (((icmp_ln36_reg_4846 == 1'd0) & (1'b1 == ap_CS_fsm_pp6_stage0) & (1'b0 == ap_block_pp6_stage0_11001) & (ap_enable_reg_pp6_iter1 == 1'b1))) begin
        i_2_reg_1381 <= add_ln36_reg_4841;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state56)) begin
        i_3_reg_1431 <= 6'd0;
    end else if (((ap_enable_reg_pp7_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp7_stage0) & (1'b0 == ap_block_pp7_stage0_11001) & (icmp_ln47_fu_3444_p2 == 1'd0))) begin
        i_3_reg_1431 <= add_ln47_fu_3438_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state8) & ((icmp_ln15_reg_4035 == 1'd1) | ((icmp_ln15_1_reg_4065 == 1'd1) | ((icmp_ln15_3_fu_2322_p2 == 1'd1) | (icmp_ln15_2_reg_4095 == 1'd1)))))) begin
        i_reg_1359 <= 6'd0;
    end else if ((~((coeffs_V_TVALID_int_regslice == 1'b0) & (icmp_ln22_fu_2420_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state11) & (icmp_ln22_fu_2420_p2 == 1'd0))) begin
        i_reg_1359 <= add_ln22_fu_2414_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln15_fu_1956_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        m_0_reg_1227 <= 6'd0;
    end else if ((~((vecs_V_TVALID_int_regslice == 1'b0) & (icmp_ln16_fu_1967_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state3) & (icmp_ln16_fu_1967_p2 == 1'd0))) begin
        m_0_reg_1227 <= add_ln16_fu_1961_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln15_1_fu_2078_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
        m_1_reg_1260 <= 6'd0;
    end else if ((~((vecs_V_TVALID_int_regslice == 1'b0) & (icmp_ln16_1_fu_2089_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state5) & (icmp_ln16_1_fu_2089_p2 == 1'd0))) begin
        m_1_reg_1260 <= add_ln16_1_fu_2083_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln15_2_fu_2200_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state6))) begin
        m_2_reg_1293 <= 6'd0;
    end else if ((~((vecs_V_TVALID_int_regslice == 1'b0) & (icmp_ln16_2_fu_2211_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state7) & (icmp_ln16_2_fu_2211_p2 == 1'd0))) begin
        m_2_reg_1293 <= add_ln16_2_fu_2205_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln15_3_fu_2322_p2 == 1'd0) & (icmp_ln15_2_reg_4095 == 1'd0) & (icmp_ln15_1_reg_4065 == 1'd0) & (icmp_ln15_reg_4035 == 1'd0) & (1'b1 == ap_CS_fsm_state8))) begin
        m_3_reg_1326 <= 6'd0;
    end else if ((~((vecs_V_TVALID_int_regslice == 1'b0) & (icmp_ln16_3_fu_2333_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state9) & (icmp_ln16_3_fu_2333_p2 == 1'd0))) begin
        m_3_reg_1326 <= add_ln16_3_fu_2327_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln15_1_fu_2078_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
        phi_mul16_reg_1271 <= 13'd0;
    end else if ((~((vecs_V_TVALID_int_regslice == 1'b0) & (icmp_ln16_1_fu_2089_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state5) & (icmp_ln16_1_fu_2089_p2 == 1'd0))) begin
        phi_mul16_reg_1271 <= add_ln18_9_fu_2109_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln15_2_fu_2200_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state6))) begin
        phi_mul21_reg_1304 <= 13'd0;
    end else if ((~((vecs_V_TVALID_int_regslice == 1'b0) & (icmp_ln16_2_fu_2211_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state7) & (icmp_ln16_2_fu_2211_p2 == 1'd0))) begin
        phi_mul21_reg_1304 <= add_ln18_10_fu_2231_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln15_3_fu_2322_p2 == 1'd0) & (icmp_ln15_2_reg_4095 == 1'd0) & (icmp_ln15_1_reg_4065 == 1'd0) & (icmp_ln15_reg_4035 == 1'd0) & (1'b1 == ap_CS_fsm_state8))) begin
        phi_mul26_reg_1337 <= 13'd0;
    end else if ((~((vecs_V_TVALID_int_regslice == 1'b0) & (icmp_ln16_3_fu_2333_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state9) & (icmp_ln16_3_fu_2333_p2 == 1'd0))) begin
        phi_mul26_reg_1337 <= add_ln18_11_fu_2353_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln15_fu_1956_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        phi_mul_reg_1238 <= 13'd0;
    end else if ((~((vecs_V_TVALID_int_regslice == 1'b0) & (icmp_ln16_fu_1967_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state3) & (icmp_ln16_fu_1967_p2 == 1'd0))) begin
        phi_mul_reg_1238 <= add_ln18_8_fu_1987_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln15_1_fu_2078_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
        phi_urem18_reg_1282 <= 6'd0;
    end else if ((~((vecs_V_TVALID_int_regslice == 1'b0) & (icmp_ln16_1_fu_2089_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state5) & (icmp_ln16_1_fu_2089_p2 == 1'd0))) begin
        phi_urem18_reg_1282 <= idx_urem20_fu_2156_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln15_2_fu_2200_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state6))) begin
        phi_urem23_reg_1315 <= 6'd0;
    end else if ((~((vecs_V_TVALID_int_regslice == 1'b0) & (icmp_ln16_2_fu_2211_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state7) & (icmp_ln16_2_fu_2211_p2 == 1'd0))) begin
        phi_urem23_reg_1315 <= idx_urem25_fu_2278_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln15_3_fu_2322_p2 == 1'd0) & (icmp_ln15_2_reg_4095 == 1'd0) & (icmp_ln15_1_reg_4065 == 1'd0) & (icmp_ln15_reg_4035 == 1'd0) & (1'b1 == ap_CS_fsm_state8))) begin
        phi_urem28_reg_1348 <= 6'd0;
    end else if ((~((vecs_V_TVALID_int_regslice == 1'b0) & (icmp_ln16_3_fu_2333_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state9) & (icmp_ln16_3_fu_2333_p2 == 1'd0))) begin
        phi_urem28_reg_1348 <= idx_urem30_fu_2400_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln15_fu_1956_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        phi_urem_reg_1249 <= 6'd0;
    end else if ((~((vecs_V_TVALID_int_regslice == 1'b0) & (icmp_ln16_fu_1967_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state3) & (icmp_ln16_fu_1967_p2 == 1'd0))) begin
        phi_urem_reg_1249 <= idx_urem_fu_2034_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        row_0_reg_1215 <= 64'd0;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        row_0_reg_1215 <= add_ln15_fu_2408_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln30_reg_4168_pp5_iter3_reg == 1'd0) & (1'b0 == ap_block_pp5_stage0_11001) & (ap_enable_reg_pp5_iter4 == 1'b1))) begin
        accumulators_0_0 <= grp_fu_3477_p3;
        accumulators_0_1 <= grp_fu_3621_p3;
        accumulators_0_2 <= grp_fu_3765_p3;
        accumulators_0_3 <= grp_fu_3909_p3;
        accumulators_10_0 <= grp_fu_3567_p3;
        accumulators_10_1 <= grp_fu_3711_p3;
        accumulators_10_2 <= grp_fu_3855_p3;
        accumulators_10_3 <= grp_fu_3999_p3;
        accumulators_11_0 <= grp_fu_3576_p3;
        accumulators_11_1 <= grp_fu_3720_p3;
        accumulators_11_2 <= grp_fu_3864_p3;
        accumulators_11_3 <= grp_fu_4008_p3;
        accumulators_12_0 <= grp_fu_3585_p3;
        accumulators_12_1 <= grp_fu_3729_p3;
        accumulators_12_2 <= grp_fu_3873_p3;
        accumulators_13_0 <= grp_fu_3594_p3;
        accumulators_13_1 <= grp_fu_3738_p3;
        accumulators_13_2 <= grp_fu_3882_p3;
        accumulators_14_0 <= grp_fu_3603_p3;
        accumulators_14_1 <= grp_fu_3747_p3;
        accumulators_14_2 <= grp_fu_3891_p3;
        accumulators_15_0 <= grp_fu_3612_p3;
        accumulators_15_1 <= grp_fu_3756_p3;
        accumulators_15_2 <= grp_fu_3900_p3;
        accumulators_1_0 <= grp_fu_3486_p3;
        accumulators_1_1 <= grp_fu_3630_p3;
        accumulators_1_2 <= grp_fu_3774_p3;
        accumulators_1_3 <= grp_fu_3918_p3;
        accumulators_2_0 <= grp_fu_3495_p3;
        accumulators_2_1 <= grp_fu_3639_p3;
        accumulators_2_2 <= grp_fu_3783_p3;
        accumulators_2_3 <= grp_fu_3927_p3;
        accumulators_3_0 <= grp_fu_3504_p3;
        accumulators_3_1 <= grp_fu_3648_p3;
        accumulators_3_2 <= grp_fu_3792_p3;
        accumulators_3_3 <= grp_fu_3936_p3;
        accumulators_4_0 <= grp_fu_3513_p3;
        accumulators_4_1 <= grp_fu_3657_p3;
        accumulators_4_2 <= grp_fu_3801_p3;
        accumulators_4_3 <= grp_fu_3945_p3;
        accumulators_5_0 <= grp_fu_3522_p3;
        accumulators_5_1 <= grp_fu_3666_p3;
        accumulators_5_2 <= grp_fu_3810_p3;
        accumulators_5_3 <= grp_fu_3954_p3;
        accumulators_6_0 <= grp_fu_3531_p3;
        accumulators_6_1 <= grp_fu_3675_p3;
        accumulators_6_2 <= grp_fu_3819_p3;
        accumulators_6_3 <= grp_fu_3963_p3;
        accumulators_7_0 <= grp_fu_3540_p3;
        accumulators_7_1 <= grp_fu_3684_p3;
        accumulators_7_2 <= grp_fu_3828_p3;
        accumulators_7_3 <= grp_fu_3972_p3;
        accumulators_8_0 <= grp_fu_3549_p3;
        accumulators_8_1 <= grp_fu_3693_p3;
        accumulators_8_2 <= grp_fu_3837_p3;
        accumulators_8_3 <= grp_fu_3981_p3;
        accumulators_9_0 <= grp_fu_3558_p3;
        accumulators_9_1 <= grp_fu_3702_p3;
        accumulators_9_2 <= grp_fu_3846_p3;
        accumulators_9_3 <= grp_fu_3990_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        add_ln18_1_reg_4060[9 : 2] <= add_ln18_1_fu_2072_p2[9 : 2];
        icmp_ln15_1_reg_4065 <= icmp_ln15_1_fu_2078_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        add_ln18_3_reg_4090[9 : 1] <= add_ln18_3_fu_2194_p2[9 : 1];
        icmp_ln15_2_reg_4095 <= icmp_ln15_2_fu_2200_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln15_2_reg_4095 == 1'd0) & (icmp_ln15_1_reg_4065 == 1'd0) & (icmp_ln15_reg_4035 == 1'd0) & (1'b1 == ap_CS_fsm_state8))) begin
        add_ln18_5_reg_4120[9 : 3] <= add_ln18_5_fu_2316_p2[9 : 3];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        add_ln18_reg_4030[9 : 1] <= add_ln18_fu_1950_p2[9 : 1];
        icmp_ln15_reg_4035 <= icmp_ln15_fu_1956_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp6_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp6_stage0) & (1'b0 == ap_block_pp6_stage0_11001))) begin
        add_ln36_reg_4841 <= add_ln36_fu_3180_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp6_stage0_11001)) begin
        i_2_reg_1381_pp6_iter10_reg <= i_2_reg_1381_pp6_iter9_reg;
        i_2_reg_1381_pp6_iter11_reg <= i_2_reg_1381_pp6_iter10_reg;
        i_2_reg_1381_pp6_iter12_reg <= i_2_reg_1381_pp6_iter11_reg;
        i_2_reg_1381_pp6_iter13_reg <= i_2_reg_1381_pp6_iter12_reg;
        i_2_reg_1381_pp6_iter14_reg <= i_2_reg_1381_pp6_iter13_reg;
        i_2_reg_1381_pp6_iter15_reg <= i_2_reg_1381_pp6_iter14_reg;
        i_2_reg_1381_pp6_iter16_reg <= i_2_reg_1381_pp6_iter15_reg;
        i_2_reg_1381_pp6_iter17_reg <= i_2_reg_1381_pp6_iter16_reg;
        i_2_reg_1381_pp6_iter18_reg <= i_2_reg_1381_pp6_iter17_reg;
        i_2_reg_1381_pp6_iter19_reg <= i_2_reg_1381_pp6_iter18_reg;
        i_2_reg_1381_pp6_iter20_reg <= i_2_reg_1381_pp6_iter19_reg;
        i_2_reg_1381_pp6_iter21_reg <= i_2_reg_1381_pp6_iter20_reg;
        i_2_reg_1381_pp6_iter22_reg <= i_2_reg_1381_pp6_iter21_reg;
        i_2_reg_1381_pp6_iter23_reg <= i_2_reg_1381_pp6_iter22_reg;
        i_2_reg_1381_pp6_iter24_reg <= i_2_reg_1381_pp6_iter23_reg;
        i_2_reg_1381_pp6_iter25_reg <= i_2_reg_1381_pp6_iter24_reg;
        i_2_reg_1381_pp6_iter26_reg <= i_2_reg_1381_pp6_iter25_reg;
        i_2_reg_1381_pp6_iter27_reg <= i_2_reg_1381_pp6_iter26_reg;
        i_2_reg_1381_pp6_iter28_reg <= i_2_reg_1381_pp6_iter27_reg;
        i_2_reg_1381_pp6_iter29_reg <= i_2_reg_1381_pp6_iter28_reg;
        i_2_reg_1381_pp6_iter2_reg <= i_2_reg_1381_pp6_iter1_reg;
        i_2_reg_1381_pp6_iter30_reg <= i_2_reg_1381_pp6_iter29_reg;
        i_2_reg_1381_pp6_iter31_reg <= i_2_reg_1381_pp6_iter30_reg;
        i_2_reg_1381_pp6_iter32_reg <= i_2_reg_1381_pp6_iter31_reg;
        i_2_reg_1381_pp6_iter33_reg <= i_2_reg_1381_pp6_iter32_reg;
        i_2_reg_1381_pp6_iter34_reg <= i_2_reg_1381_pp6_iter33_reg;
        i_2_reg_1381_pp6_iter35_reg <= i_2_reg_1381_pp6_iter34_reg;
        i_2_reg_1381_pp6_iter3_reg <= i_2_reg_1381_pp6_iter2_reg;
        i_2_reg_1381_pp6_iter4_reg <= i_2_reg_1381_pp6_iter3_reg;
        i_2_reg_1381_pp6_iter5_reg <= i_2_reg_1381_pp6_iter4_reg;
        i_2_reg_1381_pp6_iter6_reg <= i_2_reg_1381_pp6_iter5_reg;
        i_2_reg_1381_pp6_iter7_reg <= i_2_reg_1381_pp6_iter6_reg;
        i_2_reg_1381_pp6_iter8_reg <= i_2_reg_1381_pp6_iter7_reg;
        i_2_reg_1381_pp6_iter9_reg <= i_2_reg_1381_pp6_iter8_reg;
        icmp_ln36_reg_4846_pp6_iter10_reg <= icmp_ln36_reg_4846_pp6_iter9_reg;
        icmp_ln36_reg_4846_pp6_iter11_reg <= icmp_ln36_reg_4846_pp6_iter10_reg;
        icmp_ln36_reg_4846_pp6_iter12_reg <= icmp_ln36_reg_4846_pp6_iter11_reg;
        icmp_ln36_reg_4846_pp6_iter13_reg <= icmp_ln36_reg_4846_pp6_iter12_reg;
        icmp_ln36_reg_4846_pp6_iter14_reg <= icmp_ln36_reg_4846_pp6_iter13_reg;
        icmp_ln36_reg_4846_pp6_iter15_reg <= icmp_ln36_reg_4846_pp6_iter14_reg;
        icmp_ln36_reg_4846_pp6_iter16_reg <= icmp_ln36_reg_4846_pp6_iter15_reg;
        icmp_ln36_reg_4846_pp6_iter17_reg <= icmp_ln36_reg_4846_pp6_iter16_reg;
        icmp_ln36_reg_4846_pp6_iter18_reg <= icmp_ln36_reg_4846_pp6_iter17_reg;
        icmp_ln36_reg_4846_pp6_iter19_reg <= icmp_ln36_reg_4846_pp6_iter18_reg;
        icmp_ln36_reg_4846_pp6_iter20_reg <= icmp_ln36_reg_4846_pp6_iter19_reg;
        icmp_ln36_reg_4846_pp6_iter21_reg <= icmp_ln36_reg_4846_pp6_iter20_reg;
        icmp_ln36_reg_4846_pp6_iter22_reg <= icmp_ln36_reg_4846_pp6_iter21_reg;
        icmp_ln36_reg_4846_pp6_iter23_reg <= icmp_ln36_reg_4846_pp6_iter22_reg;
        icmp_ln36_reg_4846_pp6_iter24_reg <= icmp_ln36_reg_4846_pp6_iter23_reg;
        icmp_ln36_reg_4846_pp6_iter25_reg <= icmp_ln36_reg_4846_pp6_iter24_reg;
        icmp_ln36_reg_4846_pp6_iter26_reg <= icmp_ln36_reg_4846_pp6_iter25_reg;
        icmp_ln36_reg_4846_pp6_iter27_reg <= icmp_ln36_reg_4846_pp6_iter26_reg;
        icmp_ln36_reg_4846_pp6_iter28_reg <= icmp_ln36_reg_4846_pp6_iter27_reg;
        icmp_ln36_reg_4846_pp6_iter29_reg <= icmp_ln36_reg_4846_pp6_iter28_reg;
        icmp_ln36_reg_4846_pp6_iter2_reg <= icmp_ln36_reg_4846_pp6_iter1_reg;
        icmp_ln36_reg_4846_pp6_iter30_reg <= icmp_ln36_reg_4846_pp6_iter29_reg;
        icmp_ln36_reg_4846_pp6_iter31_reg <= icmp_ln36_reg_4846_pp6_iter30_reg;
        icmp_ln36_reg_4846_pp6_iter32_reg <= icmp_ln36_reg_4846_pp6_iter31_reg;
        icmp_ln36_reg_4846_pp6_iter33_reg <= icmp_ln36_reg_4846_pp6_iter32_reg;
        icmp_ln36_reg_4846_pp6_iter34_reg <= icmp_ln36_reg_4846_pp6_iter33_reg;
        icmp_ln36_reg_4846_pp6_iter35_reg <= icmp_ln36_reg_4846_pp6_iter34_reg;
        icmp_ln36_reg_4846_pp6_iter3_reg <= icmp_ln36_reg_4846_pp6_iter2_reg;
        icmp_ln36_reg_4846_pp6_iter4_reg <= icmp_ln36_reg_4846_pp6_iter3_reg;
        icmp_ln36_reg_4846_pp6_iter5_reg <= icmp_ln36_reg_4846_pp6_iter4_reg;
        icmp_ln36_reg_4846_pp6_iter6_reg <= icmp_ln36_reg_4846_pp6_iter5_reg;
        icmp_ln36_reg_4846_pp6_iter7_reg <= icmp_ln36_reg_4846_pp6_iter6_reg;
        icmp_ln36_reg_4846_pp6_iter8_reg <= icmp_ln36_reg_4846_pp6_iter7_reg;
        icmp_ln36_reg_4846_pp6_iter9_reg <= icmp_ln36_reg_4846_pp6_iter8_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp6_stage0) & (1'b0 == ap_block_pp6_stage0_11001))) begin
        i_2_reg_1381_pp6_iter1_reg <= i_2_reg_1381;
        icmp_ln36_reg_4846 <= icmp_ln36_fu_3186_p2;
        icmp_ln36_reg_4846_pp6_iter1_reg <= icmp_ln36_reg_4846;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp5_stage0) & (1'b0 == ap_block_pp5_stage0_11001))) begin
        icmp_ln30_reg_4168 <= icmp_ln30_fu_2442_p2;
        icmp_ln30_reg_4168_pp5_iter1_reg <= icmp_ln30_reg_4168;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp5_stage0_11001)) begin
        icmp_ln30_reg_4168_pp5_iter2_reg <= icmp_ln30_reg_4168_pp5_iter1_reg;
        icmp_ln30_reg_4168_pp5_iter3_reg <= icmp_ln30_reg_4168_pp5_iter2_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp7_stage0) & (1'b0 == ap_block_pp7_stage0_11001))) begin
        icmp_ln47_reg_4939 <= icmp_ln47_fu_3444_p2;
        icmp_ln47_reg_4939_pp7_iter1_reg <= icmp_ln47_reg_4939;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state18) | ((icmp_ln30_reg_4168_pp5_iter2_reg == 1'd0) & (ap_enable_reg_pp5_iter3 == 1'b1) & (1'b0 == ap_block_pp5_stage0_11001)))) begin
        reg_1682 <= grp_load_fu_1442_p1;
        reg_1686 <= grp_load_fu_1446_p1;
        reg_1690 <= grp_load_fu_1450_p1;
        reg_1694 <= grp_load_fu_1454_p1;
        reg_1698 <= grp_load_fu_1458_p1;
        reg_1702 <= grp_load_fu_1462_p1;
        reg_1706 <= grp_load_fu_1466_p1;
        reg_1710 <= grp_load_fu_1470_p1;
        reg_1714 <= grp_load_fu_1474_p1;
        reg_1718 <= grp_load_fu_1478_p1;
        reg_1722 <= grp_load_fu_1482_p1;
        reg_1726 <= grp_load_fu_1486_p1;
        reg_1730 <= grp_load_fu_1490_p1;
        reg_1734 <= grp_load_fu_1494_p1;
        reg_1738 <= grp_load_fu_1498_p1;
        reg_1742 <= grp_load_fu_1502_p1;
        reg_1746 <= grp_load_fu_1506_p1;
        reg_1750 <= grp_load_fu_1510_p1;
        reg_1754 <= grp_load_fu_1514_p1;
        reg_1758 <= grp_load_fu_1518_p1;
        reg_1762 <= grp_load_fu_1522_p1;
        reg_1766 <= grp_load_fu_1526_p1;
        reg_1770 <= grp_load_fu_1530_p1;
        reg_1774 <= grp_load_fu_1534_p1;
        reg_1778 <= grp_load_fu_1538_p1;
        reg_1782 <= grp_load_fu_1542_p1;
        reg_1786 <= grp_load_fu_1546_p1;
        reg_1790 <= grp_load_fu_1550_p1;
        reg_1794 <= grp_load_fu_1554_p1;
        reg_1798 <= grp_load_fu_1558_p1;
        reg_1802 <= grp_load_fu_1562_p1;
        reg_1806 <= grp_load_fu_1566_p1;
        reg_1810 <= grp_load_fu_1570_p1;
        reg_1814 <= grp_load_fu_1574_p1;
        reg_1818 <= grp_load_fu_1578_p1;
        reg_1822 <= grp_load_fu_1582_p1;
        reg_1826 <= grp_load_fu_1586_p1;
        reg_1830 <= grp_load_fu_1590_p1;
        reg_1834 <= grp_load_fu_1594_p1;
        reg_1838 <= grp_load_fu_1598_p1;
        reg_1842 <= grp_load_fu_1602_p1;
        reg_1846 <= grp_load_fu_1606_p1;
        reg_1850 <= grp_load_fu_1610_p1;
        reg_1854 <= grp_load_fu_1614_p1;
        reg_1858 <= grp_load_fu_1618_p1;
        reg_1862 <= grp_load_fu_1622_p1;
        reg_1866 <= grp_load_fu_1626_p1;
        reg_1870 <= grp_load_fu_1630_p1;
        reg_1874 <= grp_load_fu_1634_p1;
        reg_1878 <= grp_load_fu_1638_p1;
        reg_1882 <= grp_load_fu_1642_p1;
        reg_1886 <= grp_load_fu_1646_p1;
        reg_1890 <= grp_load_fu_1650_p1;
        reg_1894 <= grp_load_fu_1654_p1;
        reg_1898 <= grp_load_fu_1658_p1;
        reg_1902 <= grp_load_fu_1662_p1;
        reg_1906 <= grp_load_fu_1666_p1;
        reg_1910 <= grp_load_fu_1670_p1;
        reg_1914 <= grp_load_fu_1674_p1;
        reg_1918 <= grp_load_fu_1678_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp7_stage0) & (1'b0 == ap_block_pp7_stage0_11001) & (icmp_ln47_fu_3444_p2 == 1'd0))) begin
        stream_l_last_V_reg_4948 <= stream_l_last_V_fu_3455_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        zext_ln15_reg_4022[31 : 0] <= zext_ln15_fu_1922_p1[31 : 0];
    end
end

always @ (*) begin
    if ((icmp_ln30_fu_2442_p2 == 1'd1)) begin
        ap_condition_pp5_exit_iter0_state13 = 1'b1;
    end else begin
        ap_condition_pp5_exit_iter0_state13 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln36_fu_3186_p2 == 1'd1)) begin
        ap_condition_pp6_exit_iter0_state19 = 1'b1;
    end else begin
        ap_condition_pp6_exit_iter0_state19 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln47_fu_3444_p2 == 1'd1)) begin
        ap_condition_pp7_exit_iter0_state57 = 1'b1;
    end else begin
        ap_condition_pp7_exit_iter0_state57 = 1'b0;
    end
end

always @ (*) begin
    if (((regslice_both_out_V_U_apdone_blk == 1'b0) & (1'b1 == ap_CS_fsm_state60))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp5_iter0 == 1'b0) & (ap_enable_reg_pp5_iter3 == 1'b0) & (ap_enable_reg_pp5_iter4 == 1'b0) & (ap_enable_reg_pp5_iter2 == 1'b0) & (ap_enable_reg_pp5_iter1 == 1'b0))) begin
        ap_idle_pp5 = 1'b1;
    end else begin
        ap_idle_pp5 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp6_iter0 == 1'b0) & (ap_enable_reg_pp6_iter36 == 1'b0) & (ap_enable_reg_pp6_iter35 == 1'b0) & (ap_enable_reg_pp6_iter34 == 1'b0) & (ap_enable_reg_pp6_iter33 == 1'b0) & (ap_enable_reg_pp6_iter32 == 1'b0) & (ap_enable_reg_pp6_iter31 == 1'b0) & (ap_enable_reg_pp6_iter30 == 1'b0) & (ap_enable_reg_pp6_iter29 == 1'b0) & (ap_enable_reg_pp6_iter28 == 1'b0) & (ap_enable_reg_pp6_iter27 == 1'b0) & (ap_enable_reg_pp6_iter26 == 1'b0) & (ap_enable_reg_pp6_iter25 == 1'b0) & (ap_enable_reg_pp6_iter24 == 1'b0) & (ap_enable_reg_pp6_iter23 == 1'b0) & (ap_enable_reg_pp6_iter22 == 1'b0) & (ap_enable_reg_pp6_iter21 == 1'b0) & (ap_enable_reg_pp6_iter20 == 1'b0) & (ap_enable_reg_pp6_iter19 == 1'b0) & (ap_enable_reg_pp6_iter18 == 1'b0) & (ap_enable_reg_pp6_iter17 == 1'b0) & (ap_enable_reg_pp6_iter16 == 1'b0) & (ap_enable_reg_pp6_iter15 == 1'b0) & (ap_enable_reg_pp6_iter14 == 1'b0) & (ap_enable_reg_pp6_iter13 == 1'b0) & (ap_enable_reg_pp6_iter12 == 1'b0) & (ap_enable_reg_pp6_iter11 == 1'b0) & (ap_enable_reg_pp6_iter10 == 1'b0) & (ap_enable_reg_pp6_iter9 == 1'b0) & (ap_enable_reg_pp6_iter8 == 1'b0) & (ap_enable_reg_pp6_iter7 == 1'b0) & (ap_enable_reg_pp6_iter6 == 1'b0) & (ap_enable_reg_pp6_iter5 == 1'b0) & (ap_enable_reg_pp6_iter4 == 1'b0) & (ap_enable_reg_pp6_iter3 == 1'b0) & (ap_enable_reg_pp6_iter2 == 1'b0) & (ap_enable_reg_pp6_iter1 == 1'b0))) begin
        ap_idle_pp6 = 1'b1;
    end else begin
        ap_idle_pp6 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp7_iter0 == 1'b0) & (ap_enable_reg_pp7_iter2 == 1'b0) & (ap_enable_reg_pp7_iter1 == 1'b0))) begin
        ap_idle_pp7 = 1'b1;
    end else begin
        ap_idle_pp7 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln36_reg_4846 == 1'd0) & (1'b1 == ap_CS_fsm_pp6_stage0) & (1'b0 == ap_block_pp6_stage0) & (ap_enable_reg_pp6_iter1 == 1'b1))) begin
        ap_phi_mux_i_2_phi_fu_1385_p4 = add_ln36_reg_4841;
    end else begin
        ap_phi_mux_i_2_phi_fu_1385_p4 = i_2_reg_1381;
    end
end

always @ (*) begin
    if (((regslice_both_out_V_U_apdone_blk == 1'b0) & (1'b1 == ap_CS_fsm_state60))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln30_reg_4168_pp5_iter3_reg == 1'd0) & (1'b0 == ap_block_pp5_stage0) & (ap_enable_reg_pp5_iter4 == 1'b1))) begin
        ap_sig_allocacmp_accumulators_0_0_load = grp_fu_3477_p3;
    end else begin
        ap_sig_allocacmp_accumulators_0_0_load = accumulators_0_0;
    end
end

always @ (*) begin
    if (((icmp_ln30_reg_4168_pp5_iter3_reg == 1'd0) & (1'b0 == ap_block_pp5_stage0) & (ap_enable_reg_pp5_iter4 == 1'b1))) begin
        ap_sig_allocacmp_accumulators_0_1_load = grp_fu_3621_p3;
    end else begin
        ap_sig_allocacmp_accumulators_0_1_load = accumulators_0_1;
    end
end

always @ (*) begin
    if (((icmp_ln30_reg_4168_pp5_iter3_reg == 1'd0) & (1'b0 == ap_block_pp5_stage0) & (ap_enable_reg_pp5_iter4 == 1'b1))) begin
        ap_sig_allocacmp_accumulators_0_2_load = grp_fu_3765_p3;
    end else begin
        ap_sig_allocacmp_accumulators_0_2_load = accumulators_0_2;
    end
end

always @ (*) begin
    if (((icmp_ln30_reg_4168_pp5_iter3_reg == 1'd0) & (1'b0 == ap_block_pp5_stage0) & (ap_enable_reg_pp5_iter4 == 1'b1))) begin
        ap_sig_allocacmp_accumulators_0_3_load = grp_fu_3909_p3;
    end else begin
        ap_sig_allocacmp_accumulators_0_3_load = accumulators_0_3;
    end
end

always @ (*) begin
    if (((icmp_ln30_reg_4168_pp5_iter3_reg == 1'd0) & (1'b0 == ap_block_pp5_stage0) & (ap_enable_reg_pp5_iter4 == 1'b1))) begin
        ap_sig_allocacmp_accumulators_10_0_load = grp_fu_3567_p3;
    end else begin
        ap_sig_allocacmp_accumulators_10_0_load = accumulators_10_0;
    end
end

always @ (*) begin
    if (((icmp_ln30_reg_4168_pp5_iter3_reg == 1'd0) & (1'b0 == ap_block_pp5_stage0) & (ap_enable_reg_pp5_iter4 == 1'b1))) begin
        ap_sig_allocacmp_accumulators_10_1_load = grp_fu_3711_p3;
    end else begin
        ap_sig_allocacmp_accumulators_10_1_load = accumulators_10_1;
    end
end

always @ (*) begin
    if (((icmp_ln30_reg_4168_pp5_iter3_reg == 1'd0) & (1'b0 == ap_block_pp5_stage0) & (ap_enable_reg_pp5_iter4 == 1'b1))) begin
        ap_sig_allocacmp_accumulators_10_2_load = grp_fu_3855_p3;
    end else begin
        ap_sig_allocacmp_accumulators_10_2_load = accumulators_10_2;
    end
end

always @ (*) begin
    if (((icmp_ln30_reg_4168_pp5_iter3_reg == 1'd0) & (1'b0 == ap_block_pp5_stage0) & (ap_enable_reg_pp5_iter4 == 1'b1))) begin
        ap_sig_allocacmp_accumulators_10_3_load = grp_fu_3999_p3;
    end else begin
        ap_sig_allocacmp_accumulators_10_3_load = accumulators_10_3;
    end
end

always @ (*) begin
    if (((icmp_ln30_reg_4168_pp5_iter3_reg == 1'd0) & (1'b0 == ap_block_pp5_stage0) & (ap_enable_reg_pp5_iter4 == 1'b1))) begin
        ap_sig_allocacmp_accumulators_11_0_load = grp_fu_3576_p3;
    end else begin
        ap_sig_allocacmp_accumulators_11_0_load = accumulators_11_0;
    end
end

always @ (*) begin
    if (((icmp_ln30_reg_4168_pp5_iter3_reg == 1'd0) & (1'b0 == ap_block_pp5_stage0) & (ap_enable_reg_pp5_iter4 == 1'b1))) begin
        ap_sig_allocacmp_accumulators_11_1_load = grp_fu_3720_p3;
    end else begin
        ap_sig_allocacmp_accumulators_11_1_load = accumulators_11_1;
    end
end

always @ (*) begin
    if (((icmp_ln30_reg_4168_pp5_iter3_reg == 1'd0) & (1'b0 == ap_block_pp5_stage0) & (ap_enable_reg_pp5_iter4 == 1'b1))) begin
        ap_sig_allocacmp_accumulators_11_2_load = grp_fu_3864_p3;
    end else begin
        ap_sig_allocacmp_accumulators_11_2_load = accumulators_11_2;
    end
end

always @ (*) begin
    if (((icmp_ln30_reg_4168_pp5_iter3_reg == 1'd0) & (1'b0 == ap_block_pp5_stage0) & (ap_enable_reg_pp5_iter4 == 1'b1))) begin
        ap_sig_allocacmp_accumulators_11_3_load = grp_fu_4008_p3;
    end else begin
        ap_sig_allocacmp_accumulators_11_3_load = accumulators_11_3;
    end
end

always @ (*) begin
    if (((icmp_ln30_reg_4168_pp5_iter3_reg == 1'd0) & (1'b0 == ap_block_pp5_stage0) & (ap_enable_reg_pp5_iter4 == 1'b1))) begin
        ap_sig_allocacmp_accumulators_12_0_load = grp_fu_3585_p3;
    end else begin
        ap_sig_allocacmp_accumulators_12_0_load = accumulators_12_0;
    end
end

always @ (*) begin
    if (((icmp_ln30_reg_4168_pp5_iter3_reg == 1'd0) & (1'b0 == ap_block_pp5_stage0) & (ap_enable_reg_pp5_iter4 == 1'b1))) begin
        ap_sig_allocacmp_accumulators_12_1_load = grp_fu_3729_p3;
    end else begin
        ap_sig_allocacmp_accumulators_12_1_load = accumulators_12_1;
    end
end

always @ (*) begin
    if (((icmp_ln30_reg_4168_pp5_iter3_reg == 1'd0) & (1'b0 == ap_block_pp5_stage0) & (ap_enable_reg_pp5_iter4 == 1'b1))) begin
        ap_sig_allocacmp_accumulators_12_2_load = grp_fu_3873_p3;
    end else begin
        ap_sig_allocacmp_accumulators_12_2_load = accumulators_12_2;
    end
end

always @ (*) begin
    if (((icmp_ln30_reg_4168_pp5_iter3_reg == 1'd0) & (1'b0 == ap_block_pp5_stage0) & (ap_enable_reg_pp5_iter4 == 1'b1))) begin
        ap_sig_allocacmp_accumulators_13_0_load = grp_fu_3594_p3;
    end else begin
        ap_sig_allocacmp_accumulators_13_0_load = accumulators_13_0;
    end
end

always @ (*) begin
    if (((icmp_ln30_reg_4168_pp5_iter3_reg == 1'd0) & (1'b0 == ap_block_pp5_stage0) & (ap_enable_reg_pp5_iter4 == 1'b1))) begin
        ap_sig_allocacmp_accumulators_13_1_load = grp_fu_3738_p3;
    end else begin
        ap_sig_allocacmp_accumulators_13_1_load = accumulators_13_1;
    end
end

always @ (*) begin
    if (((icmp_ln30_reg_4168_pp5_iter3_reg == 1'd0) & (1'b0 == ap_block_pp5_stage0) & (ap_enable_reg_pp5_iter4 == 1'b1))) begin
        ap_sig_allocacmp_accumulators_13_2_load = grp_fu_3882_p3;
    end else begin
        ap_sig_allocacmp_accumulators_13_2_load = accumulators_13_2;
    end
end

always @ (*) begin
    if (((icmp_ln30_reg_4168_pp5_iter3_reg == 1'd0) & (1'b0 == ap_block_pp5_stage0) & (ap_enable_reg_pp5_iter4 == 1'b1))) begin
        ap_sig_allocacmp_accumulators_14_0_load = grp_fu_3603_p3;
    end else begin
        ap_sig_allocacmp_accumulators_14_0_load = accumulators_14_0;
    end
end

always @ (*) begin
    if (((icmp_ln30_reg_4168_pp5_iter3_reg == 1'd0) & (1'b0 == ap_block_pp5_stage0) & (ap_enable_reg_pp5_iter4 == 1'b1))) begin
        ap_sig_allocacmp_accumulators_14_1_load = grp_fu_3747_p3;
    end else begin
        ap_sig_allocacmp_accumulators_14_1_load = accumulators_14_1;
    end
end

always @ (*) begin
    if (((icmp_ln30_reg_4168_pp5_iter3_reg == 1'd0) & (1'b0 == ap_block_pp5_stage0) & (ap_enable_reg_pp5_iter4 == 1'b1))) begin
        ap_sig_allocacmp_accumulators_14_2_load = grp_fu_3891_p3;
    end else begin
        ap_sig_allocacmp_accumulators_14_2_load = accumulators_14_2;
    end
end

always @ (*) begin
    if (((icmp_ln30_reg_4168_pp5_iter3_reg == 1'd0) & (1'b0 == ap_block_pp5_stage0) & (ap_enable_reg_pp5_iter4 == 1'b1))) begin
        ap_sig_allocacmp_accumulators_15_0_load = grp_fu_3612_p3;
    end else begin
        ap_sig_allocacmp_accumulators_15_0_load = accumulators_15_0;
    end
end

always @ (*) begin
    if (((icmp_ln30_reg_4168_pp5_iter3_reg == 1'd0) & (1'b0 == ap_block_pp5_stage0) & (ap_enable_reg_pp5_iter4 == 1'b1))) begin
        ap_sig_allocacmp_accumulators_15_1_load = grp_fu_3756_p3;
    end else begin
        ap_sig_allocacmp_accumulators_15_1_load = accumulators_15_1;
    end
end

always @ (*) begin
    if (((icmp_ln30_reg_4168_pp5_iter3_reg == 1'd0) & (1'b0 == ap_block_pp5_stage0) & (ap_enable_reg_pp5_iter4 == 1'b1))) begin
        ap_sig_allocacmp_accumulators_15_2_load = grp_fu_3900_p3;
    end else begin
        ap_sig_allocacmp_accumulators_15_2_load = accumulators_15_2;
    end
end

always @ (*) begin
    if (((icmp_ln30_reg_4168_pp5_iter3_reg == 1'd0) & (1'b0 == ap_block_pp5_stage0) & (ap_enable_reg_pp5_iter4 == 1'b1))) begin
        ap_sig_allocacmp_accumulators_1_0_load = grp_fu_3486_p3;
    end else begin
        ap_sig_allocacmp_accumulators_1_0_load = accumulators_1_0;
    end
end

always @ (*) begin
    if (((icmp_ln30_reg_4168_pp5_iter3_reg == 1'd0) & (1'b0 == ap_block_pp5_stage0) & (ap_enable_reg_pp5_iter4 == 1'b1))) begin
        ap_sig_allocacmp_accumulators_1_1_load = grp_fu_3630_p3;
    end else begin
        ap_sig_allocacmp_accumulators_1_1_load = accumulators_1_1;
    end
end

always @ (*) begin
    if (((icmp_ln30_reg_4168_pp5_iter3_reg == 1'd0) & (1'b0 == ap_block_pp5_stage0) & (ap_enable_reg_pp5_iter4 == 1'b1))) begin
        ap_sig_allocacmp_accumulators_1_2_load = grp_fu_3774_p3;
    end else begin
        ap_sig_allocacmp_accumulators_1_2_load = accumulators_1_2;
    end
end

always @ (*) begin
    if (((icmp_ln30_reg_4168_pp5_iter3_reg == 1'd0) & (1'b0 == ap_block_pp5_stage0) & (ap_enable_reg_pp5_iter4 == 1'b1))) begin
        ap_sig_allocacmp_accumulators_1_3_load = grp_fu_3918_p3;
    end else begin
        ap_sig_allocacmp_accumulators_1_3_load = accumulators_1_3;
    end
end

always @ (*) begin
    if (((icmp_ln30_reg_4168_pp5_iter3_reg == 1'd0) & (1'b0 == ap_block_pp5_stage0) & (ap_enable_reg_pp5_iter4 == 1'b1))) begin
        ap_sig_allocacmp_accumulators_2_0_load = grp_fu_3495_p3;
    end else begin
        ap_sig_allocacmp_accumulators_2_0_load = accumulators_2_0;
    end
end

always @ (*) begin
    if (((icmp_ln30_reg_4168_pp5_iter3_reg == 1'd0) & (1'b0 == ap_block_pp5_stage0) & (ap_enable_reg_pp5_iter4 == 1'b1))) begin
        ap_sig_allocacmp_accumulators_2_1_load = grp_fu_3639_p3;
    end else begin
        ap_sig_allocacmp_accumulators_2_1_load = accumulators_2_1;
    end
end

always @ (*) begin
    if (((icmp_ln30_reg_4168_pp5_iter3_reg == 1'd0) & (1'b0 == ap_block_pp5_stage0) & (ap_enable_reg_pp5_iter4 == 1'b1))) begin
        ap_sig_allocacmp_accumulators_2_2_load = grp_fu_3783_p3;
    end else begin
        ap_sig_allocacmp_accumulators_2_2_load = accumulators_2_2;
    end
end

always @ (*) begin
    if (((icmp_ln30_reg_4168_pp5_iter3_reg == 1'd0) & (1'b0 == ap_block_pp5_stage0) & (ap_enable_reg_pp5_iter4 == 1'b1))) begin
        ap_sig_allocacmp_accumulators_2_3_load = grp_fu_3927_p3;
    end else begin
        ap_sig_allocacmp_accumulators_2_3_load = accumulators_2_3;
    end
end

always @ (*) begin
    if (((icmp_ln30_reg_4168_pp5_iter3_reg == 1'd0) & (1'b0 == ap_block_pp5_stage0) & (ap_enable_reg_pp5_iter4 == 1'b1))) begin
        ap_sig_allocacmp_accumulators_3_0_load = grp_fu_3504_p3;
    end else begin
        ap_sig_allocacmp_accumulators_3_0_load = accumulators_3_0;
    end
end

always @ (*) begin
    if (((icmp_ln30_reg_4168_pp5_iter3_reg == 1'd0) & (1'b0 == ap_block_pp5_stage0) & (ap_enable_reg_pp5_iter4 == 1'b1))) begin
        ap_sig_allocacmp_accumulators_3_1_load = grp_fu_3648_p3;
    end else begin
        ap_sig_allocacmp_accumulators_3_1_load = accumulators_3_1;
    end
end

always @ (*) begin
    if (((icmp_ln30_reg_4168_pp5_iter3_reg == 1'd0) & (1'b0 == ap_block_pp5_stage0) & (ap_enable_reg_pp5_iter4 == 1'b1))) begin
        ap_sig_allocacmp_accumulators_3_2_load = grp_fu_3792_p3;
    end else begin
        ap_sig_allocacmp_accumulators_3_2_load = accumulators_3_2;
    end
end

always @ (*) begin
    if (((icmp_ln30_reg_4168_pp5_iter3_reg == 1'd0) & (1'b0 == ap_block_pp5_stage0) & (ap_enable_reg_pp5_iter4 == 1'b1))) begin
        ap_sig_allocacmp_accumulators_3_3_load = grp_fu_3936_p3;
    end else begin
        ap_sig_allocacmp_accumulators_3_3_load = accumulators_3_3;
    end
end

always @ (*) begin
    if (((icmp_ln30_reg_4168_pp5_iter3_reg == 1'd0) & (1'b0 == ap_block_pp5_stage0) & (ap_enable_reg_pp5_iter4 == 1'b1))) begin
        ap_sig_allocacmp_accumulators_4_0_load = grp_fu_3513_p3;
    end else begin
        ap_sig_allocacmp_accumulators_4_0_load = accumulators_4_0;
    end
end

always @ (*) begin
    if (((icmp_ln30_reg_4168_pp5_iter3_reg == 1'd0) & (1'b0 == ap_block_pp5_stage0) & (ap_enable_reg_pp5_iter4 == 1'b1))) begin
        ap_sig_allocacmp_accumulators_4_1_load = grp_fu_3657_p3;
    end else begin
        ap_sig_allocacmp_accumulators_4_1_load = accumulators_4_1;
    end
end

always @ (*) begin
    if (((icmp_ln30_reg_4168_pp5_iter3_reg == 1'd0) & (1'b0 == ap_block_pp5_stage0) & (ap_enable_reg_pp5_iter4 == 1'b1))) begin
        ap_sig_allocacmp_accumulators_4_2_load = grp_fu_3801_p3;
    end else begin
        ap_sig_allocacmp_accumulators_4_2_load = accumulators_4_2;
    end
end

always @ (*) begin
    if (((icmp_ln30_reg_4168_pp5_iter3_reg == 1'd0) & (1'b0 == ap_block_pp5_stage0) & (ap_enable_reg_pp5_iter4 == 1'b1))) begin
        ap_sig_allocacmp_accumulators_4_3_load = grp_fu_3945_p3;
    end else begin
        ap_sig_allocacmp_accumulators_4_3_load = accumulators_4_3;
    end
end

always @ (*) begin
    if (((icmp_ln30_reg_4168_pp5_iter3_reg == 1'd0) & (1'b0 == ap_block_pp5_stage0) & (ap_enable_reg_pp5_iter4 == 1'b1))) begin
        ap_sig_allocacmp_accumulators_5_0_load = grp_fu_3522_p3;
    end else begin
        ap_sig_allocacmp_accumulators_5_0_load = accumulators_5_0;
    end
end

always @ (*) begin
    if (((icmp_ln30_reg_4168_pp5_iter3_reg == 1'd0) & (1'b0 == ap_block_pp5_stage0) & (ap_enable_reg_pp5_iter4 == 1'b1))) begin
        ap_sig_allocacmp_accumulators_5_1_load = grp_fu_3666_p3;
    end else begin
        ap_sig_allocacmp_accumulators_5_1_load = accumulators_5_1;
    end
end

always @ (*) begin
    if (((icmp_ln30_reg_4168_pp5_iter3_reg == 1'd0) & (1'b0 == ap_block_pp5_stage0) & (ap_enable_reg_pp5_iter4 == 1'b1))) begin
        ap_sig_allocacmp_accumulators_5_2_load = grp_fu_3810_p3;
    end else begin
        ap_sig_allocacmp_accumulators_5_2_load = accumulators_5_2;
    end
end

always @ (*) begin
    if (((icmp_ln30_reg_4168_pp5_iter3_reg == 1'd0) & (1'b0 == ap_block_pp5_stage0) & (ap_enable_reg_pp5_iter4 == 1'b1))) begin
        ap_sig_allocacmp_accumulators_5_3_load = grp_fu_3954_p3;
    end else begin
        ap_sig_allocacmp_accumulators_5_3_load = accumulators_5_3;
    end
end

always @ (*) begin
    if (((icmp_ln30_reg_4168_pp5_iter3_reg == 1'd0) & (1'b0 == ap_block_pp5_stage0) & (ap_enable_reg_pp5_iter4 == 1'b1))) begin
        ap_sig_allocacmp_accumulators_6_0_load = grp_fu_3531_p3;
    end else begin
        ap_sig_allocacmp_accumulators_6_0_load = accumulators_6_0;
    end
end

always @ (*) begin
    if (((icmp_ln30_reg_4168_pp5_iter3_reg == 1'd0) & (1'b0 == ap_block_pp5_stage0) & (ap_enable_reg_pp5_iter4 == 1'b1))) begin
        ap_sig_allocacmp_accumulators_6_1_load = grp_fu_3675_p3;
    end else begin
        ap_sig_allocacmp_accumulators_6_1_load = accumulators_6_1;
    end
end

always @ (*) begin
    if (((icmp_ln30_reg_4168_pp5_iter3_reg == 1'd0) & (1'b0 == ap_block_pp5_stage0) & (ap_enable_reg_pp5_iter4 == 1'b1))) begin
        ap_sig_allocacmp_accumulators_6_2_load = grp_fu_3819_p3;
    end else begin
        ap_sig_allocacmp_accumulators_6_2_load = accumulators_6_2;
    end
end

always @ (*) begin
    if (((icmp_ln30_reg_4168_pp5_iter3_reg == 1'd0) & (1'b0 == ap_block_pp5_stage0) & (ap_enable_reg_pp5_iter4 == 1'b1))) begin
        ap_sig_allocacmp_accumulators_6_3_load = grp_fu_3963_p3;
    end else begin
        ap_sig_allocacmp_accumulators_6_3_load = accumulators_6_3;
    end
end

always @ (*) begin
    if (((icmp_ln30_reg_4168_pp5_iter3_reg == 1'd0) & (1'b0 == ap_block_pp5_stage0) & (ap_enable_reg_pp5_iter4 == 1'b1))) begin
        ap_sig_allocacmp_accumulators_7_0_load = grp_fu_3540_p3;
    end else begin
        ap_sig_allocacmp_accumulators_7_0_load = accumulators_7_0;
    end
end

always @ (*) begin
    if (((icmp_ln30_reg_4168_pp5_iter3_reg == 1'd0) & (1'b0 == ap_block_pp5_stage0) & (ap_enable_reg_pp5_iter4 == 1'b1))) begin
        ap_sig_allocacmp_accumulators_7_1_load = grp_fu_3684_p3;
    end else begin
        ap_sig_allocacmp_accumulators_7_1_load = accumulators_7_1;
    end
end

always @ (*) begin
    if (((icmp_ln30_reg_4168_pp5_iter3_reg == 1'd0) & (1'b0 == ap_block_pp5_stage0) & (ap_enable_reg_pp5_iter4 == 1'b1))) begin
        ap_sig_allocacmp_accumulators_7_2_load = grp_fu_3828_p3;
    end else begin
        ap_sig_allocacmp_accumulators_7_2_load = accumulators_7_2;
    end
end

always @ (*) begin
    if (((icmp_ln30_reg_4168_pp5_iter3_reg == 1'd0) & (1'b0 == ap_block_pp5_stage0) & (ap_enable_reg_pp5_iter4 == 1'b1))) begin
        ap_sig_allocacmp_accumulators_7_3_load = grp_fu_3972_p3;
    end else begin
        ap_sig_allocacmp_accumulators_7_3_load = accumulators_7_3;
    end
end

always @ (*) begin
    if (((icmp_ln30_reg_4168_pp5_iter3_reg == 1'd0) & (1'b0 == ap_block_pp5_stage0) & (ap_enable_reg_pp5_iter4 == 1'b1))) begin
        ap_sig_allocacmp_accumulators_8_0_load = grp_fu_3549_p3;
    end else begin
        ap_sig_allocacmp_accumulators_8_0_load = accumulators_8_0;
    end
end

always @ (*) begin
    if (((icmp_ln30_reg_4168_pp5_iter3_reg == 1'd0) & (1'b0 == ap_block_pp5_stage0) & (ap_enable_reg_pp5_iter4 == 1'b1))) begin
        ap_sig_allocacmp_accumulators_8_1_load = grp_fu_3693_p3;
    end else begin
        ap_sig_allocacmp_accumulators_8_1_load = accumulators_8_1;
    end
end

always @ (*) begin
    if (((icmp_ln30_reg_4168_pp5_iter3_reg == 1'd0) & (1'b0 == ap_block_pp5_stage0) & (ap_enable_reg_pp5_iter4 == 1'b1))) begin
        ap_sig_allocacmp_accumulators_8_2_load = grp_fu_3837_p3;
    end else begin
        ap_sig_allocacmp_accumulators_8_2_load = accumulators_8_2;
    end
end

always @ (*) begin
    if (((icmp_ln30_reg_4168_pp5_iter3_reg == 1'd0) & (1'b0 == ap_block_pp5_stage0) & (ap_enable_reg_pp5_iter4 == 1'b1))) begin
        ap_sig_allocacmp_accumulators_8_3_load = grp_fu_3981_p3;
    end else begin
        ap_sig_allocacmp_accumulators_8_3_load = accumulators_8_3;
    end
end

always @ (*) begin
    if (((icmp_ln30_reg_4168_pp5_iter3_reg == 1'd0) & (1'b0 == ap_block_pp5_stage0) & (ap_enable_reg_pp5_iter4 == 1'b1))) begin
        ap_sig_allocacmp_accumulators_9_0_load = grp_fu_3558_p3;
    end else begin
        ap_sig_allocacmp_accumulators_9_0_load = accumulators_9_0;
    end
end

always @ (*) begin
    if (((icmp_ln30_reg_4168_pp5_iter3_reg == 1'd0) & (1'b0 == ap_block_pp5_stage0) & (ap_enable_reg_pp5_iter4 == 1'b1))) begin
        ap_sig_allocacmp_accumulators_9_1_load = grp_fu_3702_p3;
    end else begin
        ap_sig_allocacmp_accumulators_9_1_load = accumulators_9_1;
    end
end

always @ (*) begin
    if (((icmp_ln30_reg_4168_pp5_iter3_reg == 1'd0) & (1'b0 == ap_block_pp5_stage0) & (ap_enable_reg_pp5_iter4 == 1'b1))) begin
        ap_sig_allocacmp_accumulators_9_2_load = grp_fu_3846_p3;
    end else begin
        ap_sig_allocacmp_accumulators_9_2_load = accumulators_9_2;
    end
end

always @ (*) begin
    if (((icmp_ln30_reg_4168_pp5_iter3_reg == 1'd0) & (1'b0 == ap_block_pp5_stage0) & (ap_enable_reg_pp5_iter4 == 1'b1))) begin
        ap_sig_allocacmp_accumulators_9_3_load = grp_fu_3990_p3;
    end else begin
        ap_sig_allocacmp_accumulators_9_3_load = accumulators_9_3;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state11) & (icmp_ln22_fu_2420_p2 == 1'd0))) begin
        coeffs_V_TDATA_blk_n = coeffs_V_TVALID_int_regslice;
    end else begin
        coeffs_V_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((coeffs_V_TVALID_int_regslice == 1'b0) & (icmp_ln22_fu_2420_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state11) & (icmp_ln22_fu_2420_p2 == 1'd0))) begin
        coeffs_V_TREADY_int_regslice = 1'b1;
    end else begin
        coeffs_V_TREADY_int_regslice = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp5_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage0) & (1'b0 == ap_block_pp5_stage0))) begin
        coeffs_l_address0 = i_1_cast_fu_2447_p1;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        coeffs_l_address0 = i_cast_fu_2426_p1;
    end else begin
        coeffs_l_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp5_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage0) & (1'b0 == ap_block_pp5_stage0_11001)) | (~((coeffs_V_TVALID_int_regslice == 1'b0) & (icmp_ln22_fu_2420_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state11)))) begin
        coeffs_l_ce0 = 1'b1;
    end else begin
        coeffs_l_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((coeffs_V_TVALID_int_regslice == 1'b0) & (icmp_ln22_fu_2420_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state11) & (icmp_ln22_fu_2420_p2 == 1'd0))) begin
        coeffs_l_we0 = 1'b1;
    end else begin
        coeffs_l_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        grp_load_fu_1442_p1 = accumulators_0_0;
    end else if (((icmp_ln30_reg_4168_pp5_iter2_reg == 1'd0) & (ap_enable_reg_pp5_iter3 == 1'b1) & (1'b0 == ap_block_pp5_stage0))) begin
        grp_load_fu_1442_p1 = ap_sig_allocacmp_accumulators_0_0_load;
    end else begin
        grp_load_fu_1442_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        grp_load_fu_1446_p1 = accumulators_1_0;
    end else if (((icmp_ln30_reg_4168_pp5_iter2_reg == 1'd0) & (ap_enable_reg_pp5_iter3 == 1'b1) & (1'b0 == ap_block_pp5_stage0))) begin
        grp_load_fu_1446_p1 = ap_sig_allocacmp_accumulators_1_0_load;
    end else begin
        grp_load_fu_1446_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        grp_load_fu_1450_p1 = accumulators_2_0;
    end else if (((icmp_ln30_reg_4168_pp5_iter2_reg == 1'd0) & (ap_enable_reg_pp5_iter3 == 1'b1) & (1'b0 == ap_block_pp5_stage0))) begin
        grp_load_fu_1450_p1 = ap_sig_allocacmp_accumulators_2_0_load;
    end else begin
        grp_load_fu_1450_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        grp_load_fu_1454_p1 = accumulators_3_0;
    end else if (((icmp_ln30_reg_4168_pp5_iter2_reg == 1'd0) & (ap_enable_reg_pp5_iter3 == 1'b1) & (1'b0 == ap_block_pp5_stage0))) begin
        grp_load_fu_1454_p1 = ap_sig_allocacmp_accumulators_3_0_load;
    end else begin
        grp_load_fu_1454_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        grp_load_fu_1458_p1 = accumulators_4_0;
    end else if (((icmp_ln30_reg_4168_pp5_iter2_reg == 1'd0) & (ap_enable_reg_pp5_iter3 == 1'b1) & (1'b0 == ap_block_pp5_stage0))) begin
        grp_load_fu_1458_p1 = ap_sig_allocacmp_accumulators_4_0_load;
    end else begin
        grp_load_fu_1458_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        grp_load_fu_1462_p1 = accumulators_5_0;
    end else if (((icmp_ln30_reg_4168_pp5_iter2_reg == 1'd0) & (ap_enable_reg_pp5_iter3 == 1'b1) & (1'b0 == ap_block_pp5_stage0))) begin
        grp_load_fu_1462_p1 = ap_sig_allocacmp_accumulators_5_0_load;
    end else begin
        grp_load_fu_1462_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        grp_load_fu_1466_p1 = accumulators_6_0;
    end else if (((icmp_ln30_reg_4168_pp5_iter2_reg == 1'd0) & (ap_enable_reg_pp5_iter3 == 1'b1) & (1'b0 == ap_block_pp5_stage0))) begin
        grp_load_fu_1466_p1 = ap_sig_allocacmp_accumulators_6_0_load;
    end else begin
        grp_load_fu_1466_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        grp_load_fu_1470_p1 = accumulators_7_0;
    end else if (((icmp_ln30_reg_4168_pp5_iter2_reg == 1'd0) & (ap_enable_reg_pp5_iter3 == 1'b1) & (1'b0 == ap_block_pp5_stage0))) begin
        grp_load_fu_1470_p1 = ap_sig_allocacmp_accumulators_7_0_load;
    end else begin
        grp_load_fu_1470_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        grp_load_fu_1474_p1 = accumulators_8_0;
    end else if (((icmp_ln30_reg_4168_pp5_iter2_reg == 1'd0) & (ap_enable_reg_pp5_iter3 == 1'b1) & (1'b0 == ap_block_pp5_stage0))) begin
        grp_load_fu_1474_p1 = ap_sig_allocacmp_accumulators_8_0_load;
    end else begin
        grp_load_fu_1474_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        grp_load_fu_1478_p1 = accumulators_9_0;
    end else if (((icmp_ln30_reg_4168_pp5_iter2_reg == 1'd0) & (ap_enable_reg_pp5_iter3 == 1'b1) & (1'b0 == ap_block_pp5_stage0))) begin
        grp_load_fu_1478_p1 = ap_sig_allocacmp_accumulators_9_0_load;
    end else begin
        grp_load_fu_1478_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        grp_load_fu_1482_p1 = accumulators_10_0;
    end else if (((icmp_ln30_reg_4168_pp5_iter2_reg == 1'd0) & (ap_enable_reg_pp5_iter3 == 1'b1) & (1'b0 == ap_block_pp5_stage0))) begin
        grp_load_fu_1482_p1 = ap_sig_allocacmp_accumulators_10_0_load;
    end else begin
        grp_load_fu_1482_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        grp_load_fu_1486_p1 = accumulators_11_0;
    end else if (((icmp_ln30_reg_4168_pp5_iter2_reg == 1'd0) & (ap_enable_reg_pp5_iter3 == 1'b1) & (1'b0 == ap_block_pp5_stage0))) begin
        grp_load_fu_1486_p1 = ap_sig_allocacmp_accumulators_11_0_load;
    end else begin
        grp_load_fu_1486_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        grp_load_fu_1490_p1 = accumulators_12_0;
    end else if (((icmp_ln30_reg_4168_pp5_iter2_reg == 1'd0) & (ap_enable_reg_pp5_iter3 == 1'b1) & (1'b0 == ap_block_pp5_stage0))) begin
        grp_load_fu_1490_p1 = ap_sig_allocacmp_accumulators_12_0_load;
    end else begin
        grp_load_fu_1490_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        grp_load_fu_1494_p1 = accumulators_13_0;
    end else if (((icmp_ln30_reg_4168_pp5_iter2_reg == 1'd0) & (ap_enable_reg_pp5_iter3 == 1'b1) & (1'b0 == ap_block_pp5_stage0))) begin
        grp_load_fu_1494_p1 = ap_sig_allocacmp_accumulators_13_0_load;
    end else begin
        grp_load_fu_1494_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        grp_load_fu_1498_p1 = accumulators_14_0;
    end else if (((icmp_ln30_reg_4168_pp5_iter2_reg == 1'd0) & (ap_enable_reg_pp5_iter3 == 1'b1) & (1'b0 == ap_block_pp5_stage0))) begin
        grp_load_fu_1498_p1 = ap_sig_allocacmp_accumulators_14_0_load;
    end else begin
        grp_load_fu_1498_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        grp_load_fu_1502_p1 = accumulators_15_0;
    end else if (((icmp_ln30_reg_4168_pp5_iter2_reg == 1'd0) & (ap_enable_reg_pp5_iter3 == 1'b1) & (1'b0 == ap_block_pp5_stage0))) begin
        grp_load_fu_1502_p1 = ap_sig_allocacmp_accumulators_15_0_load;
    end else begin
        grp_load_fu_1502_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        grp_load_fu_1506_p1 = accumulators_0_1;
    end else if (((icmp_ln30_reg_4168_pp5_iter2_reg == 1'd0) & (ap_enable_reg_pp5_iter3 == 1'b1) & (1'b0 == ap_block_pp5_stage0))) begin
        grp_load_fu_1506_p1 = ap_sig_allocacmp_accumulators_0_1_load;
    end else begin
        grp_load_fu_1506_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        grp_load_fu_1510_p1 = accumulators_1_1;
    end else if (((icmp_ln30_reg_4168_pp5_iter2_reg == 1'd0) & (ap_enable_reg_pp5_iter3 == 1'b1) & (1'b0 == ap_block_pp5_stage0))) begin
        grp_load_fu_1510_p1 = ap_sig_allocacmp_accumulators_1_1_load;
    end else begin
        grp_load_fu_1510_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        grp_load_fu_1514_p1 = accumulators_2_1;
    end else if (((icmp_ln30_reg_4168_pp5_iter2_reg == 1'd0) & (ap_enable_reg_pp5_iter3 == 1'b1) & (1'b0 == ap_block_pp5_stage0))) begin
        grp_load_fu_1514_p1 = ap_sig_allocacmp_accumulators_2_1_load;
    end else begin
        grp_load_fu_1514_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        grp_load_fu_1518_p1 = accumulators_3_1;
    end else if (((icmp_ln30_reg_4168_pp5_iter2_reg == 1'd0) & (ap_enable_reg_pp5_iter3 == 1'b1) & (1'b0 == ap_block_pp5_stage0))) begin
        grp_load_fu_1518_p1 = ap_sig_allocacmp_accumulators_3_1_load;
    end else begin
        grp_load_fu_1518_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        grp_load_fu_1522_p1 = accumulators_4_1;
    end else if (((icmp_ln30_reg_4168_pp5_iter2_reg == 1'd0) & (ap_enable_reg_pp5_iter3 == 1'b1) & (1'b0 == ap_block_pp5_stage0))) begin
        grp_load_fu_1522_p1 = ap_sig_allocacmp_accumulators_4_1_load;
    end else begin
        grp_load_fu_1522_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        grp_load_fu_1526_p1 = accumulators_5_1;
    end else if (((icmp_ln30_reg_4168_pp5_iter2_reg == 1'd0) & (ap_enable_reg_pp5_iter3 == 1'b1) & (1'b0 == ap_block_pp5_stage0))) begin
        grp_load_fu_1526_p1 = ap_sig_allocacmp_accumulators_5_1_load;
    end else begin
        grp_load_fu_1526_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        grp_load_fu_1530_p1 = accumulators_6_1;
    end else if (((icmp_ln30_reg_4168_pp5_iter2_reg == 1'd0) & (ap_enable_reg_pp5_iter3 == 1'b1) & (1'b0 == ap_block_pp5_stage0))) begin
        grp_load_fu_1530_p1 = ap_sig_allocacmp_accumulators_6_1_load;
    end else begin
        grp_load_fu_1530_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        grp_load_fu_1534_p1 = accumulators_7_1;
    end else if (((icmp_ln30_reg_4168_pp5_iter2_reg == 1'd0) & (ap_enable_reg_pp5_iter3 == 1'b1) & (1'b0 == ap_block_pp5_stage0))) begin
        grp_load_fu_1534_p1 = ap_sig_allocacmp_accumulators_7_1_load;
    end else begin
        grp_load_fu_1534_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        grp_load_fu_1538_p1 = accumulators_8_1;
    end else if (((icmp_ln30_reg_4168_pp5_iter2_reg == 1'd0) & (ap_enable_reg_pp5_iter3 == 1'b1) & (1'b0 == ap_block_pp5_stage0))) begin
        grp_load_fu_1538_p1 = ap_sig_allocacmp_accumulators_8_1_load;
    end else begin
        grp_load_fu_1538_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        grp_load_fu_1542_p1 = accumulators_9_1;
    end else if (((icmp_ln30_reg_4168_pp5_iter2_reg == 1'd0) & (ap_enable_reg_pp5_iter3 == 1'b1) & (1'b0 == ap_block_pp5_stage0))) begin
        grp_load_fu_1542_p1 = ap_sig_allocacmp_accumulators_9_1_load;
    end else begin
        grp_load_fu_1542_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        grp_load_fu_1546_p1 = accumulators_10_1;
    end else if (((icmp_ln30_reg_4168_pp5_iter2_reg == 1'd0) & (ap_enable_reg_pp5_iter3 == 1'b1) & (1'b0 == ap_block_pp5_stage0))) begin
        grp_load_fu_1546_p1 = ap_sig_allocacmp_accumulators_10_1_load;
    end else begin
        grp_load_fu_1546_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        grp_load_fu_1550_p1 = accumulators_11_1;
    end else if (((icmp_ln30_reg_4168_pp5_iter2_reg == 1'd0) & (ap_enable_reg_pp5_iter3 == 1'b1) & (1'b0 == ap_block_pp5_stage0))) begin
        grp_load_fu_1550_p1 = ap_sig_allocacmp_accumulators_11_1_load;
    end else begin
        grp_load_fu_1550_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        grp_load_fu_1554_p1 = accumulators_12_1;
    end else if (((icmp_ln30_reg_4168_pp5_iter2_reg == 1'd0) & (ap_enable_reg_pp5_iter3 == 1'b1) & (1'b0 == ap_block_pp5_stage0))) begin
        grp_load_fu_1554_p1 = ap_sig_allocacmp_accumulators_12_1_load;
    end else begin
        grp_load_fu_1554_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        grp_load_fu_1558_p1 = accumulators_13_1;
    end else if (((icmp_ln30_reg_4168_pp5_iter2_reg == 1'd0) & (ap_enable_reg_pp5_iter3 == 1'b1) & (1'b0 == ap_block_pp5_stage0))) begin
        grp_load_fu_1558_p1 = ap_sig_allocacmp_accumulators_13_1_load;
    end else begin
        grp_load_fu_1558_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        grp_load_fu_1562_p1 = accumulators_14_1;
    end else if (((icmp_ln30_reg_4168_pp5_iter2_reg == 1'd0) & (ap_enable_reg_pp5_iter3 == 1'b1) & (1'b0 == ap_block_pp5_stage0))) begin
        grp_load_fu_1562_p1 = ap_sig_allocacmp_accumulators_14_1_load;
    end else begin
        grp_load_fu_1562_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        grp_load_fu_1566_p1 = accumulators_15_1;
    end else if (((icmp_ln30_reg_4168_pp5_iter2_reg == 1'd0) & (ap_enable_reg_pp5_iter3 == 1'b1) & (1'b0 == ap_block_pp5_stage0))) begin
        grp_load_fu_1566_p1 = ap_sig_allocacmp_accumulators_15_1_load;
    end else begin
        grp_load_fu_1566_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        grp_load_fu_1570_p1 = accumulators_0_2;
    end else if (((icmp_ln30_reg_4168_pp5_iter2_reg == 1'd0) & (ap_enable_reg_pp5_iter3 == 1'b1) & (1'b0 == ap_block_pp5_stage0))) begin
        grp_load_fu_1570_p1 = ap_sig_allocacmp_accumulators_0_2_load;
    end else begin
        grp_load_fu_1570_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        grp_load_fu_1574_p1 = accumulators_1_2;
    end else if (((icmp_ln30_reg_4168_pp5_iter2_reg == 1'd0) & (ap_enable_reg_pp5_iter3 == 1'b1) & (1'b0 == ap_block_pp5_stage0))) begin
        grp_load_fu_1574_p1 = ap_sig_allocacmp_accumulators_1_2_load;
    end else begin
        grp_load_fu_1574_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        grp_load_fu_1578_p1 = accumulators_2_2;
    end else if (((icmp_ln30_reg_4168_pp5_iter2_reg == 1'd0) & (ap_enable_reg_pp5_iter3 == 1'b1) & (1'b0 == ap_block_pp5_stage0))) begin
        grp_load_fu_1578_p1 = ap_sig_allocacmp_accumulators_2_2_load;
    end else begin
        grp_load_fu_1578_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        grp_load_fu_1582_p1 = accumulators_3_2;
    end else if (((icmp_ln30_reg_4168_pp5_iter2_reg == 1'd0) & (ap_enable_reg_pp5_iter3 == 1'b1) & (1'b0 == ap_block_pp5_stage0))) begin
        grp_load_fu_1582_p1 = ap_sig_allocacmp_accumulators_3_2_load;
    end else begin
        grp_load_fu_1582_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        grp_load_fu_1586_p1 = accumulators_4_2;
    end else if (((icmp_ln30_reg_4168_pp5_iter2_reg == 1'd0) & (ap_enable_reg_pp5_iter3 == 1'b1) & (1'b0 == ap_block_pp5_stage0))) begin
        grp_load_fu_1586_p1 = ap_sig_allocacmp_accumulators_4_2_load;
    end else begin
        grp_load_fu_1586_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        grp_load_fu_1590_p1 = accumulators_5_2;
    end else if (((icmp_ln30_reg_4168_pp5_iter2_reg == 1'd0) & (ap_enable_reg_pp5_iter3 == 1'b1) & (1'b0 == ap_block_pp5_stage0))) begin
        grp_load_fu_1590_p1 = ap_sig_allocacmp_accumulators_5_2_load;
    end else begin
        grp_load_fu_1590_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        grp_load_fu_1594_p1 = accumulators_6_2;
    end else if (((icmp_ln30_reg_4168_pp5_iter2_reg == 1'd0) & (ap_enable_reg_pp5_iter3 == 1'b1) & (1'b0 == ap_block_pp5_stage0))) begin
        grp_load_fu_1594_p1 = ap_sig_allocacmp_accumulators_6_2_load;
    end else begin
        grp_load_fu_1594_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        grp_load_fu_1598_p1 = accumulators_7_2;
    end else if (((icmp_ln30_reg_4168_pp5_iter2_reg == 1'd0) & (ap_enable_reg_pp5_iter3 == 1'b1) & (1'b0 == ap_block_pp5_stage0))) begin
        grp_load_fu_1598_p1 = ap_sig_allocacmp_accumulators_7_2_load;
    end else begin
        grp_load_fu_1598_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        grp_load_fu_1602_p1 = accumulators_8_2;
    end else if (((icmp_ln30_reg_4168_pp5_iter2_reg == 1'd0) & (ap_enable_reg_pp5_iter3 == 1'b1) & (1'b0 == ap_block_pp5_stage0))) begin
        grp_load_fu_1602_p1 = ap_sig_allocacmp_accumulators_8_2_load;
    end else begin
        grp_load_fu_1602_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        grp_load_fu_1606_p1 = accumulators_9_2;
    end else if (((icmp_ln30_reg_4168_pp5_iter2_reg == 1'd0) & (ap_enable_reg_pp5_iter3 == 1'b1) & (1'b0 == ap_block_pp5_stage0))) begin
        grp_load_fu_1606_p1 = ap_sig_allocacmp_accumulators_9_2_load;
    end else begin
        grp_load_fu_1606_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        grp_load_fu_1610_p1 = accumulators_10_2;
    end else if (((icmp_ln30_reg_4168_pp5_iter2_reg == 1'd0) & (ap_enable_reg_pp5_iter3 == 1'b1) & (1'b0 == ap_block_pp5_stage0))) begin
        grp_load_fu_1610_p1 = ap_sig_allocacmp_accumulators_10_2_load;
    end else begin
        grp_load_fu_1610_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        grp_load_fu_1614_p1 = accumulators_11_2;
    end else if (((icmp_ln30_reg_4168_pp5_iter2_reg == 1'd0) & (ap_enable_reg_pp5_iter3 == 1'b1) & (1'b0 == ap_block_pp5_stage0))) begin
        grp_load_fu_1614_p1 = ap_sig_allocacmp_accumulators_11_2_load;
    end else begin
        grp_load_fu_1614_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        grp_load_fu_1618_p1 = accumulators_12_2;
    end else if (((icmp_ln30_reg_4168_pp5_iter2_reg == 1'd0) & (ap_enable_reg_pp5_iter3 == 1'b1) & (1'b0 == ap_block_pp5_stage0))) begin
        grp_load_fu_1618_p1 = ap_sig_allocacmp_accumulators_12_2_load;
    end else begin
        grp_load_fu_1618_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        grp_load_fu_1622_p1 = accumulators_13_2;
    end else if (((icmp_ln30_reg_4168_pp5_iter2_reg == 1'd0) & (ap_enable_reg_pp5_iter3 == 1'b1) & (1'b0 == ap_block_pp5_stage0))) begin
        grp_load_fu_1622_p1 = ap_sig_allocacmp_accumulators_13_2_load;
    end else begin
        grp_load_fu_1622_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        grp_load_fu_1626_p1 = accumulators_14_2;
    end else if (((icmp_ln30_reg_4168_pp5_iter2_reg == 1'd0) & (ap_enable_reg_pp5_iter3 == 1'b1) & (1'b0 == ap_block_pp5_stage0))) begin
        grp_load_fu_1626_p1 = ap_sig_allocacmp_accumulators_14_2_load;
    end else begin
        grp_load_fu_1626_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        grp_load_fu_1630_p1 = accumulators_15_2;
    end else if (((icmp_ln30_reg_4168_pp5_iter2_reg == 1'd0) & (ap_enable_reg_pp5_iter3 == 1'b1) & (1'b0 == ap_block_pp5_stage0))) begin
        grp_load_fu_1630_p1 = ap_sig_allocacmp_accumulators_15_2_load;
    end else begin
        grp_load_fu_1630_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        grp_load_fu_1634_p1 = accumulators_0_3;
    end else if (((icmp_ln30_reg_4168_pp5_iter2_reg == 1'd0) & (ap_enable_reg_pp5_iter3 == 1'b1) & (1'b0 == ap_block_pp5_stage0))) begin
        grp_load_fu_1634_p1 = ap_sig_allocacmp_accumulators_0_3_load;
    end else begin
        grp_load_fu_1634_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        grp_load_fu_1638_p1 = accumulators_1_3;
    end else if (((icmp_ln30_reg_4168_pp5_iter2_reg == 1'd0) & (ap_enable_reg_pp5_iter3 == 1'b1) & (1'b0 == ap_block_pp5_stage0))) begin
        grp_load_fu_1638_p1 = ap_sig_allocacmp_accumulators_1_3_load;
    end else begin
        grp_load_fu_1638_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        grp_load_fu_1642_p1 = accumulators_2_3;
    end else if (((icmp_ln30_reg_4168_pp5_iter2_reg == 1'd0) & (ap_enable_reg_pp5_iter3 == 1'b1) & (1'b0 == ap_block_pp5_stage0))) begin
        grp_load_fu_1642_p1 = ap_sig_allocacmp_accumulators_2_3_load;
    end else begin
        grp_load_fu_1642_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        grp_load_fu_1646_p1 = accumulators_3_3;
    end else if (((icmp_ln30_reg_4168_pp5_iter2_reg == 1'd0) & (ap_enable_reg_pp5_iter3 == 1'b1) & (1'b0 == ap_block_pp5_stage0))) begin
        grp_load_fu_1646_p1 = ap_sig_allocacmp_accumulators_3_3_load;
    end else begin
        grp_load_fu_1646_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        grp_load_fu_1650_p1 = accumulators_4_3;
    end else if (((icmp_ln30_reg_4168_pp5_iter2_reg == 1'd0) & (ap_enable_reg_pp5_iter3 == 1'b1) & (1'b0 == ap_block_pp5_stage0))) begin
        grp_load_fu_1650_p1 = ap_sig_allocacmp_accumulators_4_3_load;
    end else begin
        grp_load_fu_1650_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        grp_load_fu_1654_p1 = accumulators_5_3;
    end else if (((icmp_ln30_reg_4168_pp5_iter2_reg == 1'd0) & (ap_enable_reg_pp5_iter3 == 1'b1) & (1'b0 == ap_block_pp5_stage0))) begin
        grp_load_fu_1654_p1 = ap_sig_allocacmp_accumulators_5_3_load;
    end else begin
        grp_load_fu_1654_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        grp_load_fu_1658_p1 = accumulators_6_3;
    end else if (((icmp_ln30_reg_4168_pp5_iter2_reg == 1'd0) & (ap_enable_reg_pp5_iter3 == 1'b1) & (1'b0 == ap_block_pp5_stage0))) begin
        grp_load_fu_1658_p1 = ap_sig_allocacmp_accumulators_6_3_load;
    end else begin
        grp_load_fu_1658_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        grp_load_fu_1662_p1 = accumulators_7_3;
    end else if (((icmp_ln30_reg_4168_pp5_iter2_reg == 1'd0) & (ap_enable_reg_pp5_iter3 == 1'b1) & (1'b0 == ap_block_pp5_stage0))) begin
        grp_load_fu_1662_p1 = ap_sig_allocacmp_accumulators_7_3_load;
    end else begin
        grp_load_fu_1662_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        grp_load_fu_1666_p1 = accumulators_8_3;
    end else if (((icmp_ln30_reg_4168_pp5_iter2_reg == 1'd0) & (ap_enable_reg_pp5_iter3 == 1'b1) & (1'b0 == ap_block_pp5_stage0))) begin
        grp_load_fu_1666_p1 = ap_sig_allocacmp_accumulators_8_3_load;
    end else begin
        grp_load_fu_1666_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        grp_load_fu_1670_p1 = accumulators_9_3;
    end else if (((icmp_ln30_reg_4168_pp5_iter2_reg == 1'd0) & (ap_enable_reg_pp5_iter3 == 1'b1) & (1'b0 == ap_block_pp5_stage0))) begin
        grp_load_fu_1670_p1 = ap_sig_allocacmp_accumulators_9_3_load;
    end else begin
        grp_load_fu_1670_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        grp_load_fu_1674_p1 = accumulators_10_3;
    end else if (((icmp_ln30_reg_4168_pp5_iter2_reg == 1'd0) & (ap_enable_reg_pp5_iter3 == 1'b1) & (1'b0 == ap_block_pp5_stage0))) begin
        grp_load_fu_1674_p1 = ap_sig_allocacmp_accumulators_10_3_load;
    end else begin
        grp_load_fu_1674_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        grp_load_fu_1678_p1 = accumulators_11_3;
    end else if (((icmp_ln30_reg_4168_pp5_iter2_reg == 1'd0) & (ap_enable_reg_pp5_iter3 == 1'b1) & (1'b0 == ap_block_pp5_stage0))) begin
        grp_load_fu_1678_p1 = ap_sig_allocacmp_accumulators_11_3_load;
    end else begin
        grp_load_fu_1678_p1 = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_ln47_reg_4939_pp7_iter1_reg == 1'd0) & (ap_enable_reg_pp7_iter2 == 1'b1) & (1'b0 == ap_block_pp7_stage0)) | ((1'b1 == ap_CS_fsm_pp7_stage0) & (icmp_ln47_reg_4939 == 1'd0) & (1'b0 == ap_block_pp7_stage0) & (ap_enable_reg_pp7_iter1 == 1'b1)))) begin
        out_V_TDATA_blk_n = out_V_TREADY_int_regslice;
    end else begin
        out_V_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp7_stage0) & (icmp_ln47_reg_4939 == 1'd0) & (1'b0 == ap_block_pp7_stage0_11001) & (ap_enable_reg_pp7_iter1 == 1'b1))) begin
        out_V_TVALID_int_regslice = 1'b1;
    end else begin
        out_V_TVALID_int_regslice = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp7_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp7_stage0) & (1'b0 == ap_block_pp7_stage0))) begin
        out_l_address0 = i_3_cast_fu_3450_p1;
    end else if (((1'b0 == ap_block_pp6_stage0) & (ap_enable_reg_pp6_iter36 == 1'b1))) begin
        out_l_address0 = i_2_cast_fu_3428_p1;
    end else begin
        out_l_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp7_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp7_stage0) & (1'b0 == ap_block_pp7_stage0_11001)) | ((1'b0 == ap_block_pp6_stage0_11001) & (ap_enable_reg_pp6_iter36 == 1'b1)))) begin
        out_l_ce0 = 1'b1;
    end else begin
        out_l_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln36_reg_4846_pp6_iter35_reg == 1'd0) & (1'b0 == ap_block_pp6_stage0_11001) & (ap_enable_reg_pp6_iter36 == 1'b1))) begin
        out_l_we0 = 1'b1;
    end else begin
        out_l_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp5_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage0) & (1'b0 == ap_block_pp5_stage0))) begin
        vec_l_0_address0 = zext_ln32_130_fu_2626_p1;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        vec_l_0_address0 = zext_ln18_7_fu_2378_p1;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        vec_l_0_address0 = zext_ln18_5_fu_2256_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        vec_l_0_address0 = zext_ln18_3_fu_2134_p1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        vec_l_0_address0 = zext_ln18_1_fu_2012_p1;
    end else begin
        vec_l_0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp5_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage0) & (1'b0 == ap_block_pp5_stage0_11001)) | (~((vecs_V_TVALID_int_regslice == 1'b0) & (icmp_ln16_fu_1967_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state3)) | (~((vecs_V_TVALID_int_regslice == 1'b0) & (icmp_ln16_3_fu_2333_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state9)) | (~((vecs_V_TVALID_int_regslice == 1'b0) & (icmp_ln16_2_fu_2211_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state7)) | (~((vecs_V_TVALID_int_regslice == 1'b0) & (icmp_ln16_1_fu_2089_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state5)))) begin
        vec_l_0_ce0 = 1'b1;
    end else begin
        vec_l_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp5_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage0) & (1'b0 == ap_block_pp5_stage0_11001))) begin
        vec_l_0_ce1 = 1'b1;
    end else begin
        vec_l_0_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp5_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage0) & (1'b0 == ap_block_pp5_stage0_11001))) begin
        vec_l_0_ce2 = 1'b1;
    end else begin
        vec_l_0_ce2 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp5_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage0) & (1'b0 == ap_block_pp5_stage0_11001))) begin
        vec_l_0_ce3 = 1'b1;
    end else begin
        vec_l_0_ce3 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp5_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage0) & (1'b0 == ap_block_pp5_stage0_11001))) begin
        vec_l_0_ce4 = 1'b1;
    end else begin
        vec_l_0_ce4 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp5_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage0) & (1'b0 == ap_block_pp5_stage0_11001))) begin
        vec_l_0_ce5 = 1'b1;
    end else begin
        vec_l_0_ce5 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp5_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage0) & (1'b0 == ap_block_pp5_stage0_11001))) begin
        vec_l_0_ce6 = 1'b1;
    end else begin
        vec_l_0_ce6 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp5_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage0) & (1'b0 == ap_block_pp5_stage0_11001))) begin
        vec_l_0_ce7 = 1'b1;
    end else begin
        vec_l_0_ce7 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp5_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage0) & (1'b0 == ap_block_pp5_stage0_11001))) begin
        vec_l_0_ce8 = 1'b1;
    end else begin
        vec_l_0_ce8 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp5_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage0) & (1'b0 == ap_block_pp5_stage0_11001))) begin
        vec_l_0_ce9 = 1'b1;
    end else begin
        vec_l_0_ce9 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        vec_l_0_d0 = trunc_ln17_3_fu_2339_p1;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        vec_l_0_d0 = trunc_ln17_2_fu_2217_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        vec_l_0_d0 = trunc_ln17_1_fu_2095_p1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        vec_l_0_d0 = trunc_ln17_fu_1973_p1;
    end else begin
        vec_l_0_d0 = 'bx;
    end
end

always @ (*) begin
    if (((~((vecs_V_TVALID_int_regslice == 1'b0) & (icmp_ln16_fu_1967_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state3) & (trunc_ln18_4_fu_1983_p1 == 3'd0) & (icmp_ln16_fu_1967_p2 == 1'd0)) | (~((vecs_V_TVALID_int_regslice == 1'b0) & (icmp_ln16_3_fu_2333_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state9) & (trunc_ln18_11_fu_2349_p1 == 3'd0) & (icmp_ln16_3_fu_2333_p2 == 1'd0)) | (~((vecs_V_TVALID_int_regslice == 1'b0) & (icmp_ln16_2_fu_2211_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state7) & (trunc_ln18_10_fu_2227_p1 == 3'd0) & (icmp_ln16_2_fu_2211_p2 == 1'd0)) | (~((vecs_V_TVALID_int_regslice == 1'b0) & (icmp_ln16_1_fu_2089_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state5) & (trunc_ln18_7_fu_2105_p1 == 3'd0) & (icmp_ln16_1_fu_2089_p2 == 1'd0)))) begin
        vec_l_0_we0 = 1'b1;
    end else begin
        vec_l_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp5_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage0) & (1'b0 == ap_block_pp5_stage0))) begin
        vec_l_1_address0 = zext_ln32_130_fu_2626_p1;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        vec_l_1_address0 = zext_ln18_7_fu_2378_p1;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        vec_l_1_address0 = zext_ln18_5_fu_2256_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        vec_l_1_address0 = zext_ln18_3_fu_2134_p1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        vec_l_1_address0 = zext_ln18_1_fu_2012_p1;
    end else begin
        vec_l_1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp5_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage0) & (1'b0 == ap_block_pp5_stage0_11001)) | (~((vecs_V_TVALID_int_regslice == 1'b0) & (icmp_ln16_fu_1967_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state3)) | (~((vecs_V_TVALID_int_regslice == 1'b0) & (icmp_ln16_3_fu_2333_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state9)) | (~((vecs_V_TVALID_int_regslice == 1'b0) & (icmp_ln16_2_fu_2211_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state7)) | (~((vecs_V_TVALID_int_regslice == 1'b0) & (icmp_ln16_1_fu_2089_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state5)))) begin
        vec_l_1_ce0 = 1'b1;
    end else begin
        vec_l_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp5_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage0) & (1'b0 == ap_block_pp5_stage0_11001))) begin
        vec_l_1_ce1 = 1'b1;
    end else begin
        vec_l_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp5_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage0) & (1'b0 == ap_block_pp5_stage0_11001))) begin
        vec_l_1_ce2 = 1'b1;
    end else begin
        vec_l_1_ce2 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp5_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage0) & (1'b0 == ap_block_pp5_stage0_11001))) begin
        vec_l_1_ce3 = 1'b1;
    end else begin
        vec_l_1_ce3 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp5_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage0) & (1'b0 == ap_block_pp5_stage0_11001))) begin
        vec_l_1_ce4 = 1'b1;
    end else begin
        vec_l_1_ce4 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp5_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage0) & (1'b0 == ap_block_pp5_stage0_11001))) begin
        vec_l_1_ce5 = 1'b1;
    end else begin
        vec_l_1_ce5 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp5_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage0) & (1'b0 == ap_block_pp5_stage0_11001))) begin
        vec_l_1_ce6 = 1'b1;
    end else begin
        vec_l_1_ce6 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp5_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage0) & (1'b0 == ap_block_pp5_stage0_11001))) begin
        vec_l_1_ce7 = 1'b1;
    end else begin
        vec_l_1_ce7 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp5_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage0) & (1'b0 == ap_block_pp5_stage0_11001))) begin
        vec_l_1_ce8 = 1'b1;
    end else begin
        vec_l_1_ce8 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp5_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage0) & (1'b0 == ap_block_pp5_stage0_11001))) begin
        vec_l_1_ce9 = 1'b1;
    end else begin
        vec_l_1_ce9 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        vec_l_1_d0 = trunc_ln17_3_fu_2339_p1;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        vec_l_1_d0 = trunc_ln17_2_fu_2217_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        vec_l_1_d0 = trunc_ln17_1_fu_2095_p1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        vec_l_1_d0 = trunc_ln17_fu_1973_p1;
    end else begin
        vec_l_1_d0 = 'bx;
    end
end

always @ (*) begin
    if (((~((vecs_V_TVALID_int_regslice == 1'b0) & (icmp_ln16_fu_1967_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state3) & (trunc_ln18_4_fu_1983_p1 == 3'd1) & (icmp_ln16_fu_1967_p2 == 1'd0)) | (~((vecs_V_TVALID_int_regslice == 1'b0) & (icmp_ln16_3_fu_2333_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state9) & (trunc_ln18_11_fu_2349_p1 == 3'd1) & (icmp_ln16_3_fu_2333_p2 == 1'd0)) | (~((vecs_V_TVALID_int_regslice == 1'b0) & (icmp_ln16_2_fu_2211_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state7) & (trunc_ln18_10_fu_2227_p1 == 3'd1) & (icmp_ln16_2_fu_2211_p2 == 1'd0)) | (~((vecs_V_TVALID_int_regslice == 1'b0) & (icmp_ln16_1_fu_2089_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state5) & (trunc_ln18_7_fu_2105_p1 == 3'd1) & (icmp_ln16_1_fu_2089_p2 == 1'd0)))) begin
        vec_l_1_we0 = 1'b1;
    end else begin
        vec_l_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp5_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage0) & (1'b0 == ap_block_pp5_stage0))) begin
        vec_l_2_address0 = zext_ln32_130_fu_2626_p1;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        vec_l_2_address0 = zext_ln18_7_fu_2378_p1;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        vec_l_2_address0 = zext_ln18_5_fu_2256_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        vec_l_2_address0 = zext_ln18_3_fu_2134_p1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        vec_l_2_address0 = zext_ln18_1_fu_2012_p1;
    end else begin
        vec_l_2_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp5_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage0) & (1'b0 == ap_block_pp5_stage0_11001)) | (~((vecs_V_TVALID_int_regslice == 1'b0) & (icmp_ln16_fu_1967_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state3)) | (~((vecs_V_TVALID_int_regslice == 1'b0) & (icmp_ln16_3_fu_2333_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state9)) | (~((vecs_V_TVALID_int_regslice == 1'b0) & (icmp_ln16_2_fu_2211_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state7)) | (~((vecs_V_TVALID_int_regslice == 1'b0) & (icmp_ln16_1_fu_2089_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state5)))) begin
        vec_l_2_ce0 = 1'b1;
    end else begin
        vec_l_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp5_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage0) & (1'b0 == ap_block_pp5_stage0_11001))) begin
        vec_l_2_ce1 = 1'b1;
    end else begin
        vec_l_2_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp5_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage0) & (1'b0 == ap_block_pp5_stage0_11001))) begin
        vec_l_2_ce2 = 1'b1;
    end else begin
        vec_l_2_ce2 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp5_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage0) & (1'b0 == ap_block_pp5_stage0_11001))) begin
        vec_l_2_ce3 = 1'b1;
    end else begin
        vec_l_2_ce3 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp5_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage0) & (1'b0 == ap_block_pp5_stage0_11001))) begin
        vec_l_2_ce4 = 1'b1;
    end else begin
        vec_l_2_ce4 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp5_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage0) & (1'b0 == ap_block_pp5_stage0_11001))) begin
        vec_l_2_ce5 = 1'b1;
    end else begin
        vec_l_2_ce5 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp5_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage0) & (1'b0 == ap_block_pp5_stage0_11001))) begin
        vec_l_2_ce6 = 1'b1;
    end else begin
        vec_l_2_ce6 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp5_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage0) & (1'b0 == ap_block_pp5_stage0_11001))) begin
        vec_l_2_ce7 = 1'b1;
    end else begin
        vec_l_2_ce7 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp5_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage0) & (1'b0 == ap_block_pp5_stage0_11001))) begin
        vec_l_2_ce8 = 1'b1;
    end else begin
        vec_l_2_ce8 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp5_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage0) & (1'b0 == ap_block_pp5_stage0_11001))) begin
        vec_l_2_ce9 = 1'b1;
    end else begin
        vec_l_2_ce9 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        vec_l_2_d0 = trunc_ln17_3_fu_2339_p1;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        vec_l_2_d0 = trunc_ln17_2_fu_2217_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        vec_l_2_d0 = trunc_ln17_1_fu_2095_p1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        vec_l_2_d0 = trunc_ln17_fu_1973_p1;
    end else begin
        vec_l_2_d0 = 'bx;
    end
end

always @ (*) begin
    if (((~((vecs_V_TVALID_int_regslice == 1'b0) & (icmp_ln16_fu_1967_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state3) & (trunc_ln18_4_fu_1983_p1 == 3'd2) & (icmp_ln16_fu_1967_p2 == 1'd0)) | (~((vecs_V_TVALID_int_regslice == 1'b0) & (icmp_ln16_3_fu_2333_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state9) & (trunc_ln18_11_fu_2349_p1 == 3'd2) & (icmp_ln16_3_fu_2333_p2 == 1'd0)) | (~((vecs_V_TVALID_int_regslice == 1'b0) & (icmp_ln16_2_fu_2211_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state7) & (trunc_ln18_10_fu_2227_p1 == 3'd2) & (icmp_ln16_2_fu_2211_p2 == 1'd0)) | (~((vecs_V_TVALID_int_regslice == 1'b0) & (icmp_ln16_1_fu_2089_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state5) & (trunc_ln18_7_fu_2105_p1 == 3'd2) & (icmp_ln16_1_fu_2089_p2 == 1'd0)))) begin
        vec_l_2_we0 = 1'b1;
    end else begin
        vec_l_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp5_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage0) & (1'b0 == ap_block_pp5_stage0))) begin
        vec_l_3_address0 = zext_ln32_130_fu_2626_p1;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        vec_l_3_address0 = zext_ln18_7_fu_2378_p1;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        vec_l_3_address0 = zext_ln18_5_fu_2256_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        vec_l_3_address0 = zext_ln18_3_fu_2134_p1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        vec_l_3_address0 = zext_ln18_1_fu_2012_p1;
    end else begin
        vec_l_3_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp5_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage0) & (1'b0 == ap_block_pp5_stage0_11001)) | (~((vecs_V_TVALID_int_regslice == 1'b0) & (icmp_ln16_fu_1967_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state3)) | (~((vecs_V_TVALID_int_regslice == 1'b0) & (icmp_ln16_3_fu_2333_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state9)) | (~((vecs_V_TVALID_int_regslice == 1'b0) & (icmp_ln16_2_fu_2211_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state7)) | (~((vecs_V_TVALID_int_regslice == 1'b0) & (icmp_ln16_1_fu_2089_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state5)))) begin
        vec_l_3_ce0 = 1'b1;
    end else begin
        vec_l_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp5_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage0) & (1'b0 == ap_block_pp5_stage0_11001))) begin
        vec_l_3_ce1 = 1'b1;
    end else begin
        vec_l_3_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp5_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage0) & (1'b0 == ap_block_pp5_stage0_11001))) begin
        vec_l_3_ce2 = 1'b1;
    end else begin
        vec_l_3_ce2 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp5_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage0) & (1'b0 == ap_block_pp5_stage0_11001))) begin
        vec_l_3_ce3 = 1'b1;
    end else begin
        vec_l_3_ce3 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp5_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage0) & (1'b0 == ap_block_pp5_stage0_11001))) begin
        vec_l_3_ce4 = 1'b1;
    end else begin
        vec_l_3_ce4 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp5_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage0) & (1'b0 == ap_block_pp5_stage0_11001))) begin
        vec_l_3_ce5 = 1'b1;
    end else begin
        vec_l_3_ce5 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp5_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage0) & (1'b0 == ap_block_pp5_stage0_11001))) begin
        vec_l_3_ce6 = 1'b1;
    end else begin
        vec_l_3_ce6 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp5_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage0) & (1'b0 == ap_block_pp5_stage0_11001))) begin
        vec_l_3_ce7 = 1'b1;
    end else begin
        vec_l_3_ce7 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp5_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage0) & (1'b0 == ap_block_pp5_stage0_11001))) begin
        vec_l_3_ce8 = 1'b1;
    end else begin
        vec_l_3_ce8 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp5_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage0) & (1'b0 == ap_block_pp5_stage0_11001))) begin
        vec_l_3_ce9 = 1'b1;
    end else begin
        vec_l_3_ce9 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        vec_l_3_d0 = trunc_ln17_3_fu_2339_p1;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        vec_l_3_d0 = trunc_ln17_2_fu_2217_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        vec_l_3_d0 = trunc_ln17_1_fu_2095_p1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        vec_l_3_d0 = trunc_ln17_fu_1973_p1;
    end else begin
        vec_l_3_d0 = 'bx;
    end
end

always @ (*) begin
    if (((~((vecs_V_TVALID_int_regslice == 1'b0) & (icmp_ln16_fu_1967_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state3) & (trunc_ln18_4_fu_1983_p1 == 3'd3) & (icmp_ln16_fu_1967_p2 == 1'd0)) | (~((vecs_V_TVALID_int_regslice == 1'b0) & (icmp_ln16_3_fu_2333_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state9) & (trunc_ln18_11_fu_2349_p1 == 3'd3) & (icmp_ln16_3_fu_2333_p2 == 1'd0)) | (~((vecs_V_TVALID_int_regslice == 1'b0) & (icmp_ln16_2_fu_2211_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state7) & (trunc_ln18_10_fu_2227_p1 == 3'd3) & (icmp_ln16_2_fu_2211_p2 == 1'd0)) | (~((vecs_V_TVALID_int_regslice == 1'b0) & (icmp_ln16_1_fu_2089_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state5) & (trunc_ln18_7_fu_2105_p1 == 3'd3) & (icmp_ln16_1_fu_2089_p2 == 1'd0)))) begin
        vec_l_3_we0 = 1'b1;
    end else begin
        vec_l_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp5_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage0) & (1'b0 == ap_block_pp5_stage0))) begin
        vec_l_4_address0 = zext_ln32_130_fu_2626_p1;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        vec_l_4_address0 = zext_ln18_7_fu_2378_p1;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        vec_l_4_address0 = zext_ln18_5_fu_2256_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        vec_l_4_address0 = zext_ln18_3_fu_2134_p1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        vec_l_4_address0 = zext_ln18_1_fu_2012_p1;
    end else begin
        vec_l_4_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp5_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage0) & (1'b0 == ap_block_pp5_stage0_11001)) | (~((vecs_V_TVALID_int_regslice == 1'b0) & (icmp_ln16_fu_1967_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state3)) | (~((vecs_V_TVALID_int_regslice == 1'b0) & (icmp_ln16_3_fu_2333_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state9)) | (~((vecs_V_TVALID_int_regslice == 1'b0) & (icmp_ln16_2_fu_2211_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state7)) | (~((vecs_V_TVALID_int_regslice == 1'b0) & (icmp_ln16_1_fu_2089_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state5)))) begin
        vec_l_4_ce0 = 1'b1;
    end else begin
        vec_l_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp5_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage0) & (1'b0 == ap_block_pp5_stage0_11001))) begin
        vec_l_4_ce1 = 1'b1;
    end else begin
        vec_l_4_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp5_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage0) & (1'b0 == ap_block_pp5_stage0_11001))) begin
        vec_l_4_ce2 = 1'b1;
    end else begin
        vec_l_4_ce2 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp5_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage0) & (1'b0 == ap_block_pp5_stage0_11001))) begin
        vec_l_4_ce3 = 1'b1;
    end else begin
        vec_l_4_ce3 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp5_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage0) & (1'b0 == ap_block_pp5_stage0_11001))) begin
        vec_l_4_ce4 = 1'b1;
    end else begin
        vec_l_4_ce4 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp5_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage0) & (1'b0 == ap_block_pp5_stage0_11001))) begin
        vec_l_4_ce5 = 1'b1;
    end else begin
        vec_l_4_ce5 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp5_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage0) & (1'b0 == ap_block_pp5_stage0_11001))) begin
        vec_l_4_ce6 = 1'b1;
    end else begin
        vec_l_4_ce6 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp5_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage0) & (1'b0 == ap_block_pp5_stage0_11001))) begin
        vec_l_4_ce7 = 1'b1;
    end else begin
        vec_l_4_ce7 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp5_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage0) & (1'b0 == ap_block_pp5_stage0_11001))) begin
        vec_l_4_ce8 = 1'b1;
    end else begin
        vec_l_4_ce8 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp5_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage0) & (1'b0 == ap_block_pp5_stage0_11001))) begin
        vec_l_4_ce9 = 1'b1;
    end else begin
        vec_l_4_ce9 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        vec_l_4_d0 = trunc_ln17_3_fu_2339_p1;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        vec_l_4_d0 = trunc_ln17_2_fu_2217_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        vec_l_4_d0 = trunc_ln17_1_fu_2095_p1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        vec_l_4_d0 = trunc_ln17_fu_1973_p1;
    end else begin
        vec_l_4_d0 = 'bx;
    end
end

always @ (*) begin
    if (((~((vecs_V_TVALID_int_regslice == 1'b0) & (icmp_ln16_fu_1967_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state3) & (trunc_ln18_4_fu_1983_p1 == 3'd4) & (icmp_ln16_fu_1967_p2 == 1'd0)) | (~((vecs_V_TVALID_int_regslice == 1'b0) & (icmp_ln16_3_fu_2333_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state9) & (trunc_ln18_11_fu_2349_p1 == 3'd4) & (icmp_ln16_3_fu_2333_p2 == 1'd0)) | (~((vecs_V_TVALID_int_regslice == 1'b0) & (icmp_ln16_2_fu_2211_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state7) & (trunc_ln18_10_fu_2227_p1 == 3'd4) & (icmp_ln16_2_fu_2211_p2 == 1'd0)) | (~((vecs_V_TVALID_int_regslice == 1'b0) & (icmp_ln16_1_fu_2089_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state5) & (trunc_ln18_7_fu_2105_p1 == 3'd4) & (icmp_ln16_1_fu_2089_p2 == 1'd0)))) begin
        vec_l_4_we0 = 1'b1;
    end else begin
        vec_l_4_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp5_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage0) & (1'b0 == ap_block_pp5_stage0))) begin
        vec_l_5_address0 = zext_ln32_130_fu_2626_p1;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        vec_l_5_address0 = zext_ln18_7_fu_2378_p1;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        vec_l_5_address0 = zext_ln18_5_fu_2256_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        vec_l_5_address0 = zext_ln18_3_fu_2134_p1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        vec_l_5_address0 = zext_ln18_1_fu_2012_p1;
    end else begin
        vec_l_5_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp5_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage0) & (1'b0 == ap_block_pp5_stage0_11001)) | (~((vecs_V_TVALID_int_regslice == 1'b0) & (icmp_ln16_fu_1967_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state3)) | (~((vecs_V_TVALID_int_regslice == 1'b0) & (icmp_ln16_3_fu_2333_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state9)) | (~((vecs_V_TVALID_int_regslice == 1'b0) & (icmp_ln16_2_fu_2211_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state7)) | (~((vecs_V_TVALID_int_regslice == 1'b0) & (icmp_ln16_1_fu_2089_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state5)))) begin
        vec_l_5_ce0 = 1'b1;
    end else begin
        vec_l_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp5_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage0) & (1'b0 == ap_block_pp5_stage0_11001))) begin
        vec_l_5_ce1 = 1'b1;
    end else begin
        vec_l_5_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp5_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage0) & (1'b0 == ap_block_pp5_stage0_11001))) begin
        vec_l_5_ce2 = 1'b1;
    end else begin
        vec_l_5_ce2 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp5_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage0) & (1'b0 == ap_block_pp5_stage0_11001))) begin
        vec_l_5_ce3 = 1'b1;
    end else begin
        vec_l_5_ce3 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp5_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage0) & (1'b0 == ap_block_pp5_stage0_11001))) begin
        vec_l_5_ce4 = 1'b1;
    end else begin
        vec_l_5_ce4 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp5_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage0) & (1'b0 == ap_block_pp5_stage0_11001))) begin
        vec_l_5_ce5 = 1'b1;
    end else begin
        vec_l_5_ce5 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp5_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage0) & (1'b0 == ap_block_pp5_stage0_11001))) begin
        vec_l_5_ce6 = 1'b1;
    end else begin
        vec_l_5_ce6 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp5_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage0) & (1'b0 == ap_block_pp5_stage0_11001))) begin
        vec_l_5_ce7 = 1'b1;
    end else begin
        vec_l_5_ce7 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp5_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage0) & (1'b0 == ap_block_pp5_stage0_11001))) begin
        vec_l_5_ce8 = 1'b1;
    end else begin
        vec_l_5_ce8 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp5_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage0) & (1'b0 == ap_block_pp5_stage0_11001))) begin
        vec_l_5_ce9 = 1'b1;
    end else begin
        vec_l_5_ce9 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        vec_l_5_d0 = trunc_ln17_3_fu_2339_p1;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        vec_l_5_d0 = trunc_ln17_2_fu_2217_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        vec_l_5_d0 = trunc_ln17_1_fu_2095_p1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        vec_l_5_d0 = trunc_ln17_fu_1973_p1;
    end else begin
        vec_l_5_d0 = 'bx;
    end
end

always @ (*) begin
    if (((~((vecs_V_TVALID_int_regslice == 1'b0) & (icmp_ln16_fu_1967_p2 == 1'd0)) & ~(trunc_ln18_4_fu_1983_p1 == 3'd0) & ~(trunc_ln18_4_fu_1983_p1 == 3'd1) & ~(trunc_ln18_4_fu_1983_p1 == 3'd2) & ~(trunc_ln18_4_fu_1983_p1 == 3'd3) & ~(trunc_ln18_4_fu_1983_p1 == 3'd4) & (1'b1 == ap_CS_fsm_state3) & (icmp_ln16_fu_1967_p2 == 1'd0)) | (~((vecs_V_TVALID_int_regslice == 1'b0) & (icmp_ln16_3_fu_2333_p2 == 1'd0)) & ~(trunc_ln18_11_fu_2349_p1 == 3'd0) & ~(trunc_ln18_11_fu_2349_p1 == 3'd1) & ~(trunc_ln18_11_fu_2349_p1 == 3'd2) & ~(trunc_ln18_11_fu_2349_p1 == 3'd3) & ~(trunc_ln18_11_fu_2349_p1 == 3'd4) & (1'b1 == ap_CS_fsm_state9) & (icmp_ln16_3_fu_2333_p2 == 1'd0)) | (~((vecs_V_TVALID_int_regslice == 1'b0) & (icmp_ln16_2_fu_2211_p2 == 1'd0)) & ~(trunc_ln18_10_fu_2227_p1 == 3'd0) & ~(trunc_ln18_10_fu_2227_p1 == 3'd1) & ~(trunc_ln18_10_fu_2227_p1 == 3'd2) & ~(trunc_ln18_10_fu_2227_p1 == 3'd3) & ~(trunc_ln18_10_fu_2227_p1 == 3'd4) & (1'b1 == ap_CS_fsm_state7) & (icmp_ln16_2_fu_2211_p2 == 1'd0)) | (~((vecs_V_TVALID_int_regslice == 1'b0) & (icmp_ln16_1_fu_2089_p2 == 1'd0)) & ~(trunc_ln18_7_fu_2105_p1 == 3'd0) & ~(trunc_ln18_7_fu_2105_p1 == 3'd1) & ~(trunc_ln18_7_fu_2105_p1 == 3'd2) & ~(trunc_ln18_7_fu_2105_p1 == 3'd3) & ~(trunc_ln18_7_fu_2105_p1 == 3'd4) & (1'b1 == ap_CS_fsm_state5) & (icmp_ln16_1_fu_2089_p2 == 1'd0)))) begin
        vec_l_5_we0 = 1'b1;
    end else begin
        vec_l_5_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state9) & (icmp_ln16_3_fu_2333_p2 == 1'd0)) | ((1'b1 == ap_CS_fsm_state7) & (icmp_ln16_2_fu_2211_p2 == 1'd0)) | ((1'b1 == ap_CS_fsm_state5) & (icmp_ln16_1_fu_2089_p2 == 1'd0)) | ((1'b1 == ap_CS_fsm_state3) & (icmp_ln16_fu_1967_p2 == 1'd0)))) begin
        vecs_V_TDATA_blk_n = vecs_V_TVALID_int_regslice;
    end else begin
        vecs_V_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((~((vecs_V_TVALID_int_regslice == 1'b0) & (icmp_ln16_fu_1967_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state3) & (icmp_ln16_fu_1967_p2 == 1'd0)) | (~((vecs_V_TVALID_int_regslice == 1'b0) & (icmp_ln16_3_fu_2333_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state9) & (icmp_ln16_3_fu_2333_p2 == 1'd0)) | (~((vecs_V_TVALID_int_regslice == 1'b0) & (icmp_ln16_2_fu_2211_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state7) & (icmp_ln16_2_fu_2211_p2 == 1'd0)) | (~((vecs_V_TVALID_int_regslice == 1'b0) & (icmp_ln16_1_fu_2089_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state5) & (icmp_ln16_1_fu_2089_p2 == 1'd0)))) begin
        vecs_V_TREADY_int_regslice = 1'b1;
    end else begin
        vecs_V_TREADY_int_regslice = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((icmp_ln15_fu_1956_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end
        end
        ap_ST_fsm_state3 : begin
            if ((~((vecs_V_TVALID_int_regslice == 1'b0) & (icmp_ln16_fu_1967_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state3) & (icmp_ln16_fu_1967_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else if ((~((vecs_V_TVALID_int_regslice == 1'b0) & (icmp_ln16_fu_1967_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state3) & (icmp_ln16_fu_1967_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state4 : begin
            if (((icmp_ln15_1_fu_2078_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end
        end
        ap_ST_fsm_state5 : begin
            if ((~((vecs_V_TVALID_int_regslice == 1'b0) & (icmp_ln16_1_fu_2089_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state5) & (icmp_ln16_1_fu_2089_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else if ((~((vecs_V_TVALID_int_regslice == 1'b0) & (icmp_ln16_1_fu_2089_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state5) & (icmp_ln16_1_fu_2089_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state6 : begin
            if (((icmp_ln15_2_fu_2200_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state6))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end
        end
        ap_ST_fsm_state7 : begin
            if ((~((vecs_V_TVALID_int_regslice == 1'b0) & (icmp_ln16_2_fu_2211_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state7) & (icmp_ln16_2_fu_2211_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else if ((~((vecs_V_TVALID_int_regslice == 1'b0) & (icmp_ln16_2_fu_2211_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state7) & (icmp_ln16_2_fu_2211_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end
        end
        ap_ST_fsm_state8 : begin
            if (((1'b1 == ap_CS_fsm_state8) & ((icmp_ln15_reg_4035 == 1'd1) | ((icmp_ln15_1_reg_4065 == 1'd1) | ((icmp_ln15_3_fu_2322_p2 == 1'd1) | (icmp_ln15_2_reg_4095 == 1'd1)))))) begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end
        end
        ap_ST_fsm_state9 : begin
            if ((~((vecs_V_TVALID_int_regslice == 1'b0) & (icmp_ln16_3_fu_2333_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state9) & (icmp_ln16_3_fu_2333_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end else if ((~((vecs_V_TVALID_int_regslice == 1'b0) & (icmp_ln16_3_fu_2333_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state9) & (icmp_ln16_3_fu_2333_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state2;
        end
        ap_ST_fsm_state11 : begin
            if ((~((coeffs_V_TVALID_int_regslice == 1'b0) & (icmp_ln22_fu_2420_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state11) & (icmp_ln22_fu_2420_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end else if ((~((coeffs_V_TVALID_int_regslice == 1'b0) & (icmp_ln22_fu_2420_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state11) & (icmp_ln22_fu_2420_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_pp5_stage0;
        end
        ap_ST_fsm_pp5_stage0 : begin
            if ((~((icmp_ln30_fu_2442_p2 == 1'd1) & (ap_enable_reg_pp5_iter0 == 1'b1) & (1'b0 == ap_block_pp5_stage0_subdone) & (ap_enable_reg_pp5_iter1 == 1'b0)) & ~((ap_enable_reg_pp5_iter3 == 1'b0) & (1'b0 == ap_block_pp5_stage0_subdone) & (ap_enable_reg_pp5_iter4 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp5_stage0;
            end else if ((((ap_enable_reg_pp5_iter3 == 1'b0) & (1'b0 == ap_block_pp5_stage0_subdone) & (ap_enable_reg_pp5_iter4 == 1'b1)) | ((icmp_ln30_fu_2442_p2 == 1'd1) & (ap_enable_reg_pp5_iter0 == 1'b1) & (1'b0 == ap_block_pp5_stage0_subdone) & (ap_enable_reg_pp5_iter1 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp5_stage0;
            end
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_pp6_stage0;
        end
        ap_ST_fsm_pp6_stage0 : begin
            if ((~((icmp_ln36_fu_3186_p2 == 1'd1) & (ap_enable_reg_pp6_iter0 == 1'b1) & (1'b0 == ap_block_pp6_stage0_subdone) & (ap_enable_reg_pp6_iter1 == 1'b0)) & ~((1'b0 == ap_block_pp6_stage0_subdone) & (ap_enable_reg_pp6_iter36 == 1'b1) & (ap_enable_reg_pp6_iter35 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_pp6_stage0;
            end else if ((((icmp_ln36_fu_3186_p2 == 1'd1) & (ap_enable_reg_pp6_iter0 == 1'b1) & (1'b0 == ap_block_pp6_stage0_subdone) & (ap_enable_reg_pp6_iter1 == 1'b0)) | ((1'b0 == ap_block_pp6_stage0_subdone) & (ap_enable_reg_pp6_iter36 == 1'b1) & (ap_enable_reg_pp6_iter35 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_state56;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp6_stage0;
            end
        end
        ap_ST_fsm_state56 : begin
            ap_NS_fsm = ap_ST_fsm_pp7_stage0;
        end
        ap_ST_fsm_pp7_stage0 : begin
            if ((~((ap_enable_reg_pp7_iter0 == 1'b1) & (1'b0 == ap_block_pp7_stage0_subdone) & (ap_enable_reg_pp7_iter1 == 1'b0) & (icmp_ln47_fu_3444_p2 == 1'd1)) & ~((ap_enable_reg_pp7_iter2 == 1'b1) & (1'b0 == ap_block_pp7_stage0_subdone) & (ap_enable_reg_pp7_iter1 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_pp7_stage0;
            end else if ((((ap_enable_reg_pp7_iter0 == 1'b1) & (1'b0 == ap_block_pp7_stage0_subdone) & (ap_enable_reg_pp7_iter1 == 1'b0) & (icmp_ln47_fu_3444_p2 == 1'd1)) | ((ap_enable_reg_pp7_iter2 == 1'b1) & (1'b0 == ap_block_pp7_stage0_subdone) & (ap_enable_reg_pp7_iter1 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_state60;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp7_stage0;
            end
        end
        ap_ST_fsm_state60 : begin
            if (((regslice_both_out_V_U_apdone_blk == 1'b0) & (1'b1 == ap_CS_fsm_state60))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state60;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln15_fu_2408_p2 = (row_0_reg_1215 + 64'd4);

assign add_ln16_1_fu_2083_p2 = (m_1_reg_1260 + 6'd1);

assign add_ln16_2_fu_2205_p2 = (m_2_reg_1293 + 6'd1);

assign add_ln16_3_fu_2327_p2 = (m_3_reg_1326 + 6'd1);

assign add_ln16_fu_1961_p2 = (m_0_reg_1227 + 6'd1);

assign add_ln18_10_fu_2231_p2 = (phi_mul21_reg_1304 + 13'd86);

assign add_ln18_11_fu_2353_p2 = (phi_mul26_reg_1337 + 13'd86);

assign add_ln18_1_fu_2072_p2 = (p_shl2_cast_fu_2052_p3 + p_shl3_cast_fu_2064_p3);

assign add_ln18_2_fu_2007_p2 = (add_ln18_reg_4030 + zext_ln18_fu_2003_p1);

assign add_ln18_3_fu_2194_p2 = (p_shl4_cast_fu_2174_p3 + p_shl5_cast_fu_2186_p3);

assign add_ln18_4_fu_2129_p2 = (add_ln18_1_reg_4060 + zext_ln18_2_fu_2125_p1);

assign add_ln18_5_fu_2316_p2 = (p_shl8_cast_fu_2296_p3 + p_shl9_cast_fu_2308_p3);

assign add_ln18_6_fu_2251_p2 = (add_ln18_3_reg_4090 + zext_ln18_4_fu_2247_p1);

assign add_ln18_7_fu_2373_p2 = (add_ln18_5_reg_4120 + zext_ln18_6_fu_2369_p1);

assign add_ln18_8_fu_1987_p2 = (phi_mul_reg_1238 + 13'd86);

assign add_ln18_9_fu_2109_p2 = (phi_mul16_reg_1271 + 13'd86);

assign add_ln18_fu_1950_p2 = (p_shl_cast_fu_1930_p3 + p_shl1_cast_fu_1942_p3);

assign add_ln22_fu_2414_p2 = (i_reg_1359 + 6'd1);

assign add_ln30_fu_2436_p2 = (i_1_reg_1370 + 32'd1);

assign add_ln32_60_fu_2476_p2 = (tmp_26_cast_fu_2456_p3 + tmp_27_cast_fu_2468_p3);

assign add_ln32_61_fu_2508_p2 = (add_ln32_60_fu_2476_p2 + 10'd2);

assign add_ln32_62_fu_2524_p2 = (add_ln32_60_fu_2476_p2 + 10'd3);

assign add_ln32_63_fu_2540_p2 = (add_ln32_60_fu_2476_p2 + 10'd4);

assign add_ln32_64_fu_2556_p2 = (add_ln32_60_fu_2476_p2 + 10'd5);

assign add_ln32_65_fu_2572_p2 = (add_ln32_60_fu_2476_p2 + 10'd6);

assign add_ln32_66_fu_2588_p2 = (add_ln32_60_fu_2476_p2 + 10'd7);

assign add_ln32_67_fu_2604_p2 = (add_ln32_60_fu_2476_p2 + 10'd8);

assign add_ln32_68_fu_2620_p2 = (add_ln32_60_fu_2476_p2 + 10'd9);

assign add_ln36_fu_3180_p2 = (ap_phi_mux_i_2_phi_fu_1385_p4 + 6'd1);

assign add_ln47_fu_3438_p2 = (i_3_reg_1431 + 6'd1);

assign ap_CS_fsm_pp5_stage0 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_pp6_stage0 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_pp7_stage0 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state56 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state60 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign ap_block_pp5_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp5_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp5_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp6_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp6_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp6_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp7_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp7_stage0_01001 = (((out_V_TREADY_int_regslice == 1'b0) & (icmp_ln47_reg_4939_pp7_iter1_reg == 1'd0) & (ap_enable_reg_pp7_iter2 == 1'b1)) | ((out_V_TREADY_int_regslice == 1'b0) & (icmp_ln47_reg_4939 == 1'd0) & (ap_enable_reg_pp7_iter1 == 1'b1)));
end

always @ (*) begin
    ap_block_pp7_stage0_11001 = (((ap_enable_reg_pp7_iter2 == 1'b1) & ((1'b1 == ap_block_state59_io) | ((out_V_TREADY_int_regslice == 1'b0) & (icmp_ln47_reg_4939_pp7_iter1_reg == 1'd0)))) | ((ap_enable_reg_pp7_iter1 == 1'b1) & ((1'b1 == ap_block_state58_io) | ((out_V_TREADY_int_regslice == 1'b0) & (icmp_ln47_reg_4939 == 1'd0)))));
end

always @ (*) begin
    ap_block_pp7_stage0_subdone = (((ap_enable_reg_pp7_iter2 == 1'b1) & ((1'b1 == ap_block_state59_io) | ((out_V_TREADY_int_regslice == 1'b0) & (icmp_ln47_reg_4939_pp7_iter1_reg == 1'd0)))) | ((ap_enable_reg_pp7_iter1 == 1'b1) & ((1'b1 == ap_block_state58_io) | ((out_V_TREADY_int_regslice == 1'b0) & (icmp_ln47_reg_4939 == 1'd0)))));
end

always @ (*) begin
    ap_block_state11 = ((coeffs_V_TVALID_int_regslice == 1'b0) & (icmp_ln22_fu_2420_p2 == 1'd0));
end

assign ap_block_state13_pp5_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp5_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp5_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp5_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp5_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp6_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp6_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp6_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp6_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp6_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp6_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp6_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state26_pp6_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp6_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp6_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state29_pp6_stage0_iter10 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state3 = ((vecs_V_TVALID_int_regslice == 1'b0) & (icmp_ln16_fu_1967_p2 == 1'd0));
end

assign ap_block_state30_pp6_stage0_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state31_pp6_stage0_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state32_pp6_stage0_iter13 = ~(1'b1 == 1'b1);

assign ap_block_state33_pp6_stage0_iter14 = ~(1'b1 == 1'b1);

assign ap_block_state34_pp6_stage0_iter15 = ~(1'b1 == 1'b1);

assign ap_block_state35_pp6_stage0_iter16 = ~(1'b1 == 1'b1);

assign ap_block_state36_pp6_stage0_iter17 = ~(1'b1 == 1'b1);

assign ap_block_state37_pp6_stage0_iter18 = ~(1'b1 == 1'b1);

assign ap_block_state38_pp6_stage0_iter19 = ~(1'b1 == 1'b1);

assign ap_block_state39_pp6_stage0_iter20 = ~(1'b1 == 1'b1);

assign ap_block_state40_pp6_stage0_iter21 = ~(1'b1 == 1'b1);

assign ap_block_state41_pp6_stage0_iter22 = ~(1'b1 == 1'b1);

assign ap_block_state42_pp6_stage0_iter23 = ~(1'b1 == 1'b1);

assign ap_block_state43_pp6_stage0_iter24 = ~(1'b1 == 1'b1);

assign ap_block_state44_pp6_stage0_iter25 = ~(1'b1 == 1'b1);

assign ap_block_state45_pp6_stage0_iter26 = ~(1'b1 == 1'b1);

assign ap_block_state46_pp6_stage0_iter27 = ~(1'b1 == 1'b1);

assign ap_block_state47_pp6_stage0_iter28 = ~(1'b1 == 1'b1);

assign ap_block_state48_pp6_stage0_iter29 = ~(1'b1 == 1'b1);

assign ap_block_state49_pp6_stage0_iter30 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state5 = ((vecs_V_TVALID_int_regslice == 1'b0) & (icmp_ln16_1_fu_2089_p2 == 1'd0));
end

assign ap_block_state50_pp6_stage0_iter31 = ~(1'b1 == 1'b1);

assign ap_block_state51_pp6_stage0_iter32 = ~(1'b1 == 1'b1);

assign ap_block_state52_pp6_stage0_iter33 = ~(1'b1 == 1'b1);

assign ap_block_state53_pp6_stage0_iter34 = ~(1'b1 == 1'b1);

assign ap_block_state54_pp6_stage0_iter35 = ~(1'b1 == 1'b1);

assign ap_block_state55_pp6_stage0_iter36 = ~(1'b1 == 1'b1);

assign ap_block_state57_pp7_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state58_io = ((out_V_TREADY_int_regslice == 1'b0) & (icmp_ln47_reg_4939 == 1'd0));
end

always @ (*) begin
    ap_block_state58_pp7_stage0_iter1 = ((out_V_TREADY_int_regslice == 1'b0) & (icmp_ln47_reg_4939 == 1'd0));
end

always @ (*) begin
    ap_block_state59_io = ((out_V_TREADY_int_regslice == 1'b0) & (icmp_ln47_reg_4939_pp7_iter1_reg == 1'd0));
end

always @ (*) begin
    ap_block_state59_pp7_stage0_iter2 = ((out_V_TREADY_int_regslice == 1'b0) & (icmp_ln47_reg_4939_pp7_iter1_reg == 1'd0));
end

always @ (*) begin
    ap_block_state7 = ((vecs_V_TVALID_int_regslice == 1'b0) & (icmp_ln16_2_fu_2211_p2 == 1'd0));
end

always @ (*) begin
    ap_block_state9 = ((vecs_V_TVALID_int_regslice == 1'b0) & (icmp_ln16_3_fu_2333_p2 == 1'd0));
end

always @ (*) begin
    ap_condition_818 = ((ap_enable_reg_pp6_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp6_stage0) & (1'b0 == ap_block_pp6_stage0_11001));
end

assign ap_enable_pp5 = (ap_idle_pp5 ^ 1'b1);

assign ap_enable_pp6 = (ap_idle_pp6 ^ 1'b1);

assign ap_enable_pp7 = (ap_idle_pp7 ^ 1'b1);

assign ap_phi_reg_pp6_iter0_phi_ln41_reg_1393 = 'bx;

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign coeffs_V_TREADY = regslice_both_coeffs_V_U_ack_in;

assign coeffs_l_d0 = coeffs_V_TDATA_int_regslice[7:0];

assign empty_17_fu_2028_p2 = ((next_urem_fu_2022_p2 < 6'd6) ? 1'b1 : 1'b0);

assign empty_19_fu_2150_p2 = ((next_urem19_fu_2144_p2 < 6'd6) ? 1'b1 : 1'b0);

assign empty_21_fu_2272_p2 = ((next_urem24_fu_2266_p2 < 6'd6) ? 1'b1 : 1'b0);

assign empty_23_fu_2394_p2 = ((next_urem29_fu_2388_p2 < 6'd6) ? 1'b1 : 1'b0);

assign grp_fu_3422_p1 = 32'd31;

assign grp_fu_3477_p0 = grp_fu_3477_p00;

assign grp_fu_3477_p00 = vec_l_0_q9;

assign grp_fu_3477_p1 = zext_ln32_fu_2636_p1;

assign grp_fu_3486_p0 = grp_fu_3486_p00;

assign grp_fu_3486_p00 = vec_l_1_q9;

assign grp_fu_3486_p1 = zext_ln32_fu_2636_p1;

assign grp_fu_3495_p0 = grp_fu_3495_p00;

assign grp_fu_3495_p00 = vec_l_2_q9;

assign grp_fu_3495_p1 = zext_ln32_fu_2636_p1;

assign grp_fu_3504_p0 = grp_fu_3504_p00;

assign grp_fu_3504_p00 = vec_l_3_q9;

assign grp_fu_3504_p1 = zext_ln32_fu_2636_p1;

assign grp_fu_3513_p0 = grp_fu_3513_p00;

assign grp_fu_3513_p00 = vec_l_4_q9;

assign grp_fu_3513_p1 = zext_ln32_fu_2636_p1;

assign grp_fu_3522_p0 = grp_fu_3522_p00;

assign grp_fu_3522_p00 = vec_l_5_q9;

assign grp_fu_3522_p1 = zext_ln32_fu_2636_p1;

assign grp_fu_3531_p0 = grp_fu_3531_p00;

assign grp_fu_3531_p00 = vec_l_0_q8;

assign grp_fu_3531_p1 = zext_ln32_fu_2636_p1;

assign grp_fu_3540_p0 = grp_fu_3540_p00;

assign grp_fu_3540_p00 = vec_l_1_q8;

assign grp_fu_3540_p1 = zext_ln32_fu_2636_p1;

assign grp_fu_3549_p0 = grp_fu_3549_p00;

assign grp_fu_3549_p00 = vec_l_2_q8;

assign grp_fu_3549_p1 = zext_ln32_fu_2636_p1;

assign grp_fu_3558_p0 = grp_fu_3558_p00;

assign grp_fu_3558_p00 = vec_l_3_q8;

assign grp_fu_3558_p1 = zext_ln32_fu_2636_p1;

assign grp_fu_3567_p0 = grp_fu_3567_p00;

assign grp_fu_3567_p00 = vec_l_4_q8;

assign grp_fu_3567_p1 = zext_ln32_fu_2636_p1;

assign grp_fu_3576_p0 = grp_fu_3576_p00;

assign grp_fu_3576_p00 = vec_l_5_q8;

assign grp_fu_3576_p1 = zext_ln32_fu_2636_p1;

assign grp_fu_3585_p0 = grp_fu_3585_p00;

assign grp_fu_3585_p00 = vec_l_0_q7;

assign grp_fu_3585_p1 = zext_ln32_fu_2636_p1;

assign grp_fu_3594_p0 = grp_fu_3594_p00;

assign grp_fu_3594_p00 = vec_l_1_q7;

assign grp_fu_3594_p1 = zext_ln32_fu_2636_p1;

assign grp_fu_3603_p0 = grp_fu_3603_p00;

assign grp_fu_3603_p00 = vec_l_2_q7;

assign grp_fu_3603_p1 = zext_ln32_fu_2636_p1;

assign grp_fu_3612_p0 = grp_fu_3612_p00;

assign grp_fu_3612_p00 = vec_l_3_q7;

assign grp_fu_3612_p1 = zext_ln32_fu_2636_p1;

assign grp_fu_3621_p0 = grp_fu_3621_p00;

assign grp_fu_3621_p00 = vec_l_4_q7;

assign grp_fu_3621_p1 = zext_ln32_fu_2636_p1;

assign grp_fu_3630_p0 = grp_fu_3630_p00;

assign grp_fu_3630_p00 = vec_l_5_q7;

assign grp_fu_3630_p1 = zext_ln32_fu_2636_p1;

assign grp_fu_3639_p0 = grp_fu_3639_p00;

assign grp_fu_3639_p00 = vec_l_0_q6;

assign grp_fu_3639_p1 = zext_ln32_fu_2636_p1;

assign grp_fu_3648_p0 = grp_fu_3648_p00;

assign grp_fu_3648_p00 = vec_l_1_q6;

assign grp_fu_3648_p1 = zext_ln32_fu_2636_p1;

assign grp_fu_3657_p0 = grp_fu_3657_p00;

assign grp_fu_3657_p00 = vec_l_2_q6;

assign grp_fu_3657_p1 = zext_ln32_fu_2636_p1;

assign grp_fu_3666_p0 = grp_fu_3666_p00;

assign grp_fu_3666_p00 = vec_l_3_q6;

assign grp_fu_3666_p1 = zext_ln32_fu_2636_p1;

assign grp_fu_3675_p0 = grp_fu_3675_p00;

assign grp_fu_3675_p00 = vec_l_4_q6;

assign grp_fu_3675_p1 = zext_ln32_fu_2636_p1;

assign grp_fu_3684_p0 = grp_fu_3684_p00;

assign grp_fu_3684_p00 = vec_l_5_q6;

assign grp_fu_3684_p1 = zext_ln32_fu_2636_p1;

assign grp_fu_3693_p0 = grp_fu_3693_p00;

assign grp_fu_3693_p00 = vec_l_0_q5;

assign grp_fu_3693_p1 = zext_ln32_fu_2636_p1;

assign grp_fu_3702_p0 = grp_fu_3702_p00;

assign grp_fu_3702_p00 = vec_l_1_q5;

assign grp_fu_3702_p1 = zext_ln32_fu_2636_p1;

assign grp_fu_3711_p0 = grp_fu_3711_p00;

assign grp_fu_3711_p00 = vec_l_2_q5;

assign grp_fu_3711_p1 = zext_ln32_fu_2636_p1;

assign grp_fu_3720_p0 = grp_fu_3720_p00;

assign grp_fu_3720_p00 = vec_l_3_q5;

assign grp_fu_3720_p1 = zext_ln32_fu_2636_p1;

assign grp_fu_3729_p0 = grp_fu_3729_p00;

assign grp_fu_3729_p00 = vec_l_4_q5;

assign grp_fu_3729_p1 = zext_ln32_fu_2636_p1;

assign grp_fu_3738_p0 = grp_fu_3738_p00;

assign grp_fu_3738_p00 = vec_l_5_q5;

assign grp_fu_3738_p1 = zext_ln32_fu_2636_p1;

assign grp_fu_3747_p0 = grp_fu_3747_p00;

assign grp_fu_3747_p00 = vec_l_0_q4;

assign grp_fu_3747_p1 = zext_ln32_fu_2636_p1;

assign grp_fu_3756_p0 = grp_fu_3756_p00;

assign grp_fu_3756_p00 = vec_l_1_q4;

assign grp_fu_3756_p1 = zext_ln32_fu_2636_p1;

assign grp_fu_3765_p0 = grp_fu_3765_p00;

assign grp_fu_3765_p00 = vec_l_2_q4;

assign grp_fu_3765_p1 = zext_ln32_fu_2636_p1;

assign grp_fu_3774_p0 = grp_fu_3774_p00;

assign grp_fu_3774_p00 = vec_l_3_q4;

assign grp_fu_3774_p1 = zext_ln32_fu_2636_p1;

assign grp_fu_3783_p0 = grp_fu_3783_p00;

assign grp_fu_3783_p00 = vec_l_4_q4;

assign grp_fu_3783_p1 = zext_ln32_fu_2636_p1;

assign grp_fu_3792_p0 = grp_fu_3792_p00;

assign grp_fu_3792_p00 = vec_l_5_q4;

assign grp_fu_3792_p1 = zext_ln32_fu_2636_p1;

assign grp_fu_3801_p0 = grp_fu_3801_p00;

assign grp_fu_3801_p00 = vec_l_0_q3;

assign grp_fu_3801_p1 = zext_ln32_fu_2636_p1;

assign grp_fu_3810_p0 = grp_fu_3810_p00;

assign grp_fu_3810_p00 = vec_l_1_q3;

assign grp_fu_3810_p1 = zext_ln32_fu_2636_p1;

assign grp_fu_3819_p0 = grp_fu_3819_p00;

assign grp_fu_3819_p00 = vec_l_2_q3;

assign grp_fu_3819_p1 = zext_ln32_fu_2636_p1;

assign grp_fu_3828_p0 = grp_fu_3828_p00;

assign grp_fu_3828_p00 = vec_l_3_q3;

assign grp_fu_3828_p1 = zext_ln32_fu_2636_p1;

assign grp_fu_3837_p0 = grp_fu_3837_p00;

assign grp_fu_3837_p00 = vec_l_4_q3;

assign grp_fu_3837_p1 = zext_ln32_fu_2636_p1;

assign grp_fu_3846_p0 = grp_fu_3846_p00;

assign grp_fu_3846_p00 = vec_l_5_q3;

assign grp_fu_3846_p1 = zext_ln32_fu_2636_p1;

assign grp_fu_3855_p0 = grp_fu_3855_p00;

assign grp_fu_3855_p00 = vec_l_0_q2;

assign grp_fu_3855_p1 = zext_ln32_fu_2636_p1;

assign grp_fu_3864_p0 = grp_fu_3864_p00;

assign grp_fu_3864_p00 = vec_l_1_q2;

assign grp_fu_3864_p1 = zext_ln32_fu_2636_p1;

assign grp_fu_3873_p0 = grp_fu_3873_p00;

assign grp_fu_3873_p00 = vec_l_2_q2;

assign grp_fu_3873_p1 = zext_ln32_fu_2636_p1;

assign grp_fu_3882_p0 = grp_fu_3882_p00;

assign grp_fu_3882_p00 = vec_l_3_q2;

assign grp_fu_3882_p1 = zext_ln32_fu_2636_p1;

assign grp_fu_3891_p0 = grp_fu_3891_p00;

assign grp_fu_3891_p00 = vec_l_4_q2;

assign grp_fu_3891_p1 = zext_ln32_fu_2636_p1;

assign grp_fu_3900_p0 = grp_fu_3900_p00;

assign grp_fu_3900_p00 = vec_l_5_q2;

assign grp_fu_3900_p1 = zext_ln32_fu_2636_p1;

assign grp_fu_3909_p0 = grp_fu_3909_p00;

assign grp_fu_3909_p00 = vec_l_0_q1;

assign grp_fu_3909_p1 = zext_ln32_fu_2636_p1;

assign grp_fu_3918_p0 = grp_fu_3918_p00;

assign grp_fu_3918_p00 = vec_l_1_q1;

assign grp_fu_3918_p1 = zext_ln32_fu_2636_p1;

assign grp_fu_3927_p0 = grp_fu_3927_p00;

assign grp_fu_3927_p00 = vec_l_2_q1;

assign grp_fu_3927_p1 = zext_ln32_fu_2636_p1;

assign grp_fu_3936_p0 = grp_fu_3936_p00;

assign grp_fu_3936_p00 = vec_l_3_q1;

assign grp_fu_3936_p1 = zext_ln32_fu_2636_p1;

assign grp_fu_3945_p0 = grp_fu_3945_p00;

assign grp_fu_3945_p00 = vec_l_4_q1;

assign grp_fu_3945_p1 = zext_ln32_fu_2636_p1;

assign grp_fu_3954_p0 = grp_fu_3954_p00;

assign grp_fu_3954_p00 = vec_l_5_q1;

assign grp_fu_3954_p1 = zext_ln32_fu_2636_p1;

assign grp_fu_3963_p0 = grp_fu_3963_p00;

assign grp_fu_3963_p00 = vec_l_0_q0;

assign grp_fu_3963_p1 = zext_ln32_fu_2636_p1;

assign grp_fu_3972_p0 = grp_fu_3972_p00;

assign grp_fu_3972_p00 = vec_l_1_q0;

assign grp_fu_3972_p1 = zext_ln32_fu_2636_p1;

assign grp_fu_3981_p0 = grp_fu_3981_p00;

assign grp_fu_3981_p00 = vec_l_2_q0;

assign grp_fu_3981_p1 = zext_ln32_fu_2636_p1;

assign grp_fu_3990_p0 = grp_fu_3990_p00;

assign grp_fu_3990_p00 = vec_l_3_q0;

assign grp_fu_3990_p1 = zext_ln32_fu_2636_p1;

assign grp_fu_3999_p0 = grp_fu_3999_p00;

assign grp_fu_3999_p00 = vec_l_4_q0;

assign grp_fu_3999_p1 = zext_ln32_fu_2636_p1;

assign grp_fu_4008_p0 = grp_fu_4008_p00;

assign grp_fu_4008_p00 = vec_l_5_q0;

assign grp_fu_4008_p1 = zext_ln32_fu_2636_p1;

assign i_1_cast_fu_2447_p1 = i_1_reg_1370;

assign i_2_cast_fu_3428_p1 = i_2_reg_1381_pp6_iter35_reg;

assign i_3_cast_fu_3450_p1 = i_3_reg_1431;

assign i_cast_fu_2426_p1 = i_reg_1359;

assign icmp_ln15_1_fu_2078_p2 = ((or_ln15_fu_2042_p2 == zext_ln15_reg_4022) ? 1'b1 : 1'b0);

assign icmp_ln15_2_fu_2200_p2 = ((or_ln15_1_fu_2164_p2 == zext_ln15_reg_4022) ? 1'b1 : 1'b0);

assign icmp_ln15_3_fu_2322_p2 = ((or_ln15_2_fu_2286_p2 == zext_ln15_reg_4022) ? 1'b1 : 1'b0);

assign icmp_ln15_fu_1956_p2 = ((row_0_reg_1215 == zext_ln15_reg_4022) ? 1'b1 : 1'b0);

assign icmp_ln16_1_fu_2089_p2 = ((m_1_reg_1260 == 6'd60) ? 1'b1 : 1'b0);

assign icmp_ln16_2_fu_2211_p2 = ((m_2_reg_1293 == 6'd60) ? 1'b1 : 1'b0);

assign icmp_ln16_3_fu_2333_p2 = ((m_3_reg_1326 == 6'd60) ? 1'b1 : 1'b0);

assign icmp_ln16_fu_1967_p2 = ((m_0_reg_1227 == 6'd60) ? 1'b1 : 1'b0);

assign icmp_ln22_fu_2420_p2 = ((i_reg_1359 == 6'd60) ? 1'b1 : 1'b0);

assign icmp_ln30_fu_2442_p2 = ((i_1_reg_1370 == len) ? 1'b1 : 1'b0);

assign icmp_ln36_fu_3186_p2 = ((ap_phi_mux_i_2_phi_fu_1385_p4 == 6'd60) ? 1'b1 : 1'b0);

assign icmp_ln47_fu_3444_p2 = ((i_3_reg_1431 == 6'd60) ? 1'b1 : 1'b0);

assign idx_urem20_fu_2156_p3 = ((empty_19_fu_2150_p2[0:0] == 1'b1) ? next_urem19_fu_2144_p2 : 6'd0);

assign idx_urem25_fu_2278_p3 = ((empty_21_fu_2272_p2[0:0] == 1'b1) ? next_urem24_fu_2266_p2 : 6'd0);

assign idx_urem30_fu_2400_p3 = ((empty_23_fu_2394_p2[0:0] == 1'b1) ? next_urem29_fu_2388_p2 : 6'd0);

assign idx_urem_fu_2034_p3 = ((empty_17_fu_2028_p2[0:0] == 1'b1) ? next_urem_fu_2022_p2 : 6'd0);

assign next_urem19_fu_2144_p2 = (phi_urem18_reg_1282 + 6'd1);

assign next_urem24_fu_2266_p2 = (phi_urem23_reg_1315 + 6'd1);

assign next_urem29_fu_2388_p2 = (phi_urem28_reg_1348 + 6'd1);

assign next_urem_fu_2022_p2 = (phi_urem_reg_1249 + 6'd1);

assign or_ln15_1_fu_2164_p2 = (row_0_reg_1215 | 64'd2);

assign or_ln15_2_fu_2286_p2 = (row_0_reg_1215 | 64'd3);

assign or_ln15_fu_2042_p2 = (row_0_reg_1215 | 64'd1);

assign or_ln32_fu_2492_p2 = (10'd1 | add_ln32_60_fu_2476_p2);

assign out_V_TDATA_int_regslice = tmp_1_fu_3465_p3;

assign out_V_TVALID = regslice_both_out_V_U_vld_out;

assign out_l_d0 = grp_fu_3422_p2[4:0];

assign p_shl1_cast_fu_1942_p3 = {{trunc_ln18_1_fu_1938_p1}, {1'd0}};

assign p_shl2_cast_fu_2052_p3 = {{trunc_ln18_2_fu_2048_p1}, {3'd0}};

assign p_shl3_cast_fu_2064_p3 = {{trunc_ln18_3_fu_2060_p1}, {1'd0}};

assign p_shl4_cast_fu_2174_p3 = {{trunc_ln18_5_fu_2170_p1}, {3'd0}};

assign p_shl5_cast_fu_2186_p3 = {{trunc_ln18_6_fu_2182_p1}, {1'd0}};

assign p_shl8_cast_fu_2296_p3 = {{trunc_ln18_8_fu_2292_p1}, {3'd0}};

assign p_shl9_cast_fu_2308_p3 = {{trunc_ln18_9_fu_2304_p1}, {1'd0}};

assign p_shl_cast_fu_1930_p3 = {{trunc_ln18_fu_1926_p1}, {3'd0}};

assign stream_l_last_V_fu_3455_p2 = ((i_3_reg_1431 == 6'd59) ? 1'b1 : 1'b0);

assign tmp_10_fu_3284_p5 = {{ap_phi_mux_i_2_phi_fu_1385_p4[5:4]}};

assign tmp_11_fu_3270_p5 = {{ap_phi_mux_i_2_phi_fu_1385_p4[5:4]}};

assign tmp_12_fu_3256_p5 = {{ap_phi_mux_i_2_phi_fu_1385_p4[5:4]}};

assign tmp_13_fu_3242_p5 = {{ap_phi_mux_i_2_phi_fu_1385_p4[5:4]}};

assign tmp_14_fu_3230_p4 = {{ap_phi_mux_i_2_phi_fu_1385_p4[5:4]}};

assign tmp_15_fu_3218_p4 = {{ap_phi_mux_i_2_phi_fu_1385_p4[5:4]}};

assign tmp_16_fu_3206_p4 = {{ap_phi_mux_i_2_phi_fu_1385_p4[5:4]}};

assign tmp_17_fu_2115_p4 = {{phi_mul16_reg_1271[12:9]}};

assign tmp_18_fu_2237_p4 = {{phi_mul21_reg_1304[12:9]}};

assign tmp_1_fu_3465_p3 = {{stream_l_last_V_reg_4948}, {zext_ln11_fu_3461_p1}};

assign tmp_20_fu_2359_p4 = {{phi_mul26_reg_1337[12:9]}};

assign tmp_26_cast_fu_2456_p3 = {{trunc_ln32_fu_2452_p1}, {3'd0}};

assign tmp_27_cast_fu_2468_p3 = {{trunc_ln32_1_fu_2464_p1}, {1'd0}};

assign tmp_2_fu_3410_p4 = {{ap_phi_mux_i_2_phi_fu_1385_p4[5:4]}};

assign tmp_3_fu_3396_p5 = {{ap_phi_mux_i_2_phi_fu_1385_p4[5:4]}};

assign tmp_4_fu_3382_p5 = {{ap_phi_mux_i_2_phi_fu_1385_p4[5:4]}};

assign tmp_5_fu_3368_p5 = {{ap_phi_mux_i_2_phi_fu_1385_p4[5:4]}};

assign tmp_6_fu_3354_p5 = {{ap_phi_mux_i_2_phi_fu_1385_p4[5:4]}};

assign tmp_7_fu_3340_p5 = {{ap_phi_mux_i_2_phi_fu_1385_p4[5:4]}};

assign tmp_8_fu_3326_p5 = {{ap_phi_mux_i_2_phi_fu_1385_p4[5:4]}};

assign tmp_9_fu_3312_p5 = {{ap_phi_mux_i_2_phi_fu_1385_p4[5:4]}};

assign tmp_fu_1993_p4 = {{phi_mul_reg_1238[12:9]}};

assign tmp_s_fu_3298_p5 = {{ap_phi_mux_i_2_phi_fu_1385_p4[5:4]}};

assign trunc_ln17_1_fu_2095_p1 = vecs_V_TDATA_int_regslice[7:0];

assign trunc_ln17_2_fu_2217_p1 = vecs_V_TDATA_int_regslice[7:0];

assign trunc_ln17_3_fu_2339_p1 = vecs_V_TDATA_int_regslice[7:0];

assign trunc_ln17_fu_1973_p1 = vecs_V_TDATA_int_regslice[7:0];

assign trunc_ln18_10_fu_2227_p1 = phi_urem23_reg_1315[2:0];

assign trunc_ln18_11_fu_2349_p1 = phi_urem28_reg_1348[2:0];

assign trunc_ln18_1_fu_1938_p1 = row_0_reg_1215[8:0];

assign trunc_ln18_2_fu_2048_p1 = or_ln15_fu_2042_p2[6:0];

assign trunc_ln18_3_fu_2060_p1 = or_ln15_fu_2042_p2[8:0];

assign trunc_ln18_4_fu_1983_p1 = phi_urem_reg_1249[2:0];

assign trunc_ln18_5_fu_2170_p1 = or_ln15_1_fu_2164_p2[6:0];

assign trunc_ln18_6_fu_2182_p1 = or_ln15_1_fu_2164_p2[8:0];

assign trunc_ln18_7_fu_2105_p1 = phi_urem18_reg_1282[2:0];

assign trunc_ln18_8_fu_2292_p1 = or_ln15_2_fu_2286_p2[6:0];

assign trunc_ln18_9_fu_2304_p1 = or_ln15_2_fu_2286_p2[8:0];

assign trunc_ln18_fu_1926_p1 = row_0_reg_1215[6:0];

assign trunc_ln32_1_fu_2464_p1 = i_1_reg_1370[8:0];

assign trunc_ln32_fu_2452_p1 = i_1_reg_1370[6:0];

assign trunc_ln41_fu_3192_p1 = ap_phi_mux_i_2_phi_fu_1385_p4[3:0];

assign vec_l_0_address1 = zext_ln32_129_fu_2610_p1;

assign vec_l_0_address2 = zext_ln32_128_fu_2594_p1;

assign vec_l_0_address3 = zext_ln32_127_fu_2578_p1;

assign vec_l_0_address4 = zext_ln32_126_fu_2562_p1;

assign vec_l_0_address5 = zext_ln32_125_fu_2546_p1;

assign vec_l_0_address6 = zext_ln32_124_fu_2530_p1;

assign vec_l_0_address7 = zext_ln32_123_fu_2514_p1;

assign vec_l_0_address8 = zext_ln32_122_fu_2498_p1;

assign vec_l_0_address9 = zext_ln32_121_fu_2482_p1;

assign vec_l_1_address1 = zext_ln32_129_fu_2610_p1;

assign vec_l_1_address2 = zext_ln32_128_fu_2594_p1;

assign vec_l_1_address3 = zext_ln32_127_fu_2578_p1;

assign vec_l_1_address4 = zext_ln32_126_fu_2562_p1;

assign vec_l_1_address5 = zext_ln32_125_fu_2546_p1;

assign vec_l_1_address6 = zext_ln32_124_fu_2530_p1;

assign vec_l_1_address7 = zext_ln32_123_fu_2514_p1;

assign vec_l_1_address8 = zext_ln32_122_fu_2498_p1;

assign vec_l_1_address9 = zext_ln32_121_fu_2482_p1;

assign vec_l_2_address1 = zext_ln32_129_fu_2610_p1;

assign vec_l_2_address2 = zext_ln32_128_fu_2594_p1;

assign vec_l_2_address3 = zext_ln32_127_fu_2578_p1;

assign vec_l_2_address4 = zext_ln32_126_fu_2562_p1;

assign vec_l_2_address5 = zext_ln32_125_fu_2546_p1;

assign vec_l_2_address6 = zext_ln32_124_fu_2530_p1;

assign vec_l_2_address7 = zext_ln32_123_fu_2514_p1;

assign vec_l_2_address8 = zext_ln32_122_fu_2498_p1;

assign vec_l_2_address9 = zext_ln32_121_fu_2482_p1;

assign vec_l_3_address1 = zext_ln32_129_fu_2610_p1;

assign vec_l_3_address2 = zext_ln32_128_fu_2594_p1;

assign vec_l_3_address3 = zext_ln32_127_fu_2578_p1;

assign vec_l_3_address4 = zext_ln32_126_fu_2562_p1;

assign vec_l_3_address5 = zext_ln32_125_fu_2546_p1;

assign vec_l_3_address6 = zext_ln32_124_fu_2530_p1;

assign vec_l_3_address7 = zext_ln32_123_fu_2514_p1;

assign vec_l_3_address8 = zext_ln32_122_fu_2498_p1;

assign vec_l_3_address9 = zext_ln32_121_fu_2482_p1;

assign vec_l_4_address1 = zext_ln32_129_fu_2610_p1;

assign vec_l_4_address2 = zext_ln32_128_fu_2594_p1;

assign vec_l_4_address3 = zext_ln32_127_fu_2578_p1;

assign vec_l_4_address4 = zext_ln32_126_fu_2562_p1;

assign vec_l_4_address5 = zext_ln32_125_fu_2546_p1;

assign vec_l_4_address6 = zext_ln32_124_fu_2530_p1;

assign vec_l_4_address7 = zext_ln32_123_fu_2514_p1;

assign vec_l_4_address8 = zext_ln32_122_fu_2498_p1;

assign vec_l_4_address9 = zext_ln32_121_fu_2482_p1;

assign vec_l_5_address1 = zext_ln32_129_fu_2610_p1;

assign vec_l_5_address2 = zext_ln32_128_fu_2594_p1;

assign vec_l_5_address3 = zext_ln32_127_fu_2578_p1;

assign vec_l_5_address4 = zext_ln32_126_fu_2562_p1;

assign vec_l_5_address5 = zext_ln32_125_fu_2546_p1;

assign vec_l_5_address6 = zext_ln32_124_fu_2530_p1;

assign vec_l_5_address7 = zext_ln32_123_fu_2514_p1;

assign vec_l_5_address8 = zext_ln32_122_fu_2498_p1;

assign vec_l_5_address9 = zext_ln32_121_fu_2482_p1;

assign vecs_V_TREADY = regslice_both_vecs_V_U_ack_in;

assign zext_ln11_fu_3461_p1 = out_l_q0;

assign zext_ln15_fu_1922_p1 = len;

assign zext_ln18_1_fu_2012_p1 = add_ln18_2_fu_2007_p2;

assign zext_ln18_2_fu_2125_p1 = tmp_17_fu_2115_p4;

assign zext_ln18_3_fu_2134_p1 = add_ln18_4_fu_2129_p2;

assign zext_ln18_4_fu_2247_p1 = tmp_18_fu_2237_p4;

assign zext_ln18_5_fu_2256_p1 = add_ln18_6_fu_2251_p2;

assign zext_ln18_6_fu_2369_p1 = tmp_20_fu_2359_p4;

assign zext_ln18_7_fu_2378_p1 = add_ln18_7_fu_2373_p2;

assign zext_ln18_fu_2003_p1 = tmp_fu_1993_p4;

assign zext_ln32_121_fu_2482_p1 = add_ln32_60_fu_2476_p2;

assign zext_ln32_122_fu_2498_p1 = or_ln32_fu_2492_p2;

assign zext_ln32_123_fu_2514_p1 = add_ln32_61_fu_2508_p2;

assign zext_ln32_124_fu_2530_p1 = add_ln32_62_fu_2524_p2;

assign zext_ln32_125_fu_2546_p1 = add_ln32_63_fu_2540_p2;

assign zext_ln32_126_fu_2562_p1 = add_ln32_64_fu_2556_p2;

assign zext_ln32_127_fu_2578_p1 = add_ln32_65_fu_2572_p2;

assign zext_ln32_128_fu_2594_p1 = add_ln32_66_fu_2588_p2;

assign zext_ln32_129_fu_2610_p1 = add_ln32_67_fu_2604_p2;

assign zext_ln32_130_fu_2626_p1 = add_ln32_68_fu_2620_p2;

assign zext_ln32_fu_2636_p1 = coeffs_l_q0;

always @ (posedge ap_clk) begin
    zext_ln15_reg_4022[63:32] <= 32'b00000000000000000000000000000000;
    add_ln18_reg_4030[0] <= 1'b0;
    add_ln18_1_reg_4060[1:0] <= 2'b10;
    add_ln18_3_reg_4090[0] <= 1'b0;
    add_ln18_5_reg_4120[2:0] <= 3'b110;
end

endmodule //hls_linear_combination
