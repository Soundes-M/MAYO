==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z020-clg484-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z020clg484-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: set_directive_top -name hls_linear_combination hls_linear_combination 
INFO: [HLS 200-1510] Running: set_directive_pipeline hls_linear_combination/LOOP_LC2 
INFO: [HLS 200-1510] Running: set_directive_pipeline hls_linear_combination/LOOP_LC1 
INFO: [HLS 200-1510] Running: set_directive_array_partition -dim 1 -factor 16 -type cyclic hls_linear_combination accumulators 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.01 seconds; current allocated memory: 180.281 MB.
INFO: [HLS 200-10] Analyzing design file 'hls_linear_combination/hls_linear_combination.cpp' ... 
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:117:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:118:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:119:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:120:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:121:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:151:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:152:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:153:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:154:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:155:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:156:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:157:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:158:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:159:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:160:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:210:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:211:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:212:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:239:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:240:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:241:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:242:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:243:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:244:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:280:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:281:9
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 38.67 seconds. CPU system time: 1.58 seconds. Elapsed time: 40.86 seconds; current allocated memory: 182.622 MB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-178] Inlining function 'ap_fixed<34, 34, (ap_q_mode)5, (ap_o_mode)3, 0> fabs_fixed<34, 34>(ap_fixed<34, 34, (ap_q_mode)5, (ap_o_mode)3, 0>)' into 'ap_fixed<33, 33, (ap_q_mode)5, (ap_o_mode)3, 0> hls_internal::generic_remquo<33, 33>(ap_fixed<33, 33, (ap_q_mode)5, (ap_o_mode)3, 0>, ap_fixed<33, 33, (ap_q_mode)5, (ap_o_mode)3, 0>, int*)' (/wrk/ci/prod/2020.2/rdi_builds/continuous/2020_11_18_3064766/src/shared/hls/clib/hlsmath/include/hls_fmod_rem_quo_remainder_divide_apfixed.h:136:0)
INFO: [HLS 214-178] Inlining function 'ap_fixed<34, 34, (ap_q_mode)5, (ap_o_mode)3, 0> fabs_fixed<34, 34>(ap_fixed<34, 34, (ap_q_mode)5, (ap_o_mode)3, 0>)' into 'ap_fixed<33, 33, (ap_q_mode)5, (ap_o_mode)3, 0> hls_internal::generic_remquo<33, 33>(ap_fixed<33, 33, (ap_q_mode)5, (ap_o_mode)3, 0>, ap_fixed<33, 33, (ap_q_mode)5, (ap_o_mode)3, 0>, int*)' (/wrk/ci/prod/2020.2/rdi_builds/continuous/2020_11_18_3064766/src/shared/hls/clib/hlsmath/include/hls_fmod_rem_quo_remainder_divide_apfixed.h:136:0)
INFO: [HLS 214-178] Inlining function 'ap_fixed<33, 33, (ap_q_mode)5, (ap_o_mode)3, 0> hls_internal::generic_remainder<33, 33>(ap_fixed<33, 33, (ap_q_mode)5, (ap_o_mode)3, 0>, ap_fixed<33, 33, (ap_q_mode)5, (ap_o_mode)3, 0>)' into 'ap_uint<32> hls_internal::generic_remainder<32>(ap_uint<32>, ap_uint<32>)' (/wrk/ci/prod/2020.2/rdi_builds/continuous/2020_11_18_3064766/src/shared/hls/clib/hlsmath/include/hls_fmod_rem_quo_remainder_divide_apfixed.h:223:0)
INFO: [HLS 214-178] Inlining function 'ap_uint<32> hls_internal::generic_remainder<32>(ap_uint<32>, ap_uint<32>)' into 'hls::remainder(unsigned int, unsigned int)' (/wrk/ci/prod/2020.2/rdi_builds/continuous/2020_11_18_3064766/src/shared/hls/clib/hlsmath/src/c++/remainderint.cpp:67:0)
INFO: [HLS 214-178] Inlining function 'hls::remainder(unsigned int, unsigned int)' into 'hls_linear_combination(unsigned char*, unsigned char*, int, unsigned char*)' (hls_linear_combination/hls_linear_combination.cpp:5:0)
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 7.1 seconds. CPU system time: 0.43 seconds. Elapsed time: 7.73 seconds; current allocated memory: 184.788 MB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0 seconds; current allocated memory: 184.790 MB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0.28 seconds. CPU system time: 0.04 seconds. Elapsed time: 0.33 seconds; current allocated memory: 215.709 MB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0.66 seconds. CPU system time: 0.04 seconds. Elapsed time: 0.73 seconds; current allocated memory: 264.748 MB.
INFO: [XFORM 203-502] Unrolling all sub-loops inside loop 'LOOP_LC1' (hls_linear_combination/hls_linear_combination.cpp:10) in function 'hls_linear_combination' for pipelining.
INFO: [HLS 200-489] Unrolling loop 'LOOP_LC12' (hls_linear_combination/hls_linear_combination.cpp:12) in function 'hls_linear_combination' completely with a factor of 60.
INFO: [XFORM 203-101] Partitioning array 'accumulators' (hls_linear_combination/hls_linear_combination.cpp:7) in dimension 1 with a cyclic factor 16.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.0' (hls_linear_combination/hls_linear_combination.cpp:7) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.1' (hls_linear_combination/hls_linear_combination.cpp:7) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.2' (hls_linear_combination/hls_linear_combination.cpp:7) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.3' (hls_linear_combination/hls_linear_combination.cpp:7) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.4' (hls_linear_combination/hls_linear_combination.cpp:7) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.5' (hls_linear_combination/hls_linear_combination.cpp:7) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.6' (hls_linear_combination/hls_linear_combination.cpp:7) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.7' (hls_linear_combination/hls_linear_combination.cpp:7) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.8' (hls_linear_combination/hls_linear_combination.cpp:7) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.9' (hls_linear_combination/hls_linear_combination.cpp:7) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.10' (hls_linear_combination/hls_linear_combination.cpp:7) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.11' (hls_linear_combination/hls_linear_combination.cpp:7) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.12' (hls_linear_combination/hls_linear_combination.cpp:7) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.13' (hls_linear_combination/hls_linear_combination.cpp:7) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.14' (hls_linear_combination/hls_linear_combination.cpp:7) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.15' (hls_linear_combination/hls_linear_combination.cpp:7) completely based on array size.
INFO: [XFORM 203-101] Partitioning array 'accumulators.0' (hls_linear_combination/hls_linear_combination.cpp:7) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.1' (hls_linear_combination/hls_linear_combination.cpp:7) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.2' (hls_linear_combination/hls_linear_combination.cpp:7) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.3' (hls_linear_combination/hls_linear_combination.cpp:7) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.4' (hls_linear_combination/hls_linear_combination.cpp:7) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.5' (hls_linear_combination/hls_linear_combination.cpp:7) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.6' (hls_linear_combination/hls_linear_combination.cpp:7) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.7' (hls_linear_combination/hls_linear_combination.cpp:7) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.8' (hls_linear_combination/hls_linear_combination.cpp:7) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.9' (hls_linear_combination/hls_linear_combination.cpp:7) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.10' (hls_linear_combination/hls_linear_combination.cpp:7) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.11' (hls_linear_combination/hls_linear_combination.cpp:7) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.12' (hls_linear_combination/hls_linear_combination.cpp:7) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.13' (hls_linear_combination/hls_linear_combination.cpp:7) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.14' (hls_linear_combination/hls_linear_combination.cpp:7) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.15' (hls_linear_combination/hls_linear_combination.cpp:7) in dimension 1 completely.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 1.04 seconds. CPU system time: 0.04 seconds. Elapsed time: 1.11 seconds; current allocated memory: 336.785 MB.
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 0.47 seconds. CPU system time: 0.02 seconds. Elapsed time: 0.5 seconds; current allocated memory: 353.590 MB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'hls_linear_combination' ...
WARNING: [SYN 201-107] Renaming port name 'hls_linear_combination/out' to 'hls_linear_combination/out_r' to avoid the conflict with HDL keywords or other object names.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z020-clg484-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z020clg484-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: set_directive_top -name hls_linear_combination hls_linear_combination 
INFO: [HLS 200-1510] Running: set_directive_pipeline hls_linear_combination/LOOP_LC2 
INFO: [HLS 200-1510] Running: set_directive_pipeline hls_linear_combination/LOOP_LC1 
INFO: [HLS 200-1510] Running: set_directive_array_partition -dim 1 -factor 16 -type cyclic hls_linear_combination accumulators 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0.01 seconds. CPU system time: 0 seconds. Elapsed time: 0.03 seconds; current allocated memory: 180.374 MB.
INFO: [HLS 200-10] Analyzing design file 'hls_linear_combination/hls_linear_combination.cpp' ... 
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:117:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:118:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:119:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:120:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:121:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:151:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:152:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:153:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:154:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:155:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:156:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:157:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:158:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:159:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:160:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:210:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:211:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:212:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:239:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:240:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:241:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:242:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:243:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:244:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:280:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:281:9
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 39.77 seconds. CPU system time: 1.72 seconds. Elapsed time: 49.46 seconds; current allocated memory: 182.779 MB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-178] Inlining function 'ap_fixed<34, 34, (ap_q_mode)5, (ap_o_mode)3, 0> fabs_fixed<34, 34>(ap_fixed<34, 34, (ap_q_mode)5, (ap_o_mode)3, 0>)' into 'ap_fixed<33, 33, (ap_q_mode)5, (ap_o_mode)3, 0> hls_internal::generic_remquo<33, 33>(ap_fixed<33, 33, (ap_q_mode)5, (ap_o_mode)3, 0>, ap_fixed<33, 33, (ap_q_mode)5, (ap_o_mode)3, 0>, int*)' (/wrk/ci/prod/2020.2/rdi_builds/continuous/2020_11_18_3064766/src/shared/hls/clib/hlsmath/include/hls_fmod_rem_quo_remainder_divide_apfixed.h:136:0)
INFO: [HLS 214-178] Inlining function 'ap_fixed<34, 34, (ap_q_mode)5, (ap_o_mode)3, 0> fabs_fixed<34, 34>(ap_fixed<34, 34, (ap_q_mode)5, (ap_o_mode)3, 0>)' into 'ap_fixed<33, 33, (ap_q_mode)5, (ap_o_mode)3, 0> hls_internal::generic_remquo<33, 33>(ap_fixed<33, 33, (ap_q_mode)5, (ap_o_mode)3, 0>, ap_fixed<33, 33, (ap_q_mode)5, (ap_o_mode)3, 0>, int*)' (/wrk/ci/prod/2020.2/rdi_builds/continuous/2020_11_18_3064766/src/shared/hls/clib/hlsmath/include/hls_fmod_rem_quo_remainder_divide_apfixed.h:136:0)
INFO: [HLS 214-178] Inlining function 'ap_fixed<33, 33, (ap_q_mode)5, (ap_o_mode)3, 0> hls_internal::generic_remainder<33, 33>(ap_fixed<33, 33, (ap_q_mode)5, (ap_o_mode)3, 0>, ap_fixed<33, 33, (ap_q_mode)5, (ap_o_mode)3, 0>)' into 'ap_uint<32> hls_internal::generic_remainder<32>(ap_uint<32>, ap_uint<32>)' (/wrk/ci/prod/2020.2/rdi_builds/continuous/2020_11_18_3064766/src/shared/hls/clib/hlsmath/include/hls_fmod_rem_quo_remainder_divide_apfixed.h:223:0)
INFO: [HLS 214-178] Inlining function 'ap_uint<32> hls_internal::generic_remainder<32>(ap_uint<32>, ap_uint<32>)' into 'hls::remainder(unsigned int, unsigned int)' (/wrk/ci/prod/2020.2/rdi_builds/continuous/2020_11_18_3064766/src/shared/hls/clib/hlsmath/src/c++/remainderint.cpp:67:0)
INFO: [HLS 214-178] Inlining function 'hls::remainder(unsigned int, unsigned int)' into 'hls_linear_combination(unsigned char*, unsigned char*, int, unsigned char*)' (hls_linear_combination/hls_linear_combination.cpp:5:0)
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 8.22 seconds. CPU system time: 0.67 seconds. Elapsed time: 12.7 seconds; current allocated memory: 184.929 MB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0 seconds; current allocated memory: 184.931 MB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0.35 seconds. CPU system time: 0.05 seconds. Elapsed time: 1.54 seconds; current allocated memory: 215.848 MB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0.76 seconds. CPU system time: 0.05 seconds. Elapsed time: 0.99 seconds; current allocated memory: 264.890 MB.
INFO: [XFORM 203-502] Unrolling all sub-loops inside loop 'LOOP_LC1' (hls_linear_combination/hls_linear_combination.cpp:10) in function 'hls_linear_combination' for pipelining.
INFO: [HLS 200-489] Unrolling loop 'LOOP_LC12' (hls_linear_combination/hls_linear_combination.cpp:12) in function 'hls_linear_combination' completely with a factor of 60.
INFO: [XFORM 203-101] Partitioning array 'accumulators' (hls_linear_combination/hls_linear_combination.cpp:7) in dimension 1 with a cyclic factor 16.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.0' (hls_linear_combination/hls_linear_combination.cpp:7) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.1' (hls_linear_combination/hls_linear_combination.cpp:7) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.2' (hls_linear_combination/hls_linear_combination.cpp:7) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.3' (hls_linear_combination/hls_linear_combination.cpp:7) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.4' (hls_linear_combination/hls_linear_combination.cpp:7) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.5' (hls_linear_combination/hls_linear_combination.cpp:7) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.6' (hls_linear_combination/hls_linear_combination.cpp:7) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.7' (hls_linear_combination/hls_linear_combination.cpp:7) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.8' (hls_linear_combination/hls_linear_combination.cpp:7) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.9' (hls_linear_combination/hls_linear_combination.cpp:7) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.10' (hls_linear_combination/hls_linear_combination.cpp:7) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.11' (hls_linear_combination/hls_linear_combination.cpp:7) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.12' (hls_linear_combination/hls_linear_combination.cpp:7) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.13' (hls_linear_combination/hls_linear_combination.cpp:7) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.14' (hls_linear_combination/hls_linear_combination.cpp:7) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.15' (hls_linear_combination/hls_linear_combination.cpp:7) completely based on array size.
INFO: [XFORM 203-101] Partitioning array 'accumulators.0' (hls_linear_combination/hls_linear_combination.cpp:7) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.1' (hls_linear_combination/hls_linear_combination.cpp:7) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.2' (hls_linear_combination/hls_linear_combination.cpp:7) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.3' (hls_linear_combination/hls_linear_combination.cpp:7) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.4' (hls_linear_combination/hls_linear_combination.cpp:7) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.5' (hls_linear_combination/hls_linear_combination.cpp:7) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.6' (hls_linear_combination/hls_linear_combination.cpp:7) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.7' (hls_linear_combination/hls_linear_combination.cpp:7) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.8' (hls_linear_combination/hls_linear_combination.cpp:7) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.9' (hls_linear_combination/hls_linear_combination.cpp:7) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.10' (hls_linear_combination/hls_linear_combination.cpp:7) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.11' (hls_linear_combination/hls_linear_combination.cpp:7) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.12' (hls_linear_combination/hls_linear_combination.cpp:7) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.13' (hls_linear_combination/hls_linear_combination.cpp:7) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.14' (hls_linear_combination/hls_linear_combination.cpp:7) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.15' (hls_linear_combination/hls_linear_combination.cpp:7) in dimension 1 completely.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 1.1 seconds. CPU system time: 0.05 seconds. Elapsed time: 1.47 seconds; current allocated memory: 336.931 MB.
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 0.56 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.68 seconds; current allocated memory: 353.709 MB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'hls_linear_combination' ...
WARNING: [SYN 201-107] Renaming port name 'hls_linear_combination/out' to 'hls_linear_combination/out_r' to avoid the conflict with HDL keywords or other object names.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z020-clg484-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z020-clg484-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: set_directive_top -name hls_linear_combination hls_linear_combination 
INFO: [HLS 200-1510] Running: set_directive_pipeline hls_linear_combination/LOOP_LC2 
INFO: [HLS 200-1510] Running: set_directive_pipeline hls_linear_combination/LOOP_LC1 
INFO: [HLS 200-1510] Running: set_directive_array_partition -type cyclic -factor 16 -dim 1 hls_linear_combination accumulators 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0.01 seconds. CPU system time: 0 seconds. Elapsed time: 0.02 seconds; current allocated memory: 180.371 MB.
INFO: [HLS 200-10] Analyzing design file 'hls_linear_combination/hls_linear_combination.cpp' ... 
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:117:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:118:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:119:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:120:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:121:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:151:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:152:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:153:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:154:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:155:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:156:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:157:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:158:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:159:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:160:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:210:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:211:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:212:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:239:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:240:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:241:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:242:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:243:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:244:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:280:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:281:9
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 39 seconds. CPU system time: 1.47 seconds. Elapsed time: 43.27 seconds; current allocated memory: 182.805 MB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-178] Inlining function 'ap_fixed<34, 34, (ap_q_mode)5, (ap_o_mode)3, 0> fabs_fixed<34, 34>(ap_fixed<34, 34, (ap_q_mode)5, (ap_o_mode)3, 0>)' into 'ap_fixed<33, 33, (ap_q_mode)5, (ap_o_mode)3, 0> hls_internal::generic_remquo<33, 33>(ap_fixed<33, 33, (ap_q_mode)5, (ap_o_mode)3, 0>, ap_fixed<33, 33, (ap_q_mode)5, (ap_o_mode)3, 0>, int*)' (/wrk/ci/prod/2020.2/rdi_builds/continuous/2020_11_18_3064766/src/shared/hls/clib/hlsmath/include/hls_fmod_rem_quo_remainder_divide_apfixed.h:136:0)
INFO: [HLS 214-178] Inlining function 'ap_fixed<34, 34, (ap_q_mode)5, (ap_o_mode)3, 0> fabs_fixed<34, 34>(ap_fixed<34, 34, (ap_q_mode)5, (ap_o_mode)3, 0>)' into 'ap_fixed<33, 33, (ap_q_mode)5, (ap_o_mode)3, 0> hls_internal::generic_remquo<33, 33>(ap_fixed<33, 33, (ap_q_mode)5, (ap_o_mode)3, 0>, ap_fixed<33, 33, (ap_q_mode)5, (ap_o_mode)3, 0>, int*)' (/wrk/ci/prod/2020.2/rdi_builds/continuous/2020_11_18_3064766/src/shared/hls/clib/hlsmath/include/hls_fmod_rem_quo_remainder_divide_apfixed.h:136:0)
INFO: [HLS 214-178] Inlining function 'ap_fixed<33, 33, (ap_q_mode)5, (ap_o_mode)3, 0> hls_internal::generic_remainder<33, 33>(ap_fixed<33, 33, (ap_q_mode)5, (ap_o_mode)3, 0>, ap_fixed<33, 33, (ap_q_mode)5, (ap_o_mode)3, 0>)' into 'ap_uint<32> hls_internal::generic_remainder<32>(ap_uint<32>, ap_uint<32>)' (/wrk/ci/prod/2020.2/rdi_builds/continuous/2020_11_18_3064766/src/shared/hls/clib/hlsmath/include/hls_fmod_rem_quo_remainder_divide_apfixed.h:223:0)
INFO: [HLS 214-178] Inlining function 'ap_uint<32> hls_internal::generic_remainder<32>(ap_uint<32>, ap_uint<32>)' into 'hls::remainder(unsigned int, unsigned int)' (/wrk/ci/prod/2020.2/rdi_builds/continuous/2020_11_18_3064766/src/shared/hls/clib/hlsmath/src/c++/remainderint.cpp:67:0)
INFO: [HLS 214-178] Inlining function 'hls::remainder(unsigned int, unsigned int)' into 'hls_linear_combination(unsigned char*, unsigned char*, int, unsigned char*)' (hls_linear_combination/hls_linear_combination.cpp:5:0)
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 7.82 seconds. CPU system time: 0.55 seconds. Elapsed time: 10.02 seconds; current allocated memory: 184.973 MB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0 seconds; current allocated memory: 184.974 MB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0.31 seconds. CPU system time: 0.03 seconds. Elapsed time: 1.16 seconds; current allocated memory: 215.892 MB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0.76 seconds. CPU system time: 0.03 seconds. Elapsed time: 0.91 seconds; current allocated memory: 264.930 MB.
INFO: [XFORM 203-502] Unrolling all sub-loops inside loop 'LOOP_LC1' (hls_linear_combination/hls_linear_combination.cpp:10) in function 'hls_linear_combination' for pipelining.
INFO: [HLS 200-489] Unrolling loop 'LOOP_LC12' (hls_linear_combination/hls_linear_combination.cpp:12) in function 'hls_linear_combination' completely with a factor of 60.
INFO: [XFORM 203-101] Partitioning array 'accumulators' (hls_linear_combination/hls_linear_combination.cpp:7) in dimension 1 with a cyclic factor 16.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.0' (hls_linear_combination/hls_linear_combination.cpp:7) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.1' (hls_linear_combination/hls_linear_combination.cpp:7) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.2' (hls_linear_combination/hls_linear_combination.cpp:7) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.3' (hls_linear_combination/hls_linear_combination.cpp:7) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.4' (hls_linear_combination/hls_linear_combination.cpp:7) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.5' (hls_linear_combination/hls_linear_combination.cpp:7) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.6' (hls_linear_combination/hls_linear_combination.cpp:7) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.7' (hls_linear_combination/hls_linear_combination.cpp:7) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.8' (hls_linear_combination/hls_linear_combination.cpp:7) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.9' (hls_linear_combination/hls_linear_combination.cpp:7) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.10' (hls_linear_combination/hls_linear_combination.cpp:7) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.11' (hls_linear_combination/hls_linear_combination.cpp:7) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.12' (hls_linear_combination/hls_linear_combination.cpp:7) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.13' (hls_linear_combination/hls_linear_combination.cpp:7) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.14' (hls_linear_combination/hls_linear_combination.cpp:7) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.15' (hls_linear_combination/hls_linear_combination.cpp:7) completely based on array size.
INFO: [XFORM 203-101] Partitioning array 'accumulators.0' (hls_linear_combination/hls_linear_combination.cpp:7) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.1' (hls_linear_combination/hls_linear_combination.cpp:7) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.2' (hls_linear_combination/hls_linear_combination.cpp:7) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.3' (hls_linear_combination/hls_linear_combination.cpp:7) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.4' (hls_linear_combination/hls_linear_combination.cpp:7) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.5' (hls_linear_combination/hls_linear_combination.cpp:7) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.6' (hls_linear_combination/hls_linear_combination.cpp:7) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.7' (hls_linear_combination/hls_linear_combination.cpp:7) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.8' (hls_linear_combination/hls_linear_combination.cpp:7) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.9' (hls_linear_combination/hls_linear_combination.cpp:7) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.10' (hls_linear_combination/hls_linear_combination.cpp:7) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.11' (hls_linear_combination/hls_linear_combination.cpp:7) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.12' (hls_linear_combination/hls_linear_combination.cpp:7) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.13' (hls_linear_combination/hls_linear_combination.cpp:7) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.14' (hls_linear_combination/hls_linear_combination.cpp:7) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.15' (hls_linear_combination/hls_linear_combination.cpp:7) in dimension 1 completely.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 1.11 seconds. CPU system time: 0.06 seconds. Elapsed time: 1.37 seconds; current allocated memory: 336.971 MB.
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 0.52 seconds. CPU system time: 0.02 seconds. Elapsed time: 0.68 seconds; current allocated memory: 353.745 MB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'hls_linear_combination' ...
WARNING: [SYN 201-107] Renaming port name 'hls_linear_combination/out' to 'hls_linear_combination/out_r' to avoid the conflict with HDL keywords or other object names.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
