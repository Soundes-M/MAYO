==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z020-clg484-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z020clg484-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: set_directive_top -name hls_linear_combination hls_linear_combination 
INFO: [HLS 200-1510] Running: set_directive_pipeline hls_linear_combination/LOOP_LC2 
INFO: [HLS 200-1510] Running: set_directive_pipeline hls_linear_combination/LOOP_LC1 
INFO: [HLS 200-1510] Running: set_directive_array_partition -dim 1 -factor 16 -type cyclic hls_linear_combination accumulators 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.01 seconds; current allocated memory: 180.281 MB.
INFO: [HLS 200-10] Analyzing design file 'hls_linear_combination/hls_linear_combination.cpp' ... 
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:117:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:118:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:119:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:120:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:121:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:151:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:152:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:153:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:154:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:155:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:156:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:157:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:158:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:159:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:160:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:210:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:211:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:212:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:239:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:240:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:241:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:242:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:243:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:244:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:280:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:281:9
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 38.67 seconds. CPU system time: 1.58 seconds. Elapsed time: 40.86 seconds; current allocated memory: 182.622 MB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-178] Inlining function 'ap_fixed<34, 34, (ap_q_mode)5, (ap_o_mode)3, 0> fabs_fixed<34, 34>(ap_fixed<34, 34, (ap_q_mode)5, (ap_o_mode)3, 0>)' into 'ap_fixed<33, 33, (ap_q_mode)5, (ap_o_mode)3, 0> hls_internal::generic_remquo<33, 33>(ap_fixed<33, 33, (ap_q_mode)5, (ap_o_mode)3, 0>, ap_fixed<33, 33, (ap_q_mode)5, (ap_o_mode)3, 0>, int*)' (/wrk/ci/prod/2020.2/rdi_builds/continuous/2020_11_18_3064766/src/shared/hls/clib/hlsmath/include/hls_fmod_rem_quo_remainder_divide_apfixed.h:136:0)
INFO: [HLS 214-178] Inlining function 'ap_fixed<34, 34, (ap_q_mode)5, (ap_o_mode)3, 0> fabs_fixed<34, 34>(ap_fixed<34, 34, (ap_q_mode)5, (ap_o_mode)3, 0>)' into 'ap_fixed<33, 33, (ap_q_mode)5, (ap_o_mode)3, 0> hls_internal::generic_remquo<33, 33>(ap_fixed<33, 33, (ap_q_mode)5, (ap_o_mode)3, 0>, ap_fixed<33, 33, (ap_q_mode)5, (ap_o_mode)3, 0>, int*)' (/wrk/ci/prod/2020.2/rdi_builds/continuous/2020_11_18_3064766/src/shared/hls/clib/hlsmath/include/hls_fmod_rem_quo_remainder_divide_apfixed.h:136:0)
INFO: [HLS 214-178] Inlining function 'ap_fixed<33, 33, (ap_q_mode)5, (ap_o_mode)3, 0> hls_internal::generic_remainder<33, 33>(ap_fixed<33, 33, (ap_q_mode)5, (ap_o_mode)3, 0>, ap_fixed<33, 33, (ap_q_mode)5, (ap_o_mode)3, 0>)' into 'ap_uint<32> hls_internal::generic_remainder<32>(ap_uint<32>, ap_uint<32>)' (/wrk/ci/prod/2020.2/rdi_builds/continuous/2020_11_18_3064766/src/shared/hls/clib/hlsmath/include/hls_fmod_rem_quo_remainder_divide_apfixed.h:223:0)
INFO: [HLS 214-178] Inlining function 'ap_uint<32> hls_internal::generic_remainder<32>(ap_uint<32>, ap_uint<32>)' into 'hls::remainder(unsigned int, unsigned int)' (/wrk/ci/prod/2020.2/rdi_builds/continuous/2020_11_18_3064766/src/shared/hls/clib/hlsmath/src/c++/remainderint.cpp:67:0)
INFO: [HLS 214-178] Inlining function 'hls::remainder(unsigned int, unsigned int)' into 'hls_linear_combination(unsigned char*, unsigned char*, int, unsigned char*)' (hls_linear_combination/hls_linear_combination.cpp:5:0)
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 7.1 seconds. CPU system time: 0.43 seconds. Elapsed time: 7.73 seconds; current allocated memory: 184.788 MB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0 seconds; current allocated memory: 184.790 MB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0.28 seconds. CPU system time: 0.04 seconds. Elapsed time: 0.33 seconds; current allocated memory: 215.709 MB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0.66 seconds. CPU system time: 0.04 seconds. Elapsed time: 0.73 seconds; current allocated memory: 264.748 MB.
INFO: [XFORM 203-502] Unrolling all sub-loops inside loop 'LOOP_LC1' (hls_linear_combination/hls_linear_combination.cpp:10) in function 'hls_linear_combination' for pipelining.
INFO: [HLS 200-489] Unrolling loop 'LOOP_LC12' (hls_linear_combination/hls_linear_combination.cpp:12) in function 'hls_linear_combination' completely with a factor of 60.
INFO: [XFORM 203-101] Partitioning array 'accumulators' (hls_linear_combination/hls_linear_combination.cpp:7) in dimension 1 with a cyclic factor 16.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.0' (hls_linear_combination/hls_linear_combination.cpp:7) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.1' (hls_linear_combination/hls_linear_combination.cpp:7) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.2' (hls_linear_combination/hls_linear_combination.cpp:7) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.3' (hls_linear_combination/hls_linear_combination.cpp:7) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.4' (hls_linear_combination/hls_linear_combination.cpp:7) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.5' (hls_linear_combination/hls_linear_combination.cpp:7) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.6' (hls_linear_combination/hls_linear_combination.cpp:7) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.7' (hls_linear_combination/hls_linear_combination.cpp:7) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.8' (hls_linear_combination/hls_linear_combination.cpp:7) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.9' (hls_linear_combination/hls_linear_combination.cpp:7) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.10' (hls_linear_combination/hls_linear_combination.cpp:7) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.11' (hls_linear_combination/hls_linear_combination.cpp:7) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.12' (hls_linear_combination/hls_linear_combination.cpp:7) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.13' (hls_linear_combination/hls_linear_combination.cpp:7) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.14' (hls_linear_combination/hls_linear_combination.cpp:7) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.15' (hls_linear_combination/hls_linear_combination.cpp:7) completely based on array size.
INFO: [XFORM 203-101] Partitioning array 'accumulators.0' (hls_linear_combination/hls_linear_combination.cpp:7) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.1' (hls_linear_combination/hls_linear_combination.cpp:7) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.2' (hls_linear_combination/hls_linear_combination.cpp:7) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.3' (hls_linear_combination/hls_linear_combination.cpp:7) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.4' (hls_linear_combination/hls_linear_combination.cpp:7) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.5' (hls_linear_combination/hls_linear_combination.cpp:7) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.6' (hls_linear_combination/hls_linear_combination.cpp:7) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.7' (hls_linear_combination/hls_linear_combination.cpp:7) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.8' (hls_linear_combination/hls_linear_combination.cpp:7) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.9' (hls_linear_combination/hls_linear_combination.cpp:7) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.10' (hls_linear_combination/hls_linear_combination.cpp:7) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.11' (hls_linear_combination/hls_linear_combination.cpp:7) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.12' (hls_linear_combination/hls_linear_combination.cpp:7) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.13' (hls_linear_combination/hls_linear_combination.cpp:7) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.14' (hls_linear_combination/hls_linear_combination.cpp:7) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.15' (hls_linear_combination/hls_linear_combination.cpp:7) in dimension 1 completely.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 1.04 seconds. CPU system time: 0.04 seconds. Elapsed time: 1.11 seconds; current allocated memory: 336.785 MB.
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 0.47 seconds. CPU system time: 0.02 seconds. Elapsed time: 0.5 seconds; current allocated memory: 353.590 MB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'hls_linear_combination' ...
WARNING: [SYN 201-107] Renaming port name 'hls_linear_combination/out' to 'hls_linear_combination/out_r' to avoid the conflict with HDL keywords or other object names.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z020-clg484-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z020clg484-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: set_directive_top -name hls_linear_combination hls_linear_combination 
INFO: [HLS 200-1510] Running: set_directive_pipeline hls_linear_combination/LOOP_LC2 
INFO: [HLS 200-1510] Running: set_directive_pipeline hls_linear_combination/LOOP_LC1 
INFO: [HLS 200-1510] Running: set_directive_array_partition -dim 1 -factor 16 -type cyclic hls_linear_combination accumulators 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0.01 seconds. CPU system time: 0 seconds. Elapsed time: 0.03 seconds; current allocated memory: 180.374 MB.
INFO: [HLS 200-10] Analyzing design file 'hls_linear_combination/hls_linear_combination.cpp' ... 
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:117:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:118:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:119:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:120:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:121:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:151:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:152:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:153:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:154:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:155:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:156:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:157:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:158:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:159:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:160:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:210:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:211:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:212:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:239:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:240:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:241:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:242:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:243:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:244:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:280:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:281:9
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 39.77 seconds. CPU system time: 1.72 seconds. Elapsed time: 49.46 seconds; current allocated memory: 182.779 MB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-178] Inlining function 'ap_fixed<34, 34, (ap_q_mode)5, (ap_o_mode)3, 0> fabs_fixed<34, 34>(ap_fixed<34, 34, (ap_q_mode)5, (ap_o_mode)3, 0>)' into 'ap_fixed<33, 33, (ap_q_mode)5, (ap_o_mode)3, 0> hls_internal::generic_remquo<33, 33>(ap_fixed<33, 33, (ap_q_mode)5, (ap_o_mode)3, 0>, ap_fixed<33, 33, (ap_q_mode)5, (ap_o_mode)3, 0>, int*)' (/wrk/ci/prod/2020.2/rdi_builds/continuous/2020_11_18_3064766/src/shared/hls/clib/hlsmath/include/hls_fmod_rem_quo_remainder_divide_apfixed.h:136:0)
INFO: [HLS 214-178] Inlining function 'ap_fixed<34, 34, (ap_q_mode)5, (ap_o_mode)3, 0> fabs_fixed<34, 34>(ap_fixed<34, 34, (ap_q_mode)5, (ap_o_mode)3, 0>)' into 'ap_fixed<33, 33, (ap_q_mode)5, (ap_o_mode)3, 0> hls_internal::generic_remquo<33, 33>(ap_fixed<33, 33, (ap_q_mode)5, (ap_o_mode)3, 0>, ap_fixed<33, 33, (ap_q_mode)5, (ap_o_mode)3, 0>, int*)' (/wrk/ci/prod/2020.2/rdi_builds/continuous/2020_11_18_3064766/src/shared/hls/clib/hlsmath/include/hls_fmod_rem_quo_remainder_divide_apfixed.h:136:0)
INFO: [HLS 214-178] Inlining function 'ap_fixed<33, 33, (ap_q_mode)5, (ap_o_mode)3, 0> hls_internal::generic_remainder<33, 33>(ap_fixed<33, 33, (ap_q_mode)5, (ap_o_mode)3, 0>, ap_fixed<33, 33, (ap_q_mode)5, (ap_o_mode)3, 0>)' into 'ap_uint<32> hls_internal::generic_remainder<32>(ap_uint<32>, ap_uint<32>)' (/wrk/ci/prod/2020.2/rdi_builds/continuous/2020_11_18_3064766/src/shared/hls/clib/hlsmath/include/hls_fmod_rem_quo_remainder_divide_apfixed.h:223:0)
INFO: [HLS 214-178] Inlining function 'ap_uint<32> hls_internal::generic_remainder<32>(ap_uint<32>, ap_uint<32>)' into 'hls::remainder(unsigned int, unsigned int)' (/wrk/ci/prod/2020.2/rdi_builds/continuous/2020_11_18_3064766/src/shared/hls/clib/hlsmath/src/c++/remainderint.cpp:67:0)
INFO: [HLS 214-178] Inlining function 'hls::remainder(unsigned int, unsigned int)' into 'hls_linear_combination(unsigned char*, unsigned char*, int, unsigned char*)' (hls_linear_combination/hls_linear_combination.cpp:5:0)
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 8.22 seconds. CPU system time: 0.67 seconds. Elapsed time: 12.7 seconds; current allocated memory: 184.929 MB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0 seconds; current allocated memory: 184.931 MB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0.35 seconds. CPU system time: 0.05 seconds. Elapsed time: 1.54 seconds; current allocated memory: 215.848 MB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0.76 seconds. CPU system time: 0.05 seconds. Elapsed time: 0.99 seconds; current allocated memory: 264.890 MB.
INFO: [XFORM 203-502] Unrolling all sub-loops inside loop 'LOOP_LC1' (hls_linear_combination/hls_linear_combination.cpp:10) in function 'hls_linear_combination' for pipelining.
INFO: [HLS 200-489] Unrolling loop 'LOOP_LC12' (hls_linear_combination/hls_linear_combination.cpp:12) in function 'hls_linear_combination' completely with a factor of 60.
INFO: [XFORM 203-101] Partitioning array 'accumulators' (hls_linear_combination/hls_linear_combination.cpp:7) in dimension 1 with a cyclic factor 16.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.0' (hls_linear_combination/hls_linear_combination.cpp:7) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.1' (hls_linear_combination/hls_linear_combination.cpp:7) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.2' (hls_linear_combination/hls_linear_combination.cpp:7) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.3' (hls_linear_combination/hls_linear_combination.cpp:7) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.4' (hls_linear_combination/hls_linear_combination.cpp:7) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.5' (hls_linear_combination/hls_linear_combination.cpp:7) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.6' (hls_linear_combination/hls_linear_combination.cpp:7) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.7' (hls_linear_combination/hls_linear_combination.cpp:7) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.8' (hls_linear_combination/hls_linear_combination.cpp:7) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.9' (hls_linear_combination/hls_linear_combination.cpp:7) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.10' (hls_linear_combination/hls_linear_combination.cpp:7) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.11' (hls_linear_combination/hls_linear_combination.cpp:7) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.12' (hls_linear_combination/hls_linear_combination.cpp:7) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.13' (hls_linear_combination/hls_linear_combination.cpp:7) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.14' (hls_linear_combination/hls_linear_combination.cpp:7) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.15' (hls_linear_combination/hls_linear_combination.cpp:7) completely based on array size.
INFO: [XFORM 203-101] Partitioning array 'accumulators.0' (hls_linear_combination/hls_linear_combination.cpp:7) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.1' (hls_linear_combination/hls_linear_combination.cpp:7) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.2' (hls_linear_combination/hls_linear_combination.cpp:7) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.3' (hls_linear_combination/hls_linear_combination.cpp:7) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.4' (hls_linear_combination/hls_linear_combination.cpp:7) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.5' (hls_linear_combination/hls_linear_combination.cpp:7) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.6' (hls_linear_combination/hls_linear_combination.cpp:7) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.7' (hls_linear_combination/hls_linear_combination.cpp:7) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.8' (hls_linear_combination/hls_linear_combination.cpp:7) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.9' (hls_linear_combination/hls_linear_combination.cpp:7) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.10' (hls_linear_combination/hls_linear_combination.cpp:7) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.11' (hls_linear_combination/hls_linear_combination.cpp:7) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.12' (hls_linear_combination/hls_linear_combination.cpp:7) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.13' (hls_linear_combination/hls_linear_combination.cpp:7) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.14' (hls_linear_combination/hls_linear_combination.cpp:7) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.15' (hls_linear_combination/hls_linear_combination.cpp:7) in dimension 1 completely.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 1.1 seconds. CPU system time: 0.05 seconds. Elapsed time: 1.47 seconds; current allocated memory: 336.931 MB.
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 0.56 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.68 seconds; current allocated memory: 353.709 MB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'hls_linear_combination' ...
WARNING: [SYN 201-107] Renaming port name 'hls_linear_combination/out' to 'hls_linear_combination/out_r' to avoid the conflict with HDL keywords or other object names.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z020-clg484-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z020-clg484-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: set_directive_top -name hls_linear_combination hls_linear_combination 
INFO: [HLS 200-1510] Running: set_directive_pipeline hls_linear_combination/LOOP_LC2 
INFO: [HLS 200-1510] Running: set_directive_pipeline hls_linear_combination/LOOP_LC1 
INFO: [HLS 200-1510] Running: set_directive_array_partition -type cyclic -factor 16 -dim 1 hls_linear_combination accumulators 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0.01 seconds. CPU system time: 0 seconds. Elapsed time: 0.02 seconds; current allocated memory: 180.371 MB.
INFO: [HLS 200-10] Analyzing design file 'hls_linear_combination/hls_linear_combination.cpp' ... 
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:117:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:118:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:119:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:120:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:121:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:151:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:152:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:153:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:154:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:155:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:156:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:157:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:158:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:159:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:160:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:210:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:211:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:212:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:239:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:240:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:241:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:242:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:243:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:244:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:280:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:281:9
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 39 seconds. CPU system time: 1.47 seconds. Elapsed time: 43.27 seconds; current allocated memory: 182.805 MB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-178] Inlining function 'ap_fixed<34, 34, (ap_q_mode)5, (ap_o_mode)3, 0> fabs_fixed<34, 34>(ap_fixed<34, 34, (ap_q_mode)5, (ap_o_mode)3, 0>)' into 'ap_fixed<33, 33, (ap_q_mode)5, (ap_o_mode)3, 0> hls_internal::generic_remquo<33, 33>(ap_fixed<33, 33, (ap_q_mode)5, (ap_o_mode)3, 0>, ap_fixed<33, 33, (ap_q_mode)5, (ap_o_mode)3, 0>, int*)' (/wrk/ci/prod/2020.2/rdi_builds/continuous/2020_11_18_3064766/src/shared/hls/clib/hlsmath/include/hls_fmod_rem_quo_remainder_divide_apfixed.h:136:0)
INFO: [HLS 214-178] Inlining function 'ap_fixed<34, 34, (ap_q_mode)5, (ap_o_mode)3, 0> fabs_fixed<34, 34>(ap_fixed<34, 34, (ap_q_mode)5, (ap_o_mode)3, 0>)' into 'ap_fixed<33, 33, (ap_q_mode)5, (ap_o_mode)3, 0> hls_internal::generic_remquo<33, 33>(ap_fixed<33, 33, (ap_q_mode)5, (ap_o_mode)3, 0>, ap_fixed<33, 33, (ap_q_mode)5, (ap_o_mode)3, 0>, int*)' (/wrk/ci/prod/2020.2/rdi_builds/continuous/2020_11_18_3064766/src/shared/hls/clib/hlsmath/include/hls_fmod_rem_quo_remainder_divide_apfixed.h:136:0)
INFO: [HLS 214-178] Inlining function 'ap_fixed<33, 33, (ap_q_mode)5, (ap_o_mode)3, 0> hls_internal::generic_remainder<33, 33>(ap_fixed<33, 33, (ap_q_mode)5, (ap_o_mode)3, 0>, ap_fixed<33, 33, (ap_q_mode)5, (ap_o_mode)3, 0>)' into 'ap_uint<32> hls_internal::generic_remainder<32>(ap_uint<32>, ap_uint<32>)' (/wrk/ci/prod/2020.2/rdi_builds/continuous/2020_11_18_3064766/src/shared/hls/clib/hlsmath/include/hls_fmod_rem_quo_remainder_divide_apfixed.h:223:0)
INFO: [HLS 214-178] Inlining function 'ap_uint<32> hls_internal::generic_remainder<32>(ap_uint<32>, ap_uint<32>)' into 'hls::remainder(unsigned int, unsigned int)' (/wrk/ci/prod/2020.2/rdi_builds/continuous/2020_11_18_3064766/src/shared/hls/clib/hlsmath/src/c++/remainderint.cpp:67:0)
INFO: [HLS 214-178] Inlining function 'hls::remainder(unsigned int, unsigned int)' into 'hls_linear_combination(unsigned char*, unsigned char*, int, unsigned char*)' (hls_linear_combination/hls_linear_combination.cpp:5:0)
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 7.82 seconds. CPU system time: 0.55 seconds. Elapsed time: 10.02 seconds; current allocated memory: 184.973 MB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0 seconds; current allocated memory: 184.974 MB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0.31 seconds. CPU system time: 0.03 seconds. Elapsed time: 1.16 seconds; current allocated memory: 215.892 MB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0.76 seconds. CPU system time: 0.03 seconds. Elapsed time: 0.91 seconds; current allocated memory: 264.930 MB.
INFO: [XFORM 203-502] Unrolling all sub-loops inside loop 'LOOP_LC1' (hls_linear_combination/hls_linear_combination.cpp:10) in function 'hls_linear_combination' for pipelining.
INFO: [HLS 200-489] Unrolling loop 'LOOP_LC12' (hls_linear_combination/hls_linear_combination.cpp:12) in function 'hls_linear_combination' completely with a factor of 60.
INFO: [XFORM 203-101] Partitioning array 'accumulators' (hls_linear_combination/hls_linear_combination.cpp:7) in dimension 1 with a cyclic factor 16.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.0' (hls_linear_combination/hls_linear_combination.cpp:7) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.1' (hls_linear_combination/hls_linear_combination.cpp:7) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.2' (hls_linear_combination/hls_linear_combination.cpp:7) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.3' (hls_linear_combination/hls_linear_combination.cpp:7) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.4' (hls_linear_combination/hls_linear_combination.cpp:7) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.5' (hls_linear_combination/hls_linear_combination.cpp:7) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.6' (hls_linear_combination/hls_linear_combination.cpp:7) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.7' (hls_linear_combination/hls_linear_combination.cpp:7) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.8' (hls_linear_combination/hls_linear_combination.cpp:7) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.9' (hls_linear_combination/hls_linear_combination.cpp:7) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.10' (hls_linear_combination/hls_linear_combination.cpp:7) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.11' (hls_linear_combination/hls_linear_combination.cpp:7) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.12' (hls_linear_combination/hls_linear_combination.cpp:7) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.13' (hls_linear_combination/hls_linear_combination.cpp:7) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.14' (hls_linear_combination/hls_linear_combination.cpp:7) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.15' (hls_linear_combination/hls_linear_combination.cpp:7) completely based on array size.
INFO: [XFORM 203-101] Partitioning array 'accumulators.0' (hls_linear_combination/hls_linear_combination.cpp:7) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.1' (hls_linear_combination/hls_linear_combination.cpp:7) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.2' (hls_linear_combination/hls_linear_combination.cpp:7) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.3' (hls_linear_combination/hls_linear_combination.cpp:7) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.4' (hls_linear_combination/hls_linear_combination.cpp:7) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.5' (hls_linear_combination/hls_linear_combination.cpp:7) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.6' (hls_linear_combination/hls_linear_combination.cpp:7) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.7' (hls_linear_combination/hls_linear_combination.cpp:7) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.8' (hls_linear_combination/hls_linear_combination.cpp:7) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.9' (hls_linear_combination/hls_linear_combination.cpp:7) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.10' (hls_linear_combination/hls_linear_combination.cpp:7) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.11' (hls_linear_combination/hls_linear_combination.cpp:7) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.12' (hls_linear_combination/hls_linear_combination.cpp:7) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.13' (hls_linear_combination/hls_linear_combination.cpp:7) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.14' (hls_linear_combination/hls_linear_combination.cpp:7) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.15' (hls_linear_combination/hls_linear_combination.cpp:7) in dimension 1 completely.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 1.11 seconds. CPU system time: 0.06 seconds. Elapsed time: 1.37 seconds; current allocated memory: 336.971 MB.
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 0.52 seconds. CPU system time: 0.02 seconds. Elapsed time: 0.68 seconds; current allocated memory: 353.745 MB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'hls_linear_combination' ...
WARNING: [SYN 201-107] Renaming port name 'hls_linear_combination/out' to 'hls_linear_combination/out_r' to avoid the conflict with HDL keywords or other object names.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z020-clg484-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z020-clg484-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: set_directive_top -name hls_linear_combination hls_linear_combination 
INFO: [HLS 200-1510] Running: set_directive_pipeline hls_linear_combination/LOOP_LC2 
INFO: [HLS 200-1510] Running: set_directive_pipeline hls_linear_combination/LOOP_LC1 
INFO: [HLS 200-1510] Running: set_directive_array_partition -type cyclic -factor 16 -dim 1 hls_linear_combination accumulators 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0.01 seconds. CPU system time: 0 seconds. Elapsed time: 0.02 seconds; current allocated memory: 164.402 MB.
INFO: [HLS 200-10] Analyzing design file 'hls_linear_combination/hls_linear_combination.cpp' ... 
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:117:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:118:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:119:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:120:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:121:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:151:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:152:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:153:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:154:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:155:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:156:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:157:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:158:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:159:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:160:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:210:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:211:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:212:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:239:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:240:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:241:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:242:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:243:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:244:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:280:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:281:9
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 58.97 seconds. CPU system time: 2.61 seconds. Elapsed time: 81.68 seconds; current allocated memory: 166.805 MB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 8.12 seconds. CPU system time: 0.64 seconds. Elapsed time: 13.67 seconds; current allocated memory: 168.407 MB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0 seconds; current allocated memory: 168.409 MB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0.04 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.37 seconds; current allocated memory: 169.681 MB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0.05 seconds. CPU system time: 0 seconds. Elapsed time: 0.18 seconds; current allocated memory: 168.884 MB.
INFO: [XFORM 203-510] Pipelining loop 'Loop-2' in function 'hls_linear_combination' automatically.
INFO: [XFORM 203-502] Unrolling all sub-loops inside loop 'LOOP_LC1' (hls_linear_combination/hls_linear_combination.cpp:10) in function 'hls_linear_combination' for pipelining.
INFO: [HLS 200-489] Unrolling loop 'LOOP_LC12' (hls_linear_combination/hls_linear_combination.cpp:12) in function 'hls_linear_combination' completely with a factor of 60.
INFO: [XFORM 203-101] Partitioning array 'accumulators' (hls_linear_combination/hls_linear_combination.cpp:7) in dimension 1 with a cyclic factor 16.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.0' (hls_linear_combination/hls_linear_combination.cpp:7) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.1' (hls_linear_combination/hls_linear_combination.cpp:7) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.2' (hls_linear_combination/hls_linear_combination.cpp:7) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.3' (hls_linear_combination/hls_linear_combination.cpp:7) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.4' (hls_linear_combination/hls_linear_combination.cpp:7) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.5' (hls_linear_combination/hls_linear_combination.cpp:7) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.6' (hls_linear_combination/hls_linear_combination.cpp:7) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.7' (hls_linear_combination/hls_linear_combination.cpp:7) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.8' (hls_linear_combination/hls_linear_combination.cpp:7) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.9' (hls_linear_combination/hls_linear_combination.cpp:7) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.10' (hls_linear_combination/hls_linear_combination.cpp:7) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.11' (hls_linear_combination/hls_linear_combination.cpp:7) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.12' (hls_linear_combination/hls_linear_combination.cpp:7) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.13' (hls_linear_combination/hls_linear_combination.cpp:7) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.14' (hls_linear_combination/hls_linear_combination.cpp:7) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.15' (hls_linear_combination/hls_linear_combination.cpp:7) completely based on array size.
INFO: [XFORM 203-101] Partitioning array 'accumulators.0' (hls_linear_combination/hls_linear_combination.cpp:7) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.1' (hls_linear_combination/hls_linear_combination.cpp:7) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.2' (hls_linear_combination/hls_linear_combination.cpp:7) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.3' (hls_linear_combination/hls_linear_combination.cpp:7) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.4' (hls_linear_combination/hls_linear_combination.cpp:7) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.5' (hls_linear_combination/hls_linear_combination.cpp:7) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.6' (hls_linear_combination/hls_linear_combination.cpp:7) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.7' (hls_linear_combination/hls_linear_combination.cpp:7) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.8' (hls_linear_combination/hls_linear_combination.cpp:7) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.9' (hls_linear_combination/hls_linear_combination.cpp:7) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.10' (hls_linear_combination/hls_linear_combination.cpp:7) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.11' (hls_linear_combination/hls_linear_combination.cpp:7) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.12' (hls_linear_combination/hls_linear_combination.cpp:7) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.13' (hls_linear_combination/hls_linear_combination.cpp:7) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.14' (hls_linear_combination/hls_linear_combination.cpp:7) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.15' (hls_linear_combination/hls_linear_combination.cpp:7) in dimension 1 completely.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 0.73 seconds. CPU system time: 0.05 seconds. Elapsed time: 1.19 seconds; current allocated memory: 190.949 MB.
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 0.64 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.95 seconds; current allocated memory: 185.603 MB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'hls_linear_combination' ...
WARNING: [SYN 201-107] Renaming port name 'hls_linear_combination/out' to 'hls_linear_combination/out_r' to avoid the conflict with HDL keywords or other object names.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'hls_linear_combination' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'Loop 1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 1, loop 'Loop 1'
INFO: [SCHED 204-61] Pipelining loop 'LOOP_LC1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 1, loop 'LOOP_LC1'
INFO: [SCHED 204-61] Pipelining loop 'LOOP_LC2'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 37, loop 'LOOP_LC2'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0.78 seconds. CPU system time: 0.03 seconds. Elapsed time: 1.13 seconds; current allocated memory: 187.009 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0.97 seconds. CPU system time: 0.01 seconds. Elapsed time: 1.23 seconds; current allocated memory: 189.047 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'hls_linear_combination' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-500] Setting interface mode on port 'hls_linear_combination/vecs' to 'ap_none'.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z020-clg484-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z020-clg484-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: set_directive_top -name hls_linear_combination hls_linear_combination 
INFO: [HLS 200-1510] Running: set_directive_pipeline hls_linear_combination/LOOP_LC2 
INFO: [HLS 200-1510] Running: set_directive_pipeline hls_linear_combination/LOOP_LC1 
INFO: [HLS 200-1510] Running: set_directive_array_partition -type cyclic -factor 16 -dim 1 hls_linear_combination accumulators 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0.03 seconds. CPU system time: 0 seconds. Elapsed time: 0.04 seconds; current allocated memory: 180.413 MB.
INFO: [HLS 200-10] Analyzing design file 'hls_linear_combination/hls_linear_combination.cpp' ... 
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:117:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:118:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:119:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:120:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:121:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:151:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:152:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:153:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:154:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:155:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:156:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:157:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:158:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:159:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:160:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:210:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:211:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:212:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:239:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:240:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:241:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:242:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:243:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:244:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:280:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:281:9
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 49.48 seconds. CPU system time: 2.24 seconds. Elapsed time: 59.03 seconds; current allocated memory: 182.807 MB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-178] Inlining function 'ap_fixed<34, 34, (ap_q_mode)5, (ap_o_mode)3, 0> fabs_fixed<34, 34>(ap_fixed<34, 34, (ap_q_mode)5, (ap_o_mode)3, 0>)' into 'ap_fixed<33, 33, (ap_q_mode)5, (ap_o_mode)3, 0> hls_internal::generic_remquo<33, 33>(ap_fixed<33, 33, (ap_q_mode)5, (ap_o_mode)3, 0>, ap_fixed<33, 33, (ap_q_mode)5, (ap_o_mode)3, 0>, int*)' (/wrk/ci/prod/2020.2/rdi_builds/continuous/2020_11_18_3064766/src/shared/hls/clib/hlsmath/include/hls_fmod_rem_quo_remainder_divide_apfixed.h:136:0)
INFO: [HLS 214-178] Inlining function 'ap_fixed<34, 34, (ap_q_mode)5, (ap_o_mode)3, 0> fabs_fixed<34, 34>(ap_fixed<34, 34, (ap_q_mode)5, (ap_o_mode)3, 0>)' into 'ap_fixed<33, 33, (ap_q_mode)5, (ap_o_mode)3, 0> hls_internal::generic_remquo<33, 33>(ap_fixed<33, 33, (ap_q_mode)5, (ap_o_mode)3, 0>, ap_fixed<33, 33, (ap_q_mode)5, (ap_o_mode)3, 0>, int*)' (/wrk/ci/prod/2020.2/rdi_builds/continuous/2020_11_18_3064766/src/shared/hls/clib/hlsmath/include/hls_fmod_rem_quo_remainder_divide_apfixed.h:136:0)
INFO: [HLS 214-178] Inlining function 'ap_fixed<33, 33, (ap_q_mode)5, (ap_o_mode)3, 0> hls_internal::generic_remainder<33, 33>(ap_fixed<33, 33, (ap_q_mode)5, (ap_o_mode)3, 0>, ap_fixed<33, 33, (ap_q_mode)5, (ap_o_mode)3, 0>)' into 'ap_uint<32> hls_internal::generic_remainder<32>(ap_uint<32>, ap_uint<32>)' (/wrk/ci/prod/2020.2/rdi_builds/continuous/2020_11_18_3064766/src/shared/hls/clib/hlsmath/include/hls_fmod_rem_quo_remainder_divide_apfixed.h:223:0)
INFO: [HLS 214-178] Inlining function 'ap_uint<32> hls_internal::generic_remainder<32>(ap_uint<32>, ap_uint<32>)' into 'hls::remainder(unsigned int, unsigned int)' (/wrk/ci/prod/2020.2/rdi_builds/continuous/2020_11_18_3064766/src/shared/hls/clib/hlsmath/src/c++/remainderint.cpp:67:0)
INFO: [HLS 214-178] Inlining function 'hls::remainder(unsigned int, unsigned int)' into 'hls_linear_combination(unsigned char*, unsigned char*, int, unsigned char*)' (hls_linear_combination/hls_linear_combination.cpp:4:0)
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 9.17 seconds. CPU system time: 0.68 seconds. Elapsed time: 12.63 seconds; current allocated memory: 184.990 MB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0.01 seconds. Elapsed time: 0 seconds; current allocated memory: 184.992 MB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0.43 seconds. CPU system time: 0.07 seconds. Elapsed time: 0.69 seconds; current allocated memory: 215.917 MB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0.93 seconds. CPU system time: 0.06 seconds. Elapsed time: 1.16 seconds; current allocated memory: 264.959 MB.
INFO: [XFORM 203-510] Pipelining loop 'Loop-2' in function 'hls_linear_combination' automatically.
INFO: [XFORM 203-502] Unrolling all sub-loops inside loop 'LOOP_LC1' (hls_linear_combination/hls_linear_combination.cpp:10) in function 'hls_linear_combination' for pipelining.
INFO: [HLS 200-489] Unrolling loop 'LOOP_LC12' (hls_linear_combination/hls_linear_combination.cpp:12) in function 'hls_linear_combination' completely with a factor of 60.
INFO: [XFORM 203-101] Partitioning array 'accumulators' (hls_linear_combination/hls_linear_combination.cpp:7) in dimension 1 with a cyclic factor 16.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.0' (hls_linear_combination/hls_linear_combination.cpp:7) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.1' (hls_linear_combination/hls_linear_combination.cpp:7) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.2' (hls_linear_combination/hls_linear_combination.cpp:7) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.3' (hls_linear_combination/hls_linear_combination.cpp:7) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.4' (hls_linear_combination/hls_linear_combination.cpp:7) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.5' (hls_linear_combination/hls_linear_combination.cpp:7) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.6' (hls_linear_combination/hls_linear_combination.cpp:7) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.7' (hls_linear_combination/hls_linear_combination.cpp:7) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.8' (hls_linear_combination/hls_linear_combination.cpp:7) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.9' (hls_linear_combination/hls_linear_combination.cpp:7) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.10' (hls_linear_combination/hls_linear_combination.cpp:7) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.11' (hls_linear_combination/hls_linear_combination.cpp:7) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.12' (hls_linear_combination/hls_linear_combination.cpp:7) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.13' (hls_linear_combination/hls_linear_combination.cpp:7) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.14' (hls_linear_combination/hls_linear_combination.cpp:7) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.15' (hls_linear_combination/hls_linear_combination.cpp:7) completely based on array size.
INFO: [XFORM 203-101] Partitioning array 'accumulators.0' (hls_linear_combination/hls_linear_combination.cpp:7) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.1' (hls_linear_combination/hls_linear_combination.cpp:7) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.2' (hls_linear_combination/hls_linear_combination.cpp:7) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.3' (hls_linear_combination/hls_linear_combination.cpp:7) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.4' (hls_linear_combination/hls_linear_combination.cpp:7) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.5' (hls_linear_combination/hls_linear_combination.cpp:7) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.6' (hls_linear_combination/hls_linear_combination.cpp:7) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.7' (hls_linear_combination/hls_linear_combination.cpp:7) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.8' (hls_linear_combination/hls_linear_combination.cpp:7) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.9' (hls_linear_combination/hls_linear_combination.cpp:7) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.10' (hls_linear_combination/hls_linear_combination.cpp:7) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.11' (hls_linear_combination/hls_linear_combination.cpp:7) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.12' (hls_linear_combination/hls_linear_combination.cpp:7) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.13' (hls_linear_combination/hls_linear_combination.cpp:7) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.14' (hls_linear_combination/hls_linear_combination.cpp:7) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.15' (hls_linear_combination/hls_linear_combination.cpp:7) in dimension 1 completely.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 1.62 seconds. CPU system time: 0.1 seconds. Elapsed time: 2.12 seconds; current allocated memory: 337.900 MB.
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 1.07 seconds. CPU system time: 0.03 seconds. Elapsed time: 1.3 seconds; current allocated memory: 356.962 MB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'hls_linear_combination' ...
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z020-clg484-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z020-clg484-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: set_directive_top -name hls_linear_combination hls_linear_combination 
INFO: [HLS 200-1510] Running: set_directive_pipeline hls_linear_combination/LOOP_LC2 
INFO: [HLS 200-1510] Running: set_directive_pipeline hls_linear_combination/LOOP_LC1 
INFO: [HLS 200-1510] Running: set_directive_array_partition -type cyclic -factor 16 -dim 1 hls_linear_combination accumulators 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0.01 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.04 seconds; current allocated memory: 180.403 MB.
INFO: [HLS 200-10] Analyzing design file 'hls_linear_combination/hls_linear_combination.cpp' ... 
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:117:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:118:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:119:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:120:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:121:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:151:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:152:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:153:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:154:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:155:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:156:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:157:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:158:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:159:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:160:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:210:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:211:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:212:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:239:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:240:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:241:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:242:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:243:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:244:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:280:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:281:9
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 59.98 seconds. CPU system time: 2.79 seconds. Elapsed time: 78.42 seconds; current allocated memory: 182.806 MB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-178] Inlining function 'ap_fixed<34, 34, (ap_q_mode)5, (ap_o_mode)3, 0> fabs_fixed<34, 34>(ap_fixed<34, 34, (ap_q_mode)5, (ap_o_mode)3, 0>)' into 'ap_fixed<33, 33, (ap_q_mode)5, (ap_o_mode)3, 0> hls_internal::generic_remquo<33, 33>(ap_fixed<33, 33, (ap_q_mode)5, (ap_o_mode)3, 0>, ap_fixed<33, 33, (ap_q_mode)5, (ap_o_mode)3, 0>, int*)' (/wrk/ci/prod/2020.2/rdi_builds/continuous/2020_11_18_3064766/src/shared/hls/clib/hlsmath/include/hls_fmod_rem_quo_remainder_divide_apfixed.h:136:0)
INFO: [HLS 214-178] Inlining function 'ap_fixed<34, 34, (ap_q_mode)5, (ap_o_mode)3, 0> fabs_fixed<34, 34>(ap_fixed<34, 34, (ap_q_mode)5, (ap_o_mode)3, 0>)' into 'ap_fixed<33, 33, (ap_q_mode)5, (ap_o_mode)3, 0> hls_internal::generic_remquo<33, 33>(ap_fixed<33, 33, (ap_q_mode)5, (ap_o_mode)3, 0>, ap_fixed<33, 33, (ap_q_mode)5, (ap_o_mode)3, 0>, int*)' (/wrk/ci/prod/2020.2/rdi_builds/continuous/2020_11_18_3064766/src/shared/hls/clib/hlsmath/include/hls_fmod_rem_quo_remainder_divide_apfixed.h:136:0)
INFO: [HLS 214-178] Inlining function 'ap_fixed<33, 33, (ap_q_mode)5, (ap_o_mode)3, 0> hls_internal::generic_remainder<33, 33>(ap_fixed<33, 33, (ap_q_mode)5, (ap_o_mode)3, 0>, ap_fixed<33, 33, (ap_q_mode)5, (ap_o_mode)3, 0>)' into 'ap_uint<32> hls_internal::generic_remainder<32>(ap_uint<32>, ap_uint<32>)' (/wrk/ci/prod/2020.2/rdi_builds/continuous/2020_11_18_3064766/src/shared/hls/clib/hlsmath/include/hls_fmod_rem_quo_remainder_divide_apfixed.h:223:0)
INFO: [HLS 214-178] Inlining function 'ap_uint<32> hls_internal::generic_remainder<32>(ap_uint<32>, ap_uint<32>)' into 'hls::remainder(unsigned int, unsigned int)' (/wrk/ci/prod/2020.2/rdi_builds/continuous/2020_11_18_3064766/src/shared/hls/clib/hlsmath/src/c++/remainderint.cpp:67:0)
INFO: [HLS 214-178] Inlining function 'hls::remainder(unsigned int, unsigned int)' into 'hls_linear_combination(unsigned char*, unsigned char*, int, unsigned char*)' (hls_linear_combination/hls_linear_combination.cpp:5:0)
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 10.68 seconds. CPU system time: 0.78 seconds. Elapsed time: 15.95 seconds; current allocated memory: 184.990 MB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0 seconds; current allocated memory: 184.992 MB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0.46 seconds. CPU system time: 0.04 seconds. Elapsed time: 0.77 seconds; current allocated memory: 215.915 MB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 1.02 seconds. CPU system time: 0.05 seconds. Elapsed time: 1.35 seconds; current allocated memory: 264.955 MB.
INFO: [XFORM 203-510] Pipelining loop 'Loop-2' in function 'hls_linear_combination' automatically.
INFO: [XFORM 203-502] Unrolling all sub-loops inside loop 'LOOP_LC1' (hls_linear_combination/hls_linear_combination.cpp:11) in function 'hls_linear_combination' for pipelining.
INFO: [HLS 200-489] Unrolling loop 'LOOP_LC12' (hls_linear_combination/hls_linear_combination.cpp:13) in function 'hls_linear_combination' completely with a factor of 60.
INFO: [XFORM 203-101] Partitioning array 'accumulators' (hls_linear_combination/hls_linear_combination.cpp:8) in dimension 1 with a cyclic factor 16.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.0' (hls_linear_combination/hls_linear_combination.cpp:8) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.1' (hls_linear_combination/hls_linear_combination.cpp:8) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.2' (hls_linear_combination/hls_linear_combination.cpp:8) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.3' (hls_linear_combination/hls_linear_combination.cpp:8) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.4' (hls_linear_combination/hls_linear_combination.cpp:8) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.5' (hls_linear_combination/hls_linear_combination.cpp:8) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.6' (hls_linear_combination/hls_linear_combination.cpp:8) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.7' (hls_linear_combination/hls_linear_combination.cpp:8) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.8' (hls_linear_combination/hls_linear_combination.cpp:8) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.9' (hls_linear_combination/hls_linear_combination.cpp:8) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.10' (hls_linear_combination/hls_linear_combination.cpp:8) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.11' (hls_linear_combination/hls_linear_combination.cpp:8) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.12' (hls_linear_combination/hls_linear_combination.cpp:8) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.13' (hls_linear_combination/hls_linear_combination.cpp:8) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.14' (hls_linear_combination/hls_linear_combination.cpp:8) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.15' (hls_linear_combination/hls_linear_combination.cpp:8) completely based on array size.
INFO: [XFORM 203-101] Partitioning array 'accumulators.0' (hls_linear_combination/hls_linear_combination.cpp:8) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.1' (hls_linear_combination/hls_linear_combination.cpp:8) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.2' (hls_linear_combination/hls_linear_combination.cpp:8) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.3' (hls_linear_combination/hls_linear_combination.cpp:8) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.4' (hls_linear_combination/hls_linear_combination.cpp:8) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.5' (hls_linear_combination/hls_linear_combination.cpp:8) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.6' (hls_linear_combination/hls_linear_combination.cpp:8) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.7' (hls_linear_combination/hls_linear_combination.cpp:8) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.8' (hls_linear_combination/hls_linear_combination.cpp:8) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.9' (hls_linear_combination/hls_linear_combination.cpp:8) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.10' (hls_linear_combination/hls_linear_combination.cpp:8) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.11' (hls_linear_combination/hls_linear_combination.cpp:8) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.12' (hls_linear_combination/hls_linear_combination.cpp:8) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.13' (hls_linear_combination/hls_linear_combination.cpp:8) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.14' (hls_linear_combination/hls_linear_combination.cpp:8) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.15' (hls_linear_combination/hls_linear_combination.cpp:8) in dimension 1 completely.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 1.86 seconds. CPU system time: 0.08 seconds. Elapsed time: 2.41 seconds; current allocated memory: 337.895 MB.
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 1.21 seconds. CPU system time: 0.04 seconds. Elapsed time: 1.6 seconds; current allocated memory: 356.952 MB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'hls_linear_combination' ...
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z020-clg484-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z020-clg484-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: set_directive_top -name hls_linear_combination hls_linear_combination 
INFO: [HLS 200-1510] Running: set_directive_pipeline hls_linear_combination/LOOP_LC2 
INFO: [HLS 200-1510] Running: set_directive_pipeline hls_linear_combination/LOOP_LC1 
INFO: [HLS 200-1510] Running: set_directive_array_partition -type cyclic -factor 16 -dim 1 hls_linear_combination accumulators 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.1 seconds; current allocated memory: 164.403 MB.
INFO: [HLS 200-10] Analyzing design file 'hls_linear_combination/hls_linear_combination.cpp' ... 
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:117:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:118:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:119:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:120:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:121:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:151:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:152:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:153:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:154:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:155:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:156:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:157:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:158:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:159:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:160:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:210:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:211:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:212:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:239:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:240:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:241:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:242:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:243:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:244:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:280:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:281:9
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 58.63 seconds. CPU system time: 2.4 seconds. Elapsed time: 87.37 seconds; current allocated memory: 166.806 MB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-178] Inlining function 'ap_fixed<34, 34, (ap_q_mode)5, (ap_o_mode)3, 0> fabs_fixed<34, 34>(ap_fixed<34, 34, (ap_q_mode)5, (ap_o_mode)3, 0>)' into 'ap_fixed<33, 33, (ap_q_mode)5, (ap_o_mode)3, 0> hls_internal::generic_remquo<33, 33>(ap_fixed<33, 33, (ap_q_mode)5, (ap_o_mode)3, 0>, ap_fixed<33, 33, (ap_q_mode)5, (ap_o_mode)3, 0>, int*)' (/wrk/ci/prod/2020.2/rdi_builds/continuous/2020_11_18_3064766/src/shared/hls/clib/hlsmath/include/hls_fmod_rem_quo_remainder_divide_apfixed.h:136:0)
INFO: [HLS 214-178] Inlining function 'ap_fixed<34, 34, (ap_q_mode)5, (ap_o_mode)3, 0> fabs_fixed<34, 34>(ap_fixed<34, 34, (ap_q_mode)5, (ap_o_mode)3, 0>)' into 'ap_fixed<33, 33, (ap_q_mode)5, (ap_o_mode)3, 0> hls_internal::generic_remquo<33, 33>(ap_fixed<33, 33, (ap_q_mode)5, (ap_o_mode)3, 0>, ap_fixed<33, 33, (ap_q_mode)5, (ap_o_mode)3, 0>, int*)' (/wrk/ci/prod/2020.2/rdi_builds/continuous/2020_11_18_3064766/src/shared/hls/clib/hlsmath/include/hls_fmod_rem_quo_remainder_divide_apfixed.h:136:0)
INFO: [HLS 214-178] Inlining function 'ap_fixed<33, 33, (ap_q_mode)5, (ap_o_mode)3, 0> hls_internal::generic_remainder<33, 33>(ap_fixed<33, 33, (ap_q_mode)5, (ap_o_mode)3, 0>, ap_fixed<33, 33, (ap_q_mode)5, (ap_o_mode)3, 0>)' into 'ap_uint<32> hls_internal::generic_remainder<32>(ap_uint<32>, ap_uint<32>)' (/wrk/ci/prod/2020.2/rdi_builds/continuous/2020_11_18_3064766/src/shared/hls/clib/hlsmath/include/hls_fmod_rem_quo_remainder_divide_apfixed.h:223:0)
INFO: [HLS 214-178] Inlining function 'ap_uint<32> hls_internal::generic_remainder<32>(ap_uint<32>, ap_uint<32>)' into 'hls::remainder(unsigned int, unsigned int)' (/wrk/ci/prod/2020.2/rdi_builds/continuous/2020_11_18_3064766/src/shared/hls/clib/hlsmath/src/c++/remainderint.cpp:67:0)
INFO: [HLS 214-178] Inlining function 'hls::remainder(unsigned int, unsigned int)' into 'hls_linear_combination(unsigned char*, unsigned char*, int, unsigned char*)' (hls_linear_combination/hls_linear_combination.cpp:7:0)
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 10.13 seconds. CPU system time: 0.86 seconds. Elapsed time: 18.01 seconds; current allocated memory: 168.986 MB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.01 seconds; current allocated memory: 168.987 MB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0.42 seconds. CPU system time: 0.07 seconds. Elapsed time: 1.58 seconds; current allocated memory: 199.909 MB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0.97 seconds. CPU system time: 0.07 seconds. Elapsed time: 1.48 seconds; current allocated memory: 248.949 MB.
INFO: [XFORM 203-510] Pipelining loop 'Loop-2' in function 'hls_linear_combination' automatically.
INFO: [XFORM 203-502] Unrolling all sub-loops inside loop 'LOOP_LC1' (hls_linear_combination/hls_linear_combination.cpp:13) in function 'hls_linear_combination' for pipelining.
INFO: [HLS 200-489] Unrolling loop 'LOOP_LC12' (hls_linear_combination/hls_linear_combination.cpp:15) in function 'hls_linear_combination' completely with a factor of 60.
INFO: [XFORM 203-101] Partitioning array 'accumulators' (hls_linear_combination/hls_linear_combination.cpp:10) in dimension 1 with a cyclic factor 16.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.0' (hls_linear_combination/hls_linear_combination.cpp:10) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.1' (hls_linear_combination/hls_linear_combination.cpp:10) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.2' (hls_linear_combination/hls_linear_combination.cpp:10) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.3' (hls_linear_combination/hls_linear_combination.cpp:10) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.4' (hls_linear_combination/hls_linear_combination.cpp:10) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.5' (hls_linear_combination/hls_linear_combination.cpp:10) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.6' (hls_linear_combination/hls_linear_combination.cpp:10) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.7' (hls_linear_combination/hls_linear_combination.cpp:10) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.8' (hls_linear_combination/hls_linear_combination.cpp:10) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.9' (hls_linear_combination/hls_linear_combination.cpp:10) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.10' (hls_linear_combination/hls_linear_combination.cpp:10) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.11' (hls_linear_combination/hls_linear_combination.cpp:10) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.12' (hls_linear_combination/hls_linear_combination.cpp:10) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.13' (hls_linear_combination/hls_linear_combination.cpp:10) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.14' (hls_linear_combination/hls_linear_combination.cpp:10) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.15' (hls_linear_combination/hls_linear_combination.cpp:10) completely based on array size.
INFO: [XFORM 203-101] Partitioning array 'accumulators.0' (hls_linear_combination/hls_linear_combination.cpp:10) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.1' (hls_linear_combination/hls_linear_combination.cpp:10) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.2' (hls_linear_combination/hls_linear_combination.cpp:10) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.3' (hls_linear_combination/hls_linear_combination.cpp:10) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.4' (hls_linear_combination/hls_linear_combination.cpp:10) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.5' (hls_linear_combination/hls_linear_combination.cpp:10) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.6' (hls_linear_combination/hls_linear_combination.cpp:10) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.7' (hls_linear_combination/hls_linear_combination.cpp:10) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.8' (hls_linear_combination/hls_linear_combination.cpp:10) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.9' (hls_linear_combination/hls_linear_combination.cpp:10) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.10' (hls_linear_combination/hls_linear_combination.cpp:10) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.11' (hls_linear_combination/hls_linear_combination.cpp:10) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.12' (hls_linear_combination/hls_linear_combination.cpp:10) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.13' (hls_linear_combination/hls_linear_combination.cpp:10) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.14' (hls_linear_combination/hls_linear_combination.cpp:10) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.15' (hls_linear_combination/hls_linear_combination.cpp:10) in dimension 1 completely.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 1.76 seconds. CPU system time: 0.13 seconds. Elapsed time: 2.67 seconds; current allocated memory: 321.897 MB.
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 1.2 seconds. CPU system time: 0.01 seconds. Elapsed time: 1.78 seconds; current allocated memory: 340.958 MB.
INFO: [HLS 200-10] Starting hardware synthesis ...
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z020-clg484-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z020-clg484-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: set_directive_top -name hls_linear_combination hls_linear_combination 
INFO: [HLS 200-1510] Running: set_directive_pipeline hls_linear_combination/LOOP_LC2 
INFO: [HLS 200-1510] Running: set_directive_pipeline hls_linear_combination/LOOP_LC1 
INFO: [HLS 200-1510] Running: set_directive_array_partition -type cyclic -factor 16 -dim 1 hls_linear_combination accumulators 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0.01 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.02 seconds; current allocated memory: 180.404 MB.
INFO: [HLS 200-10] Analyzing design file 'hls_linear_combination/hls_linear_combination.cpp' ... 
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:117:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:118:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:119:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:120:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:121:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:151:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:152:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:153:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:154:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:155:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:156:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:157:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:158:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:159:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:160:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:210:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:211:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:212:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:239:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:240:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:241:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:242:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:243:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:244:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:280:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:281:9
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 58.5 seconds. CPU system time: 2.87 seconds. Elapsed time: 86.2 seconds; current allocated memory: 182.807 MB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-178] Inlining function 'ap_fixed<34, 34, (ap_q_mode)5, (ap_o_mode)3, 0> fabs_fixed<34, 34>(ap_fixed<34, 34, (ap_q_mode)5, (ap_o_mode)3, 0>)' into 'ap_fixed<33, 33, (ap_q_mode)5, (ap_o_mode)3, 0> hls_internal::generic_remquo<33, 33>(ap_fixed<33, 33, (ap_q_mode)5, (ap_o_mode)3, 0>, ap_fixed<33, 33, (ap_q_mode)5, (ap_o_mode)3, 0>, int*)' (/wrk/ci/prod/2020.2/rdi_builds/continuous/2020_11_18_3064766/src/shared/hls/clib/hlsmath/include/hls_fmod_rem_quo_remainder_divide_apfixed.h:136:0)
INFO: [HLS 214-178] Inlining function 'ap_fixed<34, 34, (ap_q_mode)5, (ap_o_mode)3, 0> fabs_fixed<34, 34>(ap_fixed<34, 34, (ap_q_mode)5, (ap_o_mode)3, 0>)' into 'ap_fixed<33, 33, (ap_q_mode)5, (ap_o_mode)3, 0> hls_internal::generic_remquo<33, 33>(ap_fixed<33, 33, (ap_q_mode)5, (ap_o_mode)3, 0>, ap_fixed<33, 33, (ap_q_mode)5, (ap_o_mode)3, 0>, int*)' (/wrk/ci/prod/2020.2/rdi_builds/continuous/2020_11_18_3064766/src/shared/hls/clib/hlsmath/include/hls_fmod_rem_quo_remainder_divide_apfixed.h:136:0)
INFO: [HLS 214-178] Inlining function 'ap_fixed<33, 33, (ap_q_mode)5, (ap_o_mode)3, 0> hls_internal::generic_remainder<33, 33>(ap_fixed<33, 33, (ap_q_mode)5, (ap_o_mode)3, 0>, ap_fixed<33, 33, (ap_q_mode)5, (ap_o_mode)3, 0>)' into 'ap_uint<32> hls_internal::generic_remainder<32>(ap_uint<32>, ap_uint<32>)' (/wrk/ci/prod/2020.2/rdi_builds/continuous/2020_11_18_3064766/src/shared/hls/clib/hlsmath/include/hls_fmod_rem_quo_remainder_divide_apfixed.h:223:0)
INFO: [HLS 214-178] Inlining function 'ap_uint<32> hls_internal::generic_remainder<32>(ap_uint<32>, ap_uint<32>)' into 'hls::remainder(unsigned int, unsigned int)' (/wrk/ci/prod/2020.2/rdi_builds/continuous/2020_11_18_3064766/src/shared/hls/clib/hlsmath/src/c++/remainderint.cpp:67:0)
INFO: [HLS 214-178] Inlining function 'hls::remainder(unsigned int, unsigned int)' into 'hls_linear_combination(unsigned char*, unsigned char*, int, unsigned char*)' (hls_linear_combination/hls_linear_combination.cpp:7:0)
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 10.35 seconds. CPU system time: 0.87 seconds. Elapsed time: 21.4 seconds; current allocated memory: 184.973 MB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0 seconds; current allocated memory: 184.974 MB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0.4 seconds. CPU system time: 0.08 seconds. Elapsed time: 1.51 seconds; current allocated memory: 215.894 MB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0.95 seconds. CPU system time: 0.06 seconds. Elapsed time: 1.53 seconds; current allocated memory: 264.932 MB.
INFO: [XFORM 203-502] Unrolling all sub-loops inside loop 'LOOP_LC1' (hls_linear_combination/hls_linear_combination.cpp:13) in function 'hls_linear_combination' for pipelining.
INFO: [HLS 200-489] Unrolling loop 'LOOP_LC12' (hls_linear_combination/hls_linear_combination.cpp:15) in function 'hls_linear_combination' completely with a factor of 60.
INFO: [XFORM 203-101] Partitioning array 'accumulators' (hls_linear_combination/hls_linear_combination.cpp:10) in dimension 1 with a cyclic factor 16.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.0' (hls_linear_combination/hls_linear_combination.cpp:10) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.1' (hls_linear_combination/hls_linear_combination.cpp:10) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.2' (hls_linear_combination/hls_linear_combination.cpp:10) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.3' (hls_linear_combination/hls_linear_combination.cpp:10) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.4' (hls_linear_combination/hls_linear_combination.cpp:10) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.5' (hls_linear_combination/hls_linear_combination.cpp:10) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.6' (hls_linear_combination/hls_linear_combination.cpp:10) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.7' (hls_linear_combination/hls_linear_combination.cpp:10) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.8' (hls_linear_combination/hls_linear_combination.cpp:10) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.9' (hls_linear_combination/hls_linear_combination.cpp:10) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.10' (hls_linear_combination/hls_linear_combination.cpp:10) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.11' (hls_linear_combination/hls_linear_combination.cpp:10) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.12' (hls_linear_combination/hls_linear_combination.cpp:10) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.13' (hls_linear_combination/hls_linear_combination.cpp:10) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.14' (hls_linear_combination/hls_linear_combination.cpp:10) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.15' (hls_linear_combination/hls_linear_combination.cpp:10) completely based on array size.
INFO: [XFORM 203-101] Partitioning array 'accumulators.0' (hls_linear_combination/hls_linear_combination.cpp:10) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.1' (hls_linear_combination/hls_linear_combination.cpp:10) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.2' (hls_linear_combination/hls_linear_combination.cpp:10) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.3' (hls_linear_combination/hls_linear_combination.cpp:10) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.4' (hls_linear_combination/hls_linear_combination.cpp:10) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.5' (hls_linear_combination/hls_linear_combination.cpp:10) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.6' (hls_linear_combination/hls_linear_combination.cpp:10) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.7' (hls_linear_combination/hls_linear_combination.cpp:10) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.8' (hls_linear_combination/hls_linear_combination.cpp:10) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.9' (hls_linear_combination/hls_linear_combination.cpp:10) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.10' (hls_linear_combination/hls_linear_combination.cpp:10) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.11' (hls_linear_combination/hls_linear_combination.cpp:10) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.12' (hls_linear_combination/hls_linear_combination.cpp:10) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.13' (hls_linear_combination/hls_linear_combination.cpp:10) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.14' (hls_linear_combination/hls_linear_combination.cpp:10) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.15' (hls_linear_combination/hls_linear_combination.cpp:10) in dimension 1 completely.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 1.57 seconds. CPU system time: 0.07 seconds. Elapsed time: 2.61 seconds; current allocated memory: 336.973 MB.
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 0.63 seconds. CPU system time: 0.04 seconds. Elapsed time: 0.87 seconds; current allocated memory: 353.748 MB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'hls_linear_combination' ...
WARNING: [SYN 201-107] Renaming port name 'hls_linear_combination/out' to 'hls_linear_combination/out_r' to avoid the conflict with HDL keywords or other object names.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z020-clg484-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z020-clg484-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: set_directive_top -name hls_linear_combination hls_linear_combination 
INFO: [HLS 200-1510] Running: set_directive_pipeline hls_linear_combination/LOOP_LC2 
INFO: [HLS 200-1510] Running: set_directive_pipeline hls_linear_combination/LOOP_LC1 
INFO: [HLS 200-1510] Running: set_directive_array_partition -type cyclic -factor 16 -dim 1 hls_linear_combination accumulators 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0.02 seconds. CPU system time: 0 seconds. Elapsed time: 0.04 seconds; current allocated memory: 180.403 MB.
INFO: [HLS 200-10] Analyzing design file 'hls_linear_combination/hls_linear_combination.cpp' ... 
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:117:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:118:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:119:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:120:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:121:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:151:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:152:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:153:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:154:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:155:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:156:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:157:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:158:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:159:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:160:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:210:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:211:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:212:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:239:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:240:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:241:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:242:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:243:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:244:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:280:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:281:9
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 58.6 seconds. CPU system time: 2.6 seconds. Elapsed time: 83.72 seconds; current allocated memory: 182.806 MB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 8.01 seconds. CPU system time: 0.65 seconds. Elapsed time: 12.63 seconds; current allocated memory: 184.391 MB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0 seconds; current allocated memory: 184.392 MB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0.03 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.12 seconds; current allocated memory: 185.674 MB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0.05 seconds. CPU system time: 0 seconds. Elapsed time: 0.07 seconds; current allocated memory: 184.860 MB.
INFO: [XFORM 203-502] Unrolling all sub-loops inside loop 'LOOP_LC1' (hls_linear_combination/hls_linear_combination.cpp:13) in function 'hls_linear_combination' for pipelining.
INFO: [HLS 200-489] Unrolling loop 'LOOP_LC12' (hls_linear_combination/hls_linear_combination.cpp:15) in function 'hls_linear_combination' completely with a factor of 60.
INFO: [XFORM 203-101] Partitioning array 'accumulators' (hls_linear_combination/hls_linear_combination.cpp:10) in dimension 1 with a cyclic factor 16.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.0' (hls_linear_combination/hls_linear_combination.cpp:10) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.1' (hls_linear_combination/hls_linear_combination.cpp:10) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.2' (hls_linear_combination/hls_linear_combination.cpp:10) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.3' (hls_linear_combination/hls_linear_combination.cpp:10) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.4' (hls_linear_combination/hls_linear_combination.cpp:10) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.5' (hls_linear_combination/hls_linear_combination.cpp:10) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.6' (hls_linear_combination/hls_linear_combination.cpp:10) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.7' (hls_linear_combination/hls_linear_combination.cpp:10) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.8' (hls_linear_combination/hls_linear_combination.cpp:10) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.9' (hls_linear_combination/hls_linear_combination.cpp:10) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.10' (hls_linear_combination/hls_linear_combination.cpp:10) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.11' (hls_linear_combination/hls_linear_combination.cpp:10) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.12' (hls_linear_combination/hls_linear_combination.cpp:10) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.13' (hls_linear_combination/hls_linear_combination.cpp:10) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.14' (hls_linear_combination/hls_linear_combination.cpp:10) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.15' (hls_linear_combination/hls_linear_combination.cpp:10) completely based on array size.
INFO: [XFORM 203-101] Partitioning array 'accumulators.0' (hls_linear_combination/hls_linear_combination.cpp:10) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.1' (hls_linear_combination/hls_linear_combination.cpp:10) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.2' (hls_linear_combination/hls_linear_combination.cpp:10) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.3' (hls_linear_combination/hls_linear_combination.cpp:10) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.4' (hls_linear_combination/hls_linear_combination.cpp:10) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.5' (hls_linear_combination/hls_linear_combination.cpp:10) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.6' (hls_linear_combination/hls_linear_combination.cpp:10) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.7' (hls_linear_combination/hls_linear_combination.cpp:10) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.8' (hls_linear_combination/hls_linear_combination.cpp:10) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.9' (hls_linear_combination/hls_linear_combination.cpp:10) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.10' (hls_linear_combination/hls_linear_combination.cpp:10) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.11' (hls_linear_combination/hls_linear_combination.cpp:10) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.12' (hls_linear_combination/hls_linear_combination.cpp:10) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.13' (hls_linear_combination/hls_linear_combination.cpp:10) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.14' (hls_linear_combination/hls_linear_combination.cpp:10) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.15' (hls_linear_combination/hls_linear_combination.cpp:10) in dimension 1 completely.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 0.43 seconds. CPU system time: 0.04 seconds. Elapsed time: 0.63 seconds; current allocated memory: 206.021 MB.
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 0.18 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.21 seconds; current allocated memory: 198.406 MB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'hls_linear_combination' ...
WARNING: [SYN 201-107] Renaming port name 'hls_linear_combination/out' to 'hls_linear_combination/out_r' to avoid the conflict with HDL keywords or other object names.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'hls_linear_combination' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'LOOP_LC1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 1, loop 'LOOP_LC1'
INFO: [SCHED 204-61] Pipelining loop 'LOOP_LC2'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 37, loop 'LOOP_LC2'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0.28 seconds. CPU system time: 0.02 seconds. Elapsed time: 0.52 seconds; current allocated memory: 198.850 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0.54 seconds. CPU system time: 0.02 seconds. Elapsed time: 0.85 seconds; current allocated memory: 199.399 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'hls_linear_combination' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-500] Setting interface mode on port 'hls_linear_combination/vecs' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'hls_linear_combination/coeffs' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'hls_linear_combination/len' to 'ap_none'.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z020-clg484-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z020-clg484-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: set_directive_top -name hls_linear_combination hls_linear_combination 
INFO: [HLS 200-1510] Running: set_directive_pipeline hls_linear_combination/LOOP_LC2 
INFO: [HLS 200-1510] Running: set_directive_pipeline hls_linear_combination/LOOP_LC1 
INFO: [HLS 200-1510] Running: set_directive_array_partition -type cyclic -factor 16 -dim 1 hls_linear_combination accumulators 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0.01 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.02 seconds; current allocated memory: 180.403 MB.
INFO: [HLS 200-10] Analyzing design file 'hls_linear_combination/hls_linear_combination.cpp' ... 
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:117:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:118:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:119:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:120:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:121:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:151:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:152:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:153:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:154:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:155:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:156:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:157:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:158:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:159:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:160:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:210:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:211:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:212:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:239:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:240:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:241:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:242:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:243:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:244:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:280:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:281:9
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 46.61 seconds. CPU system time: 2.01 seconds. Elapsed time: 60.06 seconds; current allocated memory: 182.823 MB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-178] Inlining function 'custom_mod(unsigned int, unsigned int)' into 'hls_linear_combination(unsigned char*, unsigned char*, int, unsigned char*)' (hls_linear_combination/hls_linear_combination.cpp:15:0)
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 6.86 seconds. CPU system time: 0.68 seconds. Elapsed time: 11.46 seconds; current allocated memory: 184.392 MB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0 seconds; current allocated memory: 184.393 MB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0.04 seconds. CPU system time: 0 seconds. Elapsed time: 0.34 seconds; current allocated memory: 185.702 MB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0.05 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.11 seconds; current allocated memory: 184.888 MB.
INFO: [XFORM 203-502] Unrolling all sub-loops inside loop 'LOOP_LC1' (hls_linear_combination/hls_linear_combination.cpp:21) in function 'hls_linear_combination' for pipelining.
INFO: [HLS 200-489] Unrolling loop 'LOOP_LC12' (hls_linear_combination/hls_linear_combination.cpp:23) in function 'hls_linear_combination' completely with a factor of 60.
INFO: [XFORM 203-101] Partitioning array 'accumulators' (hls_linear_combination/hls_linear_combination.cpp:18) in dimension 1 with a cyclic factor 16.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.0' (hls_linear_combination/hls_linear_combination.cpp:18) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.1' (hls_linear_combination/hls_linear_combination.cpp:18) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.2' (hls_linear_combination/hls_linear_combination.cpp:18) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.3' (hls_linear_combination/hls_linear_combination.cpp:18) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.4' (hls_linear_combination/hls_linear_combination.cpp:18) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.5' (hls_linear_combination/hls_linear_combination.cpp:18) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.6' (hls_linear_combination/hls_linear_combination.cpp:18) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.7' (hls_linear_combination/hls_linear_combination.cpp:18) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.8' (hls_linear_combination/hls_linear_combination.cpp:18) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.9' (hls_linear_combination/hls_linear_combination.cpp:18) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.10' (hls_linear_combination/hls_linear_combination.cpp:18) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.11' (hls_linear_combination/hls_linear_combination.cpp:18) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.12' (hls_linear_combination/hls_linear_combination.cpp:18) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.13' (hls_linear_combination/hls_linear_combination.cpp:18) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.14' (hls_linear_combination/hls_linear_combination.cpp:18) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.15' (hls_linear_combination/hls_linear_combination.cpp:18) completely based on array size.
INFO: [XFORM 203-101] Partitioning array 'accumulators.0' (hls_linear_combination/hls_linear_combination.cpp:18) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.1' (hls_linear_combination/hls_linear_combination.cpp:18) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.2' (hls_linear_combination/hls_linear_combination.cpp:18) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.3' (hls_linear_combination/hls_linear_combination.cpp:18) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.4' (hls_linear_combination/hls_linear_combination.cpp:18) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.5' (hls_linear_combination/hls_linear_combination.cpp:18) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.6' (hls_linear_combination/hls_linear_combination.cpp:18) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.7' (hls_linear_combination/hls_linear_combination.cpp:18) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.8' (hls_linear_combination/hls_linear_combination.cpp:18) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.9' (hls_linear_combination/hls_linear_combination.cpp:18) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.10' (hls_linear_combination/hls_linear_combination.cpp:18) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.11' (hls_linear_combination/hls_linear_combination.cpp:18) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.12' (hls_linear_combination/hls_linear_combination.cpp:18) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.13' (hls_linear_combination/hls_linear_combination.cpp:18) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.14' (hls_linear_combination/hls_linear_combination.cpp:18) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.15' (hls_linear_combination/hls_linear_combination.cpp:18) in dimension 1 completely.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 0.46 seconds. CPU system time: 0.02 seconds. Elapsed time: 0.63 seconds; current allocated memory: 206.073 MB.
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 0.19 seconds. CPU system time: 0 seconds. Elapsed time: 0.3 seconds; current allocated memory: 198.594 MB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'hls_linear_combination' ...
WARNING: [SYN 201-107] Renaming port name 'hls_linear_combination/out' to 'hls_linear_combination/out_r' to avoid the conflict with HDL keywords or other object names.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'hls_linear_combination' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'LOOP_LC1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 1, loop 'LOOP_LC1'
INFO: [SCHED 204-61] Pipelining loop 'LOOP_LC2'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 39, loop 'LOOP_LC2'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0.29 seconds. CPU system time: 0.02 seconds. Elapsed time: 0.46 seconds; current allocated memory: 199.086 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0.54 seconds. CPU system time: 0 seconds. Elapsed time: 0.68 seconds; current allocated memory: 199.717 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'hls_linear_combination' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-500] Setting interface mode on port 'hls_linear_combination/vecs' to 'ap_none'.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z020-clg484-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z020-clg484-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: set_directive_top -name hls_linear_combination hls_linear_combination 
INFO: [HLS 200-1510] Running: set_directive_pipeline hls_linear_combination/LOOP_LC2 
INFO: [HLS 200-1510] Running: set_directive_pipeline hls_linear_combination/LOOP_LC1 
INFO: [HLS 200-1510] Running: set_directive_array_partition -type cyclic -factor 16 -dim 1 hls_linear_combination accumulators 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0.02 seconds. CPU system time: 0 seconds. Elapsed time: 0.01 seconds; current allocated memory: 164.412 MB.
INFO: [HLS 200-10] Analyzing design file 'hls_linear_combination/hls_linear_combination.cpp' ... 
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:117:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:118:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:119:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:120:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:121:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:151:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:152:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:153:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:154:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:155:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:156:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:157:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:158:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:159:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:160:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:210:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:211:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:212:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:239:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:240:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:241:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:242:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:243:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:244:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:280:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:281:9
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 58.72 seconds. CPU system time: 2.46 seconds. Elapsed time: 78.64 seconds; current allocated memory: 166.806 MB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 8.14 seconds. CPU system time: 0.58 seconds. Elapsed time: 11.61 seconds; current allocated memory: 168.405 MB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0 seconds; current allocated memory: 168.407 MB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0.04 seconds. CPU system time: 0 seconds. Elapsed time: 0.04 seconds; current allocated memory: 169.678 MB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0.06 seconds. CPU system time: 0 seconds. Elapsed time: 0.09 seconds; current allocated memory: 168.878 MB.
INFO: [XFORM 203-510] Pipelining loop 'Loop-2' in function 'hls_linear_combination' automatically.
INFO: [XFORM 203-502] Unrolling all sub-loops inside loop 'LOOP_LC1' (hls_linear_combination/hls_linear_combination.cpp:21) in function 'hls_linear_combination' for pipelining.
INFO: [HLS 200-489] Unrolling loop 'LOOP_LC12' (hls_linear_combination/hls_linear_combination.cpp:23) in function 'hls_linear_combination' completely with a factor of 60.
INFO: [XFORM 203-101] Partitioning array 'accumulators' (hls_linear_combination/hls_linear_combination.cpp:18) in dimension 1 with a cyclic factor 16.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.0' (hls_linear_combination/hls_linear_combination.cpp:18) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.1' (hls_linear_combination/hls_linear_combination.cpp:18) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.2' (hls_linear_combination/hls_linear_combination.cpp:18) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.3' (hls_linear_combination/hls_linear_combination.cpp:18) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.4' (hls_linear_combination/hls_linear_combination.cpp:18) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.5' (hls_linear_combination/hls_linear_combination.cpp:18) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.6' (hls_linear_combination/hls_linear_combination.cpp:18) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.7' (hls_linear_combination/hls_linear_combination.cpp:18) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.8' (hls_linear_combination/hls_linear_combination.cpp:18) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.9' (hls_linear_combination/hls_linear_combination.cpp:18) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.10' (hls_linear_combination/hls_linear_combination.cpp:18) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.11' (hls_linear_combination/hls_linear_combination.cpp:18) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.12' (hls_linear_combination/hls_linear_combination.cpp:18) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.13' (hls_linear_combination/hls_linear_combination.cpp:18) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.14' (hls_linear_combination/hls_linear_combination.cpp:18) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.15' (hls_linear_combination/hls_linear_combination.cpp:18) completely based on array size.
INFO: [XFORM 203-101] Partitioning array 'accumulators.0' (hls_linear_combination/hls_linear_combination.cpp:18) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.1' (hls_linear_combination/hls_linear_combination.cpp:18) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.2' (hls_linear_combination/hls_linear_combination.cpp:18) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.3' (hls_linear_combination/hls_linear_combination.cpp:18) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.4' (hls_linear_combination/hls_linear_combination.cpp:18) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.5' (hls_linear_combination/hls_linear_combination.cpp:18) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.6' (hls_linear_combination/hls_linear_combination.cpp:18) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.7' (hls_linear_combination/hls_linear_combination.cpp:18) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.8' (hls_linear_combination/hls_linear_combination.cpp:18) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.9' (hls_linear_combination/hls_linear_combination.cpp:18) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.10' (hls_linear_combination/hls_linear_combination.cpp:18) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.11' (hls_linear_combination/hls_linear_combination.cpp:18) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.12' (hls_linear_combination/hls_linear_combination.cpp:18) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.13' (hls_linear_combination/hls_linear_combination.cpp:18) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.14' (hls_linear_combination/hls_linear_combination.cpp:18) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.15' (hls_linear_combination/hls_linear_combination.cpp:18) in dimension 1 completely.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 0.79 seconds. CPU system time: 0.03 seconds. Elapsed time: 1.05 seconds; current allocated memory: 190.949 MB.
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 0.68 seconds. CPU system time: 0 seconds. Elapsed time: 0.92 seconds; current allocated memory: 185.595 MB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'hls_linear_combination' ...
WARNING: [SYN 201-107] Renaming port name 'hls_linear_combination/out' to 'hls_linear_combination/out_r' to avoid the conflict with HDL keywords or other object names.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'hls_linear_combination' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'Loop 1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 1, loop 'Loop 1'
INFO: [SCHED 204-61] Pipelining loop 'LOOP_LC1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 1, loop 'LOOP_LC1'
INFO: [SCHED 204-61] Pipelining loop 'LOOP_LC2'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 37, loop 'LOOP_LC2'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0.8 seconds. CPU system time: 0.02 seconds. Elapsed time: 1.07 seconds; current allocated memory: 187.002 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 1.01 seconds. CPU system time: 0.01 seconds. Elapsed time: 1.52 seconds; current allocated memory: 189.041 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'hls_linear_combination' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-500] Setting interface mode on port 'hls_linear_combination/vecs' to 'ap_none'.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z020-clg484-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z020-clg484-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: set_directive_top -name hls_linear_combination hls_linear_combination 
INFO: [HLS 200-1510] Running: set_directive_pipeline hls_linear_combination/LOOP_LC2 
INFO: [HLS 200-1510] Running: set_directive_pipeline hls_linear_combination/LOOP_LC1 
INFO: [HLS 200-1510] Running: set_directive_array_partition -type cyclic -factor 16 -dim 1 hls_linear_combination accumulators 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0.01 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.04 seconds; current allocated memory: 180.403 MB.
INFO: [HLS 200-10] Analyzing design file 'hls_linear_combination/hls_linear_combination.cpp' ... 
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:117:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:118:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:119:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:120:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:121:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:151:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:152:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:153:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:154:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:155:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:156:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:157:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:158:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:159:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:160:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:210:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:211:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:212:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:239:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:240:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:241:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:242:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:243:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:244:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:280:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:281:9
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 51 seconds. CPU system time: 2.18 seconds. Elapsed time: 66.41 seconds; current allocated memory: 182.806 MB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 7.44 seconds. CPU system time: 0.52 seconds. Elapsed time: 9.7 seconds; current allocated memory: 184.389 MB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0 seconds; current allocated memory: 184.390 MB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0.03 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.09 seconds; current allocated memory: 185.657 MB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0.04 seconds. CPU system time: 0 seconds. Elapsed time: 0.06 seconds; current allocated memory: 184.857 MB.
INFO: [XFORM 203-502] Unrolling all sub-loops inside loop 'LOOP_LC1' (hls_linear_combination/hls_linear_combination.cpp:21) in function 'hls_linear_combination' for pipelining.
INFO: [HLS 200-489] Unrolling loop 'LOOP_LC12' (hls_linear_combination/hls_linear_combination.cpp:24) in function 'hls_linear_combination' completely with a factor of 60.
INFO: [XFORM 203-101] Partitioning array 'accumulators' (hls_linear_combination/hls_linear_combination.cpp:18) in dimension 1 with a cyclic factor 16.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.0' (hls_linear_combination/hls_linear_combination.cpp:18) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.1' (hls_linear_combination/hls_linear_combination.cpp:18) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.2' (hls_linear_combination/hls_linear_combination.cpp:18) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.3' (hls_linear_combination/hls_linear_combination.cpp:18) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.4' (hls_linear_combination/hls_linear_combination.cpp:18) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.5' (hls_linear_combination/hls_linear_combination.cpp:18) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.6' (hls_linear_combination/hls_linear_combination.cpp:18) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.7' (hls_linear_combination/hls_linear_combination.cpp:18) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.8' (hls_linear_combination/hls_linear_combination.cpp:18) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.9' (hls_linear_combination/hls_linear_combination.cpp:18) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.10' (hls_linear_combination/hls_linear_combination.cpp:18) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.11' (hls_linear_combination/hls_linear_combination.cpp:18) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.12' (hls_linear_combination/hls_linear_combination.cpp:18) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.13' (hls_linear_combination/hls_linear_combination.cpp:18) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.14' (hls_linear_combination/hls_linear_combination.cpp:18) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.15' (hls_linear_combination/hls_linear_combination.cpp:18) completely based on array size.
INFO: [XFORM 203-101] Partitioning array 'accumulators.0' (hls_linear_combination/hls_linear_combination.cpp:18) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.1' (hls_linear_combination/hls_linear_combination.cpp:18) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.2' (hls_linear_combination/hls_linear_combination.cpp:18) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.3' (hls_linear_combination/hls_linear_combination.cpp:18) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.4' (hls_linear_combination/hls_linear_combination.cpp:18) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.5' (hls_linear_combination/hls_linear_combination.cpp:18) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.6' (hls_linear_combination/hls_linear_combination.cpp:18) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.7' (hls_linear_combination/hls_linear_combination.cpp:18) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.8' (hls_linear_combination/hls_linear_combination.cpp:18) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.9' (hls_linear_combination/hls_linear_combination.cpp:18) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.10' (hls_linear_combination/hls_linear_combination.cpp:18) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.11' (hls_linear_combination/hls_linear_combination.cpp:18) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.12' (hls_linear_combination/hls_linear_combination.cpp:18) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.13' (hls_linear_combination/hls_linear_combination.cpp:18) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.14' (hls_linear_combination/hls_linear_combination.cpp:18) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.15' (hls_linear_combination/hls_linear_combination.cpp:18) in dimension 1 completely.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 0.46 seconds. CPU system time: 0.03 seconds. Elapsed time: 0.66 seconds; current allocated memory: 206.004 MB.
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 0.18 seconds. CPU system time: 0 seconds. Elapsed time: 0.24 seconds; current allocated memory: 198.385 MB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'hls_linear_combination' ...
WARNING: [SYN 201-107] Renaming port name 'hls_linear_combination/out' to 'hls_linear_combination/out_r' to avoid the conflict with HDL keywords or other object names.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'hls_linear_combination' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'LOOP_LC1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 1, loop 'LOOP_LC1'
INFO: [SCHED 204-61] Pipelining loop 'LOOP_LC2'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 37, loop 'LOOP_LC2'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0.25 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.33 seconds; current allocated memory: 198.832 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0.48 seconds. CPU system time: 0 seconds. Elapsed time: 0.63 seconds; current allocated memory: 199.378 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'hls_linear_combination' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-500] Setting interface mode on port 'hls_linear_combination/vecs' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'hls_linear_combination/coeffs' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'hls_linear_combination/len' to 'ap_none'.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z020-clg484-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z020-clg484-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: set_directive_top -name hls_linear_combination hls_linear_combination 
INFO: [HLS 200-1510] Running: set_directive_pipeline hls_linear_combination/LOOP_LC2 
INFO: [HLS 200-1510] Running: set_directive_pipeline hls_linear_combination/LOOP_LC1 
INFO: [HLS 200-1510] Running: set_directive_array_partition -type cyclic -factor 16 -dim 1 hls_linear_combination accumulators 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0.03 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.04 seconds; current allocated memory: 164.412 MB.
INFO: [HLS 200-10] Analyzing design file 'hls_linear_combination/hls_linear_combination.cpp' ... 
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:117:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:118:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:119:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:120:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:121:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:151:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:152:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:153:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:154:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:155:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:156:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:157:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:158:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:159:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:160:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:210:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:211:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:212:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:239:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:240:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:241:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:242:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:243:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:244:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:280:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:281:9
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 54.87 seconds. CPU system time: 2.28 seconds. Elapsed time: 75.07 seconds; current allocated memory: 166.806 MB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 7.19 seconds. CPU system time: 0.57 seconds. Elapsed time: 9.29 seconds; current allocated memory: 168.374 MB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0 seconds; current allocated memory: 168.375 MB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0.03 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.05 seconds; current allocated memory: 169.629 MB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0.05 seconds. CPU system time: 0 seconds. Elapsed time: 0.09 seconds; current allocated memory: 168.842 MB.
INFO: [XFORM 203-502] Unrolling all sub-loops inside loop 'LOOP_LC1' (hls_linear_combination/hls_linear_combination.cpp:21) in function 'hls_linear_combination' for pipelining.
INFO: [HLS 200-489] Unrolling loop 'LOOP_LC12' (hls_linear_combination/hls_linear_combination.cpp:23) in function 'hls_linear_combination' completely with a factor of 60.
INFO: [XFORM 203-101] Partitioning array 'accumulators'  in dimension 1 with a cyclic factor 16.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.0' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.1' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.2' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.3' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.4' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.5' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.6' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.7' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.8' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.9' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.10' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.11' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.12' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.13' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.14' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.15' completely based on array size.
INFO: [XFORM 203-101] Partitioning array 'accumulators.0' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.1' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.2' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.3' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.4' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.5' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.6' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.7' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.8' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.9' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.10' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.11' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.12' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.13' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.14' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.15' in dimension 1 completely.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 0.52 seconds. CPU system time: 0.04 seconds. Elapsed time: 0.68 seconds; current allocated memory: 190.016 MB.
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 0.37 seconds. CPU system time: 0 seconds. Elapsed time: 0.47 seconds; current allocated memory: 184.131 MB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'hls_linear_combination' ...
WARNING: [SYN 201-107] Renaming port name 'hls_linear_combination/out' to 'hls_linear_combination/out_r' to avoid the conflict with HDL keywords or other object names.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'hls_linear_combination' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'LOOP_LC1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 1, loop 'LOOP_LC1'
INFO: [SCHED 204-61] Pipelining loop 'LOOP_LC2'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 37, loop 'LOOP_LC2'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0.58 seconds. CPU system time: 0.03 seconds. Elapsed time: 0.74 seconds; current allocated memory: 185.350 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0.81 seconds. CPU system time: 0.02 seconds. Elapsed time: 0.98 seconds; current allocated memory: 186.667 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'hls_linear_combination' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-500] Setting interface mode on port 'hls_linear_combination/vecs' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'hls_linear_combination/coeffs' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'hls_linear_combination/len' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'hls_linear_combination/out_r' to 'ap_vld'.
INFO: [RTGEN 206-500] Setting interface mode on function 'hls_linear_combination' to 'ap_ctrl_hs'.
WARNING: [RTGEN 206-101] Register 'accumulators_15_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_15_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_15_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_0_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_0_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_0_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_0_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_1_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_1_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_1_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_1_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_2_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_2_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_2_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_2_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_3_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_3_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_3_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_3_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_4_0' is power-on initialization.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z020-clg484-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z020-clg484-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: set_directive_top -name hls_linear_combination hls_linear_combination 
INFO: [HLS 200-1510] Running: set_directive_pipeline hls_linear_combination/LOOP_LC2 
INFO: [HLS 200-1510] Running: set_directive_pipeline hls_linear_combination/LOOP_LC1 
INFO: [HLS 200-1510] Running: set_directive_array_partition -type cyclic -factor 16 -dim 1 hls_linear_combination accumulators 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0.02 seconds. CPU system time: 0 seconds. Elapsed time: 0.02 seconds; current allocated memory: 180.377 MB.
INFO: [HLS 200-10] Analyzing design file 'hls_linear_combination/hls_linear_combination.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 0.33 seconds. CPU system time: 0.16 seconds. Elapsed time: 0.62 seconds; current allocated memory: 180.692 MB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 7.71 seconds. CPU system time: 0.57 seconds. Elapsed time: 10.07 seconds; current allocated memory: 183.369 MB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0 seconds; current allocated memory: 183.370 MB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0.04 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.05 seconds; current allocated memory: 184.641 MB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0.05 seconds. CPU system time: 0 seconds. Elapsed time: 0.08 seconds; current allocated memory: 183.838 MB.
INFO: [XFORM 203-502] Unrolling all sub-loops inside loop 'LOOP_LC1' (hls_linear_combination/hls_linear_combination.cpp:12) in function 'hls_linear_combination' for pipelining.
INFO: [HLS 200-489] Unrolling loop 'LOOP_LC12' (hls_linear_combination/hls_linear_combination.cpp:14) in function 'hls_linear_combination' completely with a factor of 60.
INFO: [XFORM 203-101] Partitioning array 'accumulators'  in dimension 1 with a cyclic factor 16.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.0' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.1' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.2' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.3' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.4' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.5' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.6' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.7' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.8' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.9' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.10' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.11' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.12' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.13' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.14' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.15' completely based on array size.
INFO: [XFORM 203-101] Partitioning array 'accumulators.0' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.1' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.2' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.3' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.4' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.5' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.6' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.7' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.8' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.9' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.10' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.11' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.12' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.13' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.14' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.15' in dimension 1 completely.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 0.48 seconds. CPU system time: 0.04 seconds. Elapsed time: 0.69 seconds; current allocated memory: 205.029 MB.
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 0.36 seconds. CPU system time: 0.02 seconds. Elapsed time: 0.46 seconds; current allocated memory: 199.130 MB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'hls_linear_combination' ...
WARNING: [SYN 201-107] Renaming port name 'hls_linear_combination/out' to 'hls_linear_combination/out_r' to avoid the conflict with HDL keywords or other object names.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'hls_linear_combination' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'LOOP_LC1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 1, loop 'LOOP_LC1'
INFO: [SCHED 204-61] Pipelining loop 'LOOP_LC2'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 37, loop 'LOOP_LC2'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0.56 seconds. CPU system time: 0 seconds. Elapsed time: 0.78 seconds; current allocated memory: 200.396 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0.78 seconds. CPU system time: 0.04 seconds. Elapsed time: 1.04 seconds; current allocated memory: 201.741 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'hls_linear_combination' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-500] Setting interface mode on port 'hls_linear_combination/vecs' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'hls_linear_combination/coeffs' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'hls_linear_combination/len' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'hls_linear_combination/out_r' to 'ap_vld'.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z020-clg484-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z020-clg484-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: set_directive_top -name hls_linear_combination hls_linear_combination 
INFO: [HLS 200-1510] Running: set_directive_pipeline hls_linear_combination/LOOP_LC2 
INFO: [HLS 200-1510] Running: set_directive_pipeline hls_linear_combination/LOOP_LC1 
INFO: [HLS 200-1510] Running: set_directive_array_partition -type cyclic -factor 16 -dim 1 hls_linear_combination accumulators 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0.01 seconds. CPU system time: 0 seconds. Elapsed time: 0.03 seconds; current allocated memory: 180.377 MB.
INFO: [HLS 200-10] Analyzing design file 'hls_linear_combination/hls_linear_combination.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 0.34 seconds. CPU system time: 0.18 seconds. Elapsed time: 0.82 seconds; current allocated memory: 180.692 MB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 8.22 seconds. CPU system time: 0.6 seconds. Elapsed time: 13.5 seconds; current allocated memory: 183.369 MB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0 seconds; current allocated memory: 183.370 MB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0.03 seconds. CPU system time: 0 seconds. Elapsed time: 0.09 seconds; current allocated memory: 184.639 MB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0.05 seconds. CPU system time: 0 seconds. Elapsed time: 0.1 seconds; current allocated memory: 183.840 MB.
INFO: [XFORM 203-502] Unrolling all sub-loops inside loop 'LOOP_LC1' (hls_linear_combination/hls_linear_combination.cpp:12) in function 'hls_linear_combination' for pipelining.
INFO: [HLS 200-489] Unrolling loop 'LOOP_LC12' (hls_linear_combination/hls_linear_combination.cpp:14) in function 'hls_linear_combination' completely with a factor of 60.
INFO: [XFORM 203-101] Partitioning array 'accumulators'  in dimension 1 with a cyclic factor 16.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.0' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.1' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.2' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.3' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.4' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.5' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.6' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.7' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.8' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.9' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.10' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.11' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.12' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.13' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.14' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.15' completely based on array size.
INFO: [XFORM 203-101] Partitioning array 'accumulators.0' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.1' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.2' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.3' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.4' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.5' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.6' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.7' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.8' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.9' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.10' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.11' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.12' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.13' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.14' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.15' in dimension 1 completely.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 0.53 seconds. CPU system time: 0.03 seconds. Elapsed time: 0.88 seconds; current allocated memory: 205.030 MB.
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 0.41 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.54 seconds; current allocated memory: 199.132 MB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'hls_linear_combination' ...
WARNING: [SYN 201-107] Renaming port name 'hls_linear_combination/out' to 'hls_linear_combination/out_r' to avoid the conflict with HDL keywords or other object names.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'hls_linear_combination' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'LOOP_LC1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 1, loop 'LOOP_LC1'
INFO: [SCHED 204-61] Pipelining loop 'LOOP_LC2'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 37, loop 'LOOP_LC2'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0.66 seconds. CPU system time: 0.02 seconds. Elapsed time: 1.07 seconds; current allocated memory: 200.397 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0.94 seconds. CPU system time: 0.02 seconds. Elapsed time: 1.37 seconds; current allocated memory: 201.741 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'hls_linear_combination' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-500] Setting interface mode on port 'hls_linear_combination/vecs' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'hls_linear_combination/coeffs' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'hls_linear_combination/len' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'hls_linear_combination/out_r' to 'ap_vld'.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z020-clg484-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z020-clg484-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: set_directive_top -name hls_linear_combination hls_linear_combination 
INFO: [HLS 200-1510] Running: set_directive_pipeline hls_linear_combination/LOOP_LC2 
INFO: [HLS 200-1510] Running: set_directive_pipeline hls_linear_combination/LOOP_LC1 
INFO: [HLS 200-1510] Running: set_directive_array_partition -type cyclic -factor 16 -dim 1 hls_linear_combination accumulators 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0.01 seconds. CPU system time: 0 seconds. Elapsed time: 0.03 seconds; current allocated memory: 164.377 MB.
INFO: [HLS 200-10] Analyzing design file 'hls_linear_combination/hls_linear_combination.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 0.35 seconds. CPU system time: 0.13 seconds. Elapsed time: 0.91 seconds; current allocated memory: 164.691 MB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 8.15 seconds. CPU system time: 0.51 seconds. Elapsed time: 14.52 seconds; current allocated memory: 167.368 MB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.01 seconds; current allocated memory: 167.370 MB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0.03 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.12 seconds; current allocated memory: 168.640 MB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0.04 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.1 seconds; current allocated memory: 167.834 MB.
INFO: [XFORM 203-502] Unrolling all sub-loops inside loop 'LOOP_LC1' (hls_linear_combination/hls_linear_combination.cpp:12) in function 'hls_linear_combination' for pipelining.
INFO: [HLS 200-489] Unrolling loop 'LOOP_LC12' (hls_linear_combination/hls_linear_combination.cpp:14) in function 'hls_linear_combination' completely with a factor of 60.
INFO: [XFORM 203-101] Partitioning array 'accumulators'  in dimension 1 with a cyclic factor 16.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.0' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.1' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.2' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.3' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.4' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.5' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.6' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.7' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.8' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.9' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.10' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.11' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.12' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.13' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.14' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.15' completely based on array size.
INFO: [XFORM 203-101] Partitioning array 'accumulators.0' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.1' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.2' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.3' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.4' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.5' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.6' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.7' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.8' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.9' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.10' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.11' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.12' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.13' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.14' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.15' in dimension 1 completely.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 0.56 seconds. CPU system time: 0.02 seconds. Elapsed time: 0.88 seconds; current allocated memory: 189.027 MB.
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 0.38 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.63 seconds; current allocated memory: 183.131 MB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'hls_linear_combination' ...
WARNING: [SYN 201-107] Renaming port name 'hls_linear_combination/out' to 'hls_linear_combination/out_r' to avoid the conflict with HDL keywords or other object names.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'hls_linear_combination' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'LOOP_LC1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 1, loop 'LOOP_LC1'
INFO: [SCHED 204-61] Pipelining loop 'LOOP_LC2'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 37, loop 'LOOP_LC2'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0.65 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.94 seconds; current allocated memory: 184.396 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0.94 seconds. CPU system time: 0.02 seconds. Elapsed time: 1.5 seconds; current allocated memory: 185.743 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'hls_linear_combination' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-500] Setting interface mode on port 'hls_linear_combination/vecs' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'hls_linear_combination/coeffs' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'hls_linear_combination/len' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'hls_linear_combination/out_r' to 'ap_vld'.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z020-clg484-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z020-clg484-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: set_directive_top -name hls_linear_combination hls_linear_combination 
INFO: [HLS 200-1510] Running: set_directive_pipeline hls_linear_combination/LOOP_LC2 
INFO: [HLS 200-1510] Running: set_directive_pipeline hls_linear_combination/LOOP_LC1 
INFO: [HLS 200-1510] Running: set_directive_array_partition -type cyclic -factor 16 -dim 1 hls_linear_combination accumulators 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0 seconds. CPU system time: 0.02 seconds. Elapsed time: 0.03 seconds; current allocated memory: 180.398 MB.
INFO: [HLS 200-10] Analyzing design file 'hls_linear_combination/hls_linear_combination.cpp' ... 
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:117:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:118:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:119:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:120:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:121:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:151:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:152:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:153:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:154:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:155:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:156:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:157:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:158:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:159:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:160:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:210:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:211:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:212:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:239:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:240:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:241:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:242:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:243:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:244:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:280:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:281:9
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 58.24 seconds. CPU system time: 2.5 seconds. Elapsed time: 82.46 seconds; current allocated memory: 182.814 MB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-178] Inlining function 'ap_fixed<34, 34, (ap_q_mode)5, (ap_o_mode)3, 0> fabs_fixed<34, 34>(ap_fixed<34, 34, (ap_q_mode)5, (ap_o_mode)3, 0>)' into 'ap_fixed<33, 33, (ap_q_mode)5, (ap_o_mode)3, 0> hls_internal::generic_remquo<33, 33>(ap_fixed<33, 33, (ap_q_mode)5, (ap_o_mode)3, 0>, ap_fixed<33, 33, (ap_q_mode)5, (ap_o_mode)3, 0>, int*)' (/wrk/ci/prod/2020.2/rdi_builds/continuous/2020_11_18_3064766/src/shared/hls/clib/hlsmath/include/hls_fmod_rem_quo_remainder_divide_apfixed.h:136:0)
INFO: [HLS 214-178] Inlining function 'ap_fixed<34, 34, (ap_q_mode)5, (ap_o_mode)3, 0> fabs_fixed<34, 34>(ap_fixed<34, 34, (ap_q_mode)5, (ap_o_mode)3, 0>)' into 'ap_fixed<33, 33, (ap_q_mode)5, (ap_o_mode)3, 0> hls_internal::generic_remquo<33, 33>(ap_fixed<33, 33, (ap_q_mode)5, (ap_o_mode)3, 0>, ap_fixed<33, 33, (ap_q_mode)5, (ap_o_mode)3, 0>, int*)' (/wrk/ci/prod/2020.2/rdi_builds/continuous/2020_11_18_3064766/src/shared/hls/clib/hlsmath/include/hls_fmod_rem_quo_remainder_divide_apfixed.h:136:0)
INFO: [HLS 214-178] Inlining function 'ap_fixed<33, 33, (ap_q_mode)5, (ap_o_mode)3, 0> hls_internal::generic_remainder<33, 33>(ap_fixed<33, 33, (ap_q_mode)5, (ap_o_mode)3, 0>, ap_fixed<33, 33, (ap_q_mode)5, (ap_o_mode)3, 0>)' into 'ap_uint<32> hls_internal::generic_remainder<32>(ap_uint<32>, ap_uint<32>)' (/wrk/ci/prod/2020.2/rdi_builds/continuous/2020_11_18_3064766/src/shared/hls/clib/hlsmath/include/hls_fmod_rem_quo_remainder_divide_apfixed.h:223:0)
INFO: [HLS 214-178] Inlining function 'ap_uint<32> hls_internal::generic_remainder<32>(ap_uint<32>, ap_uint<32>)' into 'hls::remainder(unsigned int, unsigned int)' (/wrk/ci/prod/2020.2/rdi_builds/continuous/2020_11_18_3064766/src/shared/hls/clib/hlsmath/src/c++/remainderint.cpp:67:0)
INFO: [HLS 214-178] Inlining function 'hls::remainder(unsigned int, unsigned int)' into 'hls_linear_combination(unsigned char*, unsigned char*, int, unsigned char*)' (hls_linear_combination/hls_linear_combination.cpp:6:0)
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 10.1 seconds. CPU system time: 0.75 seconds. Elapsed time: 15.92 seconds; current allocated memory: 184.939 MB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0 seconds; current allocated memory: 184.940 MB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0.41 seconds. CPU system time: 0.07 seconds. Elapsed time: 1.12 seconds; current allocated memory: 215.865 MB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0.48 seconds. CPU system time: 0.03 seconds. Elapsed time: 0.77 seconds; current allocated memory: 243.093 MB.
INFO: [XFORM 203-502] Unrolling all sub-loops inside loop 'LOOP_LC1' (hls_linear_combination/hls_linear_combination.cpp:12) in function 'hls_linear_combination' for pipelining.
INFO: [HLS 200-489] Unrolling loop 'LOOP_LC12' (hls_linear_combination/hls_linear_combination.cpp:14) in function 'hls_linear_combination' completely with a factor of 60.
INFO: [XFORM 203-101] Partitioning array 'accumulators'  in dimension 1 with a cyclic factor 16.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.0' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.1' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.2' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.3' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.4' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.5' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.6' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.7' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.8' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.9' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.10' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.11' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.12' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.13' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.14' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.15' completely based on array size.
INFO: [XFORM 203-101] Partitioning array 'accumulators.0' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.1' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.2' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.3' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.4' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.5' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.6' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.7' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.8' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.9' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.10' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.11' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.12' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.13' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.14' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.15' in dimension 1 completely.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 1.02 seconds. CPU system time: 0.06 seconds. Elapsed time: 1.67 seconds; current allocated memory: 291.115 MB.
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 0.5 seconds. CPU system time: 0.02 seconds. Elapsed time: 0.92 seconds; current allocated memory: 288.207 MB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'hls_linear_combination' ...
WARNING: [SYN 201-107] Renaming port name 'hls_linear_combination/out' to 'hls_linear_combination/out_r' to avoid the conflict with HDL keywords or other object names.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'hls_linear_combination' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'LOOP_LC1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 1, loop 'LOOP_LC1'
INFO: [SCHED 204-61] Pipelining loop 'LOOP_LC2'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 38, loop 'LOOP_LC2'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0.64 seconds. CPU system time: 0.05 seconds. Elapsed time: 0.92 seconds; current allocated memory: 289.458 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0.95 seconds. CPU system time: 0.01 seconds. Elapsed time: 1.52 seconds; current allocated memory: 290.862 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'hls_linear_combination' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-500] Setting interface mode on port 'hls_linear_combination/vecs' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'hls_linear_combination/coeffs' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'hls_linear_combination/len' to 'ap_none'.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z020-clg484-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -output=/home/osm/Documents/SECT-MAYO/MAYO/HLS/ips/hls_linear_combination.zip
INFO: [HLS 200-1464] Running solution command: config_export -rtl=vhdl
INFO: [HLS 200-1510] Running: set_part xc7z020-clg484-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_export -format ip_catalog -output /home/osm/Documents/SECT-MAYO/MAYO/HLS/ips/hls_linear_combination.zip -rtl vhdl 
INFO: [HLS 200-1510] Running: set_directive_top -name hls_linear_combination hls_linear_combination 
INFO: [HLS 200-1510] Running: set_directive_pipeline hls_linear_combination/LOOP_LC2 
INFO: [HLS 200-1510] Running: set_directive_pipeline hls_linear_combination/LOOP_LC1 
INFO: [HLS 200-1510] Running: set_directive_array_partition -type cyclic -factor 16 -dim 1 hls_linear_combination accumulators 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0.01 seconds. CPU system time: 0 seconds. Elapsed time: 0.04 seconds; current allocated memory: 180.550 MB.
INFO: [HLS 200-10] Analyzing design file 'hls_linear_combination/hls_linear_combination.cpp' ... 
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:117:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:118:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:119:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:120:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:121:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:151:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:152:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:153:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:154:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:155:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:156:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:157:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:158:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:159:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:160:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:210:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:211:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:212:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:239:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:240:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:241:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:242:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:243:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:244:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:280:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:281:9
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 61.24 seconds. CPU system time: 2.97 seconds. Elapsed time: 107.9 seconds; current allocated memory: 182.955 MB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-178] Inlining function 'ap_fixed<34, 34, (ap_q_mode)5, (ap_o_mode)3, 0> fabs_fixed<34, 34>(ap_fixed<34, 34, (ap_q_mode)5, (ap_o_mode)3, 0>)' into 'ap_fixed<33, 33, (ap_q_mode)5, (ap_o_mode)3, 0> hls_internal::generic_remquo<33, 33>(ap_fixed<33, 33, (ap_q_mode)5, (ap_o_mode)3, 0>, ap_fixed<33, 33, (ap_q_mode)5, (ap_o_mode)3, 0>, int*)' (/wrk/ci/prod/2020.2/rdi_builds/continuous/2020_11_18_3064766/src/shared/hls/clib/hlsmath/include/hls_fmod_rem_quo_remainder_divide_apfixed.h:136:0)
INFO: [HLS 214-178] Inlining function 'ap_fixed<34, 34, (ap_q_mode)5, (ap_o_mode)3, 0> fabs_fixed<34, 34>(ap_fixed<34, 34, (ap_q_mode)5, (ap_o_mode)3, 0>)' into 'ap_fixed<33, 33, (ap_q_mode)5, (ap_o_mode)3, 0> hls_internal::generic_remquo<33, 33>(ap_fixed<33, 33, (ap_q_mode)5, (ap_o_mode)3, 0>, ap_fixed<33, 33, (ap_q_mode)5, (ap_o_mode)3, 0>, int*)' (/wrk/ci/prod/2020.2/rdi_builds/continuous/2020_11_18_3064766/src/shared/hls/clib/hlsmath/include/hls_fmod_rem_quo_remainder_divide_apfixed.h:136:0)
INFO: [HLS 214-178] Inlining function 'ap_fixed<33, 33, (ap_q_mode)5, (ap_o_mode)3, 0> hls_internal::generic_remainder<33, 33>(ap_fixed<33, 33, (ap_q_mode)5, (ap_o_mode)3, 0>, ap_fixed<33, 33, (ap_q_mode)5, (ap_o_mode)3, 0>)' into 'ap_uint<32> hls_internal::generic_remainder<32>(ap_uint<32>, ap_uint<32>)' (/wrk/ci/prod/2020.2/rdi_builds/continuous/2020_11_18_3064766/src/shared/hls/clib/hlsmath/include/hls_fmod_rem_quo_remainder_divide_apfixed.h:223:0)
INFO: [HLS 214-178] Inlining function 'ap_uint<32> hls_internal::generic_remainder<32>(ap_uint<32>, ap_uint<32>)' into 'hls::remainder(unsigned int, unsigned int)' (/wrk/ci/prod/2020.2/rdi_builds/continuous/2020_11_18_3064766/src/shared/hls/clib/hlsmath/src/c++/remainderint.cpp:67:0)
INFO: [HLS 214-178] Inlining function 'hls::remainder(unsigned int, unsigned int)' into 'hls_linear_combination(unsigned char*, unsigned char*, int, unsigned char*)' (hls_linear_combination/hls_linear_combination.cpp:6:0)
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 10.56 seconds. CPU system time: 0.84 seconds. Elapsed time: 23.71 seconds; current allocated memory: 185.167 MB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.01 seconds; current allocated memory: 185.168 MB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0.46 seconds. CPU system time: 0.06 seconds. Elapsed time: 1.88 seconds; current allocated memory: 216.093 MB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0.49 seconds. CPU system time: 0.02 seconds. Elapsed time: 0.93 seconds; current allocated memory: 243.320 MB.
INFO: [XFORM 203-502] Unrolling all sub-loops inside loop 'LOOP_LC1' (hls_linear_combination/hls_linear_combination.cpp:12) in function 'hls_linear_combination' for pipelining.
INFO: [HLS 200-489] Unrolling loop 'LOOP_LC12' (hls_linear_combination/hls_linear_combination.cpp:14) in function 'hls_linear_combination' completely with a factor of 60.
INFO: [XFORM 203-101] Partitioning array 'accumulators'  in dimension 1 with a cyclic factor 16.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.0' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.1' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.2' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.3' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.4' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.5' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.6' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.7' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.8' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.9' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.10' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.11' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.12' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.13' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.14' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.15' completely based on array size.
INFO: [XFORM 203-101] Partitioning array 'accumulators.0' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.1' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.2' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.3' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.4' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.5' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.6' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.7' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.8' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.9' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.10' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.11' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.12' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.13' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.14' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.15' in dimension 1 completely.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 1.06 seconds. CPU system time: 0.07 seconds. Elapsed time: 2.71 seconds; current allocated memory: 291.361 MB.
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 0.48 seconds. CPU system time: 0.01 seconds. Elapsed time: 1.2 seconds; current allocated memory: 288.453 MB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'hls_linear_combination' ...
WARNING: [SYN 201-107] Renaming port name 'hls_linear_combination/out' to 'hls_linear_combination/out_r' to avoid the conflict with HDL keywords or other object names.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'hls_linear_combination' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'LOOP_LC1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 1, loop 'LOOP_LC1'
INFO: [SCHED 204-61] Pipelining loop 'LOOP_LC2'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 38, loop 'LOOP_LC2'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0.65 seconds. CPU system time: 0.04 seconds. Elapsed time: 1.66 seconds; current allocated memory: 289.703 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0.95 seconds. CPU system time: 0 seconds. Elapsed time: 1.92 seconds; current allocated memory: 291.093 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z020-clg484-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -output=/home/osm/Documents/SECT-MAYO/MAYO/HLS/ips/hls_linear_combination.zip
INFO: [HLS 200-1464] Running solution command: config_export -rtl=vhdl
INFO: [HLS 200-1510] Running: set_part xc7z020-clg484-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_export -format ip_catalog -output /home/osm/Documents/SECT-MAYO/MAYO/HLS/ips/hls_linear_combination.zip -rtl vhdl 
INFO: [HLS 200-1510] Running: set_directive_top -name hls_linear_combination hls_linear_combination 
INFO: [HLS 200-1510] Running: set_directive_pipeline hls_linear_combination/LOOP_LC2 
INFO: [HLS 200-1510] Running: set_directive_pipeline hls_linear_combination/LOOP_LC1 
INFO: [HLS 200-1510] Running: set_directive_array_partition -type cyclic -factor 16 -dim 1 hls_linear_combination accumulators 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0.04 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.05 seconds; current allocated memory: 180.554 MB.
INFO: [HLS 200-10] Analyzing design file 'hls_linear_combination/hls_linear_combination.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 1.49 seconds. CPU system time: 0.33 seconds. Elapsed time: 7.76 seconds; current allocated memory: 180.890 MB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 7.77 seconds. CPU system time: 0.64 seconds. Elapsed time: 15.34 seconds; current allocated memory: 183.574 MB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0.01 seconds. CPU system time: 0 seconds. Elapsed time: 0 seconds; current allocated memory: 183.576 MB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0.03 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.23 seconds; current allocated memory: 184.831 MB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0.05 seconds. CPU system time: 0 seconds. Elapsed time: 0.07 seconds; current allocated memory: 184.043 MB.
INFO: [XFORM 203-502] Unrolling all sub-loops inside loop 'LOOP_LC1' (hls_linear_combination/hls_linear_combination.cpp:10) in function 'hls_linear_combination' for pipelining.
INFO: [HLS 200-489] Unrolling loop 'LOOP_LC12' (hls_linear_combination/hls_linear_combination.cpp:12) in function 'hls_linear_combination' completely with a factor of 60.
INFO: [XFORM 203-101] Partitioning array 'accumulators'  in dimension 1 with a cyclic factor 16.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.0' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.1' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.2' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.3' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.4' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.5' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.6' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.7' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.8' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.9' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.10' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.11' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.12' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.13' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.14' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.15' completely based on array size.
INFO: [XFORM 203-101] Partitioning array 'accumulators.0' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.1' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.2' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.3' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.4' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.5' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.6' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.7' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.8' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.9' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.10' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.11' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.12' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.13' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.14' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.15' in dimension 1 completely.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 0.54 seconds. CPU system time: 0.02 seconds. Elapsed time: 0.96 seconds; current allocated memory: 205.233 MB.
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 0.35 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.63 seconds; current allocated memory: 199.364 MB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'hls_linear_combination' ...
WARNING: [SYN 201-107] Renaming port name 'hls_linear_combination/out' to 'hls_linear_combination/out_r' to avoid the conflict with HDL keywords or other object names.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'hls_linear_combination' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'LOOP_LC1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 1, loop 'LOOP_LC1'
INFO: [SCHED 204-61] Pipelining loop 'LOOP_LC2'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 37, loop 'LOOP_LC2'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0.7 seconds. CPU system time: 0.01 seconds. Elapsed time: 1.17 seconds; current allocated memory: 200.613 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0.95 seconds. CPU system time: 0 seconds. Elapsed time: 1.56 seconds; current allocated memory: 201.945 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'hls_linear_combination' 
INFO: [HLS 200-10] ----------------------------------------------------------------
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z020-clg484-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -output=/home/osm/Documents/SECT-MAYO/MAYO/HLS/ips/hls_linear_combination.zip
INFO: [HLS 200-1464] Running solution command: config_export -rtl=vhdl
INFO: [HLS 200-1510] Running: set_part xc7z020-clg484-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_export -format ip_catalog -output /home/osm/Documents/SECT-MAYO/MAYO/HLS/ips/hls_linear_combination.zip -rtl vhdl 
INFO: [HLS 200-1510] Running: set_directive_top -name hls_linear_combination hls_linear_combination 
INFO: [HLS 200-1510] Running: set_directive_pipeline hls_linear_combination/LOOP_LC2 
INFO: [HLS 200-1510] Running: set_directive_pipeline hls_linear_combination/LOOP_LC1 
INFO: [HLS 200-1510] Running: set_directive_array_partition -type cyclic -factor 16 -dim 1 hls_linear_combination accumulators 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0.02 seconds. CPU system time: 0 seconds. Elapsed time: 0.02 seconds; current allocated memory: 164.503 MB.
INFO: [HLS 200-10] Analyzing design file 'hls_linear_combination/hls_linear_combination.cpp' ... 
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:117:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:118:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:119:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:120:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:121:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:151:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:152:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:153:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:154:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:155:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:156:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:157:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:158:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:159:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:160:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:210:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:211:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:212:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:239:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:240:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:241:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:242:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:243:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:244:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:280:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:281:9
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 62.39 seconds. CPU system time: 2.92 seconds. Elapsed time: 111.69 seconds; current allocated memory: 166.955 MB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-178] Inlining function 'ap_fixed<34, 34, (ap_q_mode)5, (ap_o_mode)3, 0> fabs_fixed<34, 34>(ap_fixed<34, 34, (ap_q_mode)5, (ap_o_mode)3, 0>)' into 'ap_fixed<33, 33, (ap_q_mode)5, (ap_o_mode)3, 0> hls_internal::generic_remquo<33, 33>(ap_fixed<33, 33, (ap_q_mode)5, (ap_o_mode)3, 0>, ap_fixed<33, 33, (ap_q_mode)5, (ap_o_mode)3, 0>, int*)' (/wrk/ci/prod/2020.2/rdi_builds/continuous/2020_11_18_3064766/src/shared/hls/clib/hlsmath/include/hls_fmod_rem_quo_remainder_divide_apfixed.h:136:0)
INFO: [HLS 214-178] Inlining function 'ap_fixed<34, 34, (ap_q_mode)5, (ap_o_mode)3, 0> fabs_fixed<34, 34>(ap_fixed<34, 34, (ap_q_mode)5, (ap_o_mode)3, 0>)' into 'ap_fixed<33, 33, (ap_q_mode)5, (ap_o_mode)3, 0> hls_internal::generic_remquo<33, 33>(ap_fixed<33, 33, (ap_q_mode)5, (ap_o_mode)3, 0>, ap_fixed<33, 33, (ap_q_mode)5, (ap_o_mode)3, 0>, int*)' (/wrk/ci/prod/2020.2/rdi_builds/continuous/2020_11_18_3064766/src/shared/hls/clib/hlsmath/include/hls_fmod_rem_quo_remainder_divide_apfixed.h:136:0)
INFO: [HLS 214-178] Inlining function 'ap_fixed<33, 33, (ap_q_mode)5, (ap_o_mode)3, 0> hls_internal::generic_remainder<33, 33>(ap_fixed<33, 33, (ap_q_mode)5, (ap_o_mode)3, 0>, ap_fixed<33, 33, (ap_q_mode)5, (ap_o_mode)3, 0>)' into 'ap_uint<32> hls_internal::generic_remainder<32>(ap_uint<32>, ap_uint<32>)' (/wrk/ci/prod/2020.2/rdi_builds/continuous/2020_11_18_3064766/src/shared/hls/clib/hlsmath/include/hls_fmod_rem_quo_remainder_divide_apfixed.h:223:0)
INFO: [HLS 214-178] Inlining function 'ap_uint<32> hls_internal::generic_remainder<32>(ap_uint<32>, ap_uint<32>)' into 'hls::remainder(unsigned int, unsigned int)' (/wrk/ci/prod/2020.2/rdi_builds/continuous/2020_11_18_3064766/src/shared/hls/clib/hlsmath/src/c++/remainderint.cpp:67:0)
INFO: [HLS 214-178] Inlining function 'hls::remainder(unsigned int, unsigned int)' into 'hls_linear_combination(unsigned char*, unsigned char*, int, unsigned char*)' (hls_linear_combination/hls_linear_combination.cpp:4:0)
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 10.75 seconds. CPU system time: 0.96 seconds. Elapsed time: 21.79 seconds; current allocated memory: 169.162 MB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0 seconds; current allocated memory: 169.163 MB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0.47 seconds. CPU system time: 0.04 seconds. Elapsed time: 1.59 seconds; current allocated memory: 200.083 MB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0.51 seconds. CPU system time: 0.03 seconds. Elapsed time: 0.97 seconds; current allocated memory: 227.315 MB.
INFO: [XFORM 203-502] Unrolling all sub-loops inside loop 'LOOP_LC1' (hls_linear_combination/hls_linear_combination.cpp:10) in function 'hls_linear_combination' for pipelining.
INFO: [HLS 200-489] Unrolling loop 'LOOP_LC12' (hls_linear_combination/hls_linear_combination.cpp:12) in function 'hls_linear_combination' completely with a factor of 60.
INFO: [XFORM 203-101] Partitioning array 'accumulators'  in dimension 1 with a cyclic factor 16.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.0' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.1' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.2' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.3' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.4' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.5' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.6' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.7' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.8' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.9' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.10' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.11' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.12' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.13' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.14' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.15' completely based on array size.
INFO: [XFORM 203-101] Partitioning array 'accumulators.0' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.1' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.2' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.3' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.4' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.5' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.6' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.7' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.8' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.9' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.10' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.11' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.12' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.13' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.14' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.15' in dimension 1 completely.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 1.13 seconds. CPU system time: 0.08 seconds. Elapsed time: 1.91 seconds; current allocated memory: 275.334 MB.
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 0.5 seconds. CPU system time: 0 seconds. Elapsed time: 0.74 seconds; current allocated memory: 272.396 MB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'hls_linear_combination' ...
WARNING: [SYN 201-107] Renaming port name 'hls_linear_combination/out' to 'hls_linear_combination/out_r' to avoid the conflict with HDL keywords or other object names.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'hls_linear_combination' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'LOOP_LC1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 1, loop 'LOOP_LC1'
INFO: [SCHED 204-61] Pipelining loop 'LOOP_LC2'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 38, loop 'LOOP_LC2'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0.67 seconds. CPU system time: 0.02 seconds. Elapsed time: 1.61 seconds; current allocated memory: 273.663 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0.95 seconds. CPU system time: 0.01 seconds. Elapsed time: 1.58 seconds; current allocated memory: 275.081 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z020-clg484-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -output=/home/osm/Documents/SECT-MAYO/MAYO/HLS/ips/hls_linear_combination.zip
INFO: [HLS 200-1464] Running solution command: config_export -rtl=vhdl
INFO: [HLS 200-1510] Running: set_part xc7z020-clg484-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_export -format ip_catalog -output /home/osm/Documents/SECT-MAYO/MAYO/HLS/ips/hls_linear_combination.zip -rtl vhdl 
INFO: [HLS 200-1510] Running: set_directive_top -name hls_linear_combination hls_linear_combination 
INFO: [HLS 200-1510] Running: set_directive_pipeline hls_linear_combination/LOOP_LC2 
INFO: [HLS 200-1510] Running: set_directive_pipeline hls_linear_combination/LOOP_LC1 
INFO: [HLS 200-1510] Running: set_directive_array_partition -type cyclic -factor 16 -dim 1 hls_linear_combination accumulators 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0.01 seconds. CPU system time: 0 seconds. Elapsed time: 0.02 seconds; current allocated memory: 180.502 MB.
INFO: [HLS 200-10] Analyzing design file 'hls_linear_combination/hls_linear_combination.cpp' ... 
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:117:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:118:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:119:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:120:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:121:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:151:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:152:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:153:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:154:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:155:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:156:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:157:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:158:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:159:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:160:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:210:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:211:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:212:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:239:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:240:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:241:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:242:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:243:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:244:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:280:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:281:9
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 57.85 seconds. CPU system time: 2.53 seconds. Elapsed time: 85.11 seconds; current allocated memory: 182.954 MB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-178] Inlining function 'ap_fixed<34, 34, (ap_q_mode)5, (ap_o_mode)3, 0> fabs_fixed<34, 34>(ap_fixed<34, 34, (ap_q_mode)5, (ap_o_mode)3, 0>)' into 'ap_fixed<33, 33, (ap_q_mode)5, (ap_o_mode)3, 0> hls_internal::generic_remquo<33, 33>(ap_fixed<33, 33, (ap_q_mode)5, (ap_o_mode)3, 0>, ap_fixed<33, 33, (ap_q_mode)5, (ap_o_mode)3, 0>, int*)' (/wrk/ci/prod/2020.2/rdi_builds/continuous/2020_11_18_3064766/src/shared/hls/clib/hlsmath/include/hls_fmod_rem_quo_remainder_divide_apfixed.h:136:0)
INFO: [HLS 214-178] Inlining function 'ap_fixed<34, 34, (ap_q_mode)5, (ap_o_mode)3, 0> fabs_fixed<34, 34>(ap_fixed<34, 34, (ap_q_mode)5, (ap_o_mode)3, 0>)' into 'ap_fixed<33, 33, (ap_q_mode)5, (ap_o_mode)3, 0> hls_internal::generic_remquo<33, 33>(ap_fixed<33, 33, (ap_q_mode)5, (ap_o_mode)3, 0>, ap_fixed<33, 33, (ap_q_mode)5, (ap_o_mode)3, 0>, int*)' (/wrk/ci/prod/2020.2/rdi_builds/continuous/2020_11_18_3064766/src/shared/hls/clib/hlsmath/include/hls_fmod_rem_quo_remainder_divide_apfixed.h:136:0)
INFO: [HLS 214-178] Inlining function 'ap_fixed<33, 33, (ap_q_mode)5, (ap_o_mode)3, 0> hls_internal::generic_remainder<33, 33>(ap_fixed<33, 33, (ap_q_mode)5, (ap_o_mode)3, 0>, ap_fixed<33, 33, (ap_q_mode)5, (ap_o_mode)3, 0>)' into 'ap_uint<32> hls_internal::generic_remainder<32>(ap_uint<32>, ap_uint<32>)' (/wrk/ci/prod/2020.2/rdi_builds/continuous/2020_11_18_3064766/src/shared/hls/clib/hlsmath/include/hls_fmod_rem_quo_remainder_divide_apfixed.h:223:0)
INFO: [HLS 214-178] Inlining function 'ap_uint<32> hls_internal::generic_remainder<32>(ap_uint<32>, ap_uint<32>)' into 'hls::remainder(unsigned int, unsigned int)' (/wrk/ci/prod/2020.2/rdi_builds/continuous/2020_11_18_3064766/src/shared/hls/clib/hlsmath/src/c++/remainderint.cpp:67:0)
INFO: [HLS 214-178] Inlining function 'hls::remainder(unsigned int, unsigned int)' into 'hls_linear_combination(unsigned char*, unsigned char*, int, unsigned char*)' (hls_linear_combination/hls_linear_combination.cpp:4:0)
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 10.08 seconds. CPU system time: 0.81 seconds. Elapsed time: 17.66 seconds; current allocated memory: 185.159 MB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0 seconds; current allocated memory: 185.161 MB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0.44 seconds. CPU system time: 0.06 seconds. Elapsed time: 0.89 seconds; current allocated memory: 216.084 MB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0.49 seconds. CPU system time: 0.03 seconds. Elapsed time: 0.75 seconds; current allocated memory: 243.313 MB.
INFO: [XFORM 203-502] Unrolling all sub-loops inside loop 'LOOP_LC1' (hls_linear_combination/hls_linear_combination.cpp:10) in function 'hls_linear_combination' for pipelining.
INFO: [HLS 200-489] Unrolling loop 'LOOP_LC12' (hls_linear_combination/hls_linear_combination.cpp:12) in function 'hls_linear_combination' completely with a factor of 60.
INFO: [XFORM 203-101] Partitioning array 'accumulators'  in dimension 1 with a cyclic factor 16.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.0' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.1' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.2' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.3' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.4' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.5' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.6' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.7' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.8' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.9' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.10' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.11' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.12' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.13' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.14' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.15' completely based on array size.
INFO: [XFORM 203-101] Partitioning array 'accumulators.0' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.1' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.2' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.3' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.4' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.5' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.6' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.7' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.8' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.9' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.10' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.11' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.12' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.13' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.14' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.15' in dimension 1 completely.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 1.08 seconds. CPU system time: 0.08 seconds. Elapsed time: 1.76 seconds; current allocated memory: 291.341 MB.
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 0.51 seconds. CPU system time: 0 seconds. Elapsed time: 0.79 seconds; current allocated memory: 288.403 MB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'hls_linear_combination' ...
WARNING: [SYN 201-107] Renaming port name 'hls_linear_combination/out' to 'hls_linear_combination/out_r' to avoid the conflict with HDL keywords or other object names.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'hls_linear_combination' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'LOOP_LC1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 1, loop 'LOOP_LC1'
INFO: [SCHED 204-61] Pipelining loop 'LOOP_LC2'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 38, loop 'LOOP_LC2'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0.67 seconds. CPU system time: 0.02 seconds. Elapsed time: 1.14 seconds; current allocated memory: 289.669 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0.86 seconds. CPU system time: 0.02 seconds. Elapsed time: 1.43 seconds; current allocated memory: 291.089 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z020-clg484-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -output=/home/osm/Documents/SECT-MAYO/MAYO/HLS/ips/hls_linear_combination.zip
INFO: [HLS 200-1464] Running solution command: config_export -rtl=vhdl
INFO: [HLS 200-1510] Running: set_part xc7z020-clg484-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_export -format ip_catalog -output /home/osm/Documents/SECT-MAYO/MAYO/HLS/ips/hls_linear_combination.zip -rtl vhdl 
INFO: [HLS 200-1510] Running: set_directive_top -name hls_linear_combination hls_linear_combination 
INFO: [HLS 200-1510] Running: set_directive_pipeline hls_linear_combination/LOOP_LC2 
INFO: [HLS 200-1510] Running: set_directive_pipeline hls_linear_combination/LOOP_LC1 
INFO: [HLS 200-1510] Running: set_directive_array_partition -type cyclic -factor 16 -dim 1 hls_linear_combination accumulators 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0.02 seconds. CPU system time: 0 seconds. Elapsed time: 0.01 seconds; current allocated memory: 180.544 MB.
INFO: [HLS 200-10] Analyzing design file 'hls_linear_combination/hls_linear_combination.cpp' ... 
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:117:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:118:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:119:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:120:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:121:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:151:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:152:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:153:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:154:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:155:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:156:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:157:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:158:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:159:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:160:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:210:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:211:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:212:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:239:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:240:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:241:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:242:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:243:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:244:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:280:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:281:9
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 62.3 seconds. CPU system time: 2.78 seconds. Elapsed time: 104.14 seconds; current allocated memory: 182.964 MB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 8.19 seconds. CPU system time: 0.65 seconds. Elapsed time: 18.09 seconds; current allocated memory: 184.524 MB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0.01 seconds. CPU system time: 0 seconds. Elapsed time: 0 seconds; current allocated memory: 184.525 MB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0.03 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.1 seconds; current allocated memory: 185.766 MB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0.05 seconds. CPU system time: 0 seconds. Elapsed time: 0.09 seconds; current allocated memory: 184.974 MB.
INFO: [XFORM 203-502] Unrolling all sub-loops inside loop 'LOOP_LC1' (hls_linear_combination/hls_linear_combination.cpp:10) in function 'hls_linear_combination' for pipelining.
INFO: [HLS 200-489] Unrolling loop 'LOOP_LC12' (hls_linear_combination/hls_linear_combination.cpp:12) in function 'hls_linear_combination' completely with a factor of 60.
INFO: [XFORM 203-101] Partitioning array 'accumulators'  in dimension 1 with a cyclic factor 16.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.0' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.1' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.2' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.3' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.4' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.5' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.6' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.7' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.8' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.9' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.10' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.11' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.12' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.13' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.14' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.15' completely based on array size.
INFO: [XFORM 203-101] Partitioning array 'accumulators.0' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.1' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.2' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.3' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.4' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.5' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.6' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.7' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.8' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.9' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.10' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.11' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.12' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.13' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.14' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.15' in dimension 1 completely.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 0.57 seconds. CPU system time: 0.03 seconds. Elapsed time: 1.1 seconds; current allocated memory: 206.166 MB.
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 0.4 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.67 seconds; current allocated memory: 200.315 MB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'hls_linear_combination' ...
WARNING: [SYN 201-107] Renaming port name 'hls_linear_combination/out' to 'hls_linear_combination/out_r' to avoid the conflict with HDL keywords or other object names.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'hls_linear_combination' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'LOOP_LC1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 1, loop 'LOOP_LC1'
INFO: [SCHED 204-61] Pipelining loop 'LOOP_LC2'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 37, loop 'LOOP_LC2'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0.66 seconds. CPU system time: 0.02 seconds. Elapsed time: 1.1 seconds; current allocated memory: 201.532 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 1.04 seconds. CPU system time: 0.02 seconds. Elapsed time: 1.91 seconds; current allocated memory: 202.848 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'hls_linear_combination' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-500] Setting interface mode on port 'hls_linear_combination/vecs' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'hls_linear_combination/coeffs' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'hls_linear_combination/len' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'hls_linear_combination/out_r' to 'ap_vld'.
INFO: [RTGEN 206-500] Setting interface mode on function 'hls_linear_combination' to 'ap_ctrl_hs'.
WARNING: [RTGEN 206-101] Register 'accumulators_15_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_15_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_15_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_0_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_0_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_0_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_0_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_1_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_1_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_1_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_1_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_2_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_2_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_2_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_2_3' is power-on initialization.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z020-clg484-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -output=/home/osm/Documents/SECT-MAYO/MAYO/HLS/ips/hls_linear_combination.zip
INFO: [HLS 200-1464] Running solution command: config_export -rtl=vhdl
INFO: [HLS 200-1510] Running: set_part xc7z020-clg484-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_export -format ip_catalog -output /home/osm/Documents/SECT-MAYO/MAYO/HLS/ips/hls_linear_combination.zip -rtl vhdl 
INFO: [HLS 200-1510] Running: set_directive_top -name hls_linear_combination hls_linear_combination 
INFO: [HLS 200-1510] Running: set_directive_pipeline hls_linear_combination/LOOP_LC2 
INFO: [HLS 200-1510] Running: set_directive_pipeline hls_linear_combination/LOOP_LC1 
INFO: [HLS 200-1510] Running: set_directive_array_partition -type cyclic -factor 16 -dim 1 hls_linear_combination accumulators 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0.03 seconds. CPU system time: 0 seconds. Elapsed time: 0.03 seconds; current allocated memory: 180.554 MB.
INFO: [HLS 200-10] Analyzing design file 'hls_linear_combination/hls_linear_combination.cpp' ... 
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:117:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:118:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:119:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:120:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:121:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:151:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:152:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:153:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:154:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:155:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:156:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:157:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:158:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:159:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:160:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:210:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:211:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:212:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:239:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:240:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:241:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:242:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:243:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:244:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:280:9
WARNING: [HLS 207-5510] 'Resource pragma' is deprecated, and it will be removed in future release. It is suggested to replace it with 'bind_op/bind_storage pragma'.: /opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_hotbm_apfixed.h:281:9
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 53.13 seconds. CPU system time: 2.3 seconds. Elapsed time: 68.84 seconds; current allocated memory: 182.964 MB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 7.19 seconds. CPU system time: 0.52 seconds. Elapsed time: 11.52 seconds; current allocated memory: 184.525 MB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0 seconds; current allocated memory: 184.526 MB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0.03 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.08 seconds; current allocated memory: 185.781 MB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0.03 seconds. CPU system time: 0 seconds. Elapsed time: 0.08 seconds; current allocated memory: 184.981 MB.
INFO: [XFORM 203-510] Pipelining loop 'Loop-2' in function 'hls_linear_combination' automatically.
INFO: [XFORM 203-502] Unrolling all sub-loops inside loop 'LOOP_LC1' (hls_linear_combination/hls_linear_combination.cpp:10) in function 'hls_linear_combination' for pipelining.
INFO: [HLS 200-489] Unrolling loop 'LOOP_LC12' (hls_linear_combination/hls_linear_combination.cpp:12) in function 'hls_linear_combination' completely with a factor of 60.
INFO: [XFORM 203-101] Partitioning array 'accumulators' (hls_linear_combination/hls_linear_combination.cpp:8) in dimension 1 with a cyclic factor 16.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.0' (hls_linear_combination/hls_linear_combination.cpp:8) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.1' (hls_linear_combination/hls_linear_combination.cpp:8) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.2' (hls_linear_combination/hls_linear_combination.cpp:8) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.3' (hls_linear_combination/hls_linear_combination.cpp:8) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.4' (hls_linear_combination/hls_linear_combination.cpp:8) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.5' (hls_linear_combination/hls_linear_combination.cpp:8) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.6' (hls_linear_combination/hls_linear_combination.cpp:8) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.7' (hls_linear_combination/hls_linear_combination.cpp:8) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.8' (hls_linear_combination/hls_linear_combination.cpp:8) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.9' (hls_linear_combination/hls_linear_combination.cpp:8) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.10' (hls_linear_combination/hls_linear_combination.cpp:8) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.11' (hls_linear_combination/hls_linear_combination.cpp:8) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.12' (hls_linear_combination/hls_linear_combination.cpp:8) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.13' (hls_linear_combination/hls_linear_combination.cpp:8) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.14' (hls_linear_combination/hls_linear_combination.cpp:8) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.15' (hls_linear_combination/hls_linear_combination.cpp:8) completely based on array size.
INFO: [XFORM 203-101] Partitioning array 'accumulators.0' (hls_linear_combination/hls_linear_combination.cpp:8) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.1' (hls_linear_combination/hls_linear_combination.cpp:8) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.2' (hls_linear_combination/hls_linear_combination.cpp:8) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.3' (hls_linear_combination/hls_linear_combination.cpp:8) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.4' (hls_linear_combination/hls_linear_combination.cpp:8) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.5' (hls_linear_combination/hls_linear_combination.cpp:8) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.6' (hls_linear_combination/hls_linear_combination.cpp:8) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.7' (hls_linear_combination/hls_linear_combination.cpp:8) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.8' (hls_linear_combination/hls_linear_combination.cpp:8) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.9' (hls_linear_combination/hls_linear_combination.cpp:8) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.10' (hls_linear_combination/hls_linear_combination.cpp:8) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.11' (hls_linear_combination/hls_linear_combination.cpp:8) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.12' (hls_linear_combination/hls_linear_combination.cpp:8) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.13' (hls_linear_combination/hls_linear_combination.cpp:8) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.14' (hls_linear_combination/hls_linear_combination.cpp:8) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.15' (hls_linear_combination/hls_linear_combination.cpp:8) in dimension 1 completely.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 0.69 seconds. CPU system time: 0.02 seconds. Elapsed time: 0.98 seconds; current allocated memory: 207.058 MB.
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 0.6 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.74 seconds; current allocated memory: 201.775 MB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'hls_linear_combination' ...
WARNING: [SYN 201-107] Renaming port name 'hls_linear_combination/out' to 'hls_linear_combination/out_r' to avoid the conflict with HDL keywords or other object names.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'hls_linear_combination' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'Loop 1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 1, loop 'Loop 1'
INFO: [SCHED 204-61] Pipelining loop 'LOOP_LC1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 1, loop 'LOOP_LC1'
INFO: [SCHED 204-61] Pipelining loop 'LOOP_LC2'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 37, loop 'LOOP_LC2'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0.71 seconds. CPU system time: 0.02 seconds. Elapsed time: 0.95 seconds; current allocated memory: 203.166 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0.88 seconds. CPU system time: 0.02 seconds. Elapsed time: 1.09 seconds; current allocated memory: 205.207 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z020-clg484-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -output=/home/osm/Documents/SECT-MAYO/MAYO/HLS/ips/hls_linear_combination.zip
INFO: [HLS 200-1464] Running solution command: config_export -rtl=vhdl
INFO: [HLS 200-1510] Running: set_part xc7z020-clg484-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_export -format ip_catalog -output /home/osm/Documents/SECT-MAYO/MAYO/HLS/ips/hls_linear_combination.zip -rtl vhdl 
INFO: [HLS 200-1510] Running: set_directive_top -name hls_linear_combination hls_linear_combination 
INFO: [HLS 200-1510] Running: set_directive_pipeline hls_linear_combination/LOOP_LC2 
INFO: [HLS 200-1510] Running: set_directive_pipeline hls_linear_combination/LOOP_LC1 
INFO: [HLS 200-1510] Running: set_directive_array_partition -type cyclic -factor 16 -dim 1 hls_linear_combination accumulators 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0.02 seconds. CPU system time: 0 seconds. Elapsed time: 0.06 seconds; current allocated memory: 180.554 MB.
INFO: [HLS 200-10] Analyzing design file 'hls_linear_combination/hls_linear_combination.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 2.64 seconds. CPU system time: 0.46 seconds. Elapsed time: 18.88 seconds; current allocated memory: 180.890 MB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 5.95 seconds. CPU system time: 0.5 seconds. Elapsed time: 15.25 seconds; current allocated memory: 183.590 MB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0 seconds; current allocated memory: 183.592 MB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0.04 seconds. CPU system time: 0.02 seconds. Elapsed time: 2.13 seconds; current allocated memory: 184.846 MB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0.04 seconds. CPU system time: 0 seconds. Elapsed time: 0.1 seconds; current allocated memory: 184.047 MB.
INFO: [XFORM 203-510] Pipelining loop 'Loop-2' in function 'hls_linear_combination' automatically.
INFO: [XFORM 203-502] Unrolling all sub-loops inside loop 'LOOP_LC1' (hls_linear_combination/hls_linear_combination.cpp:10) in function 'hls_linear_combination' for pipelining.
INFO: [HLS 200-489] Unrolling loop 'LOOP_LC12' (hls_linear_combination/hls_linear_combination.cpp:12) in function 'hls_linear_combination' completely with a factor of 60.
INFO: [XFORM 203-101] Partitioning array 'accumulators' (hls_linear_combination/hls_linear_combination.cpp:8) in dimension 1 with a cyclic factor 16.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.0' (hls_linear_combination/hls_linear_combination.cpp:8) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.1' (hls_linear_combination/hls_linear_combination.cpp:8) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.2' (hls_linear_combination/hls_linear_combination.cpp:8) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.3' (hls_linear_combination/hls_linear_combination.cpp:8) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.4' (hls_linear_combination/hls_linear_combination.cpp:8) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.5' (hls_linear_combination/hls_linear_combination.cpp:8) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.6' (hls_linear_combination/hls_linear_combination.cpp:8) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.7' (hls_linear_combination/hls_linear_combination.cpp:8) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.8' (hls_linear_combination/hls_linear_combination.cpp:8) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.9' (hls_linear_combination/hls_linear_combination.cpp:8) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.10' (hls_linear_combination/hls_linear_combination.cpp:8) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.11' (hls_linear_combination/hls_linear_combination.cpp:8) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.12' (hls_linear_combination/hls_linear_combination.cpp:8) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.13' (hls_linear_combination/hls_linear_combination.cpp:8) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.14' (hls_linear_combination/hls_linear_combination.cpp:8) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.15' (hls_linear_combination/hls_linear_combination.cpp:8) completely based on array size.
INFO: [XFORM 203-101] Partitioning array 'accumulators.0' (hls_linear_combination/hls_linear_combination.cpp:8) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.1' (hls_linear_combination/hls_linear_combination.cpp:8) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.2' (hls_linear_combination/hls_linear_combination.cpp:8) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.3' (hls_linear_combination/hls_linear_combination.cpp:8) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.4' (hls_linear_combination/hls_linear_combination.cpp:8) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.5' (hls_linear_combination/hls_linear_combination.cpp:8) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.6' (hls_linear_combination/hls_linear_combination.cpp:8) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.7' (hls_linear_combination/hls_linear_combination.cpp:8) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.8' (hls_linear_combination/hls_linear_combination.cpp:8) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.9' (hls_linear_combination/hls_linear_combination.cpp:8) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.10' (hls_linear_combination/hls_linear_combination.cpp:8) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.11' (hls_linear_combination/hls_linear_combination.cpp:8) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.12' (hls_linear_combination/hls_linear_combination.cpp:8) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.13' (hls_linear_combination/hls_linear_combination.cpp:8) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.14' (hls_linear_combination/hls_linear_combination.cpp:8) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.15' (hls_linear_combination/hls_linear_combination.cpp:8) in dimension 1 completely.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 0.55 seconds. CPU system time: 0.03 seconds. Elapsed time: 1.03 seconds; current allocated memory: 206.132 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z020-clg484-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -output=/home/osm/Documents/SECT-MAYO/MAYO/HLS/ips/hls_linear_combination.zip
INFO: [HLS 200-1464] Running solution command: config_export -rtl=vhdl
INFO: [HLS 200-1510] Running: set_part xc7z020-clg484-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_export -format ip_catalog -output /home/osm/Documents/SECT-MAYO/MAYO/HLS/ips/hls_linear_combination.zip -rtl vhdl 
INFO: [HLS 200-1510] Running: set_directive_top -name hls_linear_combination hls_linear_combination 
INFO: [HLS 200-1510] Running: set_directive_pipeline hls_linear_combination/LOOP_LC2 
INFO: [HLS 200-1510] Running: set_directive_pipeline hls_linear_combination/LOOP_LC1 
INFO: [HLS 200-1510] Running: set_directive_array_partition -type cyclic -factor 16 -dim 1 hls_linear_combination accumulators 
INFO: [HLS 200-1510] Running: set_directive_interface -mode ap_hs hls_linear_combination vecs 
INFO: [HLS 200-1510] Running: set_directive_interface -mode ap_hs hls_linear_combination coeffs 
INFO: [HLS 200-1510] Running: set_directive_interface -mode ap_hs hls_linear_combination len 
INFO: [HLS 200-1510] Running: set_directive_interface -mode ap_hs hls_linear_combination out 
INFO: [HLS 200-1510] Running: set_directive_interface -mode ap_ctrl_chain hls_linear_combination 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0.01 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.02 seconds; current allocated memory: 180.555 MB.
INFO: [HLS 200-10] Analyzing design file 'hls_linear_combination/hls_linear_combination.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 0.29 seconds. CPU system time: 0.19 seconds. Elapsed time: 5.97 seconds; current allocated memory: 181.050 MB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 6.03 seconds. CPU system time: 0.39 seconds. Elapsed time: 9.1 seconds; current allocated memory: 183.728 MB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0 seconds; current allocated memory: 183.729 MB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0.03 seconds. CPU system time: 0.01 seconds. Elapsed time: 1.1 seconds; current allocated memory: 185.001 MB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0.05 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.09 seconds; current allocated memory: 184.189 MB.
INFO: [XFORM 203-510] Pipelining loop 'Loop-2' in function 'hls_linear_combination' automatically.
INFO: [XFORM 203-502] Unrolling all sub-loops inside loop 'LOOP_LC1' (hls_linear_combination/hls_linear_combination.cpp:10) in function 'hls_linear_combination' for pipelining.
INFO: [HLS 200-489] Unrolling loop 'LOOP_LC12' (hls_linear_combination/hls_linear_combination.cpp:12) in function 'hls_linear_combination' completely with a factor of 60.
INFO: [XFORM 203-101] Partitioning array 'accumulators' (hls_linear_combination/hls_linear_combination.cpp:8) in dimension 1 with a cyclic factor 16.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.0' (hls_linear_combination/hls_linear_combination.cpp:8) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.1' (hls_linear_combination/hls_linear_combination.cpp:8) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.2' (hls_linear_combination/hls_linear_combination.cpp:8) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.3' (hls_linear_combination/hls_linear_combination.cpp:8) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.4' (hls_linear_combination/hls_linear_combination.cpp:8) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.5' (hls_linear_combination/hls_linear_combination.cpp:8) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.6' (hls_linear_combination/hls_linear_combination.cpp:8) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.7' (hls_linear_combination/hls_linear_combination.cpp:8) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.8' (hls_linear_combination/hls_linear_combination.cpp:8) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.9' (hls_linear_combination/hls_linear_combination.cpp:8) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.10' (hls_linear_combination/hls_linear_combination.cpp:8) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.11' (hls_linear_combination/hls_linear_combination.cpp:8) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.12' (hls_linear_combination/hls_linear_combination.cpp:8) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.13' (hls_linear_combination/hls_linear_combination.cpp:8) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.14' (hls_linear_combination/hls_linear_combination.cpp:8) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.15' (hls_linear_combination/hls_linear_combination.cpp:8) completely based on array size.
INFO: [XFORM 203-101] Partitioning array 'accumulators.0' (hls_linear_combination/hls_linear_combination.cpp:8) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.1' (hls_linear_combination/hls_linear_combination.cpp:8) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.2' (hls_linear_combination/hls_linear_combination.cpp:8) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.3' (hls_linear_combination/hls_linear_combination.cpp:8) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.4' (hls_linear_combination/hls_linear_combination.cpp:8) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.5' (hls_linear_combination/hls_linear_combination.cpp:8) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.6' (hls_linear_combination/hls_linear_combination.cpp:8) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.7' (hls_linear_combination/hls_linear_combination.cpp:8) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.8' (hls_linear_combination/hls_linear_combination.cpp:8) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.9' (hls_linear_combination/hls_linear_combination.cpp:8) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.10' (hls_linear_combination/hls_linear_combination.cpp:8) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.11' (hls_linear_combination/hls_linear_combination.cpp:8) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.12' (hls_linear_combination/hls_linear_combination.cpp:8) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.13' (hls_linear_combination/hls_linear_combination.cpp:8) in dimension 1 completely.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z020-clg484-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -output=/home/osm/Documents/SECT-MAYO/MAYO/HLS/ips/hls_linear_combination.zip
INFO: [HLS 200-1464] Running solution command: config_export -rtl=vhdl
INFO: [HLS 200-1510] Running: set_part xc7z020-clg484-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_export -format ip_catalog -output /home/osm/Documents/SECT-MAYO/MAYO/HLS/ips/hls_linear_combination.zip -rtl vhdl 
INFO: [HLS 200-1510] Running: set_directive_top -name hls_linear_combination hls_linear_combination 
INFO: [HLS 200-1510] Running: set_directive_pipeline hls_linear_combination/LOOP_LC2 
INFO: [HLS 200-1510] Running: set_directive_pipeline hls_linear_combination/LOOP_LC1 
INFO: [HLS 200-1510] Running: set_directive_array_partition -type cyclic -factor 16 -dim 1 hls_linear_combination accumulators 
INFO: [HLS 200-1510] Running: set_directive_interface -mode ap_hs hls_linear_combination vecs 
INFO: [HLS 200-1510] Running: set_directive_interface -mode ap_hs hls_linear_combination coeffs 
INFO: [HLS 200-1510] Running: set_directive_interface -mode ap_hs hls_linear_combination len 
INFO: [HLS 200-1510] Running: set_directive_interface -mode ap_hs hls_linear_combination out 
INFO: [HLS 200-1510] Running: set_directive_interface -mode ap_ctrl_chain hls_linear_combination 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0.01 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.02 seconds; current allocated memory: 180.555 MB.
INFO: [HLS 200-10] Analyzing design file 'hls_linear_combination/hls_linear_combination.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 0.32 seconds. CPU system time: 0.2 seconds. Elapsed time: 0.55 seconds; current allocated memory: 181.050 MB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 6.2 seconds. CPU system time: 0.45 seconds. Elapsed time: 6.9 seconds; current allocated memory: 183.696 MB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0 seconds; current allocated memory: 183.697 MB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0.04 seconds. CPU system time: 0 seconds. Elapsed time: 0.05 seconds; current allocated memory: 184.987 MB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0.05 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.06 seconds; current allocated memory: 184.200 MB.
INFO: [XFORM 203-502] Unrolling all sub-loops inside loop 'LOOP_LC1' (hls_linear_combination/hls_linear_combination.cpp:10) in function 'hls_linear_combination' for pipelining.
INFO: [HLS 200-489] Unrolling loop 'LOOP_LC12' (hls_linear_combination/hls_linear_combination.cpp:12) in function 'hls_linear_combination' completely with a factor of 60.
INFO: [XFORM 203-101] Partitioning array 'accumulators'  in dimension 1 with a cyclic factor 16.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.0' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.1' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.2' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.3' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.4' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.5' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.6' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.7' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.8' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.9' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.10' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.11' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.12' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.13' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.14' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.15' completely based on array size.
INFO: [XFORM 203-101] Partitioning array 'accumulators.0' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.1' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.2' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.3' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.4' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.5' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.6' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.7' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.8' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.9' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.10' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.11' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.12' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.13' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.14' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.15' in dimension 1 completely.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 0.49 seconds. CPU system time: 0.03 seconds. Elapsed time: 0.65 seconds; current allocated memory: 205.416 MB.
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 0.29 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.31 seconds; current allocated memory: 199.533 MB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'hls_linear_combination' ...
WARNING: [SYN 201-107] Renaming port name 'hls_linear_combination/out' to 'hls_linear_combination/out_r' to avoid the conflict with HDL keywords or other object names.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'hls_linear_combination' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'LOOP_LC1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 1, loop 'LOOP_LC1'
INFO: [SCHED 204-61] Pipelining loop 'LOOP_LC2'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 38, loop 'LOOP_LC2'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0.57 seconds. CPU system time: 0.02 seconds. Elapsed time: 0.63 seconds; current allocated memory: 200.732 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101]==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z020-clg484-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -output=/home/osm/Documents/SECT-MAYO/MAYO/HLS/ips/hls_linear_combination.zip
INFO: [HLS 200-1464] Running solution command: config_export -rtl=vhdl
INFO: [HLS 200-1510] Running: set_part xc7z020-clg484-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_export -format ip_catalog -output /home/osm/Documents/SECT-MAYO/MAYO/HLS/ips/hls_linear_combination.zip -rtl vhdl 
INFO: [HLS 200-1510] Running: set_directive_top -name hls_linear_combination hls_linear_combination 
INFO: [HLS 200-1510] Running: set_directive_pipeline hls_linear_combination/LOOP_LC2 
INFO: [HLS 200-1510] Running: set_directive_pipeline hls_linear_combination/LOOP_LC1 
INFO: [HLS 200-1510] Running: set_directive_array_partition -type cyclic -factor 16 -dim 1 hls_linear_combination accumulators 
INFO: [HLS 200-1510] Running: set_directive_interface -mode ap_hs hls_linear_combination vecs 
INFO: [HLS 200-1510] Running: set_directive_interface -mode ap_hs hls_linear_combination coeffs 
INFO: [HLS 200-1510] Running: set_directive_interface -mode ap_hs hls_linear_combination len 
INFO: [HLS 200-1510] Running: set_directive_interface -mode ap_hs hls_linear_combination out 
INFO: [HLS 200-1510] Running: set_directive_interface -mode ap_ctrl_chain hls_linear_combination 
INFO: [HLS 200-1510] Running: set_directive_unroll -factor 2 -skip_exit_check hls_linear_combination/LOOP_LC2 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0.01 seconds. CPU system time: 0 seconds. Elapsed time: 0.01 seconds; current allocated memory: 164.559 MB.
INFO: [HLS 200-10] Analyzing design file 'hls_linear_combination/hls_linear_combination.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 0.3 seconds. CPU system time: 0.13 seconds. Elapsed time: 0.46 seconds; current allocated memory: 165.133 MB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-188] Unrolling loop 'LOOP_LC2' (hls_linear_combination/hls_linear_combination.cpp:17:12) in function 'hls_linear_combination' partially (and skipping exit check) with a factor of 2 (hls_linear_combination/hls_linear_combination.cpp:17:12)
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 5.97 seconds. CPU system time: 0.34 seconds. Elapsed time: 6.43 seconds; current allocated memory: 167.766 MB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0.01 seconds. Elapsed time: 0 seconds; current allocated memory: 167.767 MB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0.03 seconds. CPU system time: 0 seconds. Elapsed time: 0.05 seconds; current allocated memory: 169.038 MB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0.05 seconds. CPU system time: 0 seconds. Elapsed time: 0.06 seconds; current allocated memory: 168.241 MB.
INFO: [XFORM 203-502] Unrolling all sub-loops inside loop 'LOOP_LC1' (hls_linear_combination/hls_linear_combination.cpp:10) in function 'hls_linear_combination' for pipelining.
INFO: [HLS 200-489] Unrolling loop 'LOOP_LC12' (hls_linear_combination/hls_linear_combination.cpp:12) in function 'hls_linear_combination' completely with a factor of 60.
INFO: [XFORM 203-101] Partitioning array 'accumulators'  in dimension 1 with a cyclic factor 16.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.0' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.1' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.2' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.3' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.4' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.5' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.6' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.7' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.8' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.9' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.10' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.11' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.12' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.13' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.14' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.15' completely based on array size.
INFO: [XFORM 203-101] Partitioning array 'accumulators.0' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.1' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.2' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.3' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.4' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.5' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.6' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.7' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.8' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.9' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.10' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.11' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.12' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.13' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.14' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.15' in dimension 1 completely.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 0.45 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.58 seconds; current allocated memory: 189.288 MB.
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 0.23 seconds. CPU system time: 0 seconds. Elapsed time: 0.26 seconds; current allocated memory: 182.995 MB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'hls_linear_combination' ...
WARNING: [SYN 201-107] Renaming port name 'hls_linear_combination/out' to 'hls_linear_combination/out_r' to avoid the conflict with HDL keywords or other object names.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'hls_linear_combination' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'LOOP_LC1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 1, loop 'LOOP_LC1'
INFO: [SCHED 204-61] Pipelining loop 'LOOP_LC2'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 38, loop 'LOOP_LC2'
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z020-clg484-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -output=/home/osm/Documents/SECT-MAYO/MAYO/HLS/ips/hls_linear_combination.zip
INFO: [HLS 200-1464] Running solution command: config_export -rtl=vhdl
INFO: [HLS 200-1510] Running: set_part xc7z020-clg484-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_export -format ip_catalog -output /home/osm/Documents/SECT-MAYO/MAYO/HLS/ips/hls_linear_combination.zip -rtl vhdl 
INFO: [HLS 200-1510] Running: set_directive_top -name hls_linear_combination hls_linear_combination 
INFO: [HLS 200-1510] Running: set_directive_pipeline hls_linear_combination/LOOP_LC2 
INFO: [HLS 200-1510] Running: set_directive_pipeline hls_linear_combination/LOOP_LC1 
INFO: [HLS 200-1510] Running: set_directive_array_partition -type cyclic -factor 16 -dim 1 hls_linear_combination accumulators 
INFO: [HLS 200-1510] Running: set_directive_interface -mode ap_hs hls_linear_combination vecs 
INFO: [HLS 200-1510] Running: set_directive_interface -mode ap_hs hls_linear_combination coeffs 
INFO: [HLS 200-1510] Running: set_directive_interface -mode ap_hs hls_linear_combination len 
INFO: [HLS 200-1510] Running: set_directive_interface -mode ap_hs hls_linear_combination out 
INFO: [HLS 200-1510] Running: set_directive_interface -mode ap_ctrl_chain hls_linear_combination 
INFO: [HLS 200-1510] Running: set_directive_unroll -factor 4 -skip_exit_check hls_linear_combination/LOOP_LC2 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0 seconds; current allocated memory: 180.559 MB.
INFO: [HLS 200-10] Analyzing design file 'hls_linear_combination/hls_linear_combination.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 0.26 seconds. CPU system time: 0.16 seconds. Elapsed time: 0.42 seconds; current allocated memory: 181.133 MB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-188] Unrolling loop 'LOOP_LC2' (hls_linear_combination/hls_linear_combination.cpp:17:12) in function 'hls_linear_combination' partially (and skipping exit check) with a factor of 4 (hls_linear_combination/hls_linear_combination.cpp:17:12)
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 6.46 seconds. CPU system time: 0.37 seconds. Elapsed time: 6.97 seconds; current allocated memory: 183.769 MB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0 seconds; current allocated memory: 183.770 MB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0.04 seconds. CPU system time: 0 seconds. Elapsed time: 0.05 seconds; current allocated memory: 185.025 MB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0.06 seconds. CPU system time: 0 seconds. Elapsed time: 0.13 seconds; current allocated memory: 184.240 MB.
INFO: [XFORM 203-502] Unrolling all sub-loops inside loop 'LOOP_LC1' (hls_linear_combination/hls_linear_combination.cpp:10) in function 'hls_linear_combination' for pipelining.
INFO: [HLS 200-489] Unrolling loop 'LOOP_LC12' (hls_linear_combination/hls_linear_combination.cpp:12) in function 'hls_linear_combination' completely with a factor of 60.
INFO: [XFORM 203-101] Partitioning array 'accumulators'  in dimension 1 with a cyclic factor 16.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.0' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.1' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.2' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.3' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.4' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.5' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.6' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.7' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.8' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.9' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.10' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.11' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.12' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.13' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.14' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.15' completely based on array size.
INFO: [XFORM 203-101] Partitioning array 'accumulators.0' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.1' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.2' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.3' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.4' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.5' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.6' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.7' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.8' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.9' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.10' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.11' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.12' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.13' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.14' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.15' in dimension 1 completely.
INFO: [XFORM 203-603] Inlining function 'aesl_mux_load.3i32P0A.i2' into 'hls_linear_combination' (hls_linear_combination/hls_linear_combination.cpp:23).
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 0.41 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.46 seconds; current allocated memory: 205.260 MB.
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 0.26 seconds. CPU system time: 0 seconds. Elapsed time: 0.28 seconds; current allocated memory: 198.881 MB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'hls_linear_combination' ...
WARNING: [SYN 201-107] Renaming port name 'hls_linear_combination/out' to 'hls_linear_combination/out_r' to avoid the conflict with HDL keywords or other object names.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'hls_linear_combination' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'LOOP_LC1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 1, loop 'LOOP_LC1'
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z020-clg484-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -output=/home/osm/Documents/SECT-MAYO/MAYO/HLS/ips/hls_linear_combination.zip
INFO: [HLS 200-1464] Running solution command: config_export -rtl=vhdl
INFO: [HLS 200-1510] Running: set_part xc7z020-clg484-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_export -format ip_catalog -output /home/osm/Documents/SECT-MAYO/MAYO/HLS/ips/hls_linear_combination.zip -rtl vhdl 
INFO: [HLS 200-1510] Running: set_directive_top -name hls_linear_combination hls_linear_combination 
INFO: [HLS 200-1510] Running: set_directive_pipeline hls_linear_combination/LOOP_LC2 
INFO: [HLS 200-1510] Running: set_directive_pipeline hls_linear_combination/LOOP_LC1 
INFO: [HLS 200-1510] Running: set_directive_array_partition -type cyclic -factor 16 -dim 1 hls_linear_combination accumulators 
INFO: [HLS 200-1510] Running: set_directive_interface -mode ap_hs hls_linear_combination vecs 
INFO: [HLS 200-1510] Running: set_directive_interface -mode ap_hs hls_linear_combination coeffs 
INFO: [HLS 200-1510] Running: set_directive_interface -mode ap_hs hls_linear_combination len 
INFO: [HLS 200-1510] Running: set_directive_interface -mode ap_hs hls_linear_combination out 
INFO: [HLS 200-1510] Running: set_directive_interface -mode ap_ctrl_chain hls_linear_combination 
INFO: [HLS 200-1510] Running: set_directive_unroll -factor 10 -skip_exit_check hls_linear_combination/LOOP_LC2 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0.01 seconds. CPU system time: 0 seconds. Elapsed time: 0.01 seconds; current allocated memory: 180.559 MB.
INFO: [HLS 200-10] Analyzing design file 'hls_linear_combination/hls_linear_combination.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 0.26 seconds. CPU system time: 0.14 seconds. Elapsed time: 0.41 seconds; current allocated memory: 181.132 MB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-188] Unrolling loop 'LOOP_LC2' (hls_linear_combination/hls_linear_combination.cpp:17:12) in function 'hls_linear_combination' partially (and skipping exit check) with a factor of 10 (hls_linear_combination/hls_linear_combination.cpp:17:12)
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 6.69 seconds. CPU system time: 0.41 seconds. Elapsed time: 7.29 seconds; current allocated memory: 183.923 MB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0 seconds; current allocated memory: 183.925 MB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0.03 seconds. CPU system time: 0 seconds. Elapsed time: 0.04 seconds; current allocated memory: 185.196 MB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0.04 seconds. CPU system time: 0 seconds. Elapsed time: 0.04 seconds; current allocated memory: 184.382 MB.
INFO: [XFORM 203-502] Unrolling all sub-loops inside loop 'LOOP_LC1' (hls_linear_combination/hls_linear_combination.cpp:10) in function 'hls_linear_combination' for pipelining.
INFO: [HLS 200-489] Unrolling loop 'LOOP_LC12' (hls_linear_combination/hls_linear_combination.cpp:12) in function 'hls_linear_combination' completely with a factor of 60.
INFO: [XFORM 203-101] Partitioning array 'accumulators'  in dimension 1 with a cyclic factor 16.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.0' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.1' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.2' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.3' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.4' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.5' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.6' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.7' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.8' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.9' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.10' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.11' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.12' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.13' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.14' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.15' completely based on array size.
INFO: [XFORM 203-101] Partitioning array 'accumulators.0' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.1' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.2' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.3' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.4' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.5' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.6' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.7' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.8' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.9' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.10' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.11' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.12' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.13' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.14' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.15' in dimension 1 completely.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 0.4 seconds. CPU system time: 0.03 seconds. Elapsed time: 0.48 seconds; current allocated memory: 205.405 MB.
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 0.27 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.28 seconds; current allocated memory: 199.106 MB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'hls_linear_combination' ...
WARNING: [SYN 201-107] Renaming port name 'hls_linear_combination/out' to 'hls_linear_combination/out_r' to avoid the conflict with HDL keywords or other object names.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'hls_linear_combination' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'LOOP_LC1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 1, loop 'LOOP_LC1'
INFO: [SCHED 204-61] Pipelining loop 'LOOP_LC2'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 38, loop 'LOOP_LC2'
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z020-clg484-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -output=/home/osm/Documents/SECT-MAYO/MAYO/HLS/ips/hls_linear_combination.zip
INFO: [HLS 200-1464] Running solution command: config_export -rtl=vhdl
INFO: [HLS 200-1510] Running: set_part xc7z020-clg484-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_export -format ip_catalog -output /home/osm/Documents/SECT-MAYO/MAYO/HLS/ips/hls_linear_combination.zip -rtl vhdl 
INFO: [HLS 200-1510] Running: set_directive_top -name hls_linear_combination hls_linear_combination 
INFO: [HLS 200-1510] Running: set_directive_pipeline hls_linear_combination/LOOP_LC2 
INFO: [HLS 200-1510] Running: set_directive_pipeline hls_linear_combination/LOOP_LC1 
INFO: [HLS 200-1510] Running: set_directive_array_partition -type cyclic -factor 16 -dim 1 hls_linear_combination accumulators 
INFO: [HLS 200-1510] Running: set_directive_interface -mode ap_hs hls_linear_combination vecs 
INFO: [HLS 200-1510] Running: set_directive_interface -mode ap_hs hls_linear_combination coeffs 
INFO: [HLS 200-1510] Running: set_directive_interface -mode ap_hs hls_linear_combination len 
INFO: [HLS 200-1510] Running: set_directive_interface -mode ap_hs hls_linear_combination out 
INFO: [HLS 200-1510] Running: set_directive_interface -mode ap_ctrl_chain hls_linear_combination 
INFO: [HLS 200-1510] Running: set_directive_unroll -factor 10 -skip_exit_check hls_linear_combination/LOOP_LC2 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0.01 seconds. CPU system time: 0 seconds. Elapsed time: 0.01 seconds; current allocated memory: 180.591 MB.
INFO: [HLS 200-10] Analyzing design file 'hls_linear_combination/hls_linear_combination.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 2.58 seconds. CPU system time: 0.31 seconds. Elapsed time: 3.19 seconds; current allocated memory: 181.150 MB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-188] Unrolling loop 'LOOP_LC2' (hls_linear_combination/hls_linear_combination.cpp:19:12) in function 'hls_linear_combination' partially (and skipping exit check) with a factor of 10 (hls_linear_combination/hls_linear_combination.cpp:19:12)
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 6.75 seconds. CPU system time: 0.34 seconds. Elapsed time: 7.24 seconds; current allocated memory: 183.939 MB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0 seconds; current allocated memory: 183.940 MB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0.04 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.07 seconds; current allocated memory: 185.957 MB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0.06 seconds. CPU system time: 0 seconds. Elapsed time: 0.07 seconds; current allocated memory: 185.578 MB.
INFO: [XFORM 203-502] Unrolling all sub-loops inside loop 'LOOP_LC1' (hls_linear_combination/hls_linear_combination.cpp:12) in function 'hls_linear_combination' for pipelining.
INFO: [HLS 200-489] Unrolling loop 'LOOP_LC12' (hls_linear_combination/hls_linear_combination.cpp:14) in function 'hls_linear_combination' completely with a factor of 60.
INFO: [XFORM 203-101] Partitioning array 'accumulators'  in dimension 1 with a cyclic factor 16.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.0' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.1' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.2' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.3' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.4' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.5' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.6' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.7' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.8' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.9' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.10' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.11' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.12' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.13' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.14' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.15' completely based on array size.
INFO: [XFORM 203-101] Partitioning array 'accumulators.0' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.1' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.2' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.3' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.4' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.5' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.6' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.7' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.8' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.9' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.10' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.11' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.12' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.13' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.14' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.15' in dimension 1 completely.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 1.21 seconds. CPU system time: 0.04 seconds. Elapsed time: 1.4 seconds; current allocated memory: 209.077 MB.
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 1.01 seconds. CPU system time: 0 seconds. Elapsed time: 1.02 seconds; current allocated memory: 206.321 MB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'hls_linear_combination' ...
WARNING: [SYN 201-107] Renaming port name 'hls_linear_combination/out' to 'hls_linear_combination/out_r' to avoid the conflict with HDL keywords or other object names.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'hls_linear_combination' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln15_59) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln15_58) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln15_57) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln15_56) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln15_55) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln15_54) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln15_53) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln15_52) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln15_51) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln15_50) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln15_49) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln15_48) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln15_47) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln15_46) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln15_45) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln15_44) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln15_43) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln15_42) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln15_41) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln15_40) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln15_39) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln15_38) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln15_37) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln15_36) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln15_35) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln15_34) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln15_33) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln15_32) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln15_31) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln15_30) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln15_29) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln15_28) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln15_27) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln15_26) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln15_25) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln15_24) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln15_23) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln15_22) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln15_21) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln15_20) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln15_19) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln15_18) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln15_17) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln15_16) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln15_15) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln15_14) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln15_13) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln15_12) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln15_11) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln15_10) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln15_9) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln15_8) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln15_7) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln15_6) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln15_5) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln15_4) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln15_3) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln15_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln15_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln15) to 3 in order to utilize available DSP registers.
INFO: [SCHED 204-61] Pipelining loop 'LOOP_LC1'.
WARNING: [HLS 200-880] The II Violation in module 'hls_linear_combination' (loop 'LOOP_LC1'): Unable to enforce a carried dependence constraint (II = 1, distance = 1, offset = 1) between wire read on port 'vecs' (hls_linear_combination/hls_linear_combination.cpp:15) and wire read on port 'vecs' (hls_linear_combination/hls_linear_combination.cpp:15).
WARNING: [HLS 200-880] The II Violation in module 'hls_linear_combination' (loop 'LOOP_LC1'): Unable to enforce a carried dependence constraint (II = 2, distance = 1, offset = 1) between wire read on port 'vecs' (hls_linear_combination/hls_linear_combination.cpp:15) and wire read on port 'vecs' (hls_linear_combination/hls_linear_combination.cpp:15).
WARNING: [HLS 200-880] The II Violation in module 'hls_linear_combination' (loop 'LOOP_LC1'): Unable to enforce a carried dependence constraint (II = 3, distance = 1, offset = 1) between wire read on port 'vecs' (hls_linear_combination/hls_linear_combination.cpp:15) and wire read on port 'vecs' (hls_linear_combination/hls_linear_combination.cpp:15).
WARNING: [HLS 200-880] The II Violation in module 'hls_linear_combination' (loop 'LOOP_LC1'): Unable to enforce a carried dependence constraint (II = 4, distance = 1, offset = 1) between wire read on port 'vecs' (hls_linear_combination/hls_linear_combination.cpp:15) and wire read on port 'vecs' (hls_linear_combination/hls_linear_combination.cpp:15).
WARNING: [HLS 200-880] The II Violation in module 'hls_linear_combination' (loop 'LOOP_LC1'): Unable to enforce a carried dependence constraint (II = 35, distance = 1, offset = 1) between wire read on port 'vecs' (hls_linear_combination/hls_linear_combination.cpp:15) and wire read on port 'vecs' (hls_linear_combination/hls_linear_combination.cpp:15).
WARNING: [HLS 200-880] The II Violation in module 'hls_linear_combination' (loop 'LOOP_LC1'): Unable to enforce a carried dependence constraint (II = 51, distance = 1, offset = 1) between wire read on port 'vecs' (hls_linear_combination/hls_linear_combination.cpp:15) and wire read on port 'vecs' (hls_linear_combination/hls_linear_combination.cpp:15).
WARNING: [HLS 200-880] The II Violation in module 'hls_linear_combination' (loop 'LOOP_LC1'): Unable to enforce a carried dependence constraint (II = 59, distance = 1, offset = 1) between wire read on port 'vecs' (hls_linear_combination/hls_linear_combination.cpp:15) and wire read on port 'vecs' (hls_linear_combination/hls_linear_combination.cpp:15).
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 60, Depth = 63, loop 'LOOP_LC1'
INFO: [SCHED 204-61] Pipelining loop 'LOOP_LC2'.
WARNING: [HLS 200-880] The II Violation in module 'hls_linear_combination' (loop 'LOOP_LC2'): Unable to enforce a carried dependence constraint (II = 1, distance = 1, offset = 0) between register read on port 'out_r' (hls_linear_combination/hls_linear_combination.cpp:29) and register write on port 'out_r' (hls_linear_combination/hls_linear_combination.cpp:28).
WARNING: [HLS 200-880] The II Violation in module 'hls_linear_combination' (loop 'LOOP_LC2'): Unable to enforce a carried dependence constraint (II = 2, distance = 1, offset = 1) between register write on port 'out_r' (hls_linear_combination/hls_linear_combination.cpp:28) and register write on port 'out_r' (hls_linear_combination/hls_linear_combination.cpp:28).
WARNING: [HLS 200-880] The II Violation in module 'hls_linear_combination' (loop 'LOOP_LC2'): Unable to enforce a carried dependence constraint (II = 3, distance = 1, offset = 0) between register read on port 'out_r' (hls_linear_combination/hls_linear_combination.cpp:29) and register write on port 'out_r' (hls_linear_combination/hls_linear_combination.cpp:28).
WARNING: [HLS 200-880] The II Violation in module 'hls_linear_combination' (loop 'LOOP_LC2'): Unable to enforce a carried dependence constraint (II = 4, distance = 1, offset = 1) between register write on port 'out_r' (hls_linear_combination/hls_linear_combination.cpp:28) and register write on port 'out_r' (hls_linear_combination/hls_linear_combination.cpp:28).
WARNING: [HLS 200-880] The II Violation in module 'hls_linear_combination' (loop 'LOOP_LC2'): Unable to enforce a carried dependence constraint (II = 19, distance = 1, offset = 0) between register read on port 'out_r' (hls_linear_combination/hls_linear_combination.cpp:29) and register write on port 'out_r' (hls_linear_combination/hls_linear_combination.cpp:28).
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 20, Depth = 58, loop 'LOOP_LC2'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 5.84 seconds. CPU system time: 0.18 seconds. Elapsed time: 6.19 seconds; current allocated memory: 210.202 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 1.93 seconds. CPU system time: 0.11 seconds. Elapsed time: 2.06 seconds; current allocated memory: 214.660 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'hls_linear_combination' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-500] Setting interface mode on port 'hls_linear_combination/vecs' to 'ap_hs'.
INFO: [RTGEN 206-500] Setting interface mode on port 'hls_linear_combination/coeffs' to 'ap_hs'.
INFO: [RTGEN 206-500] Setting interface mode on port 'hls_linear_combination/len' to 'ap_hs'.
INFO: [RTGEN 206-500] Setting interface mode on port 'hls_linear_combination/out_r' to 'ap_hs' (register).
INFO: [RTGEN 206-500] Setting interface mode on function 'hls_linear_combination' to 'ap_ctrl_chain'.
WARNING: [RTGEN 206-101] Register 'accumulators_14_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_14_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_14_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_15_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_15_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_15_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_0_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_0_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_0_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_0_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_1_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_1_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_1_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_1_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_2_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_2_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_2_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_2_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_3_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_3_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_3_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_3_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_4_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_4_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_4_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_4_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_5_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_5_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_5_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_5_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_6_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_6_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_6_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_6_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_7_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_7_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_7_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_7_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_9_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_9_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_9_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_9_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_11_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_11_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_11_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_11_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_13_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_13_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_13_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_8_0' is power-on initialization.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z020-clg484-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -output=/home/osm/Documents/SECT-MAYO/MAYO/HLS/ips/hls_linear_combination.zip
INFO: [HLS 200-1464] Running solution command: config_export -rtl=vhdl
INFO: [HLS 200-1510] Running: set_part xc7z020-clg484-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_export -format ip_catalog -output /home/osm/Documents/SECT-MAYO/MAYO/HLS/ips/hls_linear_combination.zip -rtl vhdl 
INFO: [HLS 200-1510] Running: set_directive_top -name hls_linear_combination hls_linear_combination 
INFO: [HLS 200-1510] Running: set_directive_pipeline hls_linear_combination/LOOP_LC2 
INFO: [HLS 200-1510] Running: set_directive_pipeline hls_linear_combination/LOOP_LC1 
INFO: [HLS 200-1510] Running: set_directive_array_partition -type cyclic -factor 16 -dim 1 hls_linear_combination accumulators 
INFO: [HLS 200-1510] Running: set_directive_interface -mode ap_hs hls_linear_combination vecs 
INFO: [HLS 200-1510] Running: set_directive_interface -mode ap_hs hls_linear_combination coeffs 
INFO: [HLS 200-1510] Running: set_directive_interface -mode ap_hs hls_linear_combination len 
INFO: [HLS 200-1510] Running: set_directive_interface -mode ap_hs hls_linear_combination out 
INFO: [HLS 200-1510] Running: set_directive_interface -mode ap_ctrl_chain hls_linear_combination 
INFO: [HLS 200-1510] Running: set_directive_unroll -factor 10 -skip_exit_check hls_linear_combination/LOOP_LC2 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0.01 seconds. CPU system time: 0 seconds. Elapsed time: 0.02 seconds; current allocated memory: 164.591 MB.
INFO: [HLS 200-10] Analyzing design file 'hls_linear_combination/hls_linear_combination.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 2.77 seconds. CPU system time: 0.28 seconds. Elapsed time: 3.23 seconds; current allocated memory: 165.150 MB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-188] Unrolling loop 'LOOP_LC2' (hls_linear_combination/hls_linear_combination.cpp:19:12) in function 'hls_linear_combination' partially (and skipping exit check) with a factor of 10 (hls_linear_combination/hls_linear_combination.cpp:19:12)
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 6.65 seconds. CPU system time: 0.35 seconds. Elapsed time: 7.21 seconds; current allocated memory: 167.924 MB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0 seconds; current allocated memory: 167.925 MB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0.04 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.06 seconds; current allocated memory: 169.864 MB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0.07 seconds. CPU system time: 0 seconds. Elapsed time: 0.06 seconds; current allocated memory: 169.511 MB.
INFO: [XFORM 203-502] Unrolling all sub-loops inside loop 'LOOP_LC1' (hls_linear_combination/hls_linear_combination.cpp:12) in function 'hls_linear_combination' for pipelining.
INFO: [HLS 200-489] Unrolling loop 'LOOP_LC12' (hls_linear_combination/hls_linear_combination.cpp:14) in function 'hls_linear_combination' completely with a factor of 60.
INFO: [XFORM 203-101] Partitioning array 'accumulators'  in dimension 1 with a cyclic factor 16.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.0' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.1' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.2' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.3' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.4' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.5' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.6' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.7' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.8' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.9' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.10' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.11' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.12' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.13' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.14' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.15' completely based on array size.
INFO: [XFORM 203-101] Partitioning array 'accumulators.0' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.1' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.2' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.3' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.4' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.5' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.6' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.7' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.8' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.9' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.10' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.11' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.12' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.13' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.14' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.15' in dimension 1 completely.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 0.37 seconds. CPU system time: 0.03 seconds. Elapsed time: 0.42 seconds; current allocated memory: 190.932 MB.
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 0.21 seconds. CPU system time: 0 seconds. Elapsed time: 0.23 seconds; current allocated memory: 184.606 MB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'hls_linear_combination' ...
WARNING: [SYN 201-107] Renaming port name 'hls_linear_combination/out' to 'hls_linear_combination/out_r' to avoid the conflict with HDL keywords or other object names.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'hls_linear_combination' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'LOOP_LC1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 1, loop 'LOOP_LC1'
INFO: [SCHED 204-61] Pipelining loop 'LOOP_LC2'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 38, loop 'LOOP_LC2'
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z020-clg484-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -output=/home/osm/Documents/SECT-MAYO/MAYO/HLS/ips/hls_linear_combination.zip
INFO: [HLS 200-1464] Running solution command: config_export -rtl=vhdl
INFO: [HLS 200-1510] Running: set_part xc7z020-clg484-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_export -format ip_catalog -output /home/osm/Documents/SECT-MAYO/MAYO/HLS/ips/hls_linear_combination.zip -rtl vhdl 
INFO: [HLS 200-1510] Running: set_directive_top -name hls_linear_combination hls_linear_combination 
INFO: [HLS 200-1510] Running: set_directive_pipeline hls_linear_combination/LOOP_LC2 
INFO: [HLS 200-1510] Running: set_directive_pipeline hls_linear_combination/LOOP_LC1 
INFO: [HLS 200-1510] Running: set_directive_array_partition -type cyclic -factor 16 -dim 1 hls_linear_combination accumulators 
INFO: [HLS 200-1510] Running: set_directive_interface -mode ap_hs hls_linear_combination vecs 
INFO: [HLS 200-1510] Running: set_directive_interface -mode ap_hs hls_linear_combination coeffs 
INFO: [HLS 200-1510] Running: set_directive_interface -mode ap_hs hls_linear_combination len 
INFO: [HLS 200-1510] Running: set_directive_interface -mode ap_hs hls_linear_combination out 
INFO: [HLS 200-1510] Running: set_directive_interface -mode ap_ctrl_chain hls_linear_combination 
INFO: [HLS 200-1510] Running: set_directive_unroll -factor 10 -skip_exit_check hls_linear_combination/LOOP_LC2 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0.01 seconds. CPU system time: 0 seconds. Elapsed time: 0.02 seconds; current allocated memory: 180.591 MB.
INFO: [HLS 200-10] Analyzing design file 'hls_linear_combination/hls_linear_combination.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 2.53 seconds. CPU system time: 0.2 seconds. Elapsed time: 2.82 seconds; current allocated memory: 181.149 MB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-188] Unrolling loop 'LOOP_LC2' (hls_linear_combination/hls_linear_combination.cpp:22:12) in function 'hls_linear_combination' partially (and skipping exit check) with a factor of 10 (hls_linear_combination/hls_linear_combination.cpp:22:12)
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 6.54 seconds. CPU system time: 0.38 seconds. Elapsed time: 7.1 seconds; current allocated memory: 183.924 MB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.01 seconds; current allocated memory: 183.925 MB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0.04 seconds. CPU system time: 0 seconds. Elapsed time: 0.03 seconds; current allocated memory: 185.866 MB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0.04 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.04 seconds; current allocated memory: 185.512 MB.
INFO: [XFORM 203-502] Unrolling all sub-loops inside loop 'LOOP_LC1' (hls_linear_combination/hls_linear_combination.cpp:12) in function 'hls_linear_combination' for pipelining.
INFO: [HLS 200-489] Unrolling loop 'LOOP_LC12' (hls_linear_combination/hls_linear_combination.cpp:14) in function 'hls_linear_combination' completely with a factor of 60.
INFO: [XFORM 203-101] Partitioning array 'accumulators'  in dimension 1 with a cyclic factor 16.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.0' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.1' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.2' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.3' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.4' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.5' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.6' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.7' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.8' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.9' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.10' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.11' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.12' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.13' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.14' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.15' completely based on array size.
INFO: [XFORM 203-101] Partitioning array 'accumulators.0' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.1' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.2' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.3' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.4' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.5' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.6' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.7' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.8' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.9' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.10' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.11' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.12' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.13' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.14' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.15' in dimension 1 completely.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 0.34 seconds. CPU system time: 0.02 seconds. Elapsed time: 0.38 seconds; current allocated memory: 206.939 MB.
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 0.2 seconds. CPU system time: 0 seconds. Elapsed time: 0.2 seconds; current allocated memory: 200.608 MB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'hls_linear_combination' ...
WARNING: [SYN 201-107] Renaming port name 'hls_linear_combination/out' to 'hls_linear_combination/out_r' to avoid the conflict with HDL keywords or other object names.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'hls_linear_combination' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'LOOP_LC1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 1, loop 'LOOP_LC1'
INFO: [SCHED 204-61] Pipelining loop 'LOOP_LC2'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 38, loop 'LOOP_LC2'
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z020-clg484-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -output=/home/osm/Documents/SECT-MAYO/MAYO/HLS/ips/hls_linear_combination.zip
INFO: [HLS 200-1464] Running solution command: config_export -rtl=vhdl
INFO: [HLS 200-1510] Running: set_part xc7z020-clg484-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_export -format ip_catalog -output /home/osm/Documents/SECT-MAYO/MAYO/HLS/ips/hls_linear_combination.zip -rtl vhdl 
INFO: [HLS 200-1510] Running: set_directive_top -name hls_linear_combination hls_linear_combination 
INFO: [HLS 200-1510] Running: set_directive_pipeline hls_linear_combination/LOOP_LC2 
INFO: [HLS 200-1510] Running: set_directive_pipeline hls_linear_combination/LOOP_LC1 
INFO: [HLS 200-1510] Running: set_directive_array_partition -type cyclic -factor 16 -dim 1 hls_linear_combination accumulators 
INFO: [HLS 200-1510] Running: set_directive_interface -mode ap_hs hls_linear_combination vecs 
INFO: [HLS 200-1510] Running: set_directive_interface -mode ap_hs hls_linear_combination coeffs 
INFO: [HLS 200-1510] Running: set_directive_interface -mode ap_hs hls_linear_combination len 
INFO: [HLS 200-1510] Running: set_directive_interface -mode ap_hs hls_linear_combination out 
INFO: [HLS 200-1510] Running: set_directive_unroll -skip_exit_check -factor 10 hls_linear_combination/LOOP_LC2 
INFO: [HLS 200-1510] Running: set_directive_interface -mode ap_ctrl_hs hls_linear_combination 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0.01 seconds. CPU system time: 0 seconds. Elapsed time: 0.01 seconds; current allocated memory: 180.580 MB.
INFO: [HLS 200-10] Analyzing design file 'hls_linear_combination/hls_linear_combination.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 2.67 seconds. CPU system time: 0.36 seconds. Elapsed time: 3.49 seconds; current allocated memory: 181.169 MB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-188] Unrolling loop 'LOOP_LC2' (hls_linear_combination/hls_linear_combination.cpp:22:12) in function 'hls_linear_combination' partially (and skipping exit check) with a factor of 10 (hls_linear_combination/hls_linear_combination.cpp:22:12)
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 6.63 seconds. CPU system time: 0.34 seconds. Elapsed time: 7.12 seconds; current allocated memory: 183.980 MB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0 seconds; current allocated memory: 183.981 MB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0.04 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.04 seconds; current allocated memory: 185.921 MB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0.06 seconds. CPU system time: 0 seconds. Elapsed time: 0.06 seconds; current allocated memory: 185.572 MB.
INFO: [XFORM 203-502] Unrolling all sub-loops inside loop 'LOOP_LC1' (hls_linear_combination/hls_linear_combination.cpp:12) in function 'hls_linear_combination' for pipelining.
INFO: [HLS 200-489] Unrolling loop 'LOOP_LC12' (hls_linear_combination/hls_linear_combination.cpp:14) in function 'hls_linear_combination' completely with a factor of 60.
INFO: [XFORM 203-101] Partitioning array 'accumulators'  in dimension 1 with a cyclic factor 16.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.0' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.1' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.2' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.3' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.4' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.5' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.6' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.7' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.8' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.9' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.10' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.11' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.12' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.13' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.14' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.15' completely based on array size.
INFO: [XFORM 203-101] Partitioning array 'accumulators.0' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.1' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.2' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.3' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.4' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.5' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.6' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.7' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.8' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.9' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.10' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.11' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.12' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.13' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.14' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.15' in dimension 1 completely.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 0.43 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.54 seconds; current allocated memory: 206.998 MB.
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 0.29 seconds. CPU system time: 0 seconds. Elapsed time: 0.36 seconds; current allocated memory: 200.640 MB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'hls_linear_combination' ...
WARNING: [SYN 201-107] Renaming port name 'hls_linear_combination/out' to 'hls_linear_combination/out_r' to avoid the conflict with HDL keywords or other object names.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'hls_linear_combination' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'LOOP_LC1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 1, loop 'LOOP_LC1'
INFO: [SCHED 204-61] Pipelining loop 'LOOP_LC2'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 38, loop 'LOOP_LC2'
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z020-clg484-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -output=/home/osm/Documents/SECT-MAYO/MAYO/HLS/ips/hls_linear_combination.zip
INFO: [HLS 200-1464] Running solution command: config_export -rtl=vhdl
INFO: [HLS 200-1510] Running: set_part xc7z020-clg484-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_export -format ip_catalog -output /home/osm/Documents/SECT-MAYO/MAYO/HLS/ips/hls_linear_combination.zip -rtl vhdl 
INFO: [HLS 200-1510] Running: set_directive_top -name hls_linear_combination hls_linear_combination 
INFO: [HLS 200-1510] Running: set_directive_pipeline hls_linear_combination/LOOP_LC2 
INFO: [HLS 200-1510] Running: set_directive_pipeline hls_linear_combination/LOOP_LC1 
INFO: [HLS 200-1510] Running: set_directive_array_partition -type cyclic -factor 16 -dim 1 hls_linear_combination accumulators 
INFO: [HLS 200-1510] Running: set_directive_interface -mode ap_hs hls_linear_combination vecs 
INFO: [HLS 200-1510] Running: set_directive_interface -mode ap_hs hls_linear_combination coeffs 
INFO: [HLS 200-1510] Running: set_directive_interface -mode ap_hs hls_linear_combination len 
INFO: [HLS 200-1510] Running: set_directive_interface -mode ap_hs hls_linear_combination out 
INFO: [HLS 200-1510] Running: set_directive_unroll -skip_exit_check -factor 10 hls_linear_combination/LOOP_LC2 
INFO: [HLS 200-1510] Running: set_directive_interface -mode ap_ctrl_hs hls_linear_combination 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.01 seconds; current allocated memory: 164.582 MB.
INFO: [HLS 200-10] Analyzing design file 'hls_linear_combination/hls_linear_combination.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 2.59 seconds. CPU system time: 0.27 seconds. Elapsed time: 3.04 seconds; current allocated memory: 165.170 MB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-188] Unrolling loop 'LOOP_LC2' (hls_linear_combination/hls_linear_combination.cpp:22:12) in function 'hls_linear_combination' partially (and skipping exit check) with a factor of 10 (hls_linear_combination/hls_linear_combination.cpp:22:12)
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 6.83 seconds. CPU system time: 0.4 seconds. Elapsed time: 7.42 seconds; current allocated memory: 167.979 MB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0 seconds; current allocated memory: 167.980 MB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0.04 seconds. CPU system time: 0 seconds. Elapsed time: 0.05 seconds; current allocated memory: 169.918 MB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0.06 seconds. CPU system time: 0 seconds. Elapsed time: 0.05 seconds; current allocated memory: 169.568 MB.
INFO: [XFORM 203-502] Unrolling all sub-loops inside loop 'LOOP_LC1' (hls_linear_combination/hls_linear_combination.cpp:12) in function 'hls_linear_combination' for pipelining.
INFO: [HLS 200-489] Unrolling loop 'LOOP_LC12' (hls_linear_combination/hls_linear_combination.cpp:14) in function 'hls_linear_combination' completely with a factor of 60.
INFO: [XFORM 203-101] Partitioning array 'accumulators'  in dimension 1 with a cyclic factor 16.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.0' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.1' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.2' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.3' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.4' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.5' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.6' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.7' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.8' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.9' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.10' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.11' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.12' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.13' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.14' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.15' completely based on array size.
INFO: [XFORM 203-101] Partitioning array 'accumulators.0' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.1' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.2' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.3' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.4' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.5' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.6' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.7' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.8' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.9' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.10' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.11' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.12' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.13' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.14' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.15' in dimension 1 completely.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 0.41 seconds. CPU system time: 0.02 seconds. Elapsed time: 0.44 seconds; current allocated memory: 190.995 MB.
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 0.27 seconds. CPU system time: 0 seconds. Elapsed time: 0.28 seconds; current allocated memory: 184.640 MB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'hls_linear_combination' ...
WARNING: [SYN 201-107] Renaming port name 'hls_linear_combination/out' to 'hls_linear_combination/out_r' to avoid the conflict with HDL keywords or other object names.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'hls_linear_combination' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'LOOP_LC1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 1, loop 'LOOP_LC1'
INFO: [SCHED 204-61] Pipelining loop 'LOOP_LC2'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 38, loop 'LOOP_LC2'
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z020-clg484-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -output=/home/osm/Documents/SECT-MAYO/MAYO/HLS/ips/hls_linear_combination.zip
INFO: [HLS 200-1464] Running solution command: config_export -rtl=vhdl
INFO: [HLS 200-1510] Running: set_part xc7z020-clg484-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_export -format ip_catalog -output /home/osm/Documents/SECT-MAYO/MAYO/HLS/ips/hls_linear_combination.zip -rtl vhdl 
INFO: [HLS 200-1510] Running: set_directive_top -name hls_linear_combination hls_linear_combination 
INFO: [HLS 200-1510] Running: set_directive_pipeline hls_linear_combination/LOOP_LC2 
INFO: [HLS 200-1510] Running: set_directive_pipeline hls_linear_combination/LOOP_LC1 
INFO: [HLS 200-1510] Running: set_directive_array_partition -type cyclic -factor 16 -dim 1 hls_linear_combination accumulators 
INFO: [HLS 200-1510] Running: set_directive_interface -mode ap_hs hls_linear_combination vecs 
INFO: [HLS 200-1510] Running: set_directive_interface -mode ap_hs hls_linear_combination coeffs 
INFO: [HLS 200-1510] Running: set_directive_interface -mode ap_hs hls_linear_combination len 
INFO: [HLS 200-1510] Running: set_directive_interface -mode ap_hs hls_linear_combination out 
INFO: [HLS 200-1510] Running: set_directive_unroll -skip_exit_check -factor 10 hls_linear_combination/LOOP_LC2 
INFO: [HLS 200-1510] Running: set_directive_interface -mode ap_ctrl_hs hls_linear_combination 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0.01 seconds. CPU system time: 0 seconds. Elapsed time: 0.03 seconds; current allocated memory: 180.591 MB.
INFO: [HLS 200-10] Analyzing design file 'hls_linear_combination/hls_linear_combination.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 3.44 seconds. CPU system time: 0.41 seconds. Elapsed time: 5.54 seconds; current allocated memory: 181.149 MB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-188] Unrolling loop 'LOOP_LC2' (hls_linear_combination/hls_linear_combination.cpp:22:12) in function 'hls_linear_combination' partially (and skipping exit check) with a factor of 10 (hls_linear_combination/hls_linear_combination.cpp:22:12)
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 9.2 seconds. CPU system time: 0.68 seconds. Elapsed time: 15.08 seconds; current allocated memory: 183.908 MB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0 seconds; current allocated memory: 183.909 MB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0.06 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.17 seconds; current allocated memory: 185.850 MB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0.08 seconds. CPU system time: 0 seconds. Elapsed time: 0.2 seconds; current allocated memory: 185.496 MB.
INFO: [XFORM 203-502] Unrolling all sub-loops inside loop 'LOOP_LC1' (hls_linear_combination/hls_linear_combination.cpp:12) in function 'hls_linear_combination' for pipelining.
INFO: [HLS 200-489] Unrolling loop 'LOOP_LC12' (hls_linear_combination/hls_linear_combination.cpp:14) in function 'hls_linear_combination' completely with a factor of 60.
INFO: [XFORM 203-101] Partitioning array 'accumulators'  in dimension 1 with a cyclic factor 16.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.0' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.1' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.2' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.3' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.4' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.5' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.6' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.7' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.8' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.9' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.10' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.11' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.12' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.13' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.14' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.15' completely based on array size.
INFO: [XFORM 203-101] Partitioning array 'accumulators.0' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.1' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.2' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.3' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.4' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.5' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.6' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.7' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.8' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.9' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.10' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.11' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.12' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.13' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.14' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.15' in dimension 1 completely.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 0.51 seconds. CPU system time: 0.03 seconds. Elapsed time: 0.83 seconds; current allocated memory: 206.927 MB.
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 0.32 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.46 seconds; current allocated memory: 200.599 MB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'hls_linear_combination' ...
WARNING: [SYN 201-107] Renaming port name 'hls_linear_combination/out' to 'hls_linear_combination/out_r' to avoid the conflict with HDL keywords or other object names.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'hls_linear_combination' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'LOOP_LC1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 1, loop 'LOOP_LC1'
INFO: [SCHED 204-61] Pipelining loop 'LOOP_LC2'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 38, loop 'LOOP_LC2'
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z020-clg484-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -output=/home/osm/Documents/SECT-MAYO/MAYO/HLS/ips/hls_linear_combination.zip
INFO: [HLS 200-1464] Running solution command: config_export -rtl=vhdl
INFO: [HLS 200-1510] Running: set_part xc7z020-clg484-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_export -format ip_catalog -output /home/osm/Documents/SECT-MAYO/MAYO/HLS/ips/hls_linear_combination.zip -rtl vhdl 
INFO: [HLS 200-1510] Running: set_directive_top -name hls_linear_combination hls_linear_combination 
INFO: [HLS 200-1510] Running: set_directive_pipeline hls_linear_combination/LOOP_LC2 
INFO: [HLS 200-1510] Running: set_directive_pipeline hls_linear_combination/LOOP_LC1 
INFO: [HLS 200-1510] Running: set_directive_array_partition -type cyclic -factor 16 -dim 1 hls_linear_combination accumulators 
INFO: [HLS 200-1510] Running: set_directive_interface -mode ap_hs hls_linear_combination vecs 
INFO: [HLS 200-1510] Running: set_directive_interface -mode ap_hs hls_linear_combination coeffs 
INFO: [HLS 200-1510] Running: set_directive_interface -mode ap_hs hls_linear_combination len 
INFO: [HLS 200-1510] Running: set_directive_interface -mode ap_hs hls_linear_combination out 
INFO: [HLS 200-1510] Running: set_directive_unroll -skip_exit_check -factor 10 hls_linear_combination/LOOP_LC2 
INFO: [HLS 200-1510] Running: set_directive_interface -mode ap_ctrl_hs hls_linear_combination 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0.01 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.02 seconds; current allocated memory: 164.591 MB.
INFO: [HLS 200-10] Analyzing design file 'hls_linear_combination/hls_linear_combination.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 3.42 seconds. CPU system time: 0.36 seconds. Elapsed time: 7.41 seconds; current allocated memory: 165.150 MB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-188] Unrolling loop 'LOOP_LC2' (hls_linear_combination/hls_linear_combination.cpp:22:12) in function 'hls_linear_combination' partially (and skipping exit check) with a factor of 10 (hls_linear_combination/hls_linear_combination.cpp:22:12)
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 9.02 seconds. CPU system time: 0.54 seconds. Elapsed time: 14.09 seconds; current allocated memory: 167.909 MB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0 seconds; current allocated memory: 167.911 MB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0.05 seconds. CPU system time: 0 seconds. Elapsed time: 0.07 seconds; current allocated memory: 169.852 MB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0.06 seconds. CPU system time: 0 seconds. Elapsed time: 0.1 seconds; current allocated memory: 169.501 MB.
INFO: [XFORM 203-502] Unrolling all sub-loops inside loop 'LOOP_LC1' (hls_linear_combination/hls_linear_combination.cpp:12) in function 'hls_linear_combination' for pipelining.
INFO: [HLS 200-489] Unrolling loop 'LOOP_LC12' (hls_linear_combination/hls_linear_combination.cpp:14) in function 'hls_linear_combination' completely with a factor of 60.
INFO: [XFORM 203-101] Partitioning array 'accumulators'  in dimension 1 with a cyclic factor 16.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.0' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.1' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.2' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.3' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.4' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.5' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.6' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.7' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.8' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.9' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.10' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.11' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.12' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.13' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.14' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.15' completely based on array size.
INFO: [XFORM 203-101] Partitioning array 'accumulators.0' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.1' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.2' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.3' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.4' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.5' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.6' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.7' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.8' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.9' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.10' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.11' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.12' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.13' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.14' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.15' in dimension 1 completely.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 0.47 seconds. CPU system time: 0.02 seconds. Elapsed time: 0.69 seconds; current allocated memory: 190.929 MB.
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 0.33 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.46 seconds; current allocated memory: 184.600 MB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'hls_linear_combination' ...
WARNING: [SYN 201-107] Renaming port name 'hls_linear_combination/out' to 'hls_linear_combination/out_r' to avoid the conflict with HDL keywords or other object names.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'hls_linear_combination' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'LOOP_LC1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 1, loop 'LOOP_LC1'
INFO: [SCHED 204-61] Pipelining loop 'LOOP_LC2'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 38, loop 'LOOP_LC2'
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z020-clg484-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -output=/home/osm/Documents/SECT-MAYO/MAYO/HLS/ips/hls_linear_combination.zip
INFO: [HLS 200-1464] Running solution command: config_export -rtl=vhdl
INFO: [HLS 200-1510] Running: set_part xc7z020-clg484-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_export -format ip_catalog -output /home/osm/Documents/SECT-MAYO/MAYO/HLS/ips/hls_linear_combination.zip -rtl vhdl 
INFO: [HLS 200-1510] Running: set_directive_top -name hls_linear_combination hls_linear_combination 
INFO: [HLS 200-1510] Running: set_directive_pipeline hls_linear_combination/LOOP_LC2 
INFO: [HLS 200-1510] Running: set_directive_pipeline hls_linear_combination/LOOP_LC1 
INFO: [HLS 200-1510] Running: set_directive_array_partition -type cyclic -factor 16 -dim 1 hls_linear_combination accumulators 
INFO: [HLS 200-1510] Running: set_directive_interface -mode ap_hs hls_linear_combination vecs 
INFO: [HLS 200-1510] Running: set_directive_interface -mode ap_hs hls_linear_combination coeffs 
INFO: [HLS 200-1510] Running: set_directive_interface -mode ap_hs hls_linear_combination len 
INFO: [HLS 200-1510] Running: set_directive_interface -mode ap_hs hls_linear_combination out 
INFO: [HLS 200-1510] Running: set_directive_unroll -skip_exit_check -factor 10 hls_linear_combination/LOOP_LC2 
INFO: [HLS 200-1510] Running: set_directive_interface -mode ap_ctrl_hs hls_linear_combination 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0.02 seconds. CPU system time: 0 seconds. Elapsed time: 0.02 seconds; current allocated memory: 180.591 MB.
INFO: [HLS 200-10] Analyzing design file 'hls_linear_combination/hls_linear_combination.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 3.16 seconds. CPU system time: 0.34 seconds. Elapsed time: 4.55 seconds; current allocated memory: 181.149 MB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-188] Unrolling loop 'LOOP_LC2' (hls_linear_combination/hls_linear_combination.cpp:21:12) in function 'hls_linear_combination' partially (and skipping exit check) with a factor of 10 (hls_linear_combination/hls_linear_combination.cpp:21:12)
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 8.01 seconds. CPU system time: 0.53 seconds. Elapsed time: 10.37 seconds; current allocated memory: 183.907 MB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0.01 seconds. CPU system time: 0 seconds. Elapsed time: 0 seconds; current allocated memory: 183.909 MB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0.04 seconds. CPU system time: 0 seconds. Elapsed time: 0.06 seconds; current allocated memory: 185.849 MB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0.06 seconds. CPU system time: 0 seconds. Elapsed time: 0.06 seconds; current allocated memory: 185.499 MB.
INFO: [XFORM 203-502] Unrolling all sub-loops inside loop 'LOOP_LC1' (hls_linear_combination/hls_linear_combination.cpp:12) in function 'hls_linear_combination' for pipelining.
INFO: [HLS 200-489] Unrolling loop 'LOOP_LC12' (hls_linear_combination/hls_linear_combination.cpp:14) in function 'hls_linear_combination' completely with a factor of 60.
INFO: [XFORM 203-101] Partitioning array 'accumulators'  in dimension 1 with a cyclic factor 16.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.0' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.1' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.2' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.3' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.4' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.5' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.6' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.7' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.8' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.9' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.10' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.11' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.12' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.13' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.14' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.15' completely based on array size.
INFO: [XFORM 203-101] Partitioning array 'accumulators.0' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.1' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.2' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.3' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.4' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.5' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.6' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.7' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.8' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.9' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.10' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.11' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.12' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.13' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.14' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.15' in dimension 1 completely.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 0.5 seconds. CPU system time: 0.02 seconds. Elapsed time: 0.61 seconds; current allocated memory: 206.922 MB.
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 0.3 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.43 seconds; current allocated memory: 200.600 MB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'hls_linear_combination' ...
WARNING: [SYN 201-107] Renaming port name 'hls_linear_combination/out' to 'hls_linear_combination/out_r' to avoid the conflict with HDL keywords or other object names.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'hls_linear_combination' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'LOOP_LC1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 1, loop 'LOOP_LC1'
INFO: [SCHED 204-61] Pipelining loop 'LOOP_LC2'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 38, loop 'LOOP_LC2'
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z020-clg484-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -output=/home/osm/Documents/SECT-MAYO/MAYO/HLS/ips/hls_linear_combination.zip
INFO: [HLS 200-1464] Running solution command: config_export -rtl=vhdl
INFO: [HLS 200-1510] Running: set_part xc7z020-clg484-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_export -format ip_catalog -output /home/osm/Documents/SECT-MAYO/MAYO/HLS/ips/hls_linear_combination.zip -rtl vhdl 
INFO: [HLS 200-1510] Running: set_directive_top -name hls_linear_combination hls_linear_combination 
INFO: [HLS 200-1510] Running: set_directive_pipeline hls_linear_combination/LOOP_LC2 
INFO: [HLS 200-1510] Running: set_directive_pipeline hls_linear_combination/LOOP_LC1 
INFO: [HLS 200-1510] Running: set_directive_array_partition -type cyclic -factor 16 -dim 1 hls_linear_combination accumulators 
INFO: [HLS 200-1510] Running: set_directive_interface -mode ap_hs hls_linear_combination vecs 
INFO: [HLS 200-1510] Running: set_directive_interface -mode ap_hs hls_linear_combination coeffs 
INFO: [HLS 200-1510] Running: set_directive_interface -mode ap_hs hls_linear_combination len 
INFO: [HLS 200-1510] Running: set_directive_interface -mode ap_hs hls_linear_combination out 
INFO: [HLS 200-1510] Running: set_directive_unroll -skip_exit_check -factor 10 hls_linear_combination/LOOP_LC2 
INFO: [HLS 200-1510] Running: set_directive_interface -mode ap_ctrl_hs hls_linear_combination 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0.01 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.03 seconds; current allocated memory: 180.591 MB.
INFO: [HLS 200-10] Analyzing design file 'hls_linear_combination/hls_linear_combination.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 3.62 seconds. CPU system time: 0.35 seconds. Elapsed time: 5.44 seconds; current allocated memory: 181.149 MB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-188] Unrolling loop 'LOOP_LC2' (hls_linear_combination/hls_linear_combination.cpp:21:12) in function 'hls_linear_combination' partially (and skipping exit check) with a factor of 10 (hls_linear_combination/hls_linear_combination.cpp:21:12)
WARNING: [HLS 214-204] Vitis HLS unsupport array/hls::stream port type with these modes: ap_hs/ap_vld/ap_ovld/ap_ack. So this pragma will be ignored and replaced with default mode. in 'vecs' (hls_linear_combination/hls_linear_combination.cpp:6:0)
WARNING: [HLS 214-204] Vitis HLS unsupport array/hls::stream port type with these modes: ap_hs/ap_vld/ap_ovld/ap_ack. So this pragma will be ignored and replaced with default mode. in 'coeffs' (hls_linear_combination/hls_linear_combination.cpp:6:0)
WARNING: [HLS 214-204] Vitis HLS unsupport array/hls::stream port type with these modes: ap_hs/ap_vld/ap_ovld/ap_ack. So this pragma will be ignored and replaced with default mode. in 'out' (hls_linear_combination/hls_linear_combination.cpp:6:0)
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 8.04 seconds. CPU system time: 0.51 seconds. Elapsed time: 10.42 seconds; current allocated memory: 183.945 MB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0.01 seconds. CPU system time: 0 seconds. Elapsed time: 0.01 seconds; current allocated memory: 183.946 MB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0.04 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.07 seconds; current allocated memory: 185.955 MB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0.07 seconds. CPU system time: 0 seconds. Elapsed time: 0.08 seconds; current allocated memory: 185.586 MB.
INFO: [XFORM 203-502] Unrolling all sub-loops inside loop 'LOOP_LC1' (hls_linear_combination/hls_linear_combination.cpp:12) in function 'hls_linear_combination' for pipelining.
INFO: [HLS 200-489] Unrolling loop 'LOOP_LC12' (hls_linear_combination/hls_linear_combination.cpp:14) in function 'hls_linear_combination' completely with a factor of 60.
INFO: [XFORM 203-101] Partitioning array 'accumulators'  in dimension 1 with a cyclic factor 16.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.0' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.1' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.2' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.3' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.4' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.5' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.6' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.7' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.8' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.9' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.10' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.11' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.12' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.13' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.14' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.15' completely based on array size.
INFO: [XFORM 203-101] Partitioning array 'accumulators.0' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.1' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.2' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.3' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.4' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.5' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.6' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.7' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.8' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.9' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.10' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.11' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.12' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.13' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.14' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.15' in dimension 1 completely.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 1.34 seconds. CPU system time: 0.04 seconds. Elapsed time: 1.74 seconds; current allocated memory: 209.366 MB.
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 1.21 seconds. CPU system time: 0.01 seconds. Elapsed time: 1.43 seconds; current allocated memory: 207.639 MB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'hls_linear_combination' ...
WARNING: [SYN 201-107] Renaming port name 'hls_linear_combination/out' to 'hls_linear_combination/out_r' to avoid the conflict with HDL keywords or other object names.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'hls_linear_combination' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_59) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_58) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_57) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_56) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_55) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_54) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_53) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_52) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_51) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_50) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_49) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_48) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_47) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_46) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_45) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_44) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_43) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_42) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_41) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_40) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_39) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_38) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_37) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_36) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_35) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_34) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_33) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_32) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_31) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_30) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_29) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_28) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_27) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_26) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_25) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_24) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_23) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_22) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_21) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_20) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_19) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_18) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_17) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_16) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_15) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_14) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_13) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_12) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_11) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_10) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_9) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_8) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_7) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_6) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_5) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_4) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_3) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17) to 3 in order to utilize available DSP registers.
INFO: [SCHED 204-61] Pipelining loop 'LOOP_LC1'.
WARNING: [HLS 200-885] Unable to schedule 'load' operation ('vecs_load_2', hls_linear_combination/hls_linear_combination.cpp:17) on array 'vecs' due to limited memory ports. Please consider using a memory core with more ports or partitioning the array 'vecs'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 30, Depth = 34, loop 'LOOP_LC1'
INFO: [SCHED 204-61] Pipelining loop 'LOOP_LC2'.
WARNING: [HLS 200-885] Unable to schedule 'store' operation ('out_addr_2_write_ln30', hls_linear_combination/hls_linear_combination.cpp:30) of variable 'trunc_ln30_5', hls_linear_combination/hls_linear_combination.cpp:30 on array 'out_r' due to limited memory ports. Please consider using a memory core with more ports or partitioning the array 'out_r'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 5, Depth = 41, loop 'LOOP_LC2'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 3.41 seconds. CPU system time: 0.19 seconds. Elapsed time: 4.41 seconds; current allocated memory: 211.594 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z020-clg484-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -output=/home/osm/Documents/SECT-MAYO/MAYO/HLS/ips/hls_linear_combination.zip
INFO: [HLS 200-1464] Running solution command: config_export -rtl=vhdl
INFO: [HLS 200-1510] Running: set_part xc7z020-clg484-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_export -format ip_catalog -output /home/osm/Documents/SECT-MAYO/MAYO/HLS/ips/hls_linear_combination.zip -rtl vhdl 
INFO: [HLS 200-1510] Running: set_directive_top -name hls_linear_combination hls_linear_combination 
INFO: [HLS 200-1510] Running: set_directive_pipeline hls_linear_combination/LOOP_LC2 
INFO: [HLS 200-1510] Running: set_directive_pipeline hls_linear_combination/LOOP_LC1 
INFO: [HLS 200-1510] Running: set_directive_array_partition -type cyclic -factor 16 -dim 1 hls_linear_combination accumulators 
INFO: [HLS 200-1510] Running: set_directive_unroll -skip_exit_check -factor 10 hls_linear_combination/LOOP_LC2 
INFO: [HLS 200-1510] Running: set_directive_array_reshape -dim 1 -factor 10 -type block hls_linear_combination vecs 
INFO: [HLS 200-1510] Running: set_directive_array_reshape -dim 1 -factor 10 -type block hls_linear_combination out 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0.01 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.02 seconds; current allocated memory: 180.536 MB.
INFO: [HLS 200-10] Analyzing design file 'hls_linear_combination/hls_linear_combination.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 3.53 seconds. CPU system time: 0.46 seconds. Elapsed time: 6.03 seconds; current allocated memory: 180.979 MB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-188] Unrolling loop 'LOOP_LC2' (hls_linear_combination/hls_linear_combination.cpp:21:12) in function 'hls_linear_combination' partially (and skipping exit check) with a factor of 10 (hls_linear_combination/hls_linear_combination.cpp:21:12)
INFO: [HLS 214-248] block reshaped array 'vecs' on dimension 1 with 10 (hls_linear_combination/hls_linear_combination.cpp:7:9)
INFO: [HLS 214-248] block reshaped array 'out' on dimension 1 with 10 (hls_linear_combination/hls_linear_combination.cpp:6:221)
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 9.52 seconds. CPU system time: 0.56 seconds. Elapsed time: 13.32 seconds; current allocated memory: 184.116 MB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0 seconds; current allocated memory: 184.117 MB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0.09 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.13 seconds; current allocated memory: 186.497 MB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0.11 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.15 seconds; current allocated memory: 185.931 MB.
INFO: [XFORM 203-502] Unrolling all sub-loops inside loop 'LOOP_LC1' (hls_linear_combination/hls_linear_combination.cpp:12) in function 'hls_linear_combination' for pipelining.
INFO: [HLS 200-489] Unrolling loop 'LOOP_LC12' (hls_linear_combination/hls_linear_combination.cpp:14) in function 'hls_linear_combination' completely with a factor of 60.
INFO: [XFORM 203-101] Partitioning array 'accumulators'  in dimension 1 with a cyclic factor 16.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.0' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.1' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.2' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.3' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.4' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.5' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.6' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.7' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.8' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.9' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.10' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.11' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.12' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.13' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.14' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.15' completely based on array size.
INFO: [XFORM 203-101] Partitioning array 'accumulators.0' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.1' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.2' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.3' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.4' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.5' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.6' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.7' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.8' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.9' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.10' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.11' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.12' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.13' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.14' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.15' in dimension 1 completely.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 3.8 seconds. CPU system time: 0.02 seconds. Elapsed time: 4.73 seconds; current allocated memory: 213.090 MB.
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 6.12 seconds. CPU system time: 0.05 seconds. Elapsed time: 7.72 seconds; current allocated memory: 219.964 MB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'hls_linear_combination' ...
WARNING: [SYN 201-107] Renaming port name 'hls_linear_combination/out' to 'hls_linear_combination/out_r' to avoid the conflict with HDL keywords or other object names.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'hls_linear_combination' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_59) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_58) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_57) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_56) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_55) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_54) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_53) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_52) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_51) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_50) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_49) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_48) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_47) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_46) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_45) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_44) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_43) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_42) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_41) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_40) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_39) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_38) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_37) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_36) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_35) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_34) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_33) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_32) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_31) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_30) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_29) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_28) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_27) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_26) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_25) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_24) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_23) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_22) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_21) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_20) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_19) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_18) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_17) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_16) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_15) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_14) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_13) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_12) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_11) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_10) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_9) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_8) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_7) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_6) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_5) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_4) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_3) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17) to 3 in order to utilize available DSP registers.
INFO: [SCHED 204-61] Pipelining loop 'LOOP_LC1'.
WARNING: [HLS 200-885] Unable to schedule 'load' operation ('vecs_load_2', hls_linear_combination/hls_linear_combination.cpp:17) on array 'vecs' due to limited memory ports. Please consider using a memory core with more ports or partitioning the array 'vecs'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 30, Depth = 104, loop 'LOOP_LC1'
INFO: [SCHED 204-61] Pipelining loop 'LOOP_LC2'.
WARNING: [HLS 200-880] The II Violation in module 'hls_linear_combination' (loop 'LOOP_LC2'): Unable to enforce a carried dependence constraint (II = 1, distance = 1, offset = 1) between 'store' operation ('out_addr_1_write_ln30', hls_linear_combination/hls_linear_combination.cpp:30) of constant <constant:_ssdm_op_Write.bram.p0i128> on array 'out_r' and 'load' operation ('out_load_1', hls_linear_combination/hls_linear_combination.cpp:30) on array 'out_r'.
WARNING: [HLS 200-880] The II Violation in module 'hls_linear_combination' (loop 'LOOP_LC2'): Unable to enforce a carried dependence constraint (II = 2, distance = 1, offset = 1) between 'store' operation ('out_addr_1_write_ln30', hls_linear_combination/hls_linear_combination.cpp:30) of constant <constant:_ssdm_op_Write.bram.p0i128> on array 'out_r' and 'load' operation ('out_load_1', hls_linear_combination/hls_linear_combination.cpp:30) on array 'out_r'.
WARNING: [HLS 200-880] The II Violation in module 'hls_linear_combination' (loop 'LOOP_LC2'): Unable to enforce a carried dependence constraint (II = 3, distance = 1, offset = 1) between 'store' operation ('out_addr_1_write_ln30', hls_linear_combination/hls_linear_combination.cpp:30) of constant <constant:_ssdm_op_Write.bram.p0i128> on array 'out_r' and 'load' operation ('out_load', hls_linear_combination/hls_linear_combination.cpp:30) on array 'out_r'.
WARNING: [HLS 200-880] The II Violation in module 'hls_linear_combination' (loop 'LOOP_LC2'): Unable to enforce a carried dependence constraint (II = 4, distance = 1, offset = 1) between 'store' operation ('out_addr_1_write_ln30', hls_linear_combination/hls_linear_combination.cpp:30) of constant <constant:_ssdm_op_Write.bram.p0i128> on array 'out_r' and 'load' operation ('out_load', hls_linear_combination/hls_linear_combination.cpp:30) on array 'out_r'.
WARNING: [HLS 200-880] The II Violation in module 'hls_linear_combination' (loop 'LOOP_LC2'): Unable to enforce a carried dependence constraint (II = 11, distance = 1, offset = 1) between 'store' operation ('out_addr_5_write_ln30', hls_linear_combination/hls_linear_combination.cpp:30) of constant <constant:_ssdm_op_Write.bram.p0i128> on array 'out_r' and 'load' operation ('out_load', hls_linear_combination/hls_linear_combination.cpp:30) on array 'out_r'.
WARNING: [HLS 200-880] The II Violation in module 'hls_linear_combination' (loop 'LOOP_LC2'): Unable to enforce a carried dependence constraint (II = 15, distance = 1, offset = 1) between 'store' operation ('out_addr_7_write_ln30', hls_linear_combination/hls_linear_combination.cpp:30) of constant <constant:_ssdm_op_Write.bram.p0i128> on array 'out_r' and 'load' operation ('out_load', hls_linear_combination/hls_linear_combination.cpp:30) on array 'out_r'.
WARNING: [HLS 200-880] The II Violation in module 'hls_linear_combination' (loop 'LOOP_LC2'): Unable to enforce a carried dependence constraint (II = 17, distance = 1, offset = 1) between 'store' operation ('out_addr_7_write_ln30', hls_linear_combination/hls_linear_combination.cpp:30) of constant <constant:_ssdm_op_Write.bram.p0i128> on array 'out_r' and 'load' operation ('out_load', hls_linear_combination/hls_linear_combination.cpp:30) on array 'out_r'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 18, Depth = 53, loop 'LOOP_LC2'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 32.03 seconds. CPU system time: 0.51 seconds. Elapsed time: 39.63 seconds; current allocated memory: 233.623 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 15.51 seconds. CPU system time: 0.38 seconds. Elapsed time: 20.14 seconds; current allocated memory: 250.793 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'hls_linear_combination' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-500] Setting interface mode on port 'hls_linear_combination/vecs' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'hls_linear_combination/coeffs' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'hls_linear_combination/len' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'hls_linear_combination/out_r' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on function 'hls_linear_combination' to 'ap_ctrl_hs'.
WARNING: [RTGEN 206-101] Register 'accumulators_0_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_1_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_2_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_3_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_4_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_5_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_6_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_7_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_8_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_9_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_10_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_11_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_12_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_13_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_14_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_15_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_0_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_1_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_2_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_3_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_4_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_5_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_6_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_7_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_8_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_9_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_10_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_11_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_12_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_13_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_14_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_15_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_0_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_1_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_2_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_3_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_4_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_5_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_6_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_7_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_8_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_9_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_10_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_11_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_12_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_13_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_14_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_15_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_0_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_1_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_2_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_3_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_4_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_5_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_6_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_7_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_8_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_9_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_10_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_11_3' is power-on initialization.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z020-clg484-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -output=/home/osm/Documents/SECT-MAYO/MAYO/HLS/ips/hls_linear_combination.zip
INFO: [HLS 200-1464] Running solution command: config_export -rtl=vhdl
INFO: [HLS 200-1510] Running: set_part xc7z020-clg484-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_export -format ip_catalog -output /home/osm/Documents/SECT-MAYO/MAYO/HLS/ips/hls_linear_combination.zip -rtl vhdl 
INFO: [HLS 200-1510] Running: set_directive_top -name hls_linear_combination hls_linear_combination 
INFO: [HLS 200-1510] Running: set_directive_pipeline hls_linear_combination/LOOP_LC2 
INFO: [HLS 200-1510] Running: set_directive_pipeline hls_linear_combination/LOOP_LC1 
INFO: [HLS 200-1510] Running: set_directive_array_partition -type cyclic -factor 16 -dim 1 hls_linear_combination accumulators 
INFO: [HLS 200-1510] Running: set_directive_unroll -skip_exit_check -factor 10 hls_linear_combination/LOOP_LC2 
INFO: [HLS 200-1510] Running: set_directive_array_reshape -type block -factor 10 -dim 1 hls_linear_combination vecs 
INFO: [HLS 200-1510] Running: set_directive_array_reshape -type block -factor 10 -dim 1 hls_linear_combination out 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0.02 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.01 seconds; current allocated memory: 164.537 MB.
INFO: [HLS 200-10] Analyzing design file 'hls_linear_combination/hls_linear_combination.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 3.54 seconds. CPU system time: 0.42 seconds. Elapsed time: 5.88 seconds; current allocated memory: 164.979 MB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-188] Unrolling loop 'LOOP_LC2' (hls_linear_combination/hls_linear_combination.cpp:21:12) in function 'hls_linear_combination' partially (and skipping exit check) with a factor of 10 (hls_linear_combination/hls_linear_combination.cpp:21:12)
INFO: [HLS 214-248] block reshaped array 'vecs' on dimension 1 with 10 (hls_linear_combination/hls_linear_combination.cpp:7:9)
INFO: [HLS 214-248] block reshaped array 'out' on dimension 1 with 10 (hls_linear_combination/hls_linear_combination.cpp:6:221)
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 8.32 seconds. CPU system time: 0.56 seconds. Elapsed time: 10.8 seconds; current allocated memory: 168.116 MB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0.01 seconds. Elapsed time: 0 seconds; current allocated memory: 168.117 MB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0.07 seconds. CPU system time: 0 seconds. Elapsed time: 0.08 seconds; current allocated memory: 170.500 MB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0.11 seconds. CPU system time: 0 seconds. Elapsed time: 0.15 seconds; current allocated memory: 169.934 MB.
INFO: [XFORM 203-502] Unrolling all sub-loops inside loop 'LOOP_LC1' (hls_linear_combination/hls_linear_combination.cpp:12) in function 'hls_linear_combination' for pipelining.
INFO: [HLS 200-489] Unrolling loop 'LOOP_LC12' (hls_linear_combination/hls_linear_combination.cpp:14) in function 'hls_linear_combination' completely with a factor of 60.
INFO: [XFORM 203-101] Partitioning array 'accumulators'  in dimension 1 with a cyclic factor 16.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.0' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.1' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.2' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.3' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.4' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.5' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.6' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.7' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.8' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.9' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.10' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.11' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.12' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.13' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.14' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.15' completely based on array size.
INFO: [XFORM 203-101] Partitioning array 'accumulators.0' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.1' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.2' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.3' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.4' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.5' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.6' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.7' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.8' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.9' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.10' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.11' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.12' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.13' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.14' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.15' in dimension 1 completely.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 3.34 seconds. CPU system time: 0.07 seconds. Elapsed time: 4 seconds; current allocated memory: 197.088 MB.
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 5.4 seconds. CPU system time: 0.02 seconds. Elapsed time: 6.37 seconds; current allocated memory: 203.960 MB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'hls_linear_combination' ...
WARNING: [SYN 201-107] Renaming port name 'hls_linear_combination/out' to 'hls_linear_combination/out_r' to avoid the conflict with HDL keywords or other object names.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'hls_linear_combination' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_59) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_58) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_57) to 3 in order to utilize available DSP registers.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z020-clg484-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -output=/home/osm/Documents/SECT-MAYO/MAYO/HLS/ips/hls_linear_combination.zip
INFO: [HLS 200-1464] Running solution command: config_export -rtl=vhdl
INFO: [HLS 200-1510] Running: set_part xc7z020-clg484-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_export -format ip_catalog -output /home/osm/Documents/SECT-MAYO/MAYO/HLS/ips/hls_linear_combination.zip -rtl vhdl 
INFO: [HLS 200-1510] Running: set_directive_top -name hls_linear_combination hls_linear_combination 
INFO: [HLS 200-1510] Running: set_directive_pipeline hls_linear_combination/LOOP_LC2 
INFO: [HLS 200-1510] Running: set_directive_pipeline hls_linear_combination/LOOP_LC1 
INFO: [HLS 200-1510] Running: set_directive_array_partition -type cyclic -factor 16 -dim 1 hls_linear_combination accumulators 
INFO: [HLS 200-1510] Running: set_directive_unroll -skip_exit_check -factor 10 hls_linear_combination/LOOP_LC2 
INFO: [HLS 200-1510] Running: set_directive_array_reshape -type block -factor 10 -dim 1 hls_linear_combination vecs 
INFO: [HLS 200-1510] Running: set_directive_array_reshape -type block -factor 10 -dim 1 hls_linear_combination out 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0.01 seconds. CPU system time: 0 seconds. Elapsed time: 0.04 seconds; current allocated memory: 164.537 MB.
INFO: [HLS 200-10] Analyzing design file 'hls_linear_combination/hls_linear_combination.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 3.43 seconds. CPU system time: 0.4 seconds. Elapsed time: 5.08 seconds; current allocated memory: 164.979 MB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-188] Unrolling loop 'LOOP_LC2' (hls_linear_combination/hls_linear_combination.cpp:21:12) in function 'hls_linear_combination' partially (and skipping exit check) with a factor of 10 (hls_linear_combination/hls_linear_combination.cpp:21:12)
INFO: [HLS 214-248] block reshaped array 'vecs' on dimension 1 with 10 (hls_linear_combination/hls_linear_combination.cpp:7:9)
INFO: [HLS 214-248] block reshaped array 'out' on dimension 1 with 10 (hls_linear_combination/hls_linear_combination.cpp:6:221)
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 8.37 seconds. CPU system time: 0.54 seconds. Elapsed time: 10.72 seconds; current allocated memory: 168.117 MB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0 seconds; current allocated memory: 168.118 MB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0.06 seconds. CPU system time: 0 seconds. Elapsed time: 0.1 seconds; current allocated memory: 170.501 MB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0.12 seconds. CPU system time: 0 seconds. Elapsed time: 0.16 seconds; current allocated memory: 169.933 MB.
INFO: [XFORM 203-502] Unrolling all sub-loops inside loop 'LOOP_LC1' (hls_linear_combination/hls_linear_combination.cpp:12) in function 'hls_linear_combination' for pipelining.
INFO: [HLS 200-489] Unrolling loop 'LOOP_LC12' (hls_linear_combination/hls_linear_combination.cpp:14) in function 'hls_linear_combination' completely with a factor of 60.
INFO: [XFORM 203-101] Partitioning array 'accumulators'  in dimension 1 with a cyclic factor 16.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.0' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.1' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.2' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.3' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.4' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.5' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.6' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.7' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.8' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.9' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.10' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.11' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.12' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.13' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.14' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.15' completely based on array size.
INFO: [XFORM 203-101] Partitioning array 'accumulators.0' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.1' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.2' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.3' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.4' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.5' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.6' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.7' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.8' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.9' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.10' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.11' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.12' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.13' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.14' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.15' in dimension 1 completely.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 3.6 seconds. CPU system time: 0.06 seconds. Elapsed time: 4.16 seconds; current allocated memory: 197.087 MB.
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 5.63 seconds. CPU system time: 0.04 seconds. Elapsed time: 6.63 seconds; current allocated memory: 203.962 MB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'hls_linear_combination' ...
WARNING: [SYN 201-107] Renaming port name 'hls_linear_combination/out' to 'hls_linear_combination/out_r' to avoid the conflict with HDL keywords or other object names.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'hls_linear_combination' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_59) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_58) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_57) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_56) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_55) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_54) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_53) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_52) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_51) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_50) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_49) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_48) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_47) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_46) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_45) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_44) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_43) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_42) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_41) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_40) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_39) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_38) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_37) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_36) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_35) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_34) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_33) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_32) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_31) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_30) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_29) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_28) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_27) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_26) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_25) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_24) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_23) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_22) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_21) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_20) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_19) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_18) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_17) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_16) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_15) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_14) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_13) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_12) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_11) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_10) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_9) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_8) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_7) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_6) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_5) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_4) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_3) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17) to 3 in order to utilize available DSP registers.
INFO: [SCHED 204-61] Pipelining loop 'LOOP_LC1'.
WARNING: [HLS 200-885] Unable to schedule 'load' operation ('vecs_load_2', hls_linear_combination/hls_linear_combination.cpp:17) on array 'vecs' due to limited memory ports. Please consider using a memory core with more ports or partitioning the array 'vecs'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 30, Depth = 104, loop 'LOOP_LC1'
INFO: [SCHED 204-61] Pipelining loop 'LOOP_LC2'.
WARNING: [HLS 200-880] The II Violation in module 'hls_linear_combination' (loop 'LOOP_LC2'): Unable to enforce a carried dependence constraint (II = 1, distance = 1, offset = 1) between 'store' operation ('out_addr_1_write_ln30', hls_linear_combination/hls_linear_combination.cpp:30) of constant <constant:_ssdm_op_Write.bram.p0i128> on array 'out_r' and 'load' operation ('out_load_1', hls_linear_combination/hls_linear_combination.cpp:30) on array 'out_r'.
WARNING: [HLS 200-880] The II Violation in module 'hls_linear_combination' (loop 'LOOP_LC2'): Unable to enforce a carried dependence constraint (II = 2, distance = 1, offset = 1) between 'store' operation ('out_addr_1_write_ln30', hls_linear_combination/hls_linear_combination.cpp:30) of constant <constant:_ssdm_op_Write.bram.p0i128> on array 'out_r' and 'load' operation ('out_load_1', hls_linear_combination/hls_linear_combination.cpp:30) on array 'out_r'.
WARNING: [HLS 200-880] The II Violation in module 'hls_linear_combination' (loop 'LOOP_LC2'): Unable to enforce a carried dependence constraint (II = 3, distance = 1, offset = 1) between 'store' operation ('out_addr_1_write_ln30', hls_linear_combination/hls_linear_combination.cpp:30) of constant <constant:_ssdm_op_Write.bram.p0i128> on array 'out_r' and 'load' operation ('out_load', hls_linear_combination/hls_linear_combination.cpp:30) on array 'out_r'.
WARNING: [HLS 200-880] The II Violation in module 'hls_linear_combination' (loop 'LOOP_LC2'): Unable to enforce a carried dependence constraint (II = 4, distance = 1, offset = 1) between 'store' operation ('out_addr_1_write_ln30', hls_linear_combination/hls_linear_combination.cpp:30) of constant <constant:_ssdm_op_Write.bram.p0i128> on array 'out_r' and 'load' operation ('out_load', hls_linear_combination/hls_linear_combination.cpp:30) on array 'out_r'.
WARNING: [HLS 200-880] The II Violation in module 'hls_linear_combination' (loop 'LOOP_LC2'): Unable to enforce a carried dependence constraint (II = 11, distance = 1, offset = 1) between 'store' operation ('out_addr_5_write_ln30', hls_linear_combination/hls_linear_combination.cpp:30) of constant <constant:_ssdm_op_Write.bram.p0i128> on array 'out_r' and 'load' operation ('out_load', hls_linear_combination/hls_linear_combination.cpp:30) on array 'out_r'.
WARNING: [HLS 200-880] The II Violation in module 'hls_linear_combination' (loop 'LOOP_LC2'): Unable to enforce a carried dependence constraint (II = 15, distance = 1, offset = 1) between 'store' operation ('out_addr_7_write_ln30', hls_linear_combination/hls_linear_combination.cpp:30) of constant <constant:_ssdm_op_Write.bram.p0i128> on array 'out_r' and 'load' operation ('out_load', hls_linear_combination/hls_linear_combination.cpp:30) on array 'out_r'.
WARNING: [HLS 200-880] The II Violation in module 'hls_linear_combination' (loop 'LOOP_LC2'): Unable to enforce a carried dependence constraint (II = 17, distance = 1, offset = 1) between 'store' operation ('out_addr_7_write_ln30', hls_linear_combination/hls_linear_combination.cpp:30) of constant <constant:_ssdm_op_Write.bram.p0i128> on array 'out_r' and 'load' operation ('out_load', hls_linear_combination/hls_linear_combination.cpp:30) on array 'out_r'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 18, Depth = 53, loop 'LOOP_LC2'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 29.54 seconds. CPU system time: 0.42 seconds. Elapsed time: 35.01 seconds; current allocated memory: 217.622 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 14.18 seconds. CPU system time: 0.36 seconds. Elapsed time: 17.18 seconds; current allocated memory: 234.792 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'hls_linear_combination' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-500] Setting interface mode on port 'hls_linear_combination/vecs' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'hls_linear_combination/coeffs' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'hls_linear_combination/len' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'hls_linear_combination/out_r' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on function 'hls_linear_combination' to 'ap_ctrl_hs'.
WARNING: [RTGEN 206-101] Register 'accumulators_0_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_1_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_2_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_3_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_4_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_5_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_6_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_7_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_8_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_9_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_10_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_11_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_12_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_13_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_14_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_15_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_0_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_1_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_2_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_3_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_4_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_5_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_6_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_7_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_8_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_9_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_10_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_11_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_12_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_13_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_14_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_15_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_0_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_1_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_2_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_3_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_4_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_5_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_6_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_7_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_8_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_9_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_10_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_11_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_12_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_13_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_14_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_15_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_0_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_1_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_2_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_3_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_4_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_5_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_6_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_7_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_8_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_9_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_10_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_11_3' is power-on initialization.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z020-clg484-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -output=/home/osm/Documents/SECT-MAYO/MAYO/HLS/ips/hls_linear_combination.zip
INFO: [HLS 200-1464] Running solution command: config_export -rtl=vhdl
INFO: [HLS 200-1510] Running: set_part xc7z020-clg484-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_export -format ip_catalog -output /home/osm/Documents/SECT-MAYO/MAYO/HLS/ips/hls_linear_combination.zip -rtl vhdl 
INFO: [HLS 200-1510] Running: set_directive_top -name hls_linear_combination hls_linear_combination 
INFO: [HLS 200-1510] Running: set_directive_pipeline hls_linear_combination/LOOP_LC2 
INFO: [HLS 200-1510] Running: set_directive_pipeline hls_linear_combination/LOOP_LC1 
INFO: [HLS 200-1510] Running: set_directive_array_partition -type cyclic -factor 16 -dim 1 hls_linear_combination accumulators 
INFO: [HLS 200-1510] Running: set_directive_unroll -skip_exit_check -factor 10 hls_linear_combination/LOOP_LC2 
INFO: [HLS 200-1510] Running: set_directive_array_reshape -type block -factor 10 -dim 1 hls_linear_combination vecs 
INFO: [HLS 200-1510] Running: set_directive_array_reshape -type block -factor 10 -dim 1 hls_linear_combination out 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0.01 seconds. CPU system time: 0 seconds. Elapsed time: 0.02 seconds; current allocated memory: 180.537 MB.
INFO: [HLS 200-10] Analyzing design file 'hls_linear_combination/hls_linear_combination.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 3.16 seconds. CPU system time: 0.4 seconds. Elapsed time: 4.25 seconds; current allocated memory: 180.979 MB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-188] Unrolling loop 'LOOP_LC2' (hls_linear_combination/hls_linear_combination.cpp:21:12) in function 'hls_linear_combination' partially (and skipping exit check) with a factor of 10 (hls_linear_combination/hls_linear_combination.cpp:21:12)
INFO: [HLS 214-248] block reshaped array 'vecs' on dimension 1 with 10 (hls_linear_combination/hls_linear_combination.cpp:7:9)
INFO: [HLS 214-248] block reshaped array 'out' on dimension 1 with 10 (hls_linear_combination/hls_linear_combination.cpp:6:221)
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 8.47 seconds. CPU system time: 0.5 seconds. Elapsed time: 10.43 seconds; current allocated memory: 184.116 MB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0 seconds; current allocated memory: 184.118 MB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0.1 seconds. CPU system time: 0 seconds. Elapsed time: 0.13 seconds; current allocated memory: 186.500 MB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0.1 seconds. CPU system time: 0 seconds. Elapsed time: 0.14 seconds; current allocated memory: 185.933 MB.
INFO: [XFORM 203-502] Unrolling all sub-loops inside loop 'LOOP_LC1' (hls_linear_combination/hls_linear_combination.cpp:12) in function 'hls_linear_combination' for pipelining.
INFO: [HLS 200-489] Unrolling loop 'LOOP_LC12' (hls_linear_combination/hls_linear_combination.cpp:14) in function 'hls_linear_combination' completely with a factor of 60.
INFO: [XFORM 203-101] Partitioning array 'accumulators'  in dimension 1 with a cyclic factor 16.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.0' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.1' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.2' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.3' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.4' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.5' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.6' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.7' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.8' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.9' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.10' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.11' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.12' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.13' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.14' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.15' completely based on array size.
INFO: [XFORM 203-101] Partitioning array 'accumulators.0' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.1' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.2' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.3' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.4' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.5' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.6' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.7' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.8' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.9' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.10' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.11' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.12' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.13' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.14' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.15' in dimension 1 completely.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 3.24 seconds. CPU system time: 0.05 seconds. Elapsed time: 3.8 seconds; current allocated memory: 213.088 MB.
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 5.58 seconds. CPU system time: 0.03 seconds. Elapsed time: 6.47 seconds; current allocated memory: 219.961 MB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'hls_linear_combination' ...
WARNING: [SYN 201-107] Renaming port name 'hls_linear_combination/out' to 'hls_linear_combination/out_r' to avoid the conflict with HDL keywords or other object names.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'hls_linear_combination' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_59) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_58) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_57) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_56) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_55) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_54) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_53) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_52) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_51) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_50) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_49) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_48) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_47) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_46) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_45) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_44) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_43) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_42) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_41) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_40) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_39) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_38) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_37) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_36) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_35) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_34) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_33) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_32) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_31) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_30) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_29) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_28) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_27) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_26) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_25) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_24) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_23) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_22) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_21) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_20) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_19) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_18) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_17) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_16) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_15) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_14) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_13) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_12) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_11) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_10) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_9) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_8) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_7) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_6) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_5) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_4) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_3) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17) to 3 in order to utilize available DSP registers.
INFO: [SCHED 204-61] Pipelining loop 'LOOP_LC1'.
WARNING: [HLS 200-885] Unable to schedule 'load' operation ('vecs_load_2', hls_linear_combination/hls_linear_combination.cpp:17) on array 'vecs' due to limited memory ports. Please consider using a memory core with more ports or partitioning the array 'vecs'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 30, Depth = 104, loop 'LOOP_LC1'
INFO: [SCHED 204-61] Pipelining loop 'LOOP_LC2'.
WARNING: [HLS 200-880] The II Violation in module 'hls_linear_combination' (loop 'LOOP_LC2'): Unable to enforce a carried dependence constraint (II = 1, distance = 1, offset = 1) between 'store' operation ('out_addr_1_write_ln30', hls_linear_combination/hls_linear_combination.cpp:30) of constant <constant:_ssdm_op_Write.bram.p0i128> on array 'out_r' and 'load' operation ('out_load_1', hls_linear_combination/hls_linear_combination.cpp:30) on array 'out_r'.
WARNING: [HLS 200-880] The II Violation in module 'hls_linear_combination' (loop 'LOOP_LC2'): Unable to enforce a carried dependence constraint (II = 2, distance = 1, offset = 1) between 'store' operation ('out_addr_1_write_ln30', hls_linear_combination/hls_linear_combination.cpp:30) of constant <constant:_ssdm_op_Write.bram.p0i128> on array 'out_r' and 'load' operation ('out_load_1', hls_linear_combination/hls_linear_combination.cpp:30) on array 'out_r'.
WARNING: [HLS 200-880] The II Violation in module 'hls_linear_combination' (loop 'LOOP_LC2'): Unable to enforce a carried dependence constraint (II = 3, distance = 1, offset = 1) between 'store' operation ('out_addr_1_write_ln30', hls_linear_combination/hls_linear_combination.cpp:30) of constant <constant:_ssdm_op_Write.bram.p0i128> on array 'out_r' and 'load' operation ('out_load', hls_linear_combination/hls_linear_combination.cpp:30) on array 'out_r'.
WARNING: [HLS 200-880] The II Violation in module 'hls_linear_combination' (loop 'LOOP_LC2'): Unable to enforce a carried dependence constraint (II = 4, distance = 1, offset = 1) between 'store' operation ('out_addr_1_write_ln30', hls_linear_combination/hls_linear_combination.cpp:30) of constant <constant:_ssdm_op_Write.bram.p0i128> on array 'out_r' and 'load' operation ('out_load', hls_linear_combination/hls_linear_combination.cpp:30) on array 'out_r'.
WARNING: [HLS 200-880] The II Violation in module 'hls_linear_combination' (loop 'LOOP_LC2'): Unable to enforce a carried dependence constraint (II = 11, distance = 1, offset = 1) between 'store' operation ('out_addr_5_write_ln30', hls_linear_combination/hls_linear_combination.cpp:30) of constant <constant:_ssdm_op_Write.bram.p0i128> on array 'out_r' and 'load' operation ('out_load', hls_linear_combination/hls_linear_combination.cpp:30) on array 'out_r'.
WARNING: [HLS 200-880] The II Violation in module 'hls_linear_combination' (loop 'LOOP_LC2'): Unable to enforce a carried dependence constraint (II = 15, distance = 1, offset = 1) between 'store' operation ('out_addr_7_write_ln30', hls_linear_combination/hls_linear_combination.cpp:30) of constant <constant:_ssdm_op_Write.bram.p0i128> on array 'out_r' and 'load' operation ('out_load', hls_linear_combination/hls_linear_combination.cpp:30) on array 'out_r'.
WARNING: [HLS 200-880] The II Violation in module 'hls_linear_combination' (loop 'LOOP_LC2'): Unable to enforce a carried dependence constraint (II = 17, distance = 1, offset = 1) between 'store' operation ('out_addr_7_write_ln30', hls_linear_combination/hls_linear_combination.cpp:30) of constant <constant:_ssdm_op_Write.bram.p0i128> on array 'out_r' and 'load' operation ('out_load', hls_linear_combination/hls_linear_combination.cpp:30) on array 'out_r'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 18, Depth = 53, loop 'LOOP_LC2'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 29.32 seconds. CPU system time: 0.46 seconds. Elapsed time: 33.76 seconds; current allocated memory: 233.620 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 14.46 seconds. CPU system time: 0.44 seconds. Elapsed time: 18.03 seconds; current allocated memory: 250.786 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'hls_linear_combination' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-500] Setting interface mode on port 'hls_linear_combination/vecs' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'hls_linear_combination/coeffs' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'hls_linear_combination/len' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'hls_linear_combination/out_r' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on function 'hls_linear_combination' to 'ap_ctrl_hs'.
WARNING: [RTGEN 206-101] Register 'accumulators_0_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_1_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_2_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_3_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_4_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_5_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_6_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_7_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_8_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_9_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_10_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_11_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_12_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_13_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_14_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_15_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_0_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_1_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_2_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_3_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_4_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_5_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_6_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_7_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_8_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_9_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_10_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_11_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_12_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_13_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_14_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_15_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_0_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_1_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_2_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_3_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_4_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_5_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_6_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_7_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_8_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_9_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_10_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_11_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_12_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_13_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_14_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_15_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_0_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_1_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_2_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_3_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_4_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_5_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_6_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_7_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_8_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_9_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_10_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_11_3' is power-on initialization.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z020-clg484-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -output=/home/osm/Documents/SECT-MAYO/MAYO/HLS/ips/hls_linear_combination.zip
INFO: [HLS 200-1464] Running solution command: config_export -rtl=vhdl
INFO: [HLS 200-1510] Running: set_part xc7z020-clg484-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_export -format ip_catalog -output /home/osm/Documents/SECT-MAYO/MAYO/HLS/ips/hls_linear_combination.zip -rtl vhdl 
INFO: [HLS 200-1510] Running: set_directive_top -name hls_linear_combination hls_linear_combination 
INFO: [HLS 200-1510] Running: set_directive_pipeline hls_linear_combination/LOOP_LC2 
INFO: [HLS 200-1510] Running: set_directive_pipeline hls_linear_combination/LOOP_LC1 
INFO: [HLS 200-1510] Running: set_directive_array_partition -type cyclic -factor 16 -dim 1 hls_linear_combination accumulators 
INFO: [HLS 200-1510] Running: set_directive_unroll -skip_exit_check -factor 10 hls_linear_combination/LOOP_LC2 
INFO: [HLS 200-1510] Running: set_directive_array_reshape -type block -factor 10 -dim 1 hls_linear_combination vecs 
INFO: [HLS 200-1510] Running: set_directive_array_reshape -type block -factor 10 -dim 1 hls_linear_combination out 
INFO: [HLS 200-1510] Running: set_directive_pipeline -off hls_linear_combination 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.01 seconds; current allocated memory: 180.540 MB.
INFO: [HLS 200-10] Analyzing design file 'hls_linear_combination/hls_linear_combination.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 3.42 seconds. CPU system time: 0.37 seconds. Elapsed time: 5.09 seconds; current allocated memory: 181.049 MB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-188] Unrolling loop 'LOOP_LC2' (hls_linear_combination/hls_linear_combination.cpp:21:12) in function 'hls_linear_combination' partially (and skipping exit check) with a factor of 10 (hls_linear_combination/hls_linear_combination.cpp:21:12)
INFO: [HLS 214-248] block reshaped array 'vecs' on dimension 1 with 10 (hls_linear_combination/hls_linear_combination.cpp:7:9)
INFO: [HLS 214-248] block reshaped array 'out' on dimension 1 with 10 (hls_linear_combination/hls_linear_combination.cpp:6:221)
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 8.52 seconds. CPU system time: 0.55 seconds. Elapsed time: 10.58 seconds; current allocated memory: 184.164 MB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.01 seconds; current allocated memory: 184.166 MB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0.07 seconds. CPU system time: 0 seconds. Elapsed time: 0.08 seconds; current allocated memory: 186.562 MB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0.12 seconds. CPU system time: 0 seconds. Elapsed time: 0.14 seconds; current allocated memory: 185.979 MB.
INFO: [XFORM 203-502] Unrolling all sub-loops inside loop 'LOOP_LC1' (hls_linear_combination/hls_linear_combination.cpp:12) in function 'hls_linear_combination' for pipelining.
INFO: [HLS 200-489] Unrolling loop 'LOOP_LC12' (hls_linear_combination/hls_linear_combination.cpp:14) in function 'hls_linear_combination' completely with a factor of 60.
INFO: [XFORM 203-101] Partitioning array 'accumulators'  in dimension 1 with a cyclic factor 16.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.0' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.1' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.2' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.3' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.4' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.5' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.6' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.7' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.8' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.9' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.10' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.11' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.12' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.13' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.14' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.15' completely based on array size.
INFO: [XFORM 203-101] Partitioning array 'accumulators.0' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.1' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.2' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.3' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.4' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.5' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.6' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.7' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.8' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.9' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.10' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.11' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.12' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.13' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.14' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.15' in dimension 1 completely.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 3.49 seconds. CPU system time: 0.04 seconds. Elapsed time: 4.07 seconds; current allocated memory: 213.149 MB.
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 5.34 seconds. CPU system time: 0.02 seconds. Elapsed time: 6.37 seconds; current allocated memory: 220.012 MB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'hls_linear_combination' ...
WARNING: [SYN 201-107] Renaming port name 'hls_linear_combination/out' to 'hls_linear_combination/out_r' to avoid the conflict with HDL keywords or other object names.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'hls_linear_combination' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_59) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_58) to 3 in order to utilize available DSP registers.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z020-clg484-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -output=/home/osm/Documents/SECT-MAYO/MAYO/HLS/ips/hls_linear_combination.zip
INFO: [HLS 200-1464] Running solution command: config_export -rtl=vhdl
INFO: [HLS 200-1510] Running: set_part xc7z020-clg484-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_export -format ip_catalog -output /home/osm/Documents/SECT-MAYO/MAYO/HLS/ips/hls_linear_combination.zip -rtl vhdl 
INFO: [HLS 200-1510] Running: set_directive_top -name hls_linear_combination hls_linear_combination 
INFO: [HLS 200-1510] Running: set_directive_pipeline hls_linear_combination/LOOP_LC2 
INFO: [HLS 200-1510] Running: set_directive_pipeline hls_linear_combination/LOOP_LC1 
INFO: [HLS 200-1510] Running: set_directive_array_partition -type cyclic -factor 16 -dim 1 hls_linear_combination accumulators 
INFO: [HLS 200-1510] Running: set_directive_unroll -skip_exit_check -factor 10 hls_linear_combination/LOOP_LC2 
INFO: [HLS 200-1510] Running: set_directive_array_reshape -type block -factor 10 -dim 1 hls_linear_combination vecs 
INFO: [HLS 200-1510] Running: set_directive_array_reshape -type block -factor 10 -dim 1 hls_linear_combination out 
INFO: [HLS 200-1510] Running: set_directive_pipeline -off hls_linear_combination 
INFO: [HLS 200-1510] Running: set_directive_bind_storage -type ram_2p -impl bram hls_linear_combination vecs 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0.01 seconds. CPU system time: 0 seconds. Elapsed time: 0.01 seconds; current allocated memory: 180.588 MB.
INFO: [HLS 200-10] Analyzing design file 'hls_linear_combination/hls_linear_combination.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 2.65 seconds. CPU system time: 0.35 seconds. Elapsed time: 3.1 seconds; current allocated memory: 181.116 MB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
WARNING: [HLS 214-185] The resource pragma (storage) on function argument, in 'call' is unsupported (hls_linear_combination/hls_linear_combination.cpp:7:9)
INFO: [HLS 214-188] Unrolling loop 'LOOP_LC2' (hls_linear_combination/hls_linear_combination.cpp:21:12) in function 'hls_linear_combination' partially (and skipping exit check) with a factor of 10 (hls_linear_combination/hls_linear_combination.cpp:21:12)
INFO: [HLS 214-248] block reshaped array 'vecs' on dimension 1 with 10 (hls_linear_combination/hls_linear_combination.cpp:7:9)
INFO: [HLS 214-248] block reshaped array 'out' on dimension 1 with 10 (hls_linear_combination/hls_linear_combination.cpp:6:221)
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 7.09 seconds. CPU system time: 0.46 seconds. Elapsed time: 7.75 seconds; current allocated memory: 184.201 MB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0 seconds; current allocated memory: 184.203 MB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0.08 seconds. CPU system time: 0 seconds. Elapsed time: 0.07 seconds; current allocated memory: 186.585 MB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0.1 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.12 seconds; current allocated memory: 186.018 MB.
INFO: [XFORM 203-502] Unrolling all sub-loops inside loop 'LOOP_LC1' (hls_linear_combination/hls_linear_combination.cpp:12) in function 'hls_linear_combination' for pipelining.
INFO: [HLS 200-489] Unrolling loop 'LOOP_LC12' (hls_linear_combination/hls_linear_combination.cpp:14) in function 'hls_linear_combination' completely with a factor of 60.
INFO: [XFORM 203-101] Partitioning array 'accumulators'  in dimension 1 with a cyclic factor 16.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.0' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.1' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.2' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.3' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.4' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.5' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.6' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.7' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.8' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.9' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.10' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.11' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.12' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.13' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.14' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.15' completely based on array size.
INFO: [XFORM 203-101] Partitioning array 'accumulators.0' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.1' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.2' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.3' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.4' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.5' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.6' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.7' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.8' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.9' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.10' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.11' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.12' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.13' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.14' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.15' in dimension 1 completely.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 2.41 seconds. CPU system time: 0.03 seconds. Elapsed time: 2.48 seconds; current allocated memory: 213.173 MB.
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 3.98 seconds. CPU system time: 0 seconds. Elapsed time: 4.1 seconds; current allocated memory: 220.021 MB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'hls_linear_combination' ...
WARNING: [SYN 201-107] Renaming port name 'hls_linear_combination/out' to 'hls_linear_combination/out_r' to avoid the conflict with HDL keywords or other object names.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'hls_linear_combination' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_59) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_58) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_57) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_56) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_55) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_54) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_53) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_52) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_51) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_50) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_49) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_48) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_47) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_46) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_45) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_44) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_43) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_42) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_41) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_40) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_39) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_38) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_37) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_36) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_35) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_34) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_33) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_32) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_31) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_30) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_29) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_28) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_27) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_26) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_25) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_24) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_23) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_22) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_21) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_20) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_19) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_18) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_17) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_16) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_15) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_14) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_13) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_12) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_11) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_10) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_9) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_8) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_7) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_6) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_5) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_4) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_3) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17) to 3 in order to utilize available DSP registers.
INFO: [SCHED 204-61] Pipelining loop 'LOOP_LC1'.
WARNING: [HLS 200-885] Unable to schedule 'load' operation ('vecs_load_2', hls_linear_combination/hls_linear_combination.cpp:17) on array 'vecs' due to limited memory ports. Please consider using a memory core with more ports or partitioning the array 'vecs'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 30, Depth = 104, loop 'LOOP_LC1'
INFO: [SCHED 204-61] Pipelining loop 'LOOP_LC2'.
WARNING: [HLS 200-880] The II Violation in module 'hls_linear_combination' (loop 'LOOP_LC2'): Unable to enforce a carried dependence constraint (II = 1, distance = 1, offset = 1) between 'store' operation ('out_addr_1_write_ln30', hls_linear_combination/hls_linear_combination.cpp:30) of constant <constant:_ssdm_op_Write.bram.p0i128> on array 'out_r' and 'load' operation ('out_load_1', hls_linear_combination/hls_linear_combination.cpp:30) on array 'out_r'.
WARNING: [HLS 200-880] The II Violation in module 'hls_linear_combination' (loop 'LOOP_LC2'): Unable to enforce a carried dependence constraint (II = 2, distance = 1, offset = 1) between 'store' operation ('out_addr_1_write_ln30', hls_linear_combination/hls_linear_combination.cpp:30) of constant <constant:_ssdm_op_Write.bram.p0i128> on array 'out_r' and 'load' operation ('out_load_1', hls_linear_combination/hls_linear_combination.cpp:30) on array 'out_r'.
WARNING: [HLS 200-880] The II Violation in module 'hls_linear_combination' (loop 'LOOP_LC2'): Unable to enforce a carried dependence constraint (II = 3, distance = 1, offset = 1) between 'store' operation ('out_addr_1_write_ln30', hls_linear_combination/hls_linear_combination.cpp:30) of constant <constant:_ssdm_op_Write.bram.p0i128> on array 'out_r' and 'load' operation ('out_load', hls_linear_combination/hls_linear_combination.cpp:30) on array 'out_r'.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z020-clg484-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -output=/home/osm/Documents/SECT-MAYO/MAYO/HLS/ips/hls_linear_combination.zip
INFO: [HLS 200-1464] Running solution command: config_export -rtl=vhdl
INFO: [HLS 200-1510] Running: set_part xc7z020-clg484-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_export -format ip_catalog -output /home/osm/Documents/SECT-MAYO/MAYO/HLS/ips/hls_linear_combination.zip -rtl vhdl 
INFO: [HLS 200-1510] Running: set_directive_top -name hls_linear_combination hls_linear_combination 
INFO: [HLS 200-1510] Running: set_directive_pipeline hls_linear_combination/LOOP_LC2 
INFO: [HLS 200-1510] Running: set_directive_pipeline hls_linear_combination/LOOP_LC1 
INFO: [HLS 200-1510] Running: set_directive_array_partition -type cyclic -factor 16 -dim 1 hls_linear_combination accumulators 
INFO: [HLS 200-1510] Running: set_directive_unroll -skip_exit_check -factor 10 hls_linear_combination/LOOP_LC2 
INFO: [HLS 200-1510] Running: set_directive_pipeline -off hls_linear_combination 
INFO: [HLS 200-1510] Running: set_directive_array_partition -dim 1 -factor 16 -type cyclic hls_linear_combination vecs 
INFO: [HLS 200-1510] Running: set_directive_array_partition -dim 1 -factor 16 -type cyclic hls_linear_combination coeffs 
INFO: [HLS 200-1510] Running: set_directive_array_partition -dim 1 -factor 16 -type cyclic hls_linear_combination out 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0.01 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.02 seconds; current allocated memory: 180.589 MB.
INFO: [HLS 200-10] Analyzing design file 'hls_linear_combination/hls_linear_combination.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 2.26 seconds. CPU system time: 0.32 seconds. Elapsed time: 8.43 seconds; current allocated memory: 181.131 MB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-188] Unrolling loop 'LOOP_LC2' (hls_linear_combination/hls_linear_combination.cpp:21:12) in function 'hls_linear_combination' partially (and skipping exit check) with a factor of 10 (hls_linear_combination/hls_linear_combination.cpp:21:12)
INFO: [HLS 214-248] cyclic partitioned array 'vecs' on dimension 1 with 16 (hls_linear_combination/hls_linear_combination.cpp:7:9)
INFO: [HLS 214-248] cyclic partitioned array 'coeffs' on dimension 1 with 16 (hls_linear_combination/hls_linear_combination.cpp:6:221)
INFO: [HLS 214-248] cyclic partitioned array 'out' on dimension 1 with 16 (hls_linear_combination/hls_linear_combination.cpp:7:9)
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 6.9 seconds. CPU system time: 0.48 seconds. Elapsed time: 10.66 seconds; current allocated memory: 184.529 MB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0 seconds; current allocated memory: 184.530 MB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0.15 seconds. CPU system time: 0.02 seconds. Elapsed time: 0.78 seconds; current allocated memory: 187.694 MB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0.27 seconds. CPU system time: 0 seconds. Elapsed time: 0.31 seconds; current allocated memory: 186.635 MB.
INFO: [XFORM 203-502] Unrolling all sub-loops inside loop 'LOOP_LC1' (hls_linear_combination/hls_linear_combination.cpp:12) in function 'hls_linear_combination' for pipelining.
INFO: [HLS 200-489] Unrolling loop 'LOOP_LC12' (hls_linear_combination/hls_linear_combination.cpp:14) in function 'hls_linear_combination' completely with a factor of 60.
INFO: [XFORM 203-101] Partitioning array 'accumulators'  in dimension 1 with a cyclic factor 16.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.0' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.1' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.2' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.3' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.4' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.5' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.6' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.7' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.8' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.9' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.10' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.11' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.12' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.13' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.14' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.15' completely based on array size.
INFO: [XFORM 203-101] Partitioning array 'accumulators.0' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.1' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.2' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.3' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.4' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.5' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.6' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.7' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.8' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.9' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.10' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.11' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.12' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.13' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.14' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.15' in dimension 1 completely.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 9.11 seconds. CPU system time: 0.05 seconds. Elapsed time: 9.51 seconds; current allocated memory: 223.074 MB.
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 12.61 seconds. CPU system time: 0.04 seconds. Elapsed time: 13.4 seconds; current allocated memory: 251.288 MB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'hls_linear_combination' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'hls_linear_combination' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_3) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_4) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_5) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_6) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_7) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_8) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_9) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_10) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_11) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_12) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_13) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_14) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_15) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_16) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_17) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_18) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_19) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_20) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_21) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_22) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_23) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_24) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_25) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_26) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_27) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_28) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_29) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_30) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_31) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_32) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_33) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_34) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_35) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_36) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_37) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_38) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_39) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_40) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_41) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_42) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_43) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_44) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_45) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_46) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_47) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_48) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_49) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_50) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_51) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_52) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_53) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_54) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_55) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_56) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_57) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_58) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_59) to 3 in order to utilize available DSP registers.
INFO: [SCHED 204-61] Pipelining loop 'LOOP_LC1'.
WARNING: [HLS 200-885] Unable to schedule 'load' operation ('vecs_14_load_2', hls_linear_combination/hls_linear_combination.cpp:17) on array 'vecs_14' due to limited memory ports. Please consider using a memory core with more ports or partitioning the array 'vecs_14'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 10, Depth = 14, loop 'LOOP_LC1'
INFO: [SCHED 204-61] Pipelining loop 'LOOP_LC2'.
WARNING: [HLS 200-880] The II Violation in module 'hls_linear_combination' (loop 'LOOP_LC2'): Unable to enforce a carried dependence constraint (II = 1, distance = 1, offset = 1) between 'store' operation ('out_0_addr_1_write_ln30', hls_linear_combination/hls_linear_combination.cpp:30) of variable 'trunc_ln30_2', hls_linear_combination/hls_linear_combination.cpp:30 on array 'out_0' and 'store' operation ('out_0_addr_write_ln30', hls_linear_combination/hls_linear_combination.cpp:30) of variable 'trunc_ln30', hls_linear_combination/hls_linear_combination.cpp:30 on array 'out_0'.
WARNING: [HLS 200-880] The II Violation in module 'hls_linear_combination' (loop 'LOOP_LC2'): Unable to enforce a carried dependence constraint (II = 2, distance = 1, offset = 1) between 'store' operation ('out_0_addr_2_write_ln30', hls_linear_combination/hls_linear_combination.cpp:30) of variable 'trunc_ln30_4', hls_linear_combination/hls_linear_combination.cpp:30 on array 'out_0' and 'store' operation ('out_0_addr_write_ln30', hls_linear_combination/hls_linear_combination.cpp:30) of variable 'trunc_ln30', hls_linear_combination/hls_linear_combination.cpp:30 on array 'out_0'.
WARNING: [HLS 200-880] The II Violation in module 'hls_linear_combination' (loop 'LOOP_LC2'): Unable to enforce a carried dependence constraint (II = 3, distance = 1, offset = 1) between 'store' operation ('out_0_addr_3_write_ln30', hls_linear_combination/hls_linear_combination.cpp:30) of variable 'trunc_ln30_6', hls_linear_combination/hls_linear_combination.cpp:30 on array 'out_0' and 'store' operation ('out_0_addr_write_ln30', hls_linear_combination/hls_linear_combination.cpp:30) of variable 'trunc_ln30', hls_linear_combination/hls_linear_combination.cpp:30 on array 'out_0'.
WARNING: [HLS 200-880] The II Violation in module 'hls_linear_combination' (loop 'LOOP_LC2'): Unable to enforce a carried dependence constraint (II = 4, distance = 1, offset = 1) between 'store' operation ('out_0_addr_4_write_ln30', hls_linear_combination/hls_linear_combination.cpp:30) of variable 'trunc_ln30_8', hls_linear_combination/hls_linear_combination.cpp:30 on array 'out_0' and 'store' operation ('out_0_addr_write_ln30', hls_linear_combination/hls_linear_combination.cpp:30) of variable 'trunc_ln30', hls_linear_combination/hls_linear_combination.cpp:30 on array 'out_0'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 5, Depth = 41, loop 'LOOP_LC2'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 99.39 seconds. CPU system time: 0.28 seconds. Elapsed time: 101.96 seconds; current allocated memory: 276.892 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 5.33 seconds. CPU system time: 0.17 seconds. Elapsed time: 5.81 seconds; current allocated memory: 310.013 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'hls_linear_combination' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-500] Setting interface mode on port 'hls_linear_combination/vecs_0' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'hls_linear_combination/vecs_1' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'hls_linear_combination/vecs_2' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'hls_linear_combination/vecs_3' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'hls_linear_combination/vecs_4' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'hls_linear_combination/vecs_5' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'hls_linear_combination/vecs_6' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'hls_linear_combination/vecs_7' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'hls_linear_combination/vecs_8' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'hls_linear_combination/vecs_9' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'hls_linear_combination/vecs_10' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'hls_linear_combination/vecs_11' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'hls_linear_combination/vecs_12' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'hls_linear_combination/vecs_13' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'hls_linear_combination/vecs_14' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'hls_linear_combination/vecs_15' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'hls_linear_combination/coeffs_0' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'hls_linear_combination/coeffs_1' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'hls_linear_combination/coeffs_2' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'hls_linear_combination/coeffs_3' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'hls_linear_combination/coeffs_4' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'hls_linear_combination/coeffs_5' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'hls_linear_combination/coeffs_6' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'hls_linear_combination/coeffs_7' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'hls_linear_combination/coeffs_8' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'hls_linear_combination/coeffs_9' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'hls_linear_combination/coeffs_10' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'hls_linear_combination/coeffs_11' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'hls_linear_combination/coeffs_12' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'hls_linear_combination/coeffs_13' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'hls_linear_combination/coeffs_14' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'hls_linear_combination/coeffs_15' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'hls_linear_combination/len' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'hls_linear_combination/out_0' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'hls_linear_combination/out_1' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'hls_linear_combination/out_2' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'hls_linear_combination/out_3' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'hls_linear_combination/out_4' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'hls_linear_combination/out_5' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'hls_linear_combination/out_6' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'hls_linear_combination/out_7' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'hls_linear_combination/out_8' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'hls_linear_combination/out_9' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'hls_linear_combination/out_10' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'hls_linear_combination/out_11' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'hls_linear_combination/out_12' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'hls_linear_combination/out_13' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'hls_linear_combination/out_14' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'hls_linear_combination/out_15' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on function 'hls_linear_combination' to 'ap_ctrl_hs'.
WARNING: [RTGEN 206-101] Register 'accumulators_0_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_1_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_2_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_3_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_4_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_5_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_6_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_7_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_8_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_9_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_10_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_11_0' is power-on initialization.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z020-clg484-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -output=/home/osm/Documents/SECT-MAYO/MAYO/HLS/ips/hls_linear_combination.zip
INFO: [HLS 200-1464] Running solution command: config_export -rtl=vhdl
INFO: [HLS 200-1510] Running: set_part xc7z020-clg484-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_export -format ip_catalog -output /home/osm/Documents/SECT-MAYO/MAYO/HLS/ips/hls_linear_combination.zip -rtl vhdl 
INFO: [HLS 200-1510] Running: set_directive_top -name hls_linear_combination hls_linear_combination 
INFO: [HLS 200-1510] Running: set_directive_pipeline hls_linear_combination/LOOP_LC2 
INFO: [HLS 200-1510] Running: set_directive_array_partition -type cyclic -factor 16 -dim 1 hls_linear_combination accumulators 
INFO: [HLS 200-1510] Running: set_directive_unroll -skip_exit_check -factor 10 hls_linear_combination/LOOP_LC2 
INFO: [HLS 200-1510] Running: set_directive_pipeline -off hls_linear_combination 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.01 seconds; current allocated memory: 180.531 MB.
INFO: [HLS 200-10] Analyzing design file 'hls_linear_combination/hls_linear_combination.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 2.66 seconds. CPU system time: 0.27 seconds. Elapsed time: 3.07 seconds; current allocated memory: 180.926 MB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-188] Unrolling loop 'LOOP_LC2' (hls_linear_combination/hls_linear_combination.cpp:21:12) in function 'hls_linear_combination' partially (and skipping exit check) with a factor of 10 (hls_linear_combination/hls_linear_combination.cpp:21:12)
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 6.64 seconds. CPU system time: 0.35 seconds. Elapsed time: 7.16 seconds; current allocated memory: 183.783 MB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0 seconds; current allocated memory: 183.784 MB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0.05 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.06 seconds; current allocated memory: 185.804 MB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0.05 seconds. CPU system time: 0 seconds. Elapsed time: 0.05 seconds; current allocated memory: 185.421 MB.
INFO: [XFORM 203-101] Partitioning array 'accumulators'  in dimension 1 with a cyclic factor 16.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.0' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.1' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.2' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.3' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.4' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.5' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.6' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.7' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.8' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.9' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.10' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.11' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.12' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.13' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.14' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.15' completely based on array size.
INFO: [XFORM 203-101] Partitioning array 'accumulators.0' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.1' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.2' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.3' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.4' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.5' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.6' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.7' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.8' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.9' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.10' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.11' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.12' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.13' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.14' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.15' in dimension 1 completely.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 1.01 seconds. CPU system time: 0 seconds. Elapsed time: 1.01 seconds; current allocated memory: 209.589 MB.
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 0.94 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.99 seconds; current allocated memory: 206.993 MB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'hls_linear_combination' ...
WARNING: [SYN 201-107] Renaming port name 'hls_linear_combination/out' to 'hls_linear_combination/out_r' to avoid the conflict with HDL keywords or other object names.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'hls_linear_combination' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'LOOP_LC2'.
WARNING: [HLS 200-885] Unable to schedule 'store' operation ('out_addr_2_write_ln30', hls_linear_combination/hls_linear_combination.cpp:30) of variable 'trunc_ln30_5', hls_linear_combination/hls_linear_combination.cpp:30 on array 'out_r' due to limited memory ports. Please consider using a memory core with more ports or partitioning the array 'out_r'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 5, Depth = 41, loop 'LOOP_LC2'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0.87 seconds. CPU system time: 0 seconds. Elapsed time: 0.9 seconds; current allocated memory: 209.707 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 1 seconds. CPU system time: 0.01 seconds. Elapsed time: 1.01 seconds; current allocated memory: 213.509 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z020-clg484-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -output=/home/osm/Documents/SECT-MAYO/MAYO/HLS/ips/hls_linear_combination.zip
INFO: [HLS 200-1464] Running solution command: config_export -rtl=vhdl
INFO: [HLS 200-1510] Running: set_part xc7z020-clg484-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_export -format ip_catalog -output /home/osm/Documents/SECT-MAYO/MAYO/HLS/ips/hls_linear_combination.zip -rtl vhdl 
INFO: [HLS 200-1510] Running: set_directive_top -name hls_linear_combination hls_linear_combination 
INFO: [HLS 200-1510] Running: set_directive_pipeline hls_linear_combination/LOOP_LC2 
INFO: [HLS 200-1510] Running: set_directive_array_partition -type cyclic -factor 16 -dim 1 hls_linear_combination accumulators 
INFO: [HLS 200-1510] Running: set_directive_unroll -skip_exit_check -factor 10 hls_linear_combination/LOOP_LC2 
INFO: [HLS 200-1510] Running: set_directive_pipeline -off hls_linear_combination 
INFO: [HLS 200-1510] Running: set_directive_bind_storage -type fifo -impl bram hls_linear_combination out 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0.02 seconds. CPU system time: 0 seconds. Elapsed time: 0.01 seconds; current allocated memory: 180.544 MB.
INFO: [HLS 200-10] Analyzing design file 'hls_linear_combination/hls_linear_combination.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 2.26 seconds. CPU system time: 0.29 seconds. Elapsed time: 2.68 seconds; current allocated memory: 180.945 MB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
WARNING: [HLS 214-185] The resource pragma (storage) on function argument, in 'call' is unsupported (hls_linear_combination/hls_linear_combination.cpp:6:221)
INFO: [HLS 214-188] Unrolling loop 'LOOP_LC2' (hls_linear_combination/hls_linear_combination.cpp:21:12) in function 'hls_linear_combination' partially (and skipping exit check) with a factor of 10 (hls_linear_combination/hls_linear_combination.cpp:21:12)
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 6.1 seconds. CPU system time: 0.28 seconds. Elapsed time: 6.47 seconds; current allocated memory: 183.820 MB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0 seconds; current allocated memory: 183.821 MB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0.04 seconds. CPU system time: 0 seconds. Elapsed time: 0.04 seconds; current allocated memory: 185.843 MB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0.04 seconds. CPU system time: 0 seconds. Elapsed time: 0.04 seconds; current allocated memory: 185.459 MB.
INFO: [XFORM 203-101] Partitioning array 'accumulators'  in dimension 1 with a cyclic factor 16.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.0' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.1' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.2' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.3' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.4' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.5' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.6' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.7' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.8' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.9' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.10' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.11' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.12' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.13' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.14' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.15' completely based on array size.
INFO: [XFORM 203-101] Partitioning array 'accumulators.0' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.1' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.2' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.3' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.4' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.5' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.6' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.7' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.8' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.9' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.10' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.11' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.12' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.13' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.14' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.15' in dimension 1 completely.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 1.03 seconds. CPU system time: 0.01 seconds. Elapsed time: 1.04 seconds; current allocated memory: 209.626 MB.
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 1.02 seconds. CPU system time: 0 seconds. Elapsed time: 1.03 seconds; current allocated memory: 207.029 MB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'hls_linear_combination' ...
WARNING: [SYN 201-107] Renaming port name 'hls_linear_combination/out' to 'hls_linear_combination/out_r' to avoid the conflict with HDL keywords or other object names.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'hls_linear_combination' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'LOOP_LC2'.
WARNING: [HLS 200-885] Unable to schedule 'store' operation ('out_addr_2_write_ln30', hls_linear_combination/hls_linear_combination.cpp:30) of variable 'trunc_ln30_5', hls_linear_combination/hls_linear_combination.cpp:30 on array 'out_r' due to limited memory ports. Please consider using a memory core with more ports or partitioning the array 'out_r'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 5, Depth = 41, loop 'LOOP_LC2'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0.9 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.98 seconds; current allocated memory: 209.760 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101]==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z020-clg484-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -output=/home/osm/Documents/SECT-MAYO/MAYO/HLS/ips/hls_linear_combination.zip
INFO: [HLS 200-1464] Running solution command: config_export -rtl=vhdl
INFO: [HLS 200-1510] Running: set_part xc7z020-clg484-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_export -format ip_catalog -output /home/osm/Documents/SECT-MAYO/MAYO/HLS/ips/hls_linear_combination.zip -rtl vhdl 
INFO: [HLS 200-1510] Running: set_directive_top -name hls_linear_combination hls_linear_combination 
INFO: [HLS 200-1510] Running: set_directive_pipeline hls_linear_combination/LOOP_LC2 
INFO: [HLS 200-1510] Running: set_directive_array_partition -type cyclic -factor 16 -dim 1 hls_linear_combination accumulators 
INFO: [HLS 200-1510] Running: set_directive_unroll -skip_exit_check -factor 10 hls_linear_combination/LOOP_LC2 
INFO: [HLS 200-1510] Running: set_directive_pipeline -off hls_linear_combination 
INFO: [HLS 200-1510] Running: set_directive_bind_storage -type ram_t2p -impl bram hls_linear_combination out 
INFO: [HLS 200-1510] Running: set_directive_array_partition -dim 1 -factor 2 -type block hls_linear_combination out 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0.01 seconds. CPU system time: 0 seconds. Elapsed time: 0.01 seconds; current allocated memory: 180.537 MB.
INFO: [HLS 200-10] Analyzing design file 'hls_linear_combination/hls_linear_combination.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 3.11 seconds. CPU system time: 0.32 seconds. Elapsed time: 3.5 seconds; current allocated memory: 180.964 MB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
WARNING: [HLS 214-185] The resource pragma (storage) on function argument, in 'call' is unsupported (hls_linear_combination/hls_linear_combination.cpp:7:9)
INFO: [HLS 214-188] Unrolling loop 'LOOP_LC2' (hls_linear_combination/hls_linear_combination.cpp:21:12) in function 'hls_linear_combination' partially (and skipping exit check) with a factor of 10 (hls_linear_combination/hls_linear_combination.cpp:21:12)
INFO: [HLS 214-248] block partitioned array 'out' on dimension 1 with 2 (hls_linear_combination/hls_linear_combination.cpp:6:221)
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 8.49 seconds. CPU system time: 0.48 seconds. Elapsed time: 9.69 seconds; current allocated memory: 184.014 MB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0.01 seconds. Elapsed time: 0 seconds; current allocated memory: 184.015 MB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0.05 seconds. CPU system time: 0 seconds. Elapsed time: 0.07 seconds; current allocated memory: 186.096 MB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0.08 seconds. CPU system time: 0 seconds. Elapsed time: 0.08 seconds; current allocated memory: 185.706 MB.
INFO: [XFORM 203-101] Partitioning array 'accumulators'  in dimension 1 with a cyclic factor 16.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.0' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.1' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.2' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.3' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.4' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.5' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.6' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.7' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.8' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.9' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.10' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.11' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.12' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.13' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.14' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.15' completely based on array size.
INFO: [XFORM 203-101] Partitioning array 'accumulators.0' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.1' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.2' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.3' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.4' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.5' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.6' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.7' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.8' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.9' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.10' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.11' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.12' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.13' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.14' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.15' in dimension 1 completely.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (hls_linear_combination/hls_linear_combination.cpp:21:36) to (hls_linear_combination/hls_linear_combination.cpp:30:10) in function 'hls_linear_combination'... converting 10 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (hls_linear_combination/hls_linear_combination.cpp:21:36) to (hls_linear_combination/hls_linear_combination.cpp:30:10) in function 'hls_linear_combination'... converting 10 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (hls_linear_combination/hls_linear_combination.cpp:21:36) to (hls_linear_combination/hls_linear_combination.cpp:30:10) in function 'hls_linear_combination'... converting 10 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (hls_linear_combination/hls_linear_combination.cpp:21:36) to (hls_linear_combination/hls_linear_combination.cpp:30:10) in function 'hls_linear_combination'... converting 10 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (hls_linear_combination/hls_linear_combination.cpp:21:36) to (hls_linear_combination/hls_linear_combination.cpp:30:10) in function 'hls_linear_combination'... converting 10 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (hls_linear_combination/hls_linear_combination.cpp:21:36) to (hls_linear_combination/hls_linear_combination.cpp:30:10) in function 'hls_linear_combination'... converting 10 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (hls_linear_combination/hls_linear_combination.cpp:21:36) to (hls_linear_combination/hls_linear_combination.cpp:30:10) in function 'hls_linear_combination'... converting 10 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (hls_linear_combination/hls_linear_combination.cpp:21:36) to (hls_linear_combination/hls_linear_combination.cpp:30:10) in function 'hls_linear_combination'... converting 10 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (hls_linear_combination/hls_linear_combination.cpp:21:36) to (hls_linear_combination/hls_linear_combination.cpp:30:10) in function 'hls_linear_combination'... converting 10 basic blocks.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 1.61 seconds. CPU system time: 0.02 seconds. Elapsed time: 1.69 seconds; current allocated memory: 209.276 MB.
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 1.51 seconds. CPU system time: 0.01 seconds. Elapsed time: 1.64 seconds; current allocated memory: 206.091 MB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'hls_linear_combination' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'hls_linear_combination' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'LOOP_LC2'.
WARNING: [HLS 200-880] The II Violation in module 'hls_linear_combination' (loop 'LOOP_LC2'): Unable to enforce a carried dependence constraint (II = 1, distance = 1, offset = 1) between 'store' operation ('out_0_addr_1_write_ln30', hls_linear_combination/hls_linear_combination.cpp:30) of variable 'trunc_ln30_3', hls_linear_combination/hls_linear_combination.cpp:30 on array 'out_0' and 'store' operation ('out_0_addr_write_ln30', hls_linear_combination/hls_linear_combination.cpp:30) of variable 'trunc_ln30_2', hls_linear_combination/hls_linear_combination.cpp:30 on array 'out_0'.
WARNING: [HLS 200-880] The II Violation in module 'hls_linear_combination' (loop 'LOOP_LC2'): Unable to enforce a carried dependence constraint (II = 2, distance = 1, offset = 1) between 'store' operation ('out_0_addr_5_write_ln30', hls_linear_combination/hls_linear_combination.cpp:30) of variable 'trunc_ln30_10', hls_linear_combination/hls_linear_combination.cpp:30 on array 'out_0' and 'store' operation ('out_0_addr_write_ln30', hls_linear_combination/hls_linear_combination.cpp:30) of variable 'trunc_ln30_2', hls_linear_combination/hls_linear_combination.cpp:30 on array 'out_0'.
WARNING: [HLS 200-880] The II Violation in module 'hls_linear_combination' (loop 'LOOP_LC2'): Unable to enforce a carried dependence constraint (II = 3, distance = 1, offset = 1) between 'store' operation ('out_0_addr_5_write_ln30', hls_linear_combination/hls_linear_combination.cpp:30) of variable 'trunc_ln30_10', hls_linear_combination/hls_linear_combination.cpp:30 on array 'out_0' and 'store' operation ('out_0_addr_write_ln30', hls_linear_combination/hls_linear_combination.cpp:30) of variable 'trunc_ln30_2', hls_linear_combination/hls_linear_combination.cpp:30 on array 'out_0'.
WARNING: [HLS 200-885] Unable to schedule 'store' operation ('out_1_addr_3_write_ln30', hls_linear_combination/hls_linear_combination.cpp:30) of variable 'trunc_ln30_7', hls_linear_combination/hls_linear_combination.cpp:30 on array 'out_1' due to limited memory ports. Please consider using a memory core with more ports or partitioning the array 'out_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 7, Depth = 43, loop 'LOOP_LC2'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 1.7 seconds. CPU system time: 0 seconds. Elapsed time: 1.76 seconds; current allocated memory: 209.095 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 1.71 seconds. CPU system time: 0.03 seconds. Elapsed time: 1.81 seconds; current allocated memory: 212.780 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'hls_linear_combination' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-500] Setting interface mode on port 'hls_linear_combination/vecs' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'hls_linear_combination/coeffs' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'hls_linear_combination/len' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'hls_linear_combination/out_0' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'hls_linear_combination/out_1' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on function 'hls_linear_combination' to 'ap_ctrl_hs'.
WARNING: [RTGEN 206-101] Register 'accumulators_14_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_14_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_14_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_15_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_15_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_15_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_1_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_1_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_1_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_1_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_3_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_3_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_3_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_3_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_5_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_5_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_5_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_5_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_7_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_7_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_7_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_7_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_9_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_9_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_9_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_9_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_11_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_11_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_11_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_11_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_13_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_13_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_13_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_0_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_0_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_0_2' is power-on initialization.
WARNING==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z020-clg484-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -output=/home/osm/Documents/SECT-MAYO/MAYO/HLS/ips/hls_linear_combination.zip
INFO: [HLS 200-1464] Running solution command: config_export -rtl=vhdl
INFO: [HLS 200-1510] Running: set_part xc7z020-clg484-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_export -format ip_catalog -output /home/osm/Documents/SECT-MAYO/MAYO/HLS/ips/hls_linear_combination.zip -rtl vhdl 
INFO: [HLS 200-1510] Running: set_directive_top -name hls_linear_combination hls_linear_combination 
INFO: [HLS 200-1510] Running: set_directive_pipeline hls_linear_combination/LOOP_LC2 
INFO: [HLS 200-1510] Running: set_directive_array_partition -type cyclic -factor 16 -dim 1 hls_linear_combination accumulators 
INFO: [HLS 200-1510] Running: set_directive_unroll -skip_exit_check -factor 10 hls_linear_combination/LOOP_LC2 
INFO: [HLS 200-1510] Running: set_directive_pipeline -off hls_linear_combination 
INFO: [HLS 200-1510] Running: set_directive_bind_storage -type ram_t2p -impl bram hls_linear_combination out 
INFO: [HLS 200-1510] Running: set_directive_array_partition -dim 1 -factor 2 -type cyclic hls_linear_combination out 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0.01 seconds. CPU system time: 0 seconds. Elapsed time: 0.02 seconds; current allocated memory: 180.537 MB.
INFO: [HLS 200-10] Analyzing design file 'hls_linear_combination/hls_linear_combination.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 3.2 seconds. CPU system time: 0.35 seconds. Elapsed time: 3.9 seconds; current allocated memory: 180.964 MB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
WARNING: [HLS 214-185] The resource pragma (storage) on function argument, in 'call' is unsupported (hls_linear_combination/hls_linear_combination.cpp:7:9)
INFO: [HLS 214-188] Unrolling loop 'LOOP_LC2' (hls_linear_combination/hls_linear_combination.cpp:21:12) in function 'hls_linear_combination' partially (and skipping exit check) with a factor of 10 (hls_linear_combination/hls_linear_combination.cpp:21:12)
INFO: [HLS 214-248] cyclic partitioned array 'out' on dimension 1 with 2 (hls_linear_combination/hls_linear_combination.cpp:6:221)
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 7.95 seconds. CPU system time: 0.46 seconds. Elapsed time: 8.77 seconds; current allocated memory: 183.902 MB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0 seconds; current allocated memory: 183.903 MB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0.05 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.05 seconds; current allocated memory: 185.938 MB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0.07 seconds. CPU system time: 0 seconds. Elapsed time: 0.08 seconds; current allocated memory: 185.562 MB.
INFO: [XFORM 203-101] Partitioning array 'accumulators'  in dimension 1 with a cyclic factor 16.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.0' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.1' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.2' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.3' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.4' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.5' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.6' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.7' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.8' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.9' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.10' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.11' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.12' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.13' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.14' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.15' completely based on array size.
INFO: [XFORM 203-101] Partitioning array 'accumulators.0' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.1' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.2' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.3' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.4' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.5' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.6' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.7' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.8' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.9' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.10' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.11' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.12' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.13' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.14' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.15' in dimension 1 completely.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 1.32 seconds. CPU system time: 0.02 seconds. Elapsed time: 1.41 seconds; current allocated memory: 209.740 MB.
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 1.35 seconds. CPU system time: 0 seconds. Elapsed time: 1.45 seconds; current allocated memory: 207.317 MB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'hls_linear_combination' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'hls_linear_combination' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'LOOP_LC2'.
WARNING: [HLS 200-880] The II Violation in module 'hls_linear_combination' (loop 'LOOP_LC2'): Unable to enforce a carried dependence constraint (II = 1, distance = 1, offset = 1) between 'store' operation ('out_1_addr_2_write_ln30', hls_linear_combination/hls_linear_combination.cpp:30) of variable 'trunc_ln30_10', hls_linear_combination/hls_linear_combination.cpp:30 on array 'out_1' and 'store' operation ('out_1_addr_write_ln30', hls_linear_combination/hls_linear_combination.cpp:30) of variable 'trunc_ln30_3', hls_linear_combination/hls_linear_combination.cpp:30 on array 'out_1'.
WARNING: [HLS 200-880] The II Violation in module 'hls_linear_combination' (loop 'LOOP_LC2'): Unable to enforce a carried dependence constraint (II = 2, distance = 1, offset = 1) between 'store' operation ('out_1_addr_3_write_ln30', hls_linear_combination/hls_linear_combination.cpp:30) of variable 'trunc_ln30_14', hls_linear_combination/hls_linear_combination.cpp:30 on array 'out_1' and 'store' operation ('out_1_addr_write_ln30', hls_linear_combination/hls_linear_combination.cpp:30) of variable 'trunc_ln30_3', hls_linear_combination/hls_linear_combination.cpp:30 on array 'out_1'.
WARNING: [HLS 200-880] The II Violation in module 'hls_linear_combination' (loop 'LOOP_LC2'): Unable to enforce a carried dependence constraint (II = 3, distance = 1, offset = 1) between 'store' operation ('out_1_addr_4_write_ln30', hls_linear_combination/hls_linear_combination.cpp:30) of variable 'trunc_ln30_18', hls_linear_combination/hls_linear_combination.cpp:30 on array 'out_1' and 'store' operation ('out_1_addr_write_ln30', hls_linear_combination/hls_linear_combination.cpp:30) of variable 'trunc_ln30_3', hls_linear_combination/hls_linear_combination.cpp:30 on array 'out_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 4, Depth = 40, loop 'LOOP_LC2'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0.93 seconds. CPU system time: 0 seconds. Elapsed time: 0.98 seconds; current allocated memory: 210.056 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 1.38 seconds. CPU system time: 0.01 seconds. Elapsed time: 1.47 seconds; current allocated memory: 213.889 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'hls_linear_combination' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-500] Setting interface mode on port 'hls_linear_combination/vecs' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'hls_linear_combination/coeffs' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'hls_linear_combination/len' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'hls_linear_combination/out_0' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'hls_linear_combination/out_1' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on function 'hls_linear_combination' to 'ap_ctrl_hs'.
WARNING: [RTGEN 206-101] Register 'accumulators_14_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_14_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_14_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_15_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_15_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_15_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_0_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_0_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_0_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_0_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_1_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_1_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_1_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_1_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_2_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_2_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_2_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_2_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_3_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_3_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_3_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_3_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_4_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_4_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_4_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_4_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_5_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_5_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_5_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_5_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_6_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_6_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_6_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_6_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_7_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_7_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_7_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_7_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_9_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_9_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_9_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_9_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_11_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_11_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_11_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_11_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_13_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_13_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_13_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_8_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_8_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_8_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_8_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_10_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_10_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_10_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_10_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_12_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_12_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_12_2' is power-on initialization.
INFO: [RTGEN 206-100] Generating core module 'mul_8ns_8ns_16_1_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mux_32_32_1_1': 24 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mux_42_32_1_1': 72 instance(s).
INFO: [RTGEN 206-100] Generating core module 'urem_32ns_6ns_8_36_1': 10 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'hls_linear_combination'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 1.36 seconds. CPU system time: 0.05 seconds. Elapsed time: 1.54 seconds; current allocated memory: 218.994 MB.
INFO: [RTMG 210-282] Generating pipelined core: 'hls_linear_combination_mul_8ns_8ns_16_1_1_Multiplier_0'
INFO: [RTMG 210-282] Generating pipelined core: 'hls_linear_combination_urem_32ns_6ns_8_36_1_div'
INFO: [HLS 200-111] Finished Generating all RTL models: CPU user time: 5.04 seconds. CPU system time: 0.13 seconds. Elapsed time: 5.38 seconds; current allocated memory: 237.894 MB.
INFO: [VHDL 208-304] Generating VHDL RTL for hls_linear_combination.
INFO: [VLOG 209-307] Generating Verilog RTL for hls_linear_combination.
INFO: [HLS 200-790] **** Loop Constraint Status: All loop constraints were NOT satisfied.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z020-clg484-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -output=/home/osm/Documents/SECT-MAYO/MAYO/HLS/ips/hls_linear_combination.zip
INFO: [HLS 200-1464] Running solution command: config_export -rtl=vhdl
INFO: [HLS 200-1510] Running: set_part xc7z020-clg484-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_export -format ip_catalog -output /home/osm/Documents/SECT-MAYO/MAYO/HLS/ips/hls_linear_combination.zip -rtl vhdl 
INFO: [HLS 200-1510] Running: set_directive_top -name hls_linear_combination hls_linear_combination 
INFO: [HLS 200-1510] Running: set_directive_pipeline hls_linear_combination/LOOP_LC2 
INFO: [HLS 200-1510] Running: set_directive_array_partition -type cyclic -factor 16 -dim 1 hls_linear_combination accumulators 
INFO: [HLS 200-1510] Running: set_directive_unroll -skip_exit_check -factor 10 hls_linear_combination/LOOP_LC2 
INFO: [HLS 200-1510] Running: set_directive_pipeline -off hls_linear_combination 
INFO: [HLS 200-1510] Running: set_directive_pipeline hls_linear_combination/LOOP_LC1 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0.02 seconds. CPU system time: 0 seconds. Elapsed time: 0.02 seconds; current allocated memory: 180.534 MB.
INFO: [HLS 200-10] Analyzing design file 'hls_linear_combination/hls_linear_combination.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 2.29 seconds. CPU system time: 0.2 seconds. Elapsed time: 2.62 seconds; current allocated memory: 180.944 MB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-188] Unrolling loop 'LOOP_LC2' (hls_linear_combination/hls_linear_combination.cpp:21:12) in function 'hls_linear_combination' partially (and skipping exit check) with a factor of 10 (hls_linear_combination/hls_linear_combination.cpp:21:12)
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 7.05 seconds. CPU system time: 0.38 seconds. Elapsed time: 7.8 seconds; current allocated memory: 183.801 MB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0 seconds; current allocated memory: 183.803 MB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0.05 seconds. CPU system time: 0 seconds. Elapsed time: 0.04 seconds; current allocated memory: 185.738 MB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0.04 seconds. CPU system time: 0 seconds. Elapsed time: 0.05 seconds; current allocated memory: 185.389 MB.
INFO: [XFORM 203-502] Unrolling all sub-loops inside loop 'LOOP_LC1' (hls_linear_combination/hls_linear_combination.cpp:12) in function 'hls_linear_combination' for pipelining.
INFO: [HLS 200-489] Unrolling loop 'LOOP_LC12' (hls_linear_combination/hls_linear_combination.cpp:14) in function 'hls_linear_combination' completely with a factor of 60.
INFO: [XFORM 203-101] Partitioning array 'accumulators'  in dimension 1 with a cyclic factor 16.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.0' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.1' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.2' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.3' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.4' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.5' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.6' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.7' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.8' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.9' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.10' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.11' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.12' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.13' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.14' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.15' completely based on array size.
INFO: [XFORM 203-101] Partitioning array 'accumulators.0' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.1' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.2' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.3' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.4' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.5' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.6' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.7' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.8' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.9' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.10' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.11' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.12' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.13' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.14' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.15' in dimension 1 completely.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 0.4 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.46 seconds; current allocated memory: 206.816 MB.
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 0.28 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.31 seconds; current allocated memory: 200.471 MB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'hls_linear_combination' ...
WARNING: [SYN 201-107] Renaming port name 'hls_linear_combination/out' to 'hls_linear_combination/out_r' to avoid the conflict with HDL keywords or other object names.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'hls_linear_combination' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'LOOP_LC1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 1, loop 'LOOP_LC1'
INFO: [SCHED 204-61] Pipelining loop 'LOOP_LC2'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 37, loop 'LOOP_LC2'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0.44 seconds. CPU system time: 0 seconds. Elapsed time: 0.46 seconds; current allocated memory: 201.545 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z020-clg484-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -output=/home/osm/Documents/SECT-MAYO/MAYO/HLS/ips/hls_linear_combination.zip
INFO: [HLS 200-1464] Running solution command: config_export -rtl=vhdl
INFO: [HLS 200-1510] Running: set_part xc7z020-clg484-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_export -format ip_catalog -output /home/osm/Documents/SECT-MAYO/MAYO/HLS/ips/hls_linear_combination.zip -rtl vhdl 
INFO: [HLS 200-1510] Running: set_directive_top -name hls_linear_combination hls_linear_combination 
INFO: [HLS 200-1510] Running: set_directive_pipeline hls_linear_combination/LOOP_LC2 
INFO: [HLS 200-1510] Running: set_directive_array_partition -type cyclic -factor 16 -dim 1 hls_linear_combination accumulators 
INFO: [HLS 200-1510] Running: set_directive_unroll -skip_exit_check -factor 10 hls_linear_combination/LOOP_LC2 
INFO: [HLS 200-1510] Running: set_directive_pipeline -off hls_linear_combination 
INFO: [HLS 200-1510] Running: set_directive_pipeline hls_linear_combination/LOOP_LC1 
INFO: [HLS 200-1510] Running: set_directive_interface -mode ap_hs hls_linear_combination vecs 
INFO: [HLS 200-1510] Running: set_directive_interface -mode ap_hs hls_linear_combination coeffs 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0.02 seconds. CPU system time: 0 seconds. Elapsed time: 0.02 seconds; current allocated memory: 180.549 MB.
INFO: [HLS 200-10] Analyzing design file 'hls_linear_combination/hls_linear_combination.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 2.04 seconds. CPU system time: 0.28 seconds. Elapsed time: 2.42 seconds; current allocated memory: 181.048 MB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-188] Unrolling loop 'LOOP_LC2' (hls_linear_combination/hls_linear_combination.cpp:21:12) in function 'hls_linear_combination' partially (and skipping exit check) with a factor of 10 (hls_linear_combination/hls_linear_combination.cpp:21:12)
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 5.88 seconds. CPU system time: 0.3 seconds. Elapsed time: 6.32 seconds; current allocated memory: 183.901 MB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0 seconds; current allocated memory: 183.902 MB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0.02 seconds. CPU system time: 0 seconds. Elapsed time: 0.03 seconds; current allocated memory: 185.841 MB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0.03 seconds. CPU system time: 0 seconds. Elapsed time: 0.04 seconds; current allocated memory: 185.491 MB.
INFO: [XFORM 203-502] Unrolling all sub-loops inside loop 'LOOP_LC1' (hls_linear_combination/hls_linear_combination.cpp:12) in function 'hls_linear_combination' for pipelining.
INFO: [HLS 200-489] Unrolling loop 'LOOP_LC12' (hls_linear_combination/hls_linear_combination.cpp:14) in function 'hls_linear_combination' completely with a factor of 60.
INFO: [XFORM 203-101] Partitioning array 'accumulators'  in dimension 1 with a cyclic factor 16.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.0' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.1' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.2' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.3' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.4' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.5' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.6' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.7' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.8' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.9' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.10' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.11' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.12' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.13' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.14' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.15' completely based on array size.
INFO: [XFORM 203-101] Partitioning array 'accumulators.0' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.1' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.2' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.3' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.4' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.5' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.6' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.7' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.8' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.9' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.10' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.11' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.12' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.13' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.14' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.15' in dimension 1 completely.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 0.27 seconds. CPU system time: 0.02 seconds. Elapsed time: 0.3 seconds; current allocated memory: 206.917 MB.
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 0.24 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.25 seconds; current allocated memory: 200.577 MB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'hls_linear_combination' ...
WARNING: [SYN 201-107] Renaming port name 'hls_linear_combination/out' to 'hls_linear_combination/out_r' to avoid the conflict with HDL keywords or other object names.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'hls_linear_combination' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'LOOP_LC1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 1, loop 'LOOP_LC1'
INFO: [SCHED 204-61] Pipelining loop 'LOOP_LC2'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 37, loop 'LOOP_LC2'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0.61 seconds. CPU system time: 0 seconds. Elapsed time: 0.64 seconds; current allocated memory: 201.632 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z020-clg484-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -output=/home/osm/Documents/SECT-MAYO/MAYO/HLS/ips/hls_linear_combination.zip
INFO: [HLS 200-1464] Running solution command: config_export -rtl=vhdl
INFO: [HLS 200-1510] Running: set_part xc7z020-clg484-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_export -format ip_catalog -output /home/osm/Documents/SECT-MAYO/MAYO/HLS/ips/hls_linear_combination.zip -rtl vhdl 
INFO: [HLS 200-1510] Running: set_directive_top -name hls_linear_combination hls_linear_combination 
INFO: [HLS 200-1510] Running: set_directive_pipeline hls_linear_combination/LOOP_LC2 
INFO: [HLS 200-1510] Running: set_directive_array_partition -type cyclic -factor 16 -dim 1 hls_linear_combination accumulators 
INFO: [HLS 200-1510] Running: set_directive_unroll -skip_exit_check -factor 10 hls_linear_combination/LOOP_LC2 
INFO: [HLS 200-1510] Running: set_directive_pipeline hls_linear_combination 
INFO: [HLS 200-1510] Running: set_directive_pipeline hls_linear_combination/LOOP_LC1 
INFO: [HLS 200-1510] Running: set_directive_interface -mode ap_hs hls_linear_combination vecs 
INFO: [HLS 200-1510] Running: set_directive_interface -mode ap_hs hls_linear_combination coeffs 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0.02 seconds. CPU system time: 0 seconds. Elapsed time: 0.01 seconds; current allocated memory: 180.542 MB.
INFO: [HLS 200-10] Analyzing design file 'hls_linear_combination/hls_linear_combination.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 2.82 seconds. CPU system time: 0.31 seconds. Elapsed time: 3.26 seconds; current allocated memory: 181.052 MB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-188] Unrolling loop 'LOOP_LC2' (hls_linear_combination/hls_linear_combination.cpp:21:12) in function 'hls_linear_combination' partially (and skipping exit check) with a factor of 10 (hls_linear_combination/hls_linear_combination.cpp:21:12)
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 8.15 seconds. CPU system time: 0.51 seconds. Elapsed time: 9.44 seconds; current allocated memory: 183.924 MB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0 seconds; current allocated memory: 183.926 MB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0.05 seconds. CPU system time: 0 seconds. Elapsed time: 0.07 seconds; current allocated memory: 185.849 MB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0.05 seconds. CPU system time: 0 seconds. Elapsed time: 0.06 seconds; current allocated memory: 185.517 MB.
INFO: [XFORM 203-502] Unrolling all loops for pipelining in function 'hls_linear_combination' (hls_linear_combination/hls_linear_combination.cpp:6).
WARNING: [XFORM 203-503] Ignored partial unroll directive for loop 'LOOP_LC1' (hls_linear_combination/hls_linear_combination.cpp:12) because its parent loop or function is pipelined.
WARNING: [XFORM 203-505] Ignored pipeline directive for loop 'LOOP_LC2' (hls_linear_combination/hls_linear_combination.cpp:21) because its parent loop or function is pipelined.
WARNING: [XFORM 203-503] Ignored partial unroll directive for loop 'LOOP_LC2' (hls_linear_combination/hls_linear_combination.cpp:21) because its parent loop or function is pipelined.
WARNING: [HLS 200-936] Cannot unroll loop 'LOOP_LC1' (hls_linear_combination/hls_linear_combination.cpp:12) in function 'hls_linear_combination': cannot completely unroll a loop with a variable trip count.
INFO: [HLS 200-489] Unrolling loop 'LOOP_LC12' (hls_linear_combination/hls_linear_combination.cpp:14) in function 'hls_linear_combination' completely with a factor of 60.
INFO: [HLS 200-489] Unrolling loop 'LOOP_LC2' (hls_linear_combination/hls_linear_combination.cpp:21) in function 'hls_linear_combination' completely with a factor of 6.
INFO: [XFORM 203-101] Partitioning array 'accumulators'  in dimension 1 with a cyclic factor 16.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.0' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.1' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.2' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.3' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.4' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.5' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.6' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.7' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.8' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.9' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.10' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.11' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.12' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.13' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.14' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.15' completely based on array size.
INFO: [XFORM 203-101] Partitioning array 'accumulators.0' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.1' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.2' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.3' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.4' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.5' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.6' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.7' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.8' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.9' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.10' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.11' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.12' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.13' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.14' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.15' in dimension 1 completely.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 0.31 seconds. CPU system time: 0.02 seconds. Elapsed time: 0.33 seconds; current allocated memory: 206.779 MB.
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 0.18 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.2 seconds; current allocated memory: 200.052 MB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'hls_linear_combination' ...
WARNING: [SYN 201-107] Renaming port name 'hls_linear_combination/out' to 'hls_linear_combination/out_r' to avoid the conflict with HDL keywords or other object names.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'hls_linear_combination' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
WARNING: [SCHED 204-65] Unable to satisfy pipeline directive for function 'hls_linear_combination': contains subloop(s) that are not unrolled.
WARNING: [SCHED 204-65] Unable to satisfy pipeline directive for function 'hls_linear_combination': contains subloop(s) that are not unrolled.
INFO: [SCHED 204-61] Pipelining loop 'LOOP_LC1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 1, loop 'LOOP_LC1'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0.48 seconds. CPU system time: 0.02 seconds. Elapsed time: 0.54 seconds; current allocated memory: 200.912 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0.7 seconds. CPU system time: 0 seconds. Elapsed time: 0.73 seconds; current allocated memory: 201.717 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'hls_linear_combination' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-500] Setting interface mode on port 'hls_linear_combination/vecs' to 'ap_hs'.
INFO: [RTGEN 206-500] Setting interface mode on port 'hls_linear_combination/coeffs' to 'ap_hs'.
INFO: [RTGEN 206-500] Setting interface mode on port 'hls_linear_combination/len' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'hls_linear_combination/out_r' to 'ap_vld'.
INFO: [RTGEN 206-500] Setting interface mode on function 'hls_linear_combination' to 'ap_ctrl_hs'.
WARNING: [RTGEN 206-101] Register 'accumulators_0_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_1_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_2_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_3_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_4_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_5_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_6_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_7_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_8_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_9_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_10_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_11_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_12_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_13_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_14_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_15_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_0_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_1_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_2_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_3_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_4_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_5_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_6_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_7_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_8_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_9_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_10_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_11_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_12_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_13_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_14_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_15_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_0_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_1_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_2_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_3_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_4_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_5_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_6_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_7_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_8_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_9_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_10_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_11_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_12_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_13_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_14_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_15_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_0_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_1_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_2_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_3_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_4_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_5_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_6_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_7_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_8_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_9_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_10_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_11_3' is power-on initialization.
INFO: [RTGEN 206-100] Generating core module 'mul_8ns_8ns_16_1_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'urem_32ns_6ns_8_36_1': 1 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'hls_linear_combination'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0.78 seconds. CPU system time: 0.05 seconds. Elapsed time: 0.88 seconds; current allocated memory: 203.036 MB.
INFO: [RTMG 210-282] Generating pipelined core: 'hls_linear_combination_mul_8ns_8ns_16_1_1_Multiplier_0'
INFO: [RTMG 210-282] Generating pipelined core: 'hls_linear_combination_urem_32ns_6ns_8_36_1_div'
INFO: [HLS 200-111] Finished Generating all RTL models: CPU user time: 3.94 seconds. CPU system time: 0.11 seconds. Elapsed time: 4.2 seconds; current allocated memory: 213.192 MB.
INFO: [VHDL 208-304] Generating VHDL RTL for hls_linear_combination.
INFO: [VLOG 209-307] Generating Verilog RTL for hls_linear_combination.
INFO: [HLS 200-790] **** Loop Constraint Status: All loop constraints were satisfied.
INFO: [HLS 200-789] **** Estimated Fmax: 230.63 MHz
INFO: [HLS 200-111] Finished Command csynth_design CPU user time: 17.63 seconds. CPU system time: 1.03 seconds. Elapsed time: 19.87 seconds; current allocated memory: 213.353 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z020-clg484-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -output=/home/osm/Documents/SECT-MAYO/MAYO/HLS/ips/hls_linear_combination.zip
INFO: [HLS 200-1464] Running solution command: config_export -rtl=vhdl
INFO: [HLS 200-1510] Running: set_part xc7z020-clg484-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_export -format ip_catalog -output /home/osm/Documents/SECT-MAYO/MAYO/HLS/ips/hls_linear_combination.zip -rtl vhdl 
INFO: [HLS 200-1510] Running: set_directive_top -name hls_linear_combination hls_linear_combination 
INFO: [HLS 200-1510] Running: set_directive_pipeline hls_linear_combination/LOOP_LC2 
INFO: [HLS 200-1510] Running: set_directive_array_partition -type cyclic -factor 16 -dim 1 hls_linear_combination accumulators 
INFO: [HLS 200-1510] Running: set_directive_unroll -skip_exit_check -factor 10 hls_linear_combination/LOOP_LC2 
INFO: [HLS 200-1510] Running: set_directive_pipeline hls_linear_combination 
INFO: [HLS 200-1510] Running: set_directive_pipeline hls_linear_combination/LOOP_LC1 
INFO: [HLS 200-1510] Running: set_directive_interface -mode ap_hs hls_linear_combination vecs 
INFO: [HLS 200-1510] Running: set_directive_interface -mode ap_hs hls_linear_combination coeffs 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0.01 seconds. CPU system time: 0 seconds. Elapsed time: 0.02 seconds; current allocated memory: 180.539 MB.
INFO: [HLS 200-10] Analyzing design file 'hls_linear_combination/hls_linear_combination.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 3 seconds. CPU system time: 0.39 seconds. Elapsed time: 3.68 seconds; current allocated memory: 181.047 MB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-188] Unrolling loop 'LOOP_LC2' (hls_linear_combination/hls_linear_combination.cpp:21:12) in function 'hls_linear_combination' partially (and skipping exit check) with a factor of 10 (hls_linear_combination/hls_linear_combination.cpp:21:12)
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 8.06 seconds. CPU system time: 0.51 seconds. Elapsed time: 8.77 seconds; current allocated memory: 183.885 MB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0 seconds; current allocated memory: 183.886 MB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0.04 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.07 seconds; current allocated memory: 185.819 MB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0.05 seconds. CPU system time: 0 seconds. Elapsed time: 0.06 seconds; current allocated memory: 185.468 MB.
INFO: [XFORM 203-502] Unrolling all loops for pipelining in function 'hls_linear_combination' (hls_linear_combination/hls_linear_combination.cpp:6).
WARNING: [XFORM 203-503] Ignored partial unroll directive for loop 'LOOP_LC1' (hls_linear_combination/hls_linear_combination.cpp:12) because its parent loop or function is pipelined.
WARNING: [XFORM 203-505] Ignored pipeline directive for loop 'LOOP_LC2' (hls_linear_combination/hls_linear_combination.cpp:21) because its parent loop or function is pipelined.
WARNING: [XFORM 203-503] Ignored partial unroll directive for loop 'LOOP_LC2' (hls_linear_combination/hls_linear_combination.cpp:21) because its parent loop or function is pipelined.
WARNING: [HLS 200-936] Cannot unroll loop 'LOOP_LC1' (hls_linear_combination/hls_linear_combination.cpp:12) in function 'hls_linear_combination': cannot completely unroll a loop with a variable trip count.
INFO: [HLS 200-489] Unrolling loop 'LOOP_LC12' (hls_linear_combination/hls_linear_combination.cpp:14) in function 'hls_linear_combination' completely with a factor of 60.
INFO: [HLS 200-489] Unrolling loop 'LOOP_LC2' (hls_linear_combination/hls_linear_combination.cpp:21) in function 'hls_linear_combination' completely with a factor of 6.
INFO: [XFORM 203-101] Partitioning array 'accumulators'  in dimension 1 with a cyclic factor 16.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.0' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.1' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.2' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.3' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.4' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.5' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.6' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.7' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.8' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.9' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.10' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.11' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.12' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.13' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.14' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.15' completely based on array size.
INFO: [XFORM 203-101] Partitioning array 'accumulators.0' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.1' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.2' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.3' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.4' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.5' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.6' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.7' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.8' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.9' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.10' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.11' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.12' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.13' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.14' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.15' in dimension 1 completely.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 0.29 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.33 seconds; current allocated memory: 206.696 MB.
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 0.17 seconds. CPU system time: 0 seconds. Elapsed time: 0.18 seconds; current allocated memory: 199.906 MB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'hls_linear_combination' ...
WARNING: [SYN 201-107] Renaming port name 'hls_linear_combination/out' to 'hls_linear_combination/out_r' to avoid the conflict with HDL keywords or other object names.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'hls_linear_combination' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
WARNING: [SCHED 204-65] Unable to satisfy pipeline directive for function 'hls_linear_combination': contains subloop(s) that are not unrolled.
WARNING: [SCHED 204-65] Unable to satisfy pipeline directive for function 'hls_linear_combination': contains subloop(s) that are not unrolled.
INFO: [SCHED 204-61] Pipelining loop 'LOOP_LC1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 1, loop 'LOOP_LC1'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0.34 seconds. CPU system time: 0.02 seconds. Elapsed time: 0.41 seconds; current allocated memory: 200.672 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0.34 seconds. CPU system time: 0 seconds. Elapsed time: 0.35 seconds; current allocated memory: 201.411 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'hls_linear_combination' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-500] Setting interface mode on port 'hls_linear_combination/vecs' to 'ap_hs'.
INFO: [RTGEN 206-500] Setting interface mode on port 'hls_linear_combination/coeffs' to 'ap_hs'.
INFO: [RTGEN 206-500] Setting interface mode on port 'hls_linear_combination/len' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'hls_linear_combination/out_r' to 'ap_vld'.
INFO: [RTGEN 206-500] Setting interface mode on function 'hls_linear_combination' to 'ap_ctrl_hs'.
WARNING: [RTGEN 206-101] Register 'accumulators_0_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_1_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_2_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_3_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_4_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_5_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_6_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_7_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_8_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_9_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_10_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_11_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_12_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_13_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_14_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_15_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_0_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_1_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_2_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_3_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_4_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_5_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_6_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_7_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_8_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_9_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_10_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_11_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_12_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_13_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_14_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_15_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_0_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_1_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_2_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_3_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_4_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_5_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_6_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_7_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_8_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_9_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_10_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_11_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_12_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_13_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_14_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_15_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_0_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_1_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_2_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_3_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_4_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_5_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_6_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_7_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_8_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_9_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_10_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_11_3' is power-on initialization.
INFO: [RTGEN 206-100] Generating core module 'mul_32s_32s_32_2_1': 1 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'hls_linear_combination'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0.72 seconds. CPU system time: 0.03 seconds. Elapsed time: 0.75 seconds; current allocated memory: 202.462 MB.
INFO: [RTMG 210-282] Generating pipelined core: 'hls_linear_combination_mul_32s_32s_32_2_1_Multiplier_0'
INFO: [HLS 200-111] Finished Generating all RTL models: CPU user time: 3.7 seconds. CPU system time: 0.07 seconds. Elapsed time: 3.96 seconds; current allocated memory: 212.388 MB.
INFO: [VHDL 208-304] Generating VHDL RTL for hls_linear_combination.
INFO: [VLOG 209-307] Generating Verilog RTL for hls_linear_combination.
INFO: [HLS 200-790] **** Loop Constraint Status: All loop constraints were satisfied.
INFO: [HLS 200-789] **** Estimated Fmax: 144.68 MHz
INFO: [HLS 200-111] Finished Command csynth_design CPU user time: 16.9 seconds. CPU system time: 1.04 seconds. Elapsed time: 18.8 seconds; current allocated memory: 212.548 MB.
INFO: [HLS 200-112] Total CPU user time: 23.95 seconds. Total CPU system time: 1.86 seconds. Total elapsed time: 24.92 seconds; peak allocated memory: 212.388 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z020-clg484-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -output=/home/osm/Documents/SECT-MAYO/MAYO/HLS/ips/hls_linear_combination.zip
INFO: [HLS 200-1464] Running solution command: config_export -rtl=vhdl
INFO: [HLS 200-1510] Running: set_part xc7z020-clg484-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_export -format ip_catalog -output /home/osm/Documents/SECT-MAYO/MAYO/HLS/ips/hls_linear_combination.zip -rtl vhdl 
INFO: [HLS 200-1510] Running: set_directive_top -name hls_linear_combination hls_linear_combination 
INFO: [HLS 200-1510] Running: set_directive_pipeline hls_linear_combination/LOOP_LC2 
INFO: [HLS 200-1510] Running: set_directive_array_partition -type cyclic -factor 16 -dim 1 hls_linear_combination accumulators 
INFO: [HLS 200-1510] Running: set_directive_unroll -skip_exit_check -factor 10 hls_linear_combination/LOOP_LC2 
INFO: [HLS 200-1510] Running: set_directive_pipeline hls_linear_combination 
INFO: [HLS 200-1510] Running: set_directive_pipeline hls_linear_combination/LOOP_LC1 
INFO: [HLS 200-1510] Running: set_directive_interface -mode ap_hs hls_linear_combination vecs 
INFO: [HLS 200-1510] Running: set_directive_interface -mode ap_hs hls_linear_combination coeffs 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0.01 seconds. CPU system time: 0 seconds. Elapsed time: 0.02 seconds; current allocated memory: 180.539 MB.
INFO: [HLS 200-10] Analyzing design file 'hls_linear_combination/hls_linear_combination.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 2.27 seconds. CPU system time: 0.26 seconds. Elapsed time: 2.69 seconds; current allocated memory: 181.047 MB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-188] Unrolling loop 'LOOP_LC2' (hls_linear_combination/hls_linear_combination.cpp:21:12) in function 'hls_linear_combination' partially (and skipping exit check) with a factor of 10 (hls_linear_combination/hls_linear_combination.cpp:21:12)
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 7.06 seconds. CPU system time: 0.4 seconds. Elapsed time: 7.57 seconds; current allocated memory: 183.883 MB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0.01 seconds. Elapsed time: 0 seconds; current allocated memory: 183.885 MB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0.04 seconds. CPU system time: 0 seconds. Elapsed time: 0.06 seconds; current allocated memory: 185.819 MB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0.05 seconds. CPU system time: 0 seconds. Elapsed time: 0.07 seconds; current allocated memory: 185.467 MB.
INFO: [XFORM 203-502] Unrolling all loops for pipelining in function 'hls_linear_combination' (hls_linear_combination/hls_linear_combination.cpp:6).
WARNING: [XFORM 203-503] Ignored partial unroll directive for loop 'LOOP_LC1' (hls_linear_combination/hls_linear_combination.cpp:12) because its parent loop or function is pipelined.
WARNING: [XFORM 203-505] Ignored pipeline directive for loop 'LOOP_LC2' (hls_linear_combination/hls_linear_combination.cpp:21) because its parent loop or function is pipelined.
WARNING: [XFORM 203-503] Ignored partial unroll directive for loop 'LOOP_LC2' (hls_linear_combination/hls_linear_combination.cpp:21) because its parent loop or function is pipelined.
WARNING: [HLS 200-936] Cannot unroll loop 'LOOP_LC1' (hls_linear_combination/hls_linear_combination.cpp:12) in function 'hls_linear_combination': cannot completely unroll a loop with a variable trip count.
INFO: [HLS 200-489] Unrolling loop 'LOOP_LC12' (hls_linear_combination/hls_linear_combination.cpp:14) in function 'hls_linear_combination' completely with a factor of 60.
INFO: [HLS 200-489] Unrolling loop 'LOOP_LC2' (hls_linear_combination/hls_linear_combination.cpp:21) in function 'hls_linear_combination' completely with a factor of 6.
INFO: [XFORM 203-101] Partitioning array 'accumulators'  in dimension 1 with a cyclic factor 16.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.0' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.1' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.2' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.3' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.4' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.5' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.6' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.7' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.8' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.9' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.10' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.11' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.12' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.13' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.14' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.15' completely based on array size.
INFO: [XFORM 203-101] Partitioning array 'accumulators.0' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.1' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.2' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.3' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.4' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.5' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.6' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.7' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.8' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.9' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.10' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.11' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.12' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.13' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.14' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.15' in dimension 1 completely.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 0.28 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.32 seconds; current allocated memory: 206.698 MB.
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 0.11 seconds. CPU system time: 0 seconds. Elapsed time: 0.11 seconds; current allocated memory: 199.907 MB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'hls_linear_combination' ...
WARNING: [SYN 201-107] Renaming port name 'hls_linear_combination/out' to 'hls_linear_combination/out_r' to avoid the conflict with HDL keywords or other object names.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'hls_linear_combination' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
WARNING: [SCHED 204-65] Unable to satisfy pipeline directive for function 'hls_linear_combination': contains subloop(s) that are not unrolled.
WARNING: [SCHED 204-65] Unable to satisfy pipeline directive for function 'hls_linear_combination': contains subloop(s) that are not unrolled.
INFO: [SCHED 204-61] Pipelining loop 'LOOP_LC1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 1, loop 'LOOP_LC1'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0.3 seconds. CPU system time: 0 seconds. Elapsed time: 0.37 seconds; current allocated memory: 200.674 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0.28 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.33 seconds; current allocated memory: 201.413 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'hls_linear_combination' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-500] Setting interface mode on port 'hls_linear_combination/vecs' to 'ap_hs'.
INFO: [RTGEN 206-500] Setting interface mode on port 'hls_linear_combination/coeffs' to 'ap_hs'.
INFO: [RTGEN 206-500] Setting interface mode on port 'hls_linear_combination/len' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'hls_linear_combination/out_r' to 'ap_vld'.
INFO: [RTGEN 206-500] Setting interface mode on function 'hls_linear_combination' to 'ap_ctrl_hs'.
WARNING: [RTGEN 206-101] Register 'accumulators_0_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_1_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_2_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_3_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_4_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_5_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_6_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_7_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_8_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_9_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_10_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_11_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_12_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_13_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_14_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_15_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_0_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_1_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_2_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_3_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_4_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_5_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_6_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_7_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_8_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_9_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_10_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_11_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_12_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_13_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_14_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_15_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_0_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_1_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_2_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_3_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_4_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_5_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_6_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_7_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_8_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_9_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_10_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_11_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_12_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_13_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_14_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_15_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_0_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_1_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_2_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_3_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_4_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_5_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_6_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_7_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_8_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_9_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_10_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_11_3' is power-on initialization.
INFO: [RTGEN 206-100] Generating core module 'mul_32s_32s_32_2_1': 1 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'hls_linear_combination'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0.64 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.69 seconds; current allocated memory: 202.466 MB.
INFO: [RTMG 210-282] Generating pipelined core: 'hls_linear_combination_mul_32s_32s_32_2_1_Multiplier_0'
INFO: [HLS 200-111] Finished Generating all RTL models: CPU user time: 3.54 seconds. CPU system time: 0.07 seconds. Elapsed time: 3.83 seconds; current allocated memory: 212.390 MB.
INFO: [VHDL 208-304] Generating VHDL RTL for hls_linear_combination.
INFO: [VLOG 209-307] Generating Verilog RTL for hls_linear_combination.
INFO: [HLS 200-790] **** Loop Constraint Status: All loop constraints were satisfied.
INFO: [HLS 200-789] **** Estimated Fmax: 144.68 MHz
INFO: [HLS 200-111] Finished Command csynth_design CPU user time: 14.71 seconds. CPU system time: 0.78 seconds. Elapsed time: 16.24 seconds; current allocated memory: 212.551 MB.
INFO: [HLS 200-112] Total CPU user time: 20.9 seconds. Total CPU system time: 1.56 seconds. Total elapsed time: 21.27 seconds; peak allocated memory: 212.390 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z020-clg484-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -output=/home/osm/Documents/SECT-MAYO/MAYO/HLS/ips/hls_linear_combination.zip
INFO: [HLS 200-1464] Running solution command: config_export -rtl=vhdl
INFO: [HLS 200-1510] Running: set_part xc7z020-clg484-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_export -format ip_catalog -output /home/osm/Documents/SECT-MAYO/MAYO/HLS/ips/hls_linear_combination.zip -rtl vhdl 
INFO: [HLS 200-1510] Running: set_directive_top -name hls_linear_combination hls_linear_combination 
INFO: [HLS 200-1510] Running: set_directive_pipeline hls_linear_combination/LOOP_LC2 
INFO: [HLS 200-1510] Running: set_directive_array_partition -type cyclic -factor 16 -dim 1 hls_linear_combination accumulators 
INFO: [HLS 200-1510] Running: set_directive_unroll -skip_exit_check -factor 10 hls_linear_combination/LOOP_LC2 
INFO: [HLS 200-1510] Running: set_directive_pipeline hls_linear_combination 
INFO: [HLS 200-1510] Running: set_directive_pipeline hls_linear_combination/LOOP_LC1 
INFO: [HLS 200-1510] Running: set_directive_interface -mode m_axi -depth 60 hls_linear_combination vecs 
INFO: [HLS 200-1510] Running: set_directive_interface -mode m_axi -depth 60 hls_linear_combination coeffs 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0.02 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.02 seconds; current allocated memory: 180.542 MB.
INFO: [HLS 200-10] Analyzing design file 'hls_linear_combination/hls_linear_combination.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 2.34 seconds. CPU system time: 0.28 seconds. Elapsed time: 2.72 seconds; current allocated memory: 181.037 MB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-188] Unrolling loop 'LOOP_LC2' (hls_linear_combination/hls_linear_combination.cpp:21:12) in function 'hls_linear_combination' partially (and skipping exit check) with a factor of 10 (hls_linear_combination/hls_linear_combination.cpp:21:12)
WARNING: [HLS 214-205] The INTERFACE pragma must have a max_widen_bitwidth setting that is both a power of 2 and in the range [0, 1024]. The current value of '0' will be ignored, in 'hls_linear_combination(unsigned int*, unsigned int*, int, unsigned int*)' (hls_linear_combination/hls_linear_combination.cpp:6:0)
WARNING: [HLS 214-205] The INTERFACE pragma must have a max_widen_bitwidth setting that is both a power of 2 and in the range [0, 1024]. The current value of '0' will be ignored, in 'hls_linear_combination(unsigned int*, unsigned int*, int, unsigned int*)' (hls_linear_combination/hls_linear_combination.cpp:6:0)
INFO: [HLS 214-115] Multiple burst reads of variable length and bit width 32 in loop 'LOOP_LC1'(hls_linear_combination/hls_linear_combination.cpp:12:12) has been inferred on port 'coeffs' (hls_linear_combination/hls_linear_combination.cpp:12:12)
INFO: [HLS 214-115] Multiple burst reads of variable length and bit width 32 in loop 'LOOP_LC12'(hls_linear_combination/hls_linear_combination.cpp:14:14) has been inferred on port 'vecs' (hls_linear_combination/hls_linear_combination.cpp:12:12)
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 6.62 seconds. CPU system time: 0.44 seconds. Elapsed time: 7.37 seconds; current allocated memory: 184.047 MB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0 seconds; current allocated memory: 184.048 MB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0.05 seconds. CPU system time: 0 seconds. Elapsed time: 0.05 seconds; current allocated memory: 185.972 MB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0.04 seconds. CPU system time: 0 seconds. Elapsed time: 0.05 seconds; current allocated memory: 185.623 MB.
INFO: [XFORM 203-502] Unrolling all loops for pipelining in function 'hls_linear_combination' (hls_linear_combination/hls_linear_combination.cpp:6).
WARNING: [XFORM 203-503] Ignored partial unroll directive for loop 'LOOP_LC1' (hls_linear_combination/hls_linear_combination.cpp:12) because its parent loop or function is pipelined.
WARNING: [XFORM 203-505] Ignored pipeline directive for loop 'LOOP_LC2' (hls_linear_combination/hls_linear_combination.cpp:21) because its parent loop or function is pipelined.
WARNING: [XFORM 203-503] Ignored partial unroll directive for loop 'LOOP_LC2' (hls_linear_combination/hls_linear_combination.cpp:21) because its parent loop or function is pipelined.
WARNING: [HLS 200-936] Cannot unroll loop 'LOOP_LC1' (hls_linear_combination/hls_linear_combination.cpp:12) in function 'hls_linear_combination': cannot completely unroll a loop with a variable trip count.
INFO: [HLS 200-489] Unrolling loop 'LOOP_LC12' (hls_linear_combination/hls_linear_combination.cpp:14) in function 'hls_linear_combination' completely with a factor of 60.
INFO: [HLS 200-489] Unrolling loop 'LOOP_LC2' (hls_linear_combination/hls_linear_combination.cpp:21) in function 'hls_linear_combination' completely with a factor of 6.
INFO: [XFORM 203-101] Partitioning array 'accumulators'  in dimension 1 with a cyclic factor 16.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.0' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.1' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.2' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.3' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.4' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.5' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.6' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.7' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.8' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.9' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.10' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.11' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.12' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.13' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.14' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.15' completely based on array size.
INFO: [XFORM 203-101] Partitioning array 'accumulators.0' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.1' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.2' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.3' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.4' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.5' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.6' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.7' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.8' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.9' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.10' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.11' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.12' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.13' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.14' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.15' in dimension 1 completely.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 1.15 seconds. CPU system time: 0.02 seconds. Elapsed time: 1.24 seconds; current allocated memory: 207.150 MB.
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 0.65 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.69 seconds; current allocated memory: 200.923 MB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'hls_linear_combination' ...
WARNING: [SYN 201-107] Renaming port name 'hls_linear_combination/out' to 'hls_linear_combination/out_r' to avoid the conflict with HDL keywords or other object names.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'hls_linear_combination' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
WARNING: [SCHED 204-65] Unable to satisfy pipeline directive for function 'hls_linear_combination': contains subloop(s) that are not unrolled.
WARNING: [SCHED 204-65] Unable to satisfy pipeline directive for function 'hls_linear_combination': contains subloop(s) that are not unrolled.
INFO: [SCHED 204-61] Pipelining loop 'LOOP_LC1'.
WARNING: [HLS 200-880] The II Violation in module 'hls_linear_combination' (loop 'LOOP_LC1'): Unable to enforce a carried dependence constraint (II = 1, distance = 1, offset = 1) between bus read on port 'vecs' (hls_linear_combination/hls_linear_combination.cpp:17) and bus read on port 'vecs' (hls_linear_combination/hls_linear_combination.cpp:17).
WARNING: [HLS 200-880] The II Violation in module 'hls_linear_combination' (loop 'LOOP_LC1'): Unable to enforce a carried dependence constraint (II = 2, distance = 1, offset = 1) between bus read on port 'vecs' (hls_linear_combination/hls_linear_combination.cpp:17) and bus read on port 'vecs' (hls_linear_combination/hls_linear_combination.cpp:17).
WARNING: [HLS 200-880] The II Violation in module 'hls_linear_combination' (loop 'LOOP_LC1'): Unable to enforce a carried dependence constraint (II = 3, distance = 1, offset = 1) between bus read on port 'vecs' (hls_linear_combination/hls_linear_combination.cpp:17) and bus read on port 'vecs' (hls_linear_combination/hls_linear_combination.cpp:17).
WARNING: [HLS 200-880] The II Violation in module 'hls_linear_combination' (loop 'LOOP_LC1'): Unable to enforce a carried dependence constraint (II = 4, distance = 1, offset = 1) between bus read on port 'vecs' (hls_linear_combination/hls_linear_combination.cpp:17) and bus read on port 'vecs' (hls_linear_combination/hls_linear_combination.cpp:17).
WARNING: [HLS 200-880] The II Violation in module 'hls_linear_combination' (loop 'LOOP_LC1'): Unable to enforce a carried dependence constraint (II = 35, distance = 1, offset = 1) between bus read on port 'vecs' (hls_linear_combination/hls_linear_combination.cpp:17) and bus read on port 'vecs' (hls_linear_combination/hls_linear_combination.cpp:17).
WARNING: [HLS 200-880] The II Violation in module 'hls_linear_combination' (loop 'LOOP_LC1'): Unable to enforce a carried dependence constraint (II = 51, distance = 1, offset = 1) between bus read on port 'vecs' (hls_linear_combination/hls_linear_combination.cpp:17) and bus read on port 'vecs' (hls_linear_combination/hls_linear_combination.cpp:17).
WARNING: [HLS 200-880] The II Violation in module 'hls_linear_combination' (loop 'LOOP_LC1'): Unable to enforce a carried dependence constraint (II = 59, distance = 1, offset = 1) between bus read on port 'vecs' (hls_linear_combination/hls_linear_combination.cpp:17) and bus read on port 'vecs' (hls_linear_combination/hls_linear_combination.cpp:17).
WARNING: [SCHED 204-63] Unable to schedule bus read on port 'vecs' (hls_linear_combination/hls_linear_combination.cpp:17) within the first 60 cycles (II = 60).
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 60, Depth = 64, loop 'LOOP_LC1'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 1.81 seconds. CPU system time: 0.04 seconds. Elapsed time: 1.86 seconds; current allocated memory: 202.377 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 1.01 seconds. CPU system time: 0.02 seconds. Elapsed time: 1.03 seconds; current allocated memory: 203.598 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'hls_linear_combination' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Design contains AXI ports. Reset is fixed to synchronous and active low.
INFO: [RTGEN 206-500] Setting interface mode on port 'hls_linear_combination/vecs' to 'm_axi'.
INFO: [RTGEN 206-500] Setting interface mode on port 'hls_linear_combination/coeffs' to 'm_axi'.
INFO: [RTGEN 206-500] Setting interface mode on port 'hls_linear_combination/len' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'hls_linear_combination/out_r' to 'ap_vld'.
INFO: [RTGEN 206-500] Setting interface mode on function 'hls_linear_combination' to 'ap_ctrl_hs'.
WARNING: [RTGEN 206-101] Register 'accumulators_0_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_1_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_2_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_3_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_4_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_5_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_6_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_7_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_8_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_9_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_10_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_11_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_12_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_13_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_14_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_15_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_0_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_1_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_2_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_3_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_4_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_5_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_6_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_7_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_8_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_9_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_10_1' is power-on initialization.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z020-clg484-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -output=/home/osm/Documents/SECT-MAYO/MAYO/HLS/ips/hls_linear_combination.zip
INFO: [HLS 200-1464] Running solution command: config_export -rtl=vhdl
INFO: [HLS 200-1510] Running: set_part xc7z020-clg484-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_export -format ip_catalog -output /home/osm/Documents/SECT-MAYO/MAYO/HLS/ips/hls_linear_combination.zip -rtl vhdl 
INFO: [HLS 200-1510] Running: set_directive_top -name hls_linear_combination hls_linear_combination 
INFO: [HLS 200-1510] Running: set_directive_pipeline hls_linear_combination/LOOP_LC2 
INFO: [HLS 200-1510] Running: set_directive_array_partition -type cyclic -factor 16 -dim 1 hls_linear_combination accumulators 
INFO: [HLS 200-1510] Running: set_directive_unroll -skip_exit_check -factor 10 hls_linear_combination/LOOP_LC2 
INFO: [HLS 200-1510] Running: set_directive_pipeline hls_linear_combination 
INFO: [HLS 200-1510] Running: set_directive_pipeline hls_linear_combination/LOOP_LC1 
INFO: [HLS 200-1510] Running: set_directive_interface -mode s_axilite -bundle BUS_A hls_linear_combination vecs 
INFO: [HLS 200-1510] Running: set_directive_interface -mode s_axilite -bundle BUS_A hls_linear_combination coeffs 
INFO: [HLS 200-1510] Running: set_directive_interface -mode s_axilite -bundle BUS_A hls_linear_combination out 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0.01 seconds. CPU system time: 0 seconds. Elapsed time: 0.01 seconds; current allocated memory: 180.544 MB.
INFO: [HLS 200-10] Analyzing design file 'hls_linear_combination/hls_linear_combination.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 2.19 seconds. CPU system time: 0.24 seconds. Elapsed time: 2.48 seconds; current allocated memory: 181.069 MB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-188] Unrolling loop 'LOOP_LC2' (hls_linear_combination/hls_linear_combination.cpp:21:12) in function 'hls_linear_combination' partially (and skipping exit check) with a factor of 10 (hls_linear_combination/hls_linear_combination.cpp:21:12)
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 6.14 seconds. CPU system time: 0.46 seconds. Elapsed time: 6.85 seconds; current allocated memory: 183.972 MB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0 seconds; current allocated memory: 183.974 MB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0.05 seconds. CPU system time: 0 seconds. Elapsed time: 0.06 seconds; current allocated memory: 185.909 MB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0.06 seconds. CPU system time: 0 seconds. Elapsed time: 0.07 seconds; current allocated memory: 185.560 MB.
WARNING: [XFORM 203-803] Dropped interface mode 'ap_auto' on 'vecs' (hls_linear_combination/hls_linear_combination.cpp:6) as it is incompatible with its interface mode 's_axilite'.
WARNING: [XFORM 203-803] Dropped interface mode 'ap_auto' on 'coeffs' (hls_linear_combination/hls_linear_combination.cpp:6) as it is incompatible with its interface mode 's_axilite'.
WARNING: [XFORM 203-803] Dropped interface mode 'ap_auto' on 'out' (hls_linear_combination/hls_linear_combination.cpp:6) as it is incompatible with its interface mode 's_axilite'.
INFO: [XFORM 203-502] Unrolling all loops for pipelining in function 'hls_linear_combination' (hls_linear_combination/hls_linear_combination.cpp:6).
WARNING: [XFORM 203-503] Ignored partial unroll directive for loop 'LOOP_LC1' (hls_linear_combination/hls_linear_combination.cpp:12) because its parent loop or function is pipelined.
WARNING: [XFORM 203-505] Ignored pipeline directive for loop 'LOOP_LC2' (hls_linear_combination/hls_linear_combination.cpp:21) because its parent loop or function is pipelined.
WARNING: [XFORM 203-503] Ignored partial unroll directive for loop 'LOOP_LC2' (hls_linear_combination/hls_linear_combination.cpp:21) because its parent loop or function is pipelined.
WARNING: [HLS 200-936] Cannot unroll loop 'LOOP_LC1' (hls_linear_combination/hls_linear_combination.cpp:12) in function 'hls_linear_combination': cannot completely unroll a loop with a variable trip count.
INFO: [HLS 200-489] Unrolling loop 'LOOP_LC12' (hls_linear_combination/hls_linear_combination.cpp:14) in function 'hls_linear_combination' completely with a factor of 60.
INFO: [HLS 200-489] Unrolling loop 'LOOP_LC2' (hls_linear_combination/hls_linear_combination.cpp:21) in function 'hls_linear_combination' completely with a factor of 6.
INFO: [XFORM 203-101] Partitioning array 'accumulators'  in dimension 1 with a cyclic factor 16.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.0' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.1' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.2' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.3' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.4' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.5' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.6' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.7' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.8' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.9' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.10' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.11' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.12' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.13' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.14' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.15' completely based on array size.
INFO: [XFORM 203-101] Partitioning array 'accumulators.0' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.1' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.2' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.3' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.4' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.5' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.6' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.7' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.8' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.9' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.10' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.11' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.12' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.13' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.14' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.15' in dimension 1 completely.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 0.28 seconds. CPU system time: 0.02 seconds. Elapsed time: 0.32 seconds; current allocated memory: 206.798 MB.
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 0.1 seconds. CPU system time: 0 seconds. Elapsed time: 0.12 seconds; current allocated memory: 199.986 MB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'hls_linear_combination' ...
WARNING: [SYN 201-107] Renaming port name 'hls_linear_combination/out' to 'hls_linear_combination/out_r' to avoid the conflict with HDL keywords or other object names.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'hls_linear_combination' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
WARNING: [SCHED 204-65] Unable to satisfy pipeline directive for function 'hls_linear_combination': contains subloop(s) that are not unrolled.
WARNING: [SCHED 204-65] Unable to satisfy pipeline directive for function 'hls_linear_combination': contains subloop(s) that are not unrolled.
INFO: [SCHED 204-61] Pipelining loop 'LOOP_LC1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 1, loop 'LOOP_LC1'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0.28 seconds. CPU system time: 0 seconds. Elapsed time: 0.31 seconds; current allocated memory: 200.753 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0.3 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.34 seconds; current allocated memory: 201.543 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'hls_linear_combination' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Design contains AXI ports. Reset is fixed to synchronous and active low.
INFO: [RTGEN 206-500] Setting interface mode on port 'hls_linear_combination/vecs' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'hls_linear_combination/coeffs' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'hls_linear_combination/len' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'hls_linear_combination/out_r' to 's_axilite & ap_vld'.
INFO: [RTGEN 206-500] Setting interface mode on function 'hls_linear_combination' to 'ap_ctrl_hs'.
WARNING: [RTGEN 206-101] Register 'accumulators_0_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_1_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_2_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_3_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_4_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_5_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_6_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_7_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_8_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_9_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_10_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_11_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_12_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_13_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_14_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_15_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_0_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_1_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_2_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_3_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_4_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_5_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_6_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_7_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_8_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_9_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_10_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_11_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_12_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_13_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_14_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_15_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_0_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_1_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_2_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_3_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_4_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_5_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_6_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_7_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_8_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_9_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_10_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_11_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_12_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_13_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_14_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_15_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_0_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_1_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_2_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_3_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_4_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_5_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_6_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_7_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_8_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_9_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_10_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_11_3' is power-on initialization.
INFO: [RTGEN 206-100] Bundling port 'vecs', 'coeffs' and 'out_r' to AXI-Lite port BUS_A.
INFO: [RTGEN 206-100] Generating core module 'mul_32s_32s_32_2_1': 1 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'hls_linear_combination'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0.74 seconds. CPU system time: 0.03 seconds. Elapsed time: 0.91 seconds; current allocated memory: 202.631 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z020-clg484-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -output=/home/osm/Documents/SECT-MAYO/MAYO/HLS/ips/hls_linear_combination.zip
INFO: [HLS 200-1464] Running solution command: config_export -rtl=vhdl
INFO: [HLS 200-1510] Running: set_part xc7z020-clg484-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_export -format ip_catalog -output /home/osm/Documents/SECT-MAYO/MAYO/HLS/ips/hls_linear_combination.zip -rtl vhdl 
INFO: [HLS 200-1510] Running: set_directive_top -name hls_linear_combination hls_linear_combination 
INFO: [HLS 200-1510] Running: set_directive_pipeline hls_linear_combination/LOOP_LC2 
INFO: [HLS 200-1510] Running: set_directive_array_partition -type cyclic -factor 16 -dim 1 hls_linear_combination accumulators 
INFO: [HLS 200-1510] Running: set_directive_unroll -skip_exit_check -factor 10 hls_linear_combination/LOOP_LC2 
INFO: [HLS 200-1510] Running: set_directive_pipeline hls_linear_combination 
INFO: [HLS 200-1510] Running: set_directive_pipeline hls_linear_combination/LOOP_LC1 
INFO: [HLS 200-1510] Running: set_directive_interface -mode s_axilite -bundle BUS_A hls_linear_combination vecs 
INFO: [HLS 200-1510] Running: set_directive_interface -mode s_axilite -bundle BUS_A hls_linear_combination coeffs 
INFO: [HLS 200-1510] Running: set_directive_interface -mode s_axilite -bundle BUS_A hls_linear_combination out 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0.01 seconds. CPU system time: 0 seconds. Elapsed time: 0.01 seconds; current allocated memory: 180.545 MB.
INFO: [HLS 200-10] Analyzing design file 'hls_linear_combination/hls_linear_combination.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 2.39 seconds. CPU system time: 0.29 seconds. Elapsed time: 2.84 seconds; current allocated memory: 181.071 MB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-188] Unrolling loop 'LOOP_LC2' (hls_linear_combination/hls_linear_combination.cpp:21:12) in function 'hls_linear_combination' partially (and skipping exit check) with a factor of 10 (hls_linear_combination/hls_linear_combination.cpp:21:12)
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 7.29 seconds. CPU system time: 0.42 seconds. Elapsed time: 8.27 seconds; current allocated memory: 183.974 MB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0.01 seconds. CPU system time: 0 seconds. Elapsed time: 0 seconds; current allocated memory: 183.976 MB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0.03 seconds. CPU system time: 0 seconds. Elapsed time: 0.03 seconds; current allocated memory: 185.917 MB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0.05 seconds. CPU system time: 0 seconds. Elapsed time: 0.05 seconds; current allocated memory: 185.570 MB.
WARNING: [XFORM 203-803] Dropped interface mode 'ap_auto' on 'vecs' (hls_linear_combination/hls_linear_combination.cpp:6) as it is incompatible with its interface mode 's_axilite'.
WARNING: [XFORM 203-803] Dropped interface mode 'ap_auto' on 'coeffs' (hls_linear_combination/hls_linear_combination.cpp:6) as it is incompatible with its interface mode 's_axilite'.
WARNING: [XFORM 203-803] Dropped interface mode 'ap_auto' on 'out' (hls_linear_combination/hls_linear_combination.cpp:6) as it is incompatible with its interface mode 's_axilite'.
INFO: [XFORM 203-502] Unrolling all loops for pipelining in function 'hls_linear_combination' (hls_linear_combination/hls_linear_combination.cpp:6).
WARNING: [XFORM 203-503] Ignored partial unroll directive for loop 'LOOP_LC1' (hls_linear_combination/hls_linear_combination.cpp:12) because its parent loop or function is pipelined.
WARNING: [XFORM 203-505] Ignored pipeline directive for loop 'LOOP_LC2' (hls_linear_combination/hls_linear_combination.cpp:21) because its parent loop or function is pipelined.
WARNING: [XFORM 203-503] Ignored partial unroll directive for loop 'LOOP_LC2' (hls_linear_combination/hls_linear_combination.cpp:21) because its parent loop or function is pipelined.
WARNING: [HLS 200-936] Cannot unroll loop 'LOOP_LC1' (hls_linear_combination/hls_linear_combination.cpp:12) in function 'hls_linear_combination': cannot completely unroll a loop with a variable trip count.
INFO: [HLS 200-489] Unrolling loop 'LOOP_LC12' (hls_linear_combination/hls_linear_combination.cpp:14) in function 'hls_linear_combination' completely with a factor of 60.
INFO: [HLS 200-489] Unrolling loop 'LOOP_LC2' (hls_linear_combination/hls_linear_combination.cpp:21) in function 'hls_linear_combination' completely with a factor of 6.
INFO: [XFORM 203-101] Partitioning array 'accumulators'  in dimension 1 with a cyclic factor 16.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.0' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.1' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.2' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.3' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.4' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.5' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.6' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.7' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.8' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.9' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.10' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.11' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.12' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.13' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.14' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.15' completely based on array size.
INFO: [XFORM 203-101] Partitioning array 'accumulators.0' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.1' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.2' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.3' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.4' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.5' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.6' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.7' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.8' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.9' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.10' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.11' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.12' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.13' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.14' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.15' in dimension 1 completely.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 0.29 seconds. CPU system time: 0.02 seconds. Elapsed time: 0.35 seconds; current allocated memory: 206.854 MB.
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 0.19 seconds. CPU system time: 0 seconds. Elapsed time: 0.2 seconds; current allocated memory: 200.104 MB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'hls_linear_combination' ...
WARNING: [SYN 201-107] Renaming port name 'hls_linear_combination/out' to 'hls_linear_combination/out_r' to avoid the conflict with HDL keywords or other object names.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'hls_linear_combination' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
WARNING: [SCHED 204-65] Unable to satisfy pipeline directive for function 'hls_linear_combination': contains subloop(s) that are not unrolled.
WARNING: [SCHED 204-65] Unable to satisfy pipeline directive for function 'hls_linear_combination': contains subloop(s) that are not unrolled.
INFO: [SCHED 204-61] Pipelining loop 'LOOP_LC1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 1, loop 'LOOP_LC1'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0.51 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.6 seconds; current allocated memory: 200.965 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0.71 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.73 seconds; current allocated memory: 201.803 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'hls_linear_combination' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Design contains AXI ports. Reset is fixed to synchronous and active low.
INFO: [RTGEN 206-500] Setting interface mode on port 'hls_linear_combination/vecs' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'hls_linear_combination/coeffs' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'hls_linear_combination/len' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'hls_linear_combination/out_r' to 's_axilite & ap_vld'.
INFO: [RTGEN 206-500] Setting interface mode on function 'hls_linear_combination' to 'ap_ctrl_hs'.
WARNING: [RTGEN 206-101] Register 'accumulators_0_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_1_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_2_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_3_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_4_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_5_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_6_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_7_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_8_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_9_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_10_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_11_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_12_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_13_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_14_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_15_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_0_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_1_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_2_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_3_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_4_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_5_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_6_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_7_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_8_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_9_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_10_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_11_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_12_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_13_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_14_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_15_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_0_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_1_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_2_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_3_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_4_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_5_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_6_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_7_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_8_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_9_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_10_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_11_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_12_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_13_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_14_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_15_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_0_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_1_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_2_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_3_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_4_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_5_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_6_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_7_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_8_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_9_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_10_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_11_3' is power-on initialization.
INFO: [RTGEN 206-100] Bundling port 'vecs', 'coeffs' and 'out_r' to AXI-Lite port BUS_A.
INFO: [RTGEN 206-100] Generating core module 'mul_8ns_8ns_16_1_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'urem_32ns_6ns_8_36_1': 1 instance(s).
INFO: [RTGEN 206-100] ==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z020-clg484-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -output=/home/osm/Documents/SECT-MAYO/MAYO/HLS/ips/hls_linear_combination.zip
INFO: [HLS 200-1464] Running solution command: config_export -rtl=vhdl
INFO: [HLS 200-1510] Running: set_part xc7z020-clg484-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_export -format ip_catalog -output /home/osm/Documents/SECT-MAYO/MAYO/HLS/ips/hls_linear_combination.zip -rtl vhdl 
INFO: [HLS 200-1510] Running: set_directive_top -name hls_linear_combination hls_linear_combination 
INFO: [HLS 200-1510] Running: set_directive_pipeline hls_linear_combination/LOOP_LC2 
INFO: [HLS 200-1510] Running: set_directive_array_partition -type cyclic -factor 16 -dim 1 hls_linear_combination accumulators 
INFO: [HLS 200-1510] Running: set_directive_unroll -skip_exit_check -factor 10 hls_linear_combination/LOOP_LC2 
INFO: [HLS 200-1510] Running: set_directive_pipeline hls_linear_combination 
INFO: [HLS 200-1510] Running: set_directive_pipeline hls_linear_combination/LOOP_LC1 
INFO: [HLS 200-1510] Running: set_directive_interface -mode s_axilite -bundle BUS_A hls_linear_combination vecs 
INFO: [HLS 200-1510] Running: set_directive_interface -mode s_axilite -bundle BUS_A hls_linear_combination coeffs 
INFO: [HLS 200-1510] Running: set_directive_interface -mode s_axilite -bundle BUS_A hls_linear_combination out 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0.01 seconds. CPU system time: 0 seconds. Elapsed time: 0.01 seconds; current allocated memory: 180.572 MB.
INFO: [HLS 200-10] Analyzing design file 'hls_linear_combination/hls_linear_combination.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 2.36 seconds. CPU system time: 0.26 seconds. Elapsed time: 2.71 seconds; current allocated memory: 181.067 MB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-188] Unrolling loop 'LOOP_LC2' (hls_linear_combination/hls_linear_combination.cpp:21:12) in function 'hls_linear_combination' partially (and skipping exit check) with a factor of 10 (hls_linear_combination/hls_linear_combination.cpp:21:12)
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 6.51 seconds. CPU system time: 0.39 seconds. Elapsed time: 7.16 seconds; current allocated memory: 183.905 MB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0 seconds; current allocated memory: 183.906 MB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0.04 seconds. CPU system time: 0 seconds. Elapsed time: 0.05 seconds; current allocated memory: 185.851 MB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0.06 seconds. CPU system time: 0 seconds. Elapsed time: 0.07 seconds; current allocated memory: 185.499 MB.
WARNING: [XFORM 203-803] Dropped interface mode 'ap_auto' on 'vecs' (hls_linear_combination/hls_linear_combination.cpp:6) as it is incompatible with its interface mode 's_axilite'.
WARNING: [XFORM 203-803] Dropped interface mode 'ap_auto' on 'coeffs' (hls_linear_combination/hls_linear_combination.cpp:6) as it is incompatible with its interface mode 's_axilite'.
WARNING: [XFORM 203-803] Dropped interface mode 'ap_auto' on 'out' (hls_linear_combination/hls_linear_combination.cpp:6) as it is incompatible with its interface mode 's_axilite'.
INFO: [XFORM 203-502] Unrolling all loops for pipelining in function 'hls_linear_combination' (hls_linear_combination/hls_linear_combination.cpp:6).
WARNING: [XFORM 203-503] Ignored partial unroll directive for loop 'LOOP_LC1' (hls_linear_combination/hls_linear_combination.cpp:12) because its parent loop or function is pipelined.
WARNING: [XFORM 203-505] Ignored pipeline directive for loop 'LOOP_LC2' (hls_linear_combination/hls_linear_combination.cpp:21) because its parent loop or function is pipelined.
WARNING: [XFORM 203-503] Ignored partial unroll directive for loop 'LOOP_LC2' (hls_linear_combination/hls_linear_combination.cpp:21) because its parent loop or function is pipelined.
WARNING: [HLS 200-936] Cannot unroll loop 'LOOP_LC1' (hls_linear_combination/hls_linear_combination.cpp:12) in function 'hls_linear_combination': cannot completely unroll a loop with a variable trip count.
INFO: [HLS 200-489] Unrolling loop 'LOOP_LC12' (hls_linear_combination/hls_linear_combination.cpp:14) in function 'hls_linear_combination' completely with a factor of 60.
INFO: [HLS 200-489] Unrolling loop 'LOOP_LC2' (hls_linear_combination/hls_linear_combination.cpp:21) in function 'hls_linear_combination' completely with a factor of 6.
INFO: [XFORM 203-101] Partitioning array 'accumulators'  in dimension 1 with a cyclic factor 16.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.0' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.1' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.2' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.3' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.4' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.5' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.6' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.7' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.8' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.9' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.10' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.11' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.12' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.13' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.14' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.15' completely based on array size.
INFO: [XFORM 203-101] Partitioning array 'accumulators.0' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.1' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.2' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.3' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.4' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.5' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.6' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.7' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.8' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.9' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.10' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.11' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.12' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.13' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.14' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.15' in dimension 1 completely.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 0.31 seconds. CPU system time: 0.03 seconds. Elapsed time: 0.33 seconds; current allocated memory: 206.782 MB.
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 0.11 seconds. CPU system time: 0 seconds. Elapsed time: 0.11 seconds; current allocated memory: 200.061 MB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'hls_linear_combination' ...
WARNING: [SYN 201-107] Renaming port name 'hls_linear_combination/out' to 'hls_linear_combination/out_r' to avoid the conflict with HDL keywords or other object names.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'hls_linear_combination' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
WARNING: [SCHED 204-65] Unable to satisfy pipeline directive for function 'hls_linear_combination': contains subloop(s) that are not unrolled.
WARNING: [SCHED 204-65] Unable to satisfy pipeline directive for function 'hls_linear_combination': contains subloop(s) that are not unrolled.
INFO: [SCHED 204-61] Pipelining loop 'LOOP_LC1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 1, loop 'LOOP_LC1'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0.4 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.41 seconds; current allocated memory: 200.923 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0.53 seconds. CPU system time: 0 seconds. Elapsed time: 0.57 seconds; current allocated memory: 201.731 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'hls_linear_combination' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Design contains AXI ports. Reset is fixed to synchronous and active low.
INFO: [RTGEN 206-500] Setting interface mode on port 'hls_linear_combination/vecs' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'hls_linear_combination/coeffs' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'hls_linear_combination/len' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'hls_linear_combination/out_r' to 's_axilite & ap_vld'.
INFO: [RTGEN 206-500] Setting interface mode on function 'hls_linear_combination' to 'ap_ctrl_hs'.
WARNING: [RTGEN 206-101] Register 'accumulators_0_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_1_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_2_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_3_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_4_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_5_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_6_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_7_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_8_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_9_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_10_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_11_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_12_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_13_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_14_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_15_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_0_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_1_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_2_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_3_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_4_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_5_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_6_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_7_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_8_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_9_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_10_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_11_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_12_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_13_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_14_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_15_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_0_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_1_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_2_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_3_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_4_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_5_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_6_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_7_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_8_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_9_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_10_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_11_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_12_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_13_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_14_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_15_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_0_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_1_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_2_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_3_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_4_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_5_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_6_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_7_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_8_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_9_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_10_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_11_3' is power-on initialization.
INFO: [RTGEN 206-100] Bundling port 'vecs', 'coeffs' and 'out_r' to AXI-Lite port BUS_A.
INFO: [RTGEN 206-100] Generating core module 'mul_8ns_8ns_16_1_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'urem_32ns_6ns_8_36_1': 1 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'hls_linear_combination'.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z020-clg484-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -output=/home/osm/Documents/SECT-MAYO/MAYO/HLS/ips/hls_linear_combination.zip
INFO: [HLS 200-1464] Running solution command: config_export -rtl=vhdl
INFO: [HLS 200-1510] Running: set_part xc7z020-clg484-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_export -format ip_catalog -output /home/osm/Documents/SECT-MAYO/MAYO/HLS/ips/hls_linear_combination.zip -rtl vhdl 
INFO: [HLS 200-1510] Running: set_directive_top -name hls_linear_combination hls_linear_combination 
INFO: [HLS 200-1510] Running: set_directive_array_partition -type cyclic -factor 16 -dim 1 hls_linear_combination accumulators 
INFO: [HLS 200-1510] Running: set_directive_unroll -skip_exit_check -factor 10 hls_linear_combination/LOOP_LC2 
INFO: [HLS 200-1510] Running: set_directive_pipeline hls_linear_combination 
INFO: [HLS 200-1510] Running: set_directive_pipeline hls_linear_combination/LOOP_LC1 
INFO: [HLS 200-1510] Running: set_directive_interface -mode s_axilite -bundle BUS_A hls_linear_combination vecs 
INFO: [HLS 200-1510] Running: set_directive_interface -mode s_axilite -bundle BUS_A hls_linear_combination coeffs 
INFO: [HLS 200-1510] Running: set_directive_interface -mode ap_vld hls_linear_combination out 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0.01 seconds. CPU system time: 0 seconds. Elapsed time: 0.01 seconds; current allocated memory: 180.559 MB.
INFO: [HLS 200-10] Analyzing design file 'hls_linear_combination/hls_linear_combination.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 2.35 seconds. CPU system time: 0.24 seconds. Elapsed time: 2.69 seconds; current allocated memory: 181.054 MB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-188] Unrolling loop 'LOOP_LC2' (hls_linear_combination/hls_linear_combination.cpp:21:12) in function 'hls_linear_combination' partially (and skipping exit check) with a factor of 10 (hls_linear_combination/hls_linear_combination.cpp:21:12)
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 6.59 seconds. CPU system time: 0.34 seconds. Elapsed time: 7.14 seconds; current allocated memory: 183.941 MB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0 seconds; current allocated memory: 183.942 MB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0.05 seconds. CPU system time: 0 seconds. Elapsed time: 0.06 seconds; current allocated memory: 185.884 MB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0.05 seconds. CPU system time: 0 seconds. Elapsed time: 0.06 seconds; current allocated memory: 185.535 MB.
WARNING: [XFORM 203-803] Dropped interface mode 'ap_auto' on 'vecs' (hls_linear_combination/hls_linear_combination.cpp:6) as it is incompatible with its interface mode 's_axilite'.
WARNING: [XFORM 203-803] Dropped interface mode 'ap_auto' on 'coeffs' (hls_linear_combination/hls_linear_combination.cpp:6) as it is incompatible with its interface mode 's_axilite'.
INFO: [XFORM 203-502] Unrolling all loops for pipelining in function 'hls_linear_combination' (hls_linear_combination/hls_linear_combination.cpp:6).
WARNING: [XFORM 203-503] Ignored partial unroll directive for loop 'LOOP_LC1' (hls_linear_combination/hls_linear_combination.cpp:12) because its parent loop or function is pipelined.
WARNING: [XFORM 203-503] Ignored partial unroll directive for loop 'LOOP_LC2' (hls_linear_combination/hls_linear_combination.cpp:21) because its parent loop or function is pipelined.
WARNING: [HLS 200-936] Cannot unroll loop 'LOOP_LC1' (hls_linear_combination/hls_linear_combination.cpp:12) in function 'hls_linear_combination': cannot completely unroll a loop with a variable trip count.
INFO: [HLS 200-489] Unrolling loop 'LOOP_LC12' (hls_linear_combination/hls_linear_combination.cpp:14) in function 'hls_linear_combination' completely with a factor of 60.
INFO: [HLS 200-489] Unrolling loop 'LOOP_LC2' (hls_linear_combination/hls_linear_combination.cpp:21) in function 'hls_linear_combination' completely with a factor of 6.
INFO: [XFORM 203-101] Partitioning array 'accumulators'  in dimension 1 with a cyclic factor 16.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.0' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.1' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.2' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.3' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.4' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.5' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.6' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.7' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.8' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.9' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.10' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.11' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.12' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.13' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.14' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.15' completely based on array size.
INFO: [XFORM 203-101] Partitioning array 'accumulators.0' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.1' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.2' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.3' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.4' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.5' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.6' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.7' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.8' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.9' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.10' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.11' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.12' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.13' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.14' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.15' in dimension 1 completely.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 0.23 seconds. CPU system time: 0.03 seconds. Elapsed time: 0.3 seconds; current allocated memory: 206.805 MB.
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 0.14 seconds. CPU system time: 0 seconds. Elapsed time: 0.14 seconds; current allocated memory: 200.051 MB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'hls_linear_combination' ...
WARNING: [SYN 201-107] Renaming port name 'hls_linear_combination/out' to 'hls_linear_combination/out_r' to avoid the conflict with HDL keywords or other object names.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'hls_linear_combination' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
WARNING: [SCHED 204-65] Unable to satisfy pipeline directive for function 'hls_linear_combination': contains subloop(s) that are not unrolled.
WARNING: [SCHED 204-65] Unable to satisfy pipeline directive for function 'hls_linear_combination': contains subloop(s) that are not unrolled.
INFO: [SCHED 204-61] Pipelining loop 'LOOP_LC1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 1, loop 'LOOP_LC1'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0.38 seconds. CPU system time: 0 seconds. Elapsed time: 0.39 seconds; current allocated memory: 200.929 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0.54 seconds. CPU system time: 0 seconds. Elapsed time: 0.55 seconds; current allocated memory: 201.737 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'hls_linear_combination' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Design contains AXI ports. Reset is fixed to synchronous and active low.
INFO: [RTGEN 206-500] Setting interface mode on port 'hls_linear_combination/vecs' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'hls_linear_combination/coeffs' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'hls_linear_combination/len' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'hls_linear_combination/out_r' to 'ap_vld'.
INFO: [RTGEN 206-500] Setting interface mode on function 'hls_linear_combination' to 'ap_ctrl_hs'.
WARNING: [RTGEN 206-101] Register 'accumulators_0_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_1_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_2_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_3_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_4_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_5_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_6_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_7_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_8_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_9_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_10_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_11_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_12_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_13_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_14_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_15_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_0_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_1_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_2_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_3_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_4_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_5_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_6_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_7_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_8_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_9_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_10_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_11_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_12_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_13_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_14_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_15_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_0_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_1_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_2_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_3_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_4_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_5_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_6_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_7_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_8_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_9_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_10_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_11_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_12_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_13_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_14_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_15_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_0_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_1_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_2_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_3_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_4_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_5_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_6_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_7_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_8_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_9_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_10_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_11_3' is power-on initialization.
INFO: [RTGEN 206-100] Bundling port 'vecs' and 'coeffs' to AXI-Lite port BUS_A.
INFO: [RTGEN 206-100] Generating core module 'mul_8ns_8ns_16_1_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'urem_32ns_6ns_8_36_1': 1 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'hls_linear_combination'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0.63 seconds. CPU system time: 0.02 seconds. Elapsed time: 0.7 seconds; current allocated memory: 203.113 MB.
INFO: [RTMG 210-282] Generating pipelined core: 'hls_linear_combination_mul_8ns_8ns_16_1_1_Multiplier_0'
INFO: [RTMG 210-282] Generating pipelined core: 'hls_linear_combination_urem_32ns_6ns_8_36_1_div'
INFO: [HLS 200-111] Finished Generating all RTL models: CPU user time: 2.9 seconds. CPU system time: 0.06 seconds. Elapsed time: 3.02 seconds; current allocated memory: 213.788 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z020-clg484-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -output=/home/osm/Documents/SECT-MAYO/MAYO/HLS/ips/hls_linear_combination.zip
INFO: [HLS 200-1464] Running solution command: config_export -rtl=vhdl
INFO: [HLS 200-1510] Running: set_part xc7z020-clg484-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_export -format ip_catalog -output /home/osm/Documents/SECT-MAYO/MAYO/HLS/ips/hls_linear_combination.zip -rtl vhdl 
INFO: [HLS 200-1510] Running: set_directive_top -name hls_linear_combination hls_linear_combination 
INFO: [HLS 200-1510] Running: set_directive_array_partition -type cyclic -factor 16 -dim 1 hls_linear_combination accumulators 
INFO: [HLS 200-1510] Running: set_directive_unroll -skip_exit_check -factor 10 hls_linear_combination/LOOP_LC2 
INFO: [HLS 200-1510] Running: set_directive_pipeline hls_linear_combination 
INFO: [HLS 200-1510] Running: set_directive_pipeline hls_linear_combination/LOOP_LC1 
INFO: [HLS 200-1510] Running: set_directive_interface -mode s_axilite -bundle BUS_A hls_linear_combination vecs 
INFO: [HLS 200-1510] Running: set_directive_interface -mode s_axilite -bundle BUS_A hls_linear_combination coeffs 
INFO: [HLS 200-1510] Running: set_directive_interface -mode ap_vld hls_linear_combination out 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0.01 seconds. CPU system time: 0 seconds. Elapsed time: 0.02 seconds; current allocated memory: 180.559 MB.
INFO: [HLS 200-10] Analyzing design file 'hls_linear_combination/hls_linear_combination.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 2.62 seconds. CPU system time: 0.24 seconds. Elapsed time: 3.07 seconds; current allocated memory: 181.054 MB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-188] Unrolling loop 'LOOP_LC2' (hls_linear_combination/hls_linear_combination.cpp:21:12) in function 'hls_linear_combination' partially (and skipping exit check) with a factor of 10 (hls_linear_combination/hls_linear_combination.cpp:21:12)
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 6.58 seconds. CPU system time: 0.36 seconds. Elapsed time: 7.08 seconds; current allocated memory: 183.941 MB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.01 seconds; current allocated memory: 183.942 MB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0.04 seconds. CPU system time: 0 seconds. Elapsed time: 0.04 seconds; current allocated memory: 185.881 MB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0.05 seconds. CPU system time: 0 seconds. Elapsed time: 0.06 seconds; current allocated memory: 185.534 MB.
WARNING: [XFORM 203-803] Dropped interface mode 'ap_auto' on 'vecs' (hls_linear_combination/hls_linear_combination.cpp:6) as it is incompatible with its interface mode 's_axilite'.
WARNING: [XFORM 203-803] Dropped interface mode 'ap_auto' on 'coeffs' (hls_linear_combination/hls_linear_combination.cpp:6) as it is incompatible with its interface mode 's_axilite'.
INFO: [XFORM 203-502] Unrolling all loops for pipelining in function 'hls_linear_combination' (hls_linear_combination/hls_linear_combination.cpp:6).
WARNING: [XFORM 203-503] Ignored partial unroll directive for loop 'LOOP_LC1' (hls_linear_combination/hls_linear_combination.cpp:12) because its parent loop or function is pipelined.
WARNING: [XFORM 203-503] Ignored partial unroll directive for loop 'LOOP_LC2' (hls_linear_combination/hls_linear_combination.cpp:21) because its parent loop or function is pipelined.
WARNING: [HLS 200-936] Cannot unroll loop 'LOOP_LC1' (hls_linear_combination/hls_linear_combination.cpp:12) in function 'hls_linear_combination': cannot completely unroll a loop with a variable trip count.
INFO: [HLS 200-489] Unrolling loop 'LOOP_LC12' (hls_linear_combination/hls_linear_combination.cpp:14) in function 'hls_linear_combination' completely with a factor of 60.
INFO: [HLS 200-489] Unrolling loop 'LOOP_LC2' (hls_linear_combination/hls_linear_combination.cpp:21) in function 'hls_linear_combination' completely with a factor of 6.
INFO: [XFORM 203-101] Partitioning array 'accumulators'  in dimension 1 with a cyclic factor 16.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.0' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.1' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.2' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.3' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.4' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.5' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.6' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.7' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.8' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.9' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.10' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.11' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.12' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.13' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.14' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.15' completely based on array size.
INFO: [XFORM 203-101] Partitioning array 'accumulators.0' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.1' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.2' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.3' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.4' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.5' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.6' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.7' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.8' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.9' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.10' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.11' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.12' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.13' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.14' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.15' in dimension 1 completely.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 0.32 seconds. CPU system time: 0.02 seconds. Elapsed time: 0.35 seconds; current allocated memory: 206.799 MB.
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 0.12 seconds. CPU system time: 0 seconds. Elapsed time: 0.12 seconds; current allocated memory: 200.054 MB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'hls_linear_combination' ...
WARNING: [SYN 201-107] Renaming port name 'hls_linear_combination/out' to 'hls_linear_combination/out_r' to avoid the conflict with HDL keywords or other object names.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'hls_linear_combination' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
WARNING: [SCHED 204-65] Unable to satisfy pipeline directive for function 'hls_linear_combination': contains subloop(s) that are not unrolled.
WARNING: [SCHED 204-65] Unable to satisfy pipeline directive for function 'hls_linear_combination': contains subloop(s) that are not unrolled.
INFO: [SCHED 204-61] Pipelining loop 'LOOP_LC1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 1, loop 'LOOP_LC1'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0.4 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.43 seconds; current allocated memory: 200.929 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0.53 seconds. CPU system time: 0 seconds. Elapsed time: 0.57 seconds; current allocated memory: 201.736 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'hls_linear_combination' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Design contains AXI ports. Reset is fixed to synchronous and active low.
INFO: [RTGEN 206-500] Setting interface mode on port 'hls_linear_combination/vecs' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'hls_linear_combination/coeffs' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'hls_linear_combination/len' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'hls_linear_combination/out_r' to 'ap_vld'.
INFO: [RTGEN 206-500] Setting interface mode on function 'hls_linear_combination' to 'ap_ctrl_hs'.
WARNING: [RTGEN 206-101] Register 'accumulators_0_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_1_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_2_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_3_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_4_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_5_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_6_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_7_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_8_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_9_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_10_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_11_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_12_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_13_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_14_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_15_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_0_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_1_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_2_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_3_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_4_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_5_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_6_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_7_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_8_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_9_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_10_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_11_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_12_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_13_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_14_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_15_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_0_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_1_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_2_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_3_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_4_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_5_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_6_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_7_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_8_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_9_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_10_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_11_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_12_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_13_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_14_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_15_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_0_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_1_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_2_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_3_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_4_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_5_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_6_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_7_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_8_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_9_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_10_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_11_3' is power-on initialization.
INFO: [RTGEN 206-100] Bundling port 'vecs' and 'coeffs' to AXI-Lite port BUS_A.
INFO: [RTGEN 206-100] Generating core module 'mul_8ns_8ns_16_1_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'urem_32ns_6ns_8_36_1': 1 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'hls_linear_combination'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0.67 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.71 seconds; current allocated memory: 203.114 MB.
INFO: [RTMG 210-282] Generating pipelined core: 'hls_linear_combination_mul_8ns_8ns_16_1_1_Multiplier_0'
INFO: [RTMG 210-282] Generating pipelined core: 'hls_linear_combination_urem_32ns_6ns_8_36_1_div'
INFO: [HLS 200-111] Finished Generating all RTL models: CPU user time: 2.9 seconds. CPU system time: 0.08 seconds. Elapsed time: 3.01 seconds; current allocated memory: 213.788 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z020-clg484-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -output=/home/osm/Documents/SECT-MAYO/MAYO/HLS/ips/hls_linear_combination.zip
INFO: [HLS 200-1464] Running solution command: config_export -rtl=vhdl
INFO: [HLS 200-1510] Running: set_part xc7z020-clg484-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_export -format ip_catalog -output /home/osm/Documents/SECT-MAYO/MAYO/HLS/ips/hls_linear_combination.zip -rtl vhdl 
INFO: [HLS 200-1510] Running: set_directive_top -name hls_linear_combination hls_linear_combination 
INFO: [HLS 200-1510] Running: set_directive_array_partition -type cyclic -factor 16 -dim 1 hls_linear_combination accumulators 
INFO: [HLS 200-1510] Running: set_directive_unroll -skip_exit_check -factor 10 hls_linear_combination/LOOP_LC2 
INFO: [HLS 200-1510] Running: set_directive_pipeline hls_linear_combination 
INFO: [HLS 200-1510] Running: set_directive_pipeline hls_linear_combination/LOOP_LC1 
INFO: [HLS 200-1510] Running: set_directive_interface -mode s_axilite -bundle BUS_A hls_linear_combination vecs 
INFO: [HLS 200-1510] Running: set_directive_interface -mode s_axilite -bundle BUS_A hls_linear_combination coeffs 
INFO: [HLS 200-1510] Running: set_directive_interface -mode ap_vld hls_linear_combination out 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0.01 seconds. CPU system time: 0 seconds. Elapsed time: 0.01 seconds; current allocated memory: 180.559 MB.
INFO: [HLS 200-10] Analyzing design file 'hls_linear_combination/hls_linear_combination.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 2.08 seconds. CPU system time: 0.22 seconds. Elapsed time: 2.38 seconds; current allocated memory: 181.055 MB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-188] Unrolling loop 'LOOP_LC2' (hls_linear_combination/hls_linear_combination.cpp:21:12) in function 'hls_linear_combination' partially (and skipping exit check) with a factor of 10 (hls_linear_combination/hls_linear_combination.cpp:21:12)
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 5.82 seconds. CPU system time: 0.31 seconds. Elapsed time: 6.24 seconds; current allocated memory: 183.941 MB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0 seconds; current allocated memory: 183.942 MB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0.04 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.04 seconds; current allocated memory: 185.881 MB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0.04 seconds. CPU system time: 0 seconds. Elapsed time: 0.04 seconds; current allocated memory: 185.534 MB.
WARNING: [XFORM 203-803] Dropped interface mode 'ap_auto' on 'vecs' (hls_linear_combination/hls_linear_combination.cpp:6) as it is incompatible with its interface mode 's_axilite'.
WARNING: [XFORM 203-803] Dropped interface mode 'ap_auto' on 'coeffs' (hls_linear_combination/hls_linear_combination.cpp:6) as it is incompatible with its interface mode 's_axilite'.
INFO: [XFORM 203-502] Unrolling all loops for pipelining in function 'hls_linear_combination' (hls_linear_combination/hls_linear_combination.cpp:6).
WARNING: [XFORM 203-503] Ignored partial unroll directive for loop 'LOOP_LC1' (hls_linear_combination/hls_linear_combination.cpp:12) because its parent loop or function is pipelined.
WARNING: [XFORM 203-503] Ignored partial unroll directive for loop 'LOOP_LC2' (hls_linear_combination/hls_linear_combination.cpp:21) because its parent loop or function is pipelined.
WARNING: [HLS 200-936] Cannot unroll loop 'LOOP_LC1' (hls_linear_combination/hls_linear_combination.cpp:12) in function 'hls_linear_combination': cannot completely unroll a loop with a variable trip count.
INFO: [HLS 200-489] Unrolling loop 'LOOP_LC12' (hls_linear_combination/hls_linear_combination.cpp:14) in function 'hls_linear_combination' completely with a factor of 60.
INFO: [HLS 200-489] Unrolling loop 'LOOP_LC2' (hls_linear_combination/hls_linear_combination.cpp:21) in function 'hls_linear_combination' completely with a factor of 6.
INFO: [XFORM 203-101] Partitioning array 'accumulators'  in dimension 1 with a cyclic factor 16.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.0' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.1' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.2' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.3' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.4' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.5' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.6' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.7' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.8' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.9' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.10' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.11' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.12' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.13' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.14' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.15' completely based on array size.
INFO: [XFORM 203-101] Partitioning array 'accumulators.0' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.1' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.2' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.3' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.4' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.5' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.6' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.7' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.8' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.9' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.10' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.11' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.12' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.13' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.14' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.15' in dimension 1 completely.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 0.25 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.26 seconds; current allocated memory: 206.799 MB.
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 0.12 seconds. CPU system time: 0 seconds. Elapsed time: 0.11 seconds; current allocated memory: 200.046 MB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'hls_linear_combination' ...
WARNING: [SYN 201-107] Renaming port name 'hls_linear_combination/out' to 'hls_linear_combination/out_r' to avoid the conflict with HDL keywords or other object names.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'hls_linear_combination' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
WARNING: [SCHED 204-65] Unable to satisfy pipeline directive for function 'hls_linear_combination': contains subloop(s) that are not unrolled.
WARNING: [SCHED 204-65] Unable to satisfy pipeline directive for function 'hls_linear_combination': contains subloop(s) that are not unrolled.
INFO: [SCHED 204-61] Pipelining loop 'LOOP_LC1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 1, loop 'LOOP_LC1'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0.3 seconds. CPU system time: 0 seconds. Elapsed time: 0.33 seconds; current allocated memory: 200.926 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0.44 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.49 seconds; current allocated memory: 201.734 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'hls_linear_combination' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Design contains AXI ports. Reset is fixed to synchronous and active low.
INFO: [RTGEN 206-500] Setting interface mode on port 'hls_linear_combination/vecs' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'hls_linear_combination/coeffs' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'hls_linear_combination/len' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'hls_linear_combination/out_r' to 'ap_vld'.
INFO: [RTGEN 206-500] Setting interface mode on function 'hls_linear_combination' to 'ap_ctrl_hs'.
WARNING: [RTGEN 206-101] Register 'accumulators_0_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_1_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_2_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_3_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_4_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_5_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_6_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_7_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_8_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_9_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_10_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_11_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_12_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_13_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_14_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_15_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_0_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_1_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_2_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_3_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_4_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_5_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_6_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_7_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_8_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_9_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_10_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_11_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_12_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_13_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_14_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_15_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_0_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_1_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_2_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_3_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_4_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_5_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_6_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_7_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_8_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_9_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_10_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_11_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_12_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_13_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_14_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_15_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_0_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_1_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_2_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_3_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_4_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_5_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_6_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_7_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_8_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_9_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_10_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_11_3' is power-on initialization.
INFO: [RTGEN 206-100] Bundling port 'vecs' and 'coeffs' to AXI-Lite port BUS_A.
INFO: [RTGEN 206-100] Generating core module 'mul_8ns_8ns_16_1_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'urem_32ns_6ns_8_36_1': 1 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'hls_linear_combination'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0.54 seconds. CPU system time: 0.03 seconds. Elapsed time: 0.63 seconds; current allocated memory: 203.111 MB.
INFO: [RTMG 210-282] Generating pipelined core: 'hls_linear_combination_mul_8ns_8ns_16_1_1_Multiplier_0'
INFO: [RTMG 210-282] Generating pipelined core: 'hls_linear_combination_urem_32ns_6ns_8_36_1_div'
INFO: [HLS 200-111] Finished Generating all RTL models: CPU user time: 2.77 seconds. CPU system time: 0.06 seconds. Elapsed time: 2.93 seconds; current allocated memory: 213.786 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z020-clg484-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -output=/home/osm/Documents/SECT-MAYO/MAYO/HLS/ips/hls_linear_combination.zip
INFO: [HLS 200-1464] Running solution command: config_export -rtl=vhdl
INFO: [HLS 200-1510] Running: set_part xc7z020-clg484-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_export -format ip_catalog -output /home/osm/Documents/SECT-MAYO/MAYO/HLS/ips/hls_linear_combination.zip -rtl vhdl 
INFO: [HLS 200-1510] Running: set_directive_top -name hls_linear_combination hls_linear_combination 
INFO: [HLS 200-1510] Running: set_directive_array_partition -type cyclic -factor 16 -dim 1 hls_linear_combination accumulators 
INFO: [HLS 200-1510] Running: set_directive_unroll -skip_exit_check -factor 10 hls_linear_combination/LOOP_LC2 
INFO: [HLS 200-1510] Running: set_directive_pipeline hls_linear_combination 
INFO: [HLS 200-1510] Running: set_directive_pipeline hls_linear_combination/LOOP_LC1 
INFO: [HLS 200-1510] Running: set_directive_interface -mode axis -register_mode both -register hls_linear_combination vecs 
INFO: [HLS 200-1510] Running: set_directive_interface -mode axis -register_mode both -register hls_linear_combination coeffs 
INFO: [HLS 200-1510] Running: set_directive_interface -mode axis -register_mode both -register hls_linear_combination out 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0.01 seconds. CPU system time: 0 seconds. Elapsed time: 0.01 seconds; current allocated memory: 180.603 MB.
INFO: [HLS 200-10] Analyzing design file 'hls_linear_combination/hls_linear_combination.cpp' ... 
WARNING: [HLS 214-140] Array stream parameter 'vecs' in function 'hls_linear_combination' may require the 'volatile' qualifier to prevent the compiler from altering array accesses and/or modifying the desired streaming order: /home/osm/Documents/SECT-MAYO/MAYO/HLS/hls_linear_combination/hls_linear_combination.cpp:6
WARNING: [HLS 214-140] Array stream parameter 'coeffs' in function 'hls_linear_combination' may require the 'volatile' qualifier to prevent the compiler from altering array accesses and/or modifying the desired streaming order: /home/osm/Documents/SECT-MAYO/MAYO/HLS/hls_linear_combination/hls_linear_combination.cpp:6
WARNING: [HLS 214-140] Array stream parameter 'out' in function 'hls_linear_combination' may require the 'volatile' qualifier to prevent the compiler from altering array accesses and/or modifying the desired streaming order: /home/osm/Documents/SECT-MAYO/MAYO/HLS/hls_linear_combination/hls_linear_combination.cpp:6
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 3.2 seconds. CPU system time: 0.33 seconds. Elapsed time: 4.46 seconds; current allocated memory: 181.920 MB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-188] Unrolling loop 'LOOP_LC2' (hls_linear_combination/hls_linear_combination.cpp:21:12) in function 'hls_linear_combination' partially (and skipping exit check) with a factor of 10 (hls_linear_combination/hls_linear_combination.cpp:21:12)
WARNING: [HLS 214-142] Implementing stream: may cause mismatch if read and write accesses are not in sequential order on port 'vecs' (hls_linear_combination/hls_linear_combination.cpp:6:0)
WARNING: [HLS 214-142] Implementing stream: may cause mismatch if read and write accesses are not in sequential order on port 'coeffs' (hls_linear_combination/hls_linear_combination.cpp:6:0)
WARNING: [HLS 214-142] Implementing stream: may cause mismatch if read and write accesses are not in sequential order on port 'out' (hls_linear_combination/hls_linear_combination.cpp:6:0)
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 8.38 seconds. CPU system time: 0.5 seconds. Elapsed time: 10.13 seconds; current allocated memory: 184.165 MB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.01 seconds; current allocated memory: 184.166 MB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0.04 seconds. CPU system time: 0 seconds. Elapsed time: 0.05 seconds; current allocated memory: 186.204 MB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0.08 seconds. CPU system time: 0 seconds. Elapsed time: 0.14 seconds; current allocated memory: 185.809 MB.
INFO: [XFORM 203-502] Unrolling all loops for pipelining in function 'hls_linear_combination' (hls_linear_combination/hls_linear_combination.cpp:6).
WARNING: [XFORM 203-503] Ignored partial unroll directive for loop 'LOOP_LC1' (hls_linear_combination/hls_linear_combination.cpp:12) because its parent loop or function is pipelined.
WARNING: [XFORM 203-503] Ignored partial unroll directive for loop 'LOOP_LC2' (hls_linear_combination/hls_linear_combination.cpp:21) because its parent loop or function is pipelined.
WARNING: [HLS 200-936] Cannot unroll loop 'LOOP_LC1' (hls_linear_combination/hls_linear_combination.cpp:12) in function 'hls_linear_combination': cannot completely unroll a loop with a variable trip count.
INFO: [HLS 200-489] Unrolling loop 'LOOP_LC12' (hls_linear_combination/hls_linear_combination.cpp:14) in function 'hls_linear_combination' completely with a factor of 60.
INFO: [HLS 200-489] Unrolling loop 'LOOP_LC2' (hls_linear_combination/hls_linear_combination.cpp:21) in function 'hls_linear_combination' completely with a factor of 6.
INFO: [XFORM 203-101] Partitioning array 'accumulators'  in dimension 1 with a cyclic factor 16.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.0' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.1' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.2' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.3' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.4' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.5' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.6' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.7' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.8' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.9' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.10' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.11' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.12' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.13' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.14' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.15' completely based on array size.
INFO: [XFORM 203-101] Partitioning array 'accumulators.0' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.1' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.2' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.3' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.4' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.5' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.6' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.7' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.8' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.9' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.10' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.11' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.12' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.13' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.14' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.15' in dimension 1 completely.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 2.52 seconds. CPU system time: 0.05 seconds. Elapsed time: 3.05 seconds; current allocated memory: 208.109 MB.
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 2.08 seconds. CPU system time: 0.03 seconds. Elapsed time: 3.14 seconds; current allocated memory: 204.192 MB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'hls_linear_combination' ...
WARNING: [SYN 201-107] Renaming port name 'hls_linear_combination/out' to 'hls_linear_combination/out_r' to avoid the conflict with HDL keywords or other object names.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'hls_linear_combination' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_59) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_58) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_57) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_56) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_55) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_54) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_53) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_52) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_51) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_50) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_49) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_48) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_47) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_46) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_45) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_44) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_43) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_42) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_41) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_40) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_39) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_38) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_37) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_36) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_35) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_34) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_33) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_32) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_31) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_30) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_29) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_28) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_27) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_26) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_25) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_24) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_23) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_22) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_21) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_20) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_19) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_18) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_17) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_16) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_15) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_14) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_13) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_12) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_11) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_10) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_9) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_8) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_7) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_6) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_5) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_4) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_3) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17) to 3 in order to utilize available DSP registers.
WARNING: [SCHED 204-65] Unable to satisfy pipeline directive for function 'hls_linear_combination': contains subloop(s) that are not unrolled.
WARNING: [SCHED 204-65] Unable to satisfy pipeline directive for function 'hls_linear_combination': contains subloop(s) that are not unrolled.
INFO: [SCHED 204-61] Pipelining loop 'LOOP_LC1'.
WARNING: [HLS 200-880] The II Violation in module 'hls_linear_combination' (loop 'LOOP_LC1'): Unable to enforce a carried dependence constraint (II = 1, distance = 1, offset = 1) between axis read on port 'vecs' (hls_linear_combination/hls_linear_combination.cpp:17) and axis read on port 'vecs' (hls_linear_combination/hls_linear_combination.cpp:17).
WARNING: [HLS 200-880] The II Violation in module 'hls_linear_combination' (loop 'LOOP_LC1'): Unable to enforce a carried dependence constraint (II = 2, distance = 1, offset = 1) between axis read on port 'vecs' (hls_linear_combination/hls_linear_combination.cpp:17) and axis read on port 'vecs' (hls_linear_combination/hls_linear_combination.cpp:17).
WARNING: [HLS 200-880] The II Violation in module 'hls_linear_combination' (loop 'LOOP_LC1'): Unable to enforce a carried dependence constraint (II = 3, distance = 1, offset = 1) between axis read on port 'vecs' (hls_linear_combination/hls_linear_combination.cpp:17) and axis read on port 'vecs' (hls_linear_combination/hls_linear_combination.cpp:17).
WARNING: [HLS 200-880] The II Violation in module 'hls_linear_combination' (loop 'LOOP_LC1'): Unable to enforce a carried dependence constraint (II = 4, distance = 1, offset = 1) between axis read on port 'vecs' (hls_linear_combination/hls_linear_combination.cpp:17) and axis read on port 'vecs' (hls_linear_combination/hls_linear_combination.cpp:17).
WARNING: [HLS 200-880] The II Violation in module 'hls_linear_combination' (loop 'LOOP_LC1'): Unable to enforce a carried dependence constraint (II = 35, distance = 1, offset = 1) between axis read on port 'vecs' (hls_linear_combination/hls_linear_combination.cpp:17) and axis read on port 'vecs' (hls_linear_combination/hls_linear_combination.cpp:17).
WARNING: [HLS 200-880] The II Violation in module 'hls_linear_combination' (loop 'LOOP_LC1'): Unable to enforce a carried dependence constraint (II = 51, distance = 1, offset = 1) between axis read on port 'vecs' (hls_linear_combination/hls_linear_combination.cpp:17) and axis read on port 'vecs' (hls_linear_combination/hls_linear_combination.cpp:17).
WARNING: [HLS 200-880] The II Violation in module 'hls_linear_combination' (loop 'LOOP_LC1'): Unable to enforce a carried dependence constraint (II = 59, distance = 1, offset = 1) between axis read on port 'vecs' (hls_linear_combination/hls_linear_combination.cpp:17) and axis read on port 'vecs' (hls_linear_combination/hls_linear_combination.cpp:17).
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 60, Depth = 64, loop 'LOOP_LC1'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 3.89 seconds. CPU system time: 0.24 seconds. Elapsed time: 5.41 seconds; current allocated memory: 208.795 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 4.81 seconds. CPU system time: 0.2 seconds. Elapsed time: 5.88 seconds; current allocated memory: 213.940 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'hls_linear_combination' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Design contains AXI ports. Reset is fixed to synchronous and active low.
INFO: [RTGEN 206-500] Setting interface mode on port 'hls_linear_combination/vecs' to 'axis' (register, both mode).
INFO: [RTGEN 206-500] Setting interface mode on port 'hls_linear_combination/coeffs' to 'axis' (register, both mode).
INFO: [RTGEN 206-500] Setting interface mode on port 'hls_linear_combination/len' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'hls_linear_combination/out_r' to 'axis' (register, both mode).
INFO: [RTGEN 206-500] Setting interface mode on function 'hls_linear_combination' to 'ap_ctrl_hs'.
WARNING: [RTGEN 206-101] Register 'accumulators_0_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_1_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_2_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_3_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_4_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_5_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_6_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_7_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_8_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_9_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_10_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_11_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_12_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_13_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_14_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_15_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_0_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_1_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_2_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_3_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_4_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_5_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_6_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_7_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_8_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_9_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_10_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_11_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_12_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_13_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_14_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_15_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_0_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_1_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_2_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_3_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_4_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_5_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_6_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_7_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_8_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_9_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_10_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_11_2' is power-on initialization.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z020-clg484-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -output=/home/osm/Documents/SECT-MAYO/MAYO/HLS/ips/hls_linear_combination.zip
INFO: [HLS 200-1464] Running solution command: config_export -rtl=vhdl
INFO: [HLS 200-1510] Running: set_part xc7z020-clg484-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_export -format ip_catalog -output /home/osm/Documents/SECT-MAYO/MAYO/HLS/ips/hls_linear_combination.zip -rtl vhdl 
INFO: [HLS 200-1510] Running: set_directive_top -name hls_linear_combination hls_linear_combination 
INFO: [HLS 200-1510] Running: set_directive_array_partition -type cyclic -factor 16 -dim 1 hls_linear_combination accumulators 
INFO: [HLS 200-1510] Running: set_directive_unroll -skip_exit_check -factor 10 hls_linear_combination/LOOP_LC2 
INFO: [HLS 200-1510] Running: set_directive_pipeline hls_linear_combination 
INFO: [HLS 200-1510] Running: set_directive_pipeline -off hls_linear_combination/LOOP_LC1 
INFO: [HLS 200-1510] Running: set_directive_interface -mode axis -register -register_mode both hls_linear_combination vecs 
INFO: [HLS 200-1510] Running: set_directive_interface -mode axis -register -register_mode both hls_linear_combination coeffs 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0.01 seconds. CPU system time: 0 seconds. Elapsed time: 0.02 seconds; current allocated memory: 180.555 MB.
INFO: [HLS 200-10] Analyzing design file 'hls_linear_combination/hls_linear_combination.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 3.19 seconds. CPU system time: 0.32 seconds. Elapsed time: 4.36 seconds; current allocated memory: 180.935 MB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-188] Unrolling loop 'LOOP_LC2' (hls_linear_combination/hls_linear_combination.cpp:21:12) in function 'hls_linear_combination' partially (and skipping exit check) with a factor of 10 (hls_linear_combination/hls_linear_combination.cpp:21:12)
WARNING: [HLS 214-142] Implementing stream: may cause mismatch if read and write accesses are not in sequential order on port 'vecs' (hls_linear_combination/hls_linear_combination.cpp:6:0)
WARNING: [HLS 214-142] Implementing stream: may cause mismatch if read and write accesses are not in sequential order on port 'coeffs' (hls_linear_combination/hls_linear_combination.cpp:6:0)
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 8.55 seconds. CPU system time: 0.49 seconds. Elapsed time: 10.3 seconds; current allocated memory: 183.950 MB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0 seconds; current allocated memory: 183.951 MB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0.05 seconds. CPU system time: 0 seconds. Elapsed time: 0.06 seconds; current allocated memory: 185.967 MB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0.06 seconds. CPU system time: 0 seconds. Elapsed time: 0.07 seconds; current allocated memory: 185.576 MB.
INFO: [XFORM 203-502] Unrolling all loops for pipelining in function 'hls_linear_combination' (hls_linear_combination/hls_linear_combination.cpp:6).
WARNING: [XFORM 203-503] Ignored partial unroll directive for loop 'LOOP_LC1' (hls_linear_combination/hls_linear_combination.cpp:12) because its parent loop or function is pipelined.
WARNING: [XFORM 203-503] Ignored partial unroll directive for loop 'LOOP_LC2' (hls_linear_combination/hls_linear_combination.cpp:21) because its parent loop or function is pipelined.
WARNING: [HLS 200-936] Cannot unroll loop 'LOOP_LC1' (hls_linear_combination/hls_linear_combination.cpp:12) in function 'hls_linear_combination': cannot completely unroll a loop with a variable trip count.
INFO: [HLS 200-489] Unrolling loop 'LOOP_LC12' (hls_linear_combination/hls_linear_combination.cpp:14) in function 'hls_linear_combination' completely with a factor of 60.
INFO: [HLS 200-489] Unrolling loop 'LOOP_LC2' (hls_linear_combination/hls_linear_combination.cpp:21) in function 'hls_linear_combination' completely with a factor of 6.
INFO: [XFORM 203-101] Partitioning array 'accumulators'  in dimension 1 with a cyclic factor 16.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.0' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.1' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.2' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.3' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.4' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.5' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.6' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.7' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.8' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.9' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.10' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.11' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.12' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.13' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.14' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.15' completely based on array size.
INFO: [XFORM 203-101] Partitioning array 'accumulators.0' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.1' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.2' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.3' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.4' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.5' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.6' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.7' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.8' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.9' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.10' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.11' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.12' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.13' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.14' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.15' in dimension 1 completely.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 2.92 seconds. CPU system time: 0.04 seconds. Elapsed time: 3.21 seconds; current allocated memory: 208.146 MB.
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 2.56 seconds. CPU system time: 0.01 seconds. Elapsed time: 2.74 seconds; current allocated memory: 206.454 MB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'hls_linear_combination' ...
WARNING: [SYN 201-107] Renaming port name 'hls_linear_combination/out' to 'hls_linear_combination/out_r' to avoid the conflict with HDL keywords or other object names.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'hls_linear_combination' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_59) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_58) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_57) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_56) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_55) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_54) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_53) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_52) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_51) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_50) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_49) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_48) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_47) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_46) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_45) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_44) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_43) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_42) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_41) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_40) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_39) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_38) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_37) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_36) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_35) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_34) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_33) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_32) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_31) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_30) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_29) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_28) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_27) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_26) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_25) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_24) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_23) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_22) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_21) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_20) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_19) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_18) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_17) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_16) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_15) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_14) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_13) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_12) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_11) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_10) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_9) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_8) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_7) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_6) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_5) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_4) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_3) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17) to 3 in order to utilize available DSP registers.
WARNING: [SCHED 204-65] Unable to satisfy pipeline directive for function 'hls_linear_combination': contains subloop(s) that are not unrolled.
WARNING: [SCHED 204-65] Unable to satisfy pipeline directive for function 'hls_linear_combination': contains subloop(s) that are not unrolled.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 4 seconds. CPU system time: 0.19 seconds. Elapsed time: 4.95 seconds; current allocated memory: 211.497 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 4.93 seconds. CPU system time: 0.25 seconds. Elapsed time: 6.3 seconds; current allocated memory: 216.866 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z020-clg484-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -output=/home/osm/Documents/SECT-MAYO/MAYO/HLS/ips/hls_linear_combination.zip
INFO: [HLS 200-1464] Running solution command: config_export -rtl=vhdl
INFO: [HLS 200-1510] Running: set_part xc7z020-clg484-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_export -format ip_catalog -output /home/osm/Documents/SECT-MAYO/MAYO/HLS/ips/hls_linear_combination.zip -rtl vhdl 
INFO: [HLS 200-1510] Running: set_directive_top -name hls_linear_combination hls_linear_combination 
INFO: [HLS 200-1510] Running: set_directive_array_partition -type cyclic -factor 16 -dim 1 hls_linear_combination accumulators 
INFO: [HLS 200-1510] Running: set_directive_unroll -skip_exit_check -factor 10 hls_linear_combination/LOOP_LC2 
INFO: [HLS 200-1510] Running: set_directive_pipeline hls_linear_combination 
INFO: [HLS 200-1510] Running: set_directive_pipeline -off hls_linear_combination/LOOP_LC1 
INFO: [HLS 200-1510] Running: set_directive_interface -mode axis -register_mode off hls_linear_combination vecs 
INFO: [HLS 200-1510] Running: set_directive_interface -mode axis -register_mode off hls_linear_combination coeffs 
INFO: [HLS 200-1510] Running: set_directive_interface -mode ap_memory -storage_type ram_t2p hls_linear_combination out 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0.02 seconds. CPU system time: 0 seconds. Elapsed time: 0.02 seconds; current allocated memory: 180.592 MB.
INFO: [HLS 200-10] Analyzing design file 'hls_linear_combination/hls_linear_combination.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 2.82 seconds. CPU system time: 0.3 seconds. Elapsed time: 3.73 seconds; current allocated memory: 181.070 MB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-188] Unrolling loop 'LOOP_LC2' (hls_linear_combination/hls_linear_combination.cpp:21:12) in function 'hls_linear_combination' partially (and skipping exit check) with a factor of 10 (hls_linear_combination/hls_linear_combination.cpp:21:12)
WARNING: [HLS 214-142] Implementing stream: may cause mismatch if read and write accesses are not in sequential order on port 'vecs' (hls_linear_combination/hls_linear_combination.cpp:6:0)
WARNING: [HLS 214-142] Implementing stream: may cause mismatch if read and write accesses are not in sequential order on port 'coeffs' (hls_linear_combination/hls_linear_combination.cpp:6:0)
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 7.05 seconds. CPU system time: 0.42 seconds. Elapsed time: 8.17 seconds; current allocated memory: 183.993 MB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0 seconds; current allocated memory: 183.994 MB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0.04 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.06 seconds; current allocated memory: 186.025 MB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0.07 seconds. CPU system time: 0 seconds. Elapsed time: 0.07 seconds; current allocated memory: 185.634 MB.
INFO: [XFORM 203-502] Unrolling all loops for pipelining in function 'hls_linear_combination' (hls_linear_combination/hls_linear_combination.cpp:6).
WARNING: [XFORM 203-503] Ignored partial unroll directive for loop 'LOOP_LC1' (hls_linear_combination/hls_linear_combination.cpp:12) because its parent loop or function is pipelined.
WARNING: [XFORM 203-503] Ignored partial unroll directive for loop 'LOOP_LC2' (hls_linear_combination/hls_linear_combination.cpp:21) because its parent loop or function is pipelined.
WARNING: [HLS 200-936] Cannot unroll loop 'LOOP_LC1' (hls_linear_combination/hls_linear_combination.cpp:12) in function 'hls_linear_combination': cannot completely unroll a loop with a variable trip count.
INFO: [HLS 200-489] Unrolling loop 'LOOP_LC12' (hls_linear_combination/hls_linear_combination.cpp:14) in function 'hls_linear_combination' completely with a factor of 60.
INFO: [HLS 200-489] Unrolling loop 'LOOP_LC2' (hls_linear_combination/hls_linear_combination.cpp:21) in function 'hls_linear_combination' completely with a factor of 6.
INFO: [XFORM 203-101] Partitioning array 'accumulators'  in dimension 1 with a cyclic factor 16.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.0' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.1' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.2' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.3' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.4' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.5' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.6' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.7' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.8' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.9' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.10' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.11' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.12' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.13' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.14' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.15' completely based on array size.
INFO: [XFORM 203-101] Partitioning array 'accumulators.0' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.1' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.2' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.3' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.4' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.5' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.6' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.7' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.8' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.9' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.10' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.11' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.12' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.13' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.14' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.15' in dimension 1 completely.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 2.45 seconds. CPU system time: 0.02 seconds. Elapsed time: 2.76 seconds; current allocated memory: 208.184 MB.
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 2.14 seconds. CPU system time: 0.01 seconds. Elapsed time: 2.19 seconds; current allocated memory: 206.471 MB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'hls_linear_combination' ...
WARNING: [SYN 201-303] Cannot apply memory assignment of 'RAM_T2P_BRAM' on 'out', which is not an array.
WARNING: [SYN 201-107] Renaming port name 'hls_linear_combination/out' to 'hls_linear_combination/out_r' to avoid the conflict with HDL keywords or other object names.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'hls_linear_combination' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_59) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_58) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_57) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_56) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_55) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_54) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_53) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_52) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_51) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_50) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_49) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_48) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_47) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_46) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_45) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_44) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_43) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_42) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_41) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_40) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_39) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_38) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_37) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_36) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_35) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_34) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_33) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_32) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_31) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_30) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_29) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_28) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_27) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_26) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_25) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_24) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_23) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_22) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_21) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_20) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_19) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_18) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_17) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_16) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_15) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_14) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_13) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_12) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_11) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_10) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_9) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_8) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_7) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_6) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_5) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_4) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_3) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17) to 3 in order to utilize available DSP registers.
WARNING: [SCHED 204-65] Unable to satisfy pipeline directive for function 'hls_linear_combination': contains subloop(s) that are not unrolled.
WARNING: [SCHED 204-65] Unable to satisfy pipeline directive for function 'hls_linear_combination': contains subloop(s) that are not unrolled.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 3.13 seconds. CPU system time: 0.14 seconds. Elapsed time: 3.6 seconds; current allocated memory: 211.541 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 4.11 seconds. CPU system time: 0.19 seconds. Elapsed time: 4.74 seconds; current allocated memory: 216.914 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z020-clg484-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -output=/home/osm/Documents/SECT-MAYO/MAYO/HLS/ips/hls_linear_combination.zip
INFO: [HLS 200-1464] Running solution command: config_export -rtl=vhdl
INFO: [HLS 200-1510] Running: set_part xc7z020-clg484-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_export -format ip_catalog -output /home/osm/Documents/SECT-MAYO/MAYO/HLS/ips/hls_linear_combination.zip -rtl vhdl 
INFO: [HLS 200-1510] Running: set_directive_top -name hls_linear_combination hls_linear_combination 
INFO: [HLS 200-1510] Running: set_directive_array_partition -type cyclic -factor 16 -dim 1 hls_linear_combination accumulators 
INFO: [HLS 200-1510] Running: set_directive_pipeline hls_linear_combination 
INFO: [HLS 200-1510] Running: set_directive_pipeline -off hls_linear_combination/LOOP_LC1 
INFO: [HLS 200-1510] Running: set_directive_interface -mode axis -register_mode off hls_linear_combination vecs 
INFO: [HLS 200-1510] Running: set_directive_interface -mode axis -register_mode off hls_linear_combination coeffs 
INFO: [HLS 200-1510] Running: set_directive_interface -mode ap_memory -storage_type ram_t2p hls_linear_combination out 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0.01 seconds. CPU system time: 0 seconds. Elapsed time: 0.02 seconds; current allocated memory: 180.589 MB.
INFO: [HLS 200-10] Analyzing design file 'hls_linear_combination/hls_linear_combination.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 2.78 seconds. CPU system time: 0.36 seconds. Elapsed time: 3.89 seconds; current allocated memory: 180.987 MB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
WARNING: [HLS 214-142] Implementing stream: may cause mismatch if read and write accesses are not in sequential order on port 'vecs' (hls_linear_combination/hls_linear_combination.cpp:6:0)
WARNING: [HLS 214-142] Implementing stream: may cause mismatch if read and write accesses are not in sequential order on port 'coeffs' (hls_linear_combination/hls_linear_combination.cpp:6:0)
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 6.47 seconds. CPU system time: 0.44 seconds. Elapsed time: 7.39 seconds; current allocated memory: 183.736 MB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0.01 seconds. CPU system time: 0 seconds. Elapsed time: 0 seconds; current allocated memory: 183.738 MB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0.05 seconds. CPU system time: 0 seconds. Elapsed time: 0.09 seconds; current allocated memory: 185.721 MB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0.07 seconds. CPU system time: 0 seconds. Elapsed time: 0.11 seconds; current allocated memory: 185.356 MB.
INFO: [XFORM 203-502] Unrolling all loops for pipelining in function 'hls_linear_combination' (hls_linear_combination/hls_linear_combination.cpp:6).
WARNING: [XFORM 203-503] Ignored partial unroll directive for loop 'LOOP_LC1' (hls_linear_combination/hls_linear_combination.cpp:12) because its parent loop or function is pipelined.
WARNING: [HLS 200-936] Cannot unroll loop 'LOOP_LC1' (hls_linear_combination/hls_linear_combination.cpp:12) in function 'hls_linear_combination': cannot completely unroll a loop with a variable trip count.
INFO: [HLS 200-489] Unrolling loop 'LOOP_LC12' (hls_linear_combination/hls_linear_combination.cpp:14) in function 'hls_linear_combination' completely with a factor of 60.
INFO: [HLS 200-489] Unrolling loop 'LOOP_LC2' (hls_linear_combination/hls_linear_combination.cpp:21) in function 'hls_linear_combination' completely with a factor of 60.
INFO: [XFORM 203-101] Partitioning array 'accumulators'  in dimension 1 with a cyclic factor 16.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.0' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.1' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.2' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.3' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.4' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.5' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.6' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.7' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.8' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.9' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.10' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.11' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.12' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.13' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.14' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.15' completely based on array size.
INFO: [XFORM 203-101] Partitioning array 'accumulators.0' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.1' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.2' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.3' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.4' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.5' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.6' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.7' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.8' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.9' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.10' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.11' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.12' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.13' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.14' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.15' in dimension 1 completely.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 2.64 seconds. CPU system time: 0.05 seconds. Elapsed time: 3.14 seconds; current allocated memory: 207.968 MB.
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 2.31 seconds. CPU system time: 0 seconds. Elapsed time: 2.66 seconds; current allocated memory: 206.312 MB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'hls_linear_combination' ...
WARNING: [SYN 201-303] Cannot apply memory assignment of 'RAM_T2P_BRAM' on 'out', which is not an array.
WARNING: [SYN 201-107] Renaming port name 'hls_linear_combination/out' to 'hls_linear_combination/out_r' to avoid the conflict with HDL keywords or other object names.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'hls_linear_combination' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_59) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_58) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_57) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_56) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_55) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_54) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_53) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_52) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_51) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_50) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_49) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_48) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_47) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_46) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_45) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_44) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_43) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_42) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_41) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_40) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_39) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_38) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_37) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_36) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_35) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_34) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_33) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_32) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_31) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_30) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_29) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_28) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_27) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_26) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_25) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_24) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_23) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_22) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_21) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_20) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_19) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_18) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_17) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_16) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_15) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_14) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_13) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_12) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_11) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_10) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_9) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_8) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_7) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_6) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_5) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_4) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_3) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln17) to 3 in order to utilize available DSP registers.
WARNING: [SCHED 204-65] Unable to satisfy pipeline directive for function 'hls_linear_combination': contains subloop(s) that are not unrolled.
WARNING: [SCHED 204-65] Unable to satisfy pipeline directive for function 'hls_linear_combination': contains subloop(s) that are not unrolled.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 3.47 seconds. CPU system time: 0.18 seconds. Elapsed time: 4.09 seconds; current allocated memory: 211.430 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 4.39 seconds. CPU system time: 0.21 seconds. Elapsed time: 5.25 seconds; current allocated memory: 216.803 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'hls_linear_combination' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Design contains AXI ports. Reset is fixed to synchronous and active low.
INFO: [RTGEN 206-500]==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z020-clg484-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -output=/home/osm/Documents/SECT-MAYO/MAYO/HLS/ips/hls_linear_combination.zip
INFO: [HLS 200-1464] Running solution command: config_export -rtl=vhdl
INFO: [HLS 200-1510] Running: set_part xc7z020-clg484-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_export -format ip_catalog -output /home/osm/Documents/SECT-MAYO/MAYO/HLS/ips/hls_linear_combination.zip -rtl vhdl 
INFO: [HLS 200-1510] Running: set_directive_top -name hls_linear_combination hls_linear_combination 
INFO: [HLS 200-1510] Running: set_directive_interface -mode axis -register_mode both -register hls_linear_combination vecs 
INFO: [HLS 200-1510] Running: set_directive_interface -mode axis -register_mode both -register hls_linear_combination coeffs 
INFO: [HLS 200-1510] Running: set_directive_interface -mode axis -register_mode both -register hls_linear_combination out 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0.01 seconds. CPU system time: 0 seconds. Elapsed time: 0.03 seconds; current allocated memory: 180.546 MB.
INFO: [HLS 200-10] Analyzing design file 'hls_linear_combination/hls_linear_combination.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 12.42 seconds. CPU system time: 0.92 seconds. Elapsed time: 27.99 seconds; current allocated memory: 181.792 MB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-131] Inlining function 'hls::stream<axis_data, 0>::read(axis_data&)' into 'hls::stream<axis_data, 0>::read()' (/opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_stream_39.h:156:9)
INFO: [HLS 214-131] Inlining function 'hls::stream<axis_data, 0>::read()' into 'hls_linear_combination(hls::stream<axis_data, 0>&, hls::stream<axis_data, 0>&, int, hls::stream<axis_data, 0>&)' (hls_linear_combination/hls_linear_combination.cpp:17:20)
INFO: [HLS 214-131] Inlining function 'hls::stream<axis_data, 0>::write(axis_data const&)' into 'hls_linear_combination(hls::stream<axis_data, 0>&, hls::stream<axis_data, 0>&, int, hls::stream<axis_data, 0>&)' (hls_linear_combination/hls_linear_combination.cpp:54:8)
INFO: [HLS 214-131] Inlining function 'hls::stream<axis_data, 0>::read()' into 'hls_linear_combination(hls::stream<axis_data, 0>&, hls::stream<axis_data, 0>&, int, hls::stream<axis_data, 0>&)' (hls_linear_combination/hls_linear_combination.cpp:24:21)
INFO: [HLS 214-131] Inlining function '_llvm.fpga.pack.none.i16.s_struct.axis_datas' into 'hls_linear_combination(hls::stream<axis_data, 0>&, hls::stream<axis_data, 0>&, int, hls::stream<axis_data, 0>&)' (/opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_stream_39.h:174:9)
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 6.9 seconds. CPU system time: 0.48 seconds. Elapsed time: 11.04 seconds; current allocated memory: 183.837 MB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0 seconds; current allocated memory: 183.838 MB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0.1 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.17 seconds; current allocated memory: 189.441 MB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0.18 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.26 seconds; current allocated memory: 196.194 MB.
INFO: [XFORM 203-510] Pipelining loop 'Loop-2' in function 'hls_linear_combination' automatically.
INFO: [XFORM 203-510] Pipelining loop 'LOOP_VEC2' (/opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_stream_39.h:0) in function 'hls_linear_combination' automatically.
INFO: [XFORM 203-510] Pipelining loop 'LOOP_COEFS' (/opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_stream_39.h:0) in function 'hls_linear_combination' automatically.
INFO: [XFORM 203-510] Pipelining loop 'LOOP_LC1' (hls_linear_combination/hls_linear_combination.cpp:30) in function 'hls_linear_combination' automatically.
INFO: [XFORM 203-510] Pipelining loop 'LOOP_LC2' (hls_linear_combination/hls_linear_combination.cpp:36) in function 'hls_linear_combination' automatically.
INFO: [XFORM 203-510] Pipelining loop 'LOOP_OUT' (hls_linear_combination/hls_linear_combination.cpp:47) in function 'hls_linear_combination' automatically.
INFO: [XFORM 203-502] Unrolling all sub-loops inside loop 'LOOP_LC1' (hls_linear_combination/hls_linear_combination.cpp:30) in function 'hls_linear_combination' for pipelining.
INFO: [HLS 200-489] Unrolling loop 'LOOP_LC12' (hls_linear_combination/hls_linear_combination.cpp:31) in function 'hls_linear_combination' completely with a factor of 60.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 0.76 seconds. CPU system time: 0.03 seconds. Elapsed time: 1.02 seconds; current allocated memory: 224.661 MB.
INFO: [XFORM 203-541] Flattening a loop nest 'LOOP_VEC1' (hls_linear_combination/hls_linear_combination.cpp:15:22) in function 'hls_linear_combination'.
INFO: [HLS 200-472] Inferring partial write operation for 'accumulators' 
INFO: [HLS 200-472] Inferring partial write operation for 'vec_l' (hls_linear_combination/hls_linear_combination.cpp:18:17)
INFO: [HLS 200-472] Inferring partial write operation for 'coeffs_l' (hls_linear_combination/hls_linear_combination.cpp:25:15)
INFO: [HLS 200-472] Inferring partial write operation for 'accumulators' (hls_linear_combination/hls_linear_combination.cpp:32:21)
INFO: [HLS 200-472] Inferring partial write operation for 'out_l' (hls_linear_combination/hls_linear_combination.cpp:41:14)
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 0.75 seconds. CPU system time: 0 seconds. Elapsed time: 0.99 seconds; current allocated memory: 224.889 MB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'hls_linear_combination' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'hls_linear_combination' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_59) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_58) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_57) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_56) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_55) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_54) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_53) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_52) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_51) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_50) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_49) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_48) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_47) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_46) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_45) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_44) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_43) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_42) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_41) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_40) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_39) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_38) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_37) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_36) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_35) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_34) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_33) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_32) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_31) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_30) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_29) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_28) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_27) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_26) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_25) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_24) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_23) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_22) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_21) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_20) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_19) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_18) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_17) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_16) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_15) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_14) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_13) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_12) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_11) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_10) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_9) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_8) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_7) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_6) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_5) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_4) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_3) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-1457] Automatically inferring 1WnR RAM type for array 'vec_l'. Use bind_storage pragma to overwrite if needed.
INFO: [SCHED 204-61] Pipelining loop 'Loop 1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 1, loop 'Loop 1'
INFO: [SCHED 204-61] Pipelining loop 'LOOP_VEC1_LOOP_VEC2'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 2, loop 'LOOP_VEC1_LOOP_VEC2'
INFO: [SCHED 204-61] Pipelining loop 'LOOP_COEFS'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 1, loop 'LOOP_COEFS'
INFO: [SCHED 204-61] Pipelining loop 'LOOP_LC1'.
WARNING: [HLS 200-880] The II Violation in module 'hls_linear_combination' (loop 'LOOP_LC1'): Unable to enforce a carried dependence constraint (II = 1, distance = 1, offset = 1) between 'store' operation ('accumulators_addr_2_write_ln32', hls_linear_combination/hls_linear_combination.cpp:32) of variable 'add_ln32', hls_linear_combination/hls_linear_combination.cpp:32 on array 'accumulators', hls_linear_combination/hls_linear_combination.cpp:5 and 'load' operation ('accumulators_load_1', hls_linear_combination/hls_linear_combination.cpp:32) on array 'accumulators', hls_linear_combination/hls_linear_combination.cpp:5.
WARNING: [HLS 200-880] The II Violation in module 'hls_linear_combination' (loop 'LOOP_LC1'): Unable to enforce a carried dependence constraint (II = 2, distance = 1, offset = 1) between 'store' operation ('accumulators_addr_2_write_ln32', hls_linear_combination/hls_linear_combination.cpp:32) of variable 'add_ln32', hls_linear_combination/hls_linear_combination.cpp:32 on array 'accumulators', hls_linear_combination/hls_linear_combination.cpp:5 and 'load' operation ('accumulators_load_1', hls_linear_combination/hls_linear_combination.cpp:32) on array 'accumulators', hls_linear_combination/hls_linear_combination.cpp:5.
WARNING: [HLS 200-885] Unable to schedule 'load' operation ('vec_l_load_51', hls_linear_combination/hls_linear_combination.cpp:32) on array 'vec_l', hls_linear_combination/hls_linear_combination.cpp:8 due to limited memory ports. Please consider using a memory core with more ports or partitioning the array 'vec_l'.
WARNING: [HLS 200-885] Unable to schedule 'load' operation ('accumulators_load_9', hls_linear_combination/hls_linear_combination.cpp:32) on array 'accumulators', hls_linear_combination/hls_linear_combination.cpp:5 due to limited memory ports. Please consider using a memory core with more ports or partitioning the array 'accumulators'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 64, Depth = 64, loop 'LOOP_LC1'
INFO: [SCHED 204-61] Pipelining loop 'LOOP_LC2'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 38, loop 'LOOP_LC2'
INFO: [SCHED 204-61] Pipelining loop 'LOOP_OUT'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 3, loop 'LOOP_OUT'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 79.71 seconds. CPU system time: 0.48 seconds. Elapsed time: 83.81 seconds; current allocated memory: 227.883 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z020-clg484-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -output=/home/osm/Documents/SECT-MAYO/MAYO/HLS/ips/hls_linear_combination.zip
INFO: [HLS 200-1464] Running solution command: config_export -rtl=vhdl
INFO: [HLS 200-1510] Running: set_part xc7z020-clg484-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_export -format ip_catalog -output /home/osm/Documents/SECT-MAYO/MAYO/HLS/ips/hls_linear_combination.zip -rtl vhdl 
INFO: [HLS 200-1510] Running: set_directive_top -name hls_linear_combination hls_linear_combination 
INFO: [HLS 200-1510] Running: set_directive_interface -mode axis -register -register_mode both hls_linear_combination vecs 
INFO: [HLS 200-1510] Running: set_directive_interface -mode axis -register -register_mode both hls_linear_combination coeffs 
INFO: [HLS 200-1510] Running: set_directive_interface -mode axis -register -register_mode both hls_linear_combination out 
INFO: [HLS 200-1510] Running: set_directive_array_partition -dim 1 -factor 5 -type cyclic hls_linear_combination accumulators 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0.01 seconds. CPU system time: 0 seconds. Elapsed time: 0.04 seconds; current allocated memory: 180.551 MB.
INFO: [HLS 200-10] Analyzing design file 'hls_linear_combination/hls_linear_combination.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 12.93 seconds. CPU system time: 0.79 seconds. Elapsed time: 23.01 seconds; current allocated memory: 181.814 MB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-131] Inlining function 'hls::stream<axis_data, 0>::read(axis_data&)' into 'hls::stream<axis_data, 0>::read()' (/opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_stream_39.h:156:9)
INFO: [HLS 214-131] Inlining function 'hls::stream<axis_data, 0>::read()' into 'hls_linear_combination(hls::stream<axis_data, 0>&, hls::stream<axis_data, 0>&, int, hls::stream<axis_data, 0>&)' (hls_linear_combination/hls_linear_combination.cpp:17:20)
INFO: [HLS 214-131] Inlining function 'hls::stream<axis_data, 0>::write(axis_data const&)' into 'hls_linear_combination(hls::stream<axis_data, 0>&, hls::stream<axis_data, 0>&, int, hls::stream<axis_data, 0>&)' (hls_linear_combination/hls_linear_combination.cpp:54:8)
INFO: [HLS 214-131] Inlining function 'hls::stream<axis_data, 0>::read()' into 'hls_linear_combination(hls::stream<axis_data, 0>&, hls::stream<axis_data, 0>&, int, hls::stream<axis_data, 0>&)' (hls_linear_combination/hls_linear_combination.cpp:24:21)
INFO: [HLS 214-131] Inlining function '_llvm.fpga.pack.none.i16.s_struct.axis_datas' into 'hls_linear_combination(hls::stream<axis_data, 0>&, hls::stream<axis_data, 0>&, int, hls::stream<axis_data, 0>&)' (/opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_stream_39.h:174:9)
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 8.62 seconds. CPU system time: 0.56 seconds. Elapsed time: 12.11 seconds; current allocated memory: 183.886 MB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0 seconds; current allocated memory: 183.888 MB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0.1 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.22 seconds; current allocated memory: 189.526 MB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0.2 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.37 seconds; current allocated memory: 196.246 MB.
INFO: [XFORM 203-510] Pipelining loop 'Loop-2' in function 'hls_linear_combination' automatically.
INFO: [XFORM 203-510] Pipelining loop 'LOOP_VEC2' (/opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_stream_39.h:0) in function 'hls_linear_combination' automatically.
INFO: [XFORM 203-510] Pipelining loop 'LOOP_COEFS' (/opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_stream_39.h:0) in function 'hls_linear_combination' automatically.
INFO: [XFORM 203-510] Pipelining loop 'LOOP_LC1' (hls_linear_combination/hls_linear_combination.cpp:30) in function 'hls_linear_combination' automatically.
INFO: [XFORM 203-510] Pipelining loop 'LOOP_LC2' (hls_linear_combination/hls_linear_combination.cpp:36) in function 'hls_linear_combination' automatically.
INFO: [XFORM 203-510] Pipelining loop 'LOOP_OUT' (hls_linear_combination/hls_linear_combination.cpp:47) in function 'hls_linear_combination' automatically.
INFO: [XFORM 203-502] Unrolling all sub-loops inside loop 'LOOP_LC1' (hls_linear_combination/hls_linear_combination.cpp:30) in function 'hls_linear_combination' for pipelining.
INFO: [HLS 200-489] Unrolling loop 'LOOP_LC12' (hls_linear_combination/hls_linear_combination.cpp:31) in function 'hls_linear_combination' completely with a factor of 60.
INFO: [XFORM 203-101] Partitioning array 'accumulators' (hls_linear_combination/hls_linear_combination.cpp:5) in dimension 1 with a cyclic factor 5.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 0.92 seconds. CPU system time: 0.04 seconds. Elapsed time: 1.38 seconds; current allocated memory: 224.782 MB.
INFO: [XFORM 203-541] Flattening a loop nest 'LOOP_VEC1' (hls_linear_combination/hls_linear_combination.cpp:15:22) in function 'hls_linear_combination'.
INFO: [HLS 200-472] Inferring partial write operation for 'vec_l' (hls_linear_combination/hls_linear_combination.cpp:18:17)
INFO: [HLS 200-472] Inferring partial write operation for 'coeffs_l' (hls_linear_combination/hls_linear_combination.cpp:25:15)
INFO: [HLS 200-472] Inferring partial write operation for 'accumulators[0]' (hls_linear_combination/hls_linear_combination.cpp:32:21)
INFO: [HLS 200-472] Inferring partial write operation for 'out_l' (hls_linear_combination/hls_linear_combination.cpp:41:14)
INFO: [HLS 200-472] Inferring partial write operation for 'accumulators[0]' 
INFO: [HLS 200-472] Inferring partial write operation for 'accumulators[1]' 
INFO: [HLS 200-472] Inferring partial write operation for 'accumulators[2]' 
INFO: [HLS 200-472] Inferring partial write operation for 'accumulators[3]' 
INFO: [HLS 200-472] Inferring partial write operation for 'accumulators[4]' 
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 0.82 seconds. CPU system time: 0.02 seconds. Elapsed time: 1.22 seconds; current allocated memory: 225.161 MB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'hls_linear_combination' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'hls_linear_combination' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_59) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_58) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_57) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_56) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_55) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_54) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_53) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_52) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_51) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_50) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_49) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_48) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_47) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_46) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_45) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_44) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_43) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_42) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_41) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_40) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_39) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_38) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_37) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_36) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_35) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_34) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_33) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_32) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_31) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_30) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_29) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_28) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_27) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_26) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_25) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_24) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_23) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_22) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_21) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_20) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_19) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_18) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_17) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_16) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_15) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_14) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_13) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_12) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_11) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_10) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_9) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_8) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_7) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_6) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_5) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_4) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_3) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-1457] Automatically inferring 1WnR RAM type for array 'vec_l'. Use bind_storage pragma to overwrite if needed.
INFO: [SCHED 204-61] Pipelining loop 'Loop 1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 1, loop 'Loop 1'
INFO: [SCHED 204-61] Pipelining loop 'LOOP_VEC1_LOOP_VEC2'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 2, loop 'LOOP_VEC1_LOOP_VEC2'
INFO: [SCHED 204-61] Pipelining loop 'LOOP_COEFS'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 1, loop 'LOOP_COEFS'
INFO: [SCHED 204-61] Pipelining loop 'LOOP_LC1'.
WARNING: [HLS 200-880] The II Violation in module 'hls_linear_combination' (loop 'LOOP_LC1'): Unable to enforce a carried dependence constraint (II = 1, distance = 1, offset = 1) between 'store' operation ('accumulators_0_addr_1_write_ln32', hls_linear_combination/hls_linear_combination.cpp:32) of variable 'add_ln32', hls_linear_combination/hls_linear_combination.cpp:32 on array 'accumulators[0]', hls_linear_combination/hls_linear_combination.cpp:5 and 'load' operation ('accumulators_0_load', hls_linear_combination/hls_linear_combination.cpp:32) on array 'accumulators[0]', hls_linear_combination/hls_linear_combination.cpp:5.
WARNING: [HLS 200-880] The II Violation in module 'hls_linear_combination' (loop 'LOOP_LC1'): Unable to enforce a carried dependence constraint (II = 2, distance = 1, offset = 1) between 'store' operation ('accumulators_0_addr_1_write_ln32', hls_linear_combination/hls_linear_combination.cpp:32) of variable 'add_ln32', hls_linear_combination/hls_linear_combination.cpp:32 on array 'accumulators[0]', hls_linear_combination/hls_linear_combination.cpp:5 and 'load' operation ('accumulators_0_load', hls_linear_combination/hls_linear_combination.cpp:32) on array 'accumulators[0]', hls_linear_combination/hls_linear_combination.cpp:5.
WARNING: [HLS 200-885] Unable to schedule 'load' operation ('vec_l_load_51', hls_linear_combination/hls_linear_combination.cpp:32) on array 'vec_l', hls_linear_combination/hls_linear_combination.cpp:8 due to limited memory ports. Please consider using a memory core with more ports or partitioning the array 'vec_l'.
WARNING: [HLS 200-885] Unable to schedule 'load' operation ('accumulators_0_load_8', hls_linear_combination/hls_linear_combination.cpp:32) on array 'accumulators[0]', hls_linear_combination/hls_linear_combination.cpp:5 due to limited memory ports. Please consider using a memory core with more ports or partitioning the array 'accumulators_0'.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z020-clg484-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -output=/home/osm/Documents/SECT-MAYO/MAYO/HLS/ips/hls_linear_combination.zip
INFO: [HLS 200-1464] Running solution command: config_export -rtl=vhdl
INFO: [HLS 200-1510] Running: set_part xc7z020-clg484-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_export -format ip_catalog -output /home/osm/Documents/SECT-MAYO/MAYO/HLS/ips/hls_linear_combination.zip -rtl vhdl 
INFO: [HLS 200-1510] Running: set_directive_top -name hls_linear_combination hls_linear_combination 
INFO: [HLS 200-1510] Running: set_directive_interface -mode axis -register -register_mode both hls_linear_combination vecs 
INFO: [HLS 200-1510] Running: set_directive_interface -mode axis -register -register_mode both hls_linear_combination coeffs 
INFO: [HLS 200-1510] Running: set_directive_interface -mode axis -register -register_mode both hls_linear_combination out 
INFO: [HLS 200-1510] Running: set_directive_array_partition -dim 1 -factor 16 -type cyclic hls_linear_combination accumulators 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0.01 seconds. CPU system time: 0 seconds. Elapsed time: 0.06 seconds; current allocated memory: 180.550 MB.
INFO: [HLS 200-10] Analyzing design file 'hls_linear_combination/hls_linear_combination.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 11.83 seconds. CPU system time: 0.76 seconds. Elapsed time: 17.98 seconds; current allocated memory: 181.812 MB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-131] Inlining function 'hls::stream<axis_data, 0>::read(axis_data&)' into 'hls::stream<axis_data, 0>::read()' (/opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_stream_39.h:156:9)
INFO: [HLS 214-131] Inlining function 'hls::stream<axis_data, 0>::read()' into 'hls_linear_combination(hls::stream<axis_data, 0>&, hls::stream<axis_data, 0>&, int, hls::stream<axis_data, 0>&)' (hls_linear_combination/hls_linear_combination.cpp:17:20)
INFO: [HLS 214-131] Inlining function 'hls::stream<axis_data, 0>::write(axis_data const&)' into 'hls_linear_combination(hls::stream<axis_data, 0>&, hls::stream<axis_data, 0>&, int, hls::stream<axis_data, 0>&)' (hls_linear_combination/hls_linear_combination.cpp:54:8)
INFO: [HLS 214-131] Inlining function 'hls::stream<axis_data, 0>::read()' into 'hls_linear_combination(hls::stream<axis_data, 0>&, hls::stream<axis_data, 0>&, int, hls::stream<axis_data, 0>&)' (hls_linear_combination/hls_linear_combination.cpp:24:21)
INFO: [HLS 214-131] Inlining function '_llvm.fpga.pack.none.i16.s_struct.axis_datas' into 'hls_linear_combination(hls::stream<axis_data, 0>&, hls::stream<axis_data, 0>&, int, hls::stream<axis_data, 0>&)' (/opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_stream_39.h:174:9)
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 7.58 seconds. CPU system time: 0.5 seconds. Elapsed time: 9.24 seconds; current allocated memory: 183.888 MB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0 seconds; current allocated memory: 183.889 MB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0.1 seconds. CPU system time: 0.02 seconds. Elapsed time: 0.17 seconds; current allocated memory: 189.527 MB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0.2 seconds. CPU system time: 0 seconds. Elapsed time: 0.29 seconds; current allocated memory: 196.250 MB.
INFO: [XFORM 203-510] Pipelining loop 'Loop-2' in function 'hls_linear_combination' automatically.
INFO: [XFORM 203-510] Pipelining loop 'LOOP_VEC2' (/opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_stream_39.h:0) in function 'hls_linear_combination' automatically.
INFO: [XFORM 203-510] Pipelining loop 'LOOP_COEFS' (/opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_stream_39.h:0) in function 'hls_linear_combination' automatically.
INFO: [XFORM 203-510] Pipelining loop 'LOOP_LC1' (hls_linear_combination/hls_linear_combination.cpp:30) in function 'hls_linear_combination' automatically.
INFO: [XFORM 203-510] Pipelining loop 'LOOP_LC2' (hls_linear_combination/hls_linear_combination.cpp:36) in function 'hls_linear_combination' automatically.
INFO: [XFORM 203-510] Pipelining loop 'LOOP_OUT' (hls_linear_combination/hls_linear_combination.cpp:47) in function 'hls_linear_combination' automatically.
INFO: [XFORM 203-502] Unrolling all sub-loops inside loop 'LOOP_LC1' (hls_linear_combination/hls_linear_combination.cpp:30) in function 'hls_linear_combination' for pipelining.
INFO: [HLS 200-489] Unrolling loop 'LOOP_LC12' (hls_linear_combination/hls_linear_combination.cpp:31) in function 'hls_linear_combination' completely with a factor of 60.
INFO: [XFORM 203-101] Partitioning array 'accumulators' (hls_linear_combination/hls_linear_combination.cpp:5) in dimension 1 with a cyclic factor 16.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.0' (hls_linear_combination/hls_linear_combination.cpp:5) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.1' (hls_linear_combination/hls_linear_combination.cpp:5) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.2' (hls_linear_combination/hls_linear_combination.cpp:5) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.3' (hls_linear_combination/hls_linear_combination.cpp:5) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.4' (hls_linear_combination/hls_linear_combination.cpp:5) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.5' (hls_linear_combination/hls_linear_combination.cpp:5) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.6' (hls_linear_combination/hls_linear_combination.cpp:5) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.7' (hls_linear_combination/hls_linear_combination.cpp:5) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.8' (hls_linear_combination/hls_linear_combination.cpp:5) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.9' (hls_linear_combination/hls_linear_combination.cpp:5) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.10' (hls_linear_combination/hls_linear_combination.cpp:5) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.11' (hls_linear_combination/hls_linear_combination.cpp:5) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.12' (hls_linear_combination/hls_linear_combination.cpp:5) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.13' (hls_linear_combination/hls_linear_combination.cpp:5) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.14' (hls_linear_combination/hls_linear_combination.cpp:5) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.15' (hls_linear_combination/hls_linear_combination.cpp:5) completely based on array size.
INFO: [XFORM 203-101] Partitioning array 'accumulators.0' (hls_linear_combination/hls_linear_combination.cpp:5) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.1' (hls_linear_combination/hls_linear_combination.cpp:5) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.2' (hls_linear_combination/hls_linear_combination.cpp:5) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.3' (hls_linear_combination/hls_linear_combination.cpp:5) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.4' (hls_linear_combination/hls_linear_combination.cpp:5) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.5' (hls_linear_combination/hls_linear_combination.cpp:5) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.6' (hls_linear_combination/hls_linear_combination.cpp:5) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.7' (hls_linear_combination/hls_linear_combination.cpp:5) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.8' (hls_linear_combination/hls_linear_combination.cpp:5) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.9' (hls_linear_combination/hls_linear_combination.cpp:5) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.10' (hls_linear_combination/hls_linear_combination.cpp:5) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.11' (hls_linear_combination/hls_linear_combination.cpp:5) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.12' (hls_linear_combination/hls_linear_combination.cpp:5) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.13' (hls_linear_combination/hls_linear_combination.cpp:5) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.14' (hls_linear_combination/hls_linear_combination.cpp:5) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.15' (hls_linear_combination/hls_linear_combination.cpp:5) in dimension 1 completely.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 1.13 seconds. CPU system time: 0.08 seconds. Elapsed time: 1.42 seconds; current allocated memory: 226.042 MB.
INFO: [XFORM 203-541] Flattening a loop nest 'LOOP_VEC1' (hls_linear_combination/hls_linear_combination.cpp:15:22) in function 'hls_linear_combination'.
INFO: [HLS 200-472] Inferring partial write operation for 'vec_l' (hls_linear_combination/hls_linear_combination.cpp:18:17)
INFO: [HLS 200-472] Inferring partial write operation for 'coeffs_l' (hls_linear_combination/hls_linear_combination.cpp:25:15)
INFO: [HLS 200-472] Inferring partial write operation for 'out_l' (hls_linear_combination/hls_linear_combination.cpp:41:14)
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 1.22 seconds. CPU system time: 0 seconds. Elapsed time: 1.49 seconds; current allocated memory: 227.787 MB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'hls_linear_combination' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'hls_linear_combination' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_59) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_58) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_57) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_56) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_55) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_54) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_53) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_52) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_51) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_50) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_49) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_48) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_47) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_46) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_45) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_44) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_43) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_42) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_41) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_40) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_39) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_38) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_37) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_36) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_35) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_34) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_33) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_32) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_31) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_30) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_29) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_28) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_27) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_26) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_25) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_24) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_23) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_22) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_21) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_20) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_19) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_18) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_17) to 3 in order to utilize available DSP registers.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z020-clg484-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -output=/home/osm/Documents/SECT-MAYO/MAYO/HLS/ips/hls_linear_combination.zip
INFO: [HLS 200-1464] Running solution command: config_export -rtl=vhdl
INFO: [HLS 200-1510] Running: set_part xc7z020-clg484-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_export -format ip_catalog -output /home/osm/Documents/SECT-MAYO/MAYO/HLS/ips/hls_linear_combination.zip -rtl vhdl 
INFO: [HLS 200-1510] Running: set_directive_top -name hls_linear_combination hls_linear_combination 
INFO: [HLS 200-1510] Running: set_directive_interface -mode axis -register -register_mode both hls_linear_combination vecs 
INFO: [HLS 200-1510] Running: set_directive_interface -mode axis -register -register_mode both hls_linear_combination coeffs 
INFO: [HLS 200-1510] Running: set_directive_interface -mode axis -register -register_mode both hls_linear_combination out 
INFO: [HLS 200-1510] Running: set_directive_array_partition -type cyclic -factor 16 -dim 1 hls_linear_combination accumulators 
INFO: [HLS 200-1510] Running: set_directive_array_partition -dim 1 -factor 2 -type cyclic hls_linear_combination vec_l 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0.02 seconds. CPU system time: 0 seconds. Elapsed time: 0.08 seconds; current allocated memory: 180.553 MB.
INFO: [HLS 200-10] Analyzing design file 'hls_linear_combination/hls_linear_combination.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 12.25 seconds. CPU system time: 0.82 seconds. Elapsed time: 18.63 seconds; current allocated memory: 181.911 MB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-131] Inlining function 'hls::stream<axis_data, 0>::read(axis_data&)' into 'hls::stream<axis_data, 0>::read()' (/opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_stream_39.h:156:9)
INFO: [HLS 214-131] Inlining function 'hls::stream<axis_data, 0>::read()' into 'hls_linear_combination(hls::stream<axis_data, 0>&, hls::stream<axis_data, 0>&, int, hls::stream<axis_data, 0>&)' (hls_linear_combination/hls_linear_combination.cpp:17:20)
INFO: [HLS 214-131] Inlining function 'hls::stream<axis_data, 0>::write(axis_data const&)' into 'hls_linear_combination(hls::stream<axis_data, 0>&, hls::stream<axis_data, 0>&, int, hls::stream<axis_data, 0>&)' (hls_linear_combination/hls_linear_combination.cpp:54:8)
INFO: [HLS 214-131] Inlining function 'hls::stream<axis_data, 0>::read()' into 'hls_linear_combination(hls::stream<axis_data, 0>&, hls::stream<axis_data, 0>&, int, hls::stream<axis_data, 0>&)' (hls_linear_combination/hls_linear_combination.cpp:24:21)
INFO: [HLS 214-131] Inlining function '_llvm.fpga.pack.none.i16.s_struct.axis_datas' into 'hls_linear_combination(hls::stream<axis_data, 0>&, hls::stream<axis_data, 0>&, int, hls::stream<axis_data, 0>&)' (/opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_stream_39.h:174:9)
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 7.75 seconds. CPU system time: 0.5 seconds. Elapsed time: 9.91 seconds; current allocated memory: 183.936 MB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0.01 seconds. CPU system time: 0 seconds. Elapsed time: 0 seconds; current allocated memory: 183.938 MB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0.1 seconds. CPU system time: 0.02 seconds. Elapsed time: 0.23 seconds; current allocated memory: 189.576 MB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0.2 seconds. CPU system time: 0 seconds. Elapsed time: 0.31 seconds; current allocated memory: 196.298 MB.
INFO: [XFORM 203-510] Pipelining loop 'Loop-2' in function 'hls_linear_combination' automatically.
INFO: [XFORM 203-510] Pipelining loop 'LOOP_VEC2' (/opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_stream_39.h:0) in function 'hls_linear_combination' automatically.
INFO: [XFORM 203-510] Pipelining loop 'LOOP_COEFS' (/opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_stream_39.h:0) in function 'hls_linear_combination' automatically.
INFO: [XFORM 203-510] Pipelining loop 'LOOP_LC1' (hls_linear_combination/hls_linear_combination.cpp:30) in function 'hls_linear_combination' automatically.
INFO: [XFORM 203-510] Pipelining loop 'LOOP_LC2' (hls_linear_combination/hls_linear_combination.cpp:36) in function 'hls_linear_combination' automatically.
INFO: [XFORM 203-510] Pipelining loop 'LOOP_OUT' (hls_linear_combination/hls_linear_combination.cpp:47) in function 'hls_linear_combination' automatically.
INFO: [XFORM 203-502] Unrolling all sub-loops inside loop 'LOOP_LC1' (hls_linear_combination/hls_linear_combination.cpp:30) in function 'hls_linear_combination' for pipelining.
INFO: [HLS 200-489] Unrolling loop 'LOOP_LC12' (hls_linear_combination/hls_linear_combination.cpp:31) in function 'hls_linear_combination' completely with a factor of 60.
INFO: [XFORM 203-101] Partitioning array 'accumulators' (hls_linear_combination/hls_linear_combination.cpp:5) in dimension 1 with a cyclic factor 16.
INFO: [XFORM 203-101] Partitioning array 'vec_l' (hls_linear_combination/hls_linear_combination.cpp:8) in dimension 1 with a cyclic factor 2.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.0' (hls_linear_combination/hls_linear_combination.cpp:5) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.1' (hls_linear_combination/hls_linear_combination.cpp:5) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.2' (hls_linear_combination/hls_linear_combination.cpp:5) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.3' (hls_linear_combination/hls_linear_combination.cpp:5) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.4' (hls_linear_combination/hls_linear_combination.cpp:5) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.5' (hls_linear_combination/hls_linear_combination.cpp:5) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.6' (hls_linear_combination/hls_linear_combination.cpp:5) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.7' (hls_linear_combination/hls_linear_combination.cpp:5) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.8' (hls_linear_combination/hls_linear_combination.cpp:5) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.9' (hls_linear_combination/hls_linear_combination.cpp:5) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.10' (hls_linear_combination/hls_linear_combination.cpp:5) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.11' (hls_linear_combination/hls_linear_combination.cpp:5) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.12' (hls_linear_combination/hls_linear_combination.cpp:5) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.13' (hls_linear_combination/hls_linear_combination.cpp:5) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.14' (hls_linear_combination/hls_linear_combination.cpp:5) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.15' (hls_linear_combination/hls_linear_combination.cpp:5) completely based on array size.
INFO: [XFORM 203-101] Partitioning array 'accumulators.0' (hls_linear_combination/hls_linear_combination.cpp:5) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.1' (hls_linear_combination/hls_linear_combination.cpp:5) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.2' (hls_linear_combination/hls_linear_combination.cpp:5) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.3' (hls_linear_combination/hls_linear_combination.cpp:5) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.4' (hls_linear_combination/hls_linear_combination.cpp:5) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.5' (hls_linear_combination/hls_linear_combination.cpp:5) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.6' (hls_linear_combination/hls_linear_combination.cpp:5) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.7' (hls_linear_combination/hls_linear_combination.cpp:5) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.8' (hls_linear_combination/hls_linear_combination.cpp:5) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.9' (hls_linear_combination/hls_linear_combination.cpp:5) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.10' (hls_linear_combination/hls_linear_combination.cpp:5) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.11' (hls_linear_combination/hls_linear_combination.cpp:5) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.12' (hls_linear_combination/hls_linear_combination.cpp:5) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.13' (hls_linear_combination/hls_linear_combination.cpp:5) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.14' (hls_linear_combination/hls_linear_combination.cpp:5) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.15' (hls_linear_combination/hls_linear_combination.cpp:5) in dimension 1 completely.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (hls_linear_combination/hls_linear_combination.cpp:30:21) in function 'hls_linear_combination'... converting 181 basic blocks.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 1.45 seconds. CPU system time: 0.03 seconds. Elapsed time: 1.82 seconds; current allocated memory: 227.153 MB.
INFO: [XFORM 203-541] Flattening a loop nest 'LOOP_VEC1' (hls_linear_combination/hls_linear_combination.cpp:15:22) in function 'hls_linear_combination'.
INFO: [HLS 200-472] Inferring partial write operation for 'coeffs_l' (hls_linear_combination/hls_linear_combination.cpp:25:15)
INFO: [HLS 200-472] Inferring partial write operation for 'out_l' (hls_linear_combination/hls_linear_combination.cpp:41:14)
INFO: [HLS 200-472] Inferring partial write operation for 'vec_l[0]' (hls_linear_combination/hls_linear_combination.cpp:18:17)
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 1.5 seconds. CPU system time: 0.02 seconds. Elapsed time: 1.87 seconds; current allocated memory: 230.445 MB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'hls_linear_combination' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'hls_linear_combination' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_59) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_58) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_57) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_56) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_55) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_54) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_53) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_52) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_51) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_50) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_49) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_48) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_47) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_46) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_45) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_44) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_43) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_42) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_41) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_40) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_39) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_38) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_37) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_36) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_35) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_34) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_33) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_32) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_31) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_30) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_29) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_28) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_27) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_26) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_25) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_24) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_23) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_22) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_21) to 3 in order to utilize available DSP registers.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z020-clg484-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -output=/home/osm/Documents/SECT-MAYO/MAYO/HLS/ips/hls_linear_combination.zip
INFO: [HLS 200-1464] Running solution command: config_export -rtl=vhdl
INFO: [HLS 200-1510] Running: set_part xc7z020-clg484-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_export -format ip_catalog -output /home/osm/Documents/SECT-MAYO/MAYO/HLS/ips/hls_linear_combination.zip -rtl vhdl 
INFO: [HLS 200-1510] Running: set_directive_top -name hls_linear_combination hls_linear_combination 
INFO: [HLS 200-1510] Running: set_directive_interface -mode axis -register -register_mode both hls_linear_combination vecs 
INFO: [HLS 200-1510] Running: set_directive_interface -mode axis -register -register_mode both hls_linear_combination coeffs 
INFO: [HLS 200-1510] Running: set_directive_interface -mode axis -register -register_mode both hls_linear_combination out 
INFO: [HLS 200-1510] Running: set_directive_array_partition -type cyclic -factor 16 -dim 1 hls_linear_combination accumulators 
INFO: [HLS 200-1510] Running: set_directive_array_partition -dim 2 -factor 2 -type cyclic hls_linear_combination vec_l 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0.02 seconds. CPU system time: 0 seconds. Elapsed time: 0.02 seconds; current allocated memory: 164.553 MB.
INFO: [HLS 200-10] Analyzing design file 'hls_linear_combination/hls_linear_combination.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 12.77 seconds. CPU system time: 0.83 seconds. Elapsed time: 21.99 seconds; current allocated memory: 165.910 MB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-131] Inlining function 'hls::stream<axis_data, 0>::read(axis_data&)' into 'hls::stream<axis_data, 0>::read()' (/opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_stream_39.h:156:9)
INFO: [HLS 214-131] Inlining function 'hls::stream<axis_data, 0>::read()' into 'hls_linear_combination(hls::stream<axis_data, 0>&, hls::stream<axis_data, 0>&, int, hls::stream<axis_data, 0>&)' (hls_linear_combination/hls_linear_combination.cpp:17:20)
INFO: [HLS 214-131] Inlining function 'hls::stream<axis_data, 0>::write(axis_data const&)' into 'hls_linear_combination(hls::stream<axis_data, 0>&, hls::stream<axis_data, 0>&, int, hls::stream<axis_data, 0>&)' (hls_linear_combination/hls_linear_combination.cpp:54:8)
INFO: [HLS 214-131] Inlining function 'hls::stream<axis_data, 0>::read()' into 'hls_linear_combination(hls::stream<axis_data, 0>&, hls::stream<axis_data, 0>&, int, hls::stream<axis_data, 0>&)' (hls_linear_combination/hls_linear_combination.cpp:24:21)
INFO: [HLS 214-131] Inlining function '_llvm.fpga.pack.none.i16.s_struct.axis_datas' into 'hls_linear_combination(hls::stream<axis_data, 0>&, hls::stream<axis_data, 0>&, int, hls::stream<axis_data, 0>&)' (/opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_stream_39.h:174:9)
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 8.6 seconds. CPU system time: 0.57 seconds. Elapsed time: 11.83 seconds; current allocated memory: 167.936 MB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.01 seconds; current allocated memory: 167.937 MB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0.12 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.41 seconds; current allocated memory: 173.575 MB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0.2 seconds. CPU system time: 0.02 seconds. Elapsed time: 0.3 seconds; current allocated memory: 180.297 MB.
INFO: [XFORM 203-510] Pipelining loop 'Loop-2' in function 'hls_linear_combination' automatically.
INFO: [XFORM 203-510] Pipelining loop 'LOOP_VEC2' (/opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_stream_39.h:0) in function 'hls_linear_combination' automatically.
INFO: [XFORM 203-510] Pipelining loop 'LOOP_COEFS' (/opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_stream_39.h:0) in function 'hls_linear_combination' automatically.
INFO: [XFORM 203-510] Pipelining loop 'LOOP_LC1' (hls_linear_combination/hls_linear_combination.cpp:30) in function 'hls_linear_combination' automatically.
INFO: [XFORM 203-510] Pipelining loop 'LOOP_LC2' (hls_linear_combination/hls_linear_combination.cpp:36) in function 'hls_linear_combination' automatically.
INFO: [XFORM 203-510] Pipelining loop 'LOOP_OUT' (hls_linear_combination/hls_linear_combination.cpp:47) in function 'hls_linear_combination' automatically.
INFO: [XFORM 203-502] Unrolling all sub-loops inside loop 'LOOP_LC1' (hls_linear_combination/hls_linear_combination.cpp:30) in function 'hls_linear_combination' for pipelining.
INFO: [HLS 200-489] Unrolling loop 'LOOP_LC12' (hls_linear_combination/hls_linear_combination.cpp:31) in function 'hls_linear_combination' completely with a factor of 60.
INFO: [XFORM 203-101] Partitioning array 'accumulators' (hls_linear_combination/hls_linear_combination.cpp:5) in dimension 1 with a cyclic factor 16.
INFO: [XFORM 203-101] Partitioning array 'vec_l' (hls_linear_combination/hls_linear_combination.cpp:8) in dimension 2 with a cyclic factor 2.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.0' (hls_linear_combination/hls_linear_combination.cpp:5) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.1' (hls_linear_combination/hls_linear_combination.cpp:5) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.2' (hls_linear_combination/hls_linear_combination.cpp:5) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.3' (hls_linear_combination/hls_linear_combination.cpp:5) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.4' (hls_linear_combination/hls_linear_combination.cpp:5) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.5' (hls_linear_combination/hls_linear_combination.cpp:5) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.6' (hls_linear_combination/hls_linear_combination.cpp:5) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.7' (hls_linear_combination/hls_linear_combination.cpp:5) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.8' (hls_linear_combination/hls_linear_combination.cpp:5) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.9' (hls_linear_combination/hls_linear_combination.cpp:5) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.10' (hls_linear_combination/hls_linear_combination.cpp:5) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.11' (hls_linear_combination/hls_linear_combination.cpp:5) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.12' (hls_linear_combination/hls_linear_combination.cpp:5) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.13' (hls_linear_combination/hls_linear_combination.cpp:5) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.14' (hls_linear_combination/hls_linear_combination.cpp:5) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.15' (hls_linear_combination/hls_linear_combination.cpp:5) completely based on array size.
INFO: [XFORM 203-101] Partitioning array 'accumulators.0' (hls_linear_combination/hls_linear_combination.cpp:5) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.1' (hls_linear_combination/hls_linear_combination.cpp:5) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.2' (hls_linear_combination/hls_linear_combination.cpp:5) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.3' (hls_linear_combination/hls_linear_combination.cpp:5) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.4' (hls_linear_combination/hls_linear_combination.cpp:5) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.5' (hls_linear_combination/hls_linear_combination.cpp:5) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.6' (hls_linear_combination/hls_linear_combination.cpp:5) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.7' (hls_linear_combination/hls_linear_combination.cpp:5) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.8' (hls_linear_combination/hls_linear_combination.cpp:5) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.9' (hls_linear_combination/hls_linear_combination.cpp:5) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.10' (hls_linear_combination/hls_linear_combination.cpp:5) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.11' (hls_linear_combination/hls_linear_combination.cpp:5) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.12' (hls_linear_combination/hls_linear_combination.cpp:5) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.13' (hls_linear_combination/hls_linear_combination.cpp:5) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.14' (hls_linear_combination/hls_linear_combination.cpp:5) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.15' (hls_linear_combination/hls_linear_combination.cpp:5) in dimension 1 completely.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 1.19 seconds. CPU system time: 0.04 seconds. Elapsed time: 1.74 seconds; current allocated memory: 210.175 MB.
INFO: [XFORM 203-541] Flattening a loop nest 'LOOP_VEC1' (hls_linear_combination/hls_linear_combination.cpp:15:22) in function 'hls_linear_combination'.
INFO: [HLS 200-472] Inferring partial write operation for 'coeffs_l' (hls_linear_combination/hls_linear_combination.cpp:25:15)
INFO: [HLS 200-472] Inferring partial write operation for 'out_l' (hls_linear_combination/hls_linear_combination.cpp:41:14)
INFO: [HLS 200-472] Inferring partial write operation for 'vec_l[0]' (hls_linear_combination/hls_linear_combination.cpp:18:17)
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 1.16 seconds. CPU system time: 0.01 seconds. Elapsed time: 1.18 seconds; current allocated memory: 211.665 MB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'hls_linear_combination' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'hls_linear_combination' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_59) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_58) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_57) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_56) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_55) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_54) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_53) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_52) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_51) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_50) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_49) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_48) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_47) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_46) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_45) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_44) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_43) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_42) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_41) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_40) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_39) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_38) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_37) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_36) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_35) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_34) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_33) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_32) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_31) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_30) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_29) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_28) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_27) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_26) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_25) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_24) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_23) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_22) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_21) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_20) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_19) to 3 in order to utilize available DSP registers.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z020-clg484-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -output=/home/osm/Documents/SECT-MAYO/MAYO/HLS/ips/hls_linear_combination.zip
INFO: [HLS 200-1464] Running solution command: config_export -rtl=vhdl
INFO: [HLS 200-1510] Running: set_part xc7z020-clg484-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_export -format ip_catalog -output /home/osm/Documents/SECT-MAYO/MAYO/HLS/ips/hls_linear_combination.zip -rtl vhdl 
INFO: [HLS 200-1510] Running: set_directive_top -name hls_linear_combination hls_linear_combination 
INFO: [HLS 200-1510] Running: set_directive_interface -mode axis -register -register_mode both hls_linear_combination vecs 
INFO: [HLS 200-1510] Running: set_directive_interface -mode axis -register -register_mode both hls_linear_combination coeffs 
INFO: [HLS 200-1510] Running: set_directive_interface -mode axis -register -register_mode both hls_linear_combination out 
INFO: [HLS 200-1510] Running: set_directive_array_partition -type cyclic -factor 16 -dim 1 hls_linear_combination accumulators 
INFO: [HLS 200-1510] Running: set_directive_array_partition -dim 0 -factor 4 -type cyclic hls_linear_combination vec_l 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0.02 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.04 seconds; current allocated memory: 180.597 MB.
INFO: [HLS 200-10] Analyzing design file 'hls_linear_combination/hls_linear_combination.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 12.78 seconds. CPU system time: 0.89 seconds. Elapsed time: 22.08 seconds; current allocated memory: 181.869 MB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-131] Inlining function 'hls::stream<axis_data, 0>::read(axis_data&)' into 'hls::stream<axis_data, 0>::read()' (/opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_stream_39.h:156:9)
INFO: [HLS 214-131] Inlining function 'hls::stream<axis_data, 0>::read()' into 'hls_linear_combination(hls::stream<axis_data, 0>&, hls::stream<axis_data, 0>&, int, hls::stream<axis_data, 0>&)' (hls_linear_combination/hls_linear_combination.cpp:17:20)
INFO: [HLS 214-131] Inlining function 'hls::stream<axis_data, 0>::write(axis_data const&)' into 'hls_linear_combination(hls::stream<axis_data, 0>&, hls::stream<axis_data, 0>&, int, hls::stream<axis_data, 0>&)' (hls_linear_combination/hls_linear_combination.cpp:54:8)
INFO: [HLS 214-131] Inlining function 'hls::stream<axis_data, 0>::read()' into 'hls_linear_combination(hls::stream<axis_data, 0>&, hls::stream<axis_data, 0>&, int, hls::stream<axis_data, 0>&)' (hls_linear_combination/hls_linear_combination.cpp:24:21)
INFO: [HLS 214-131] Inlining function '_llvm.fpga.pack.none.i16.s_struct.axis_datas' into 'hls_linear_combination(hls::stream<axis_data, 0>&, hls::stream<axis_data, 0>&, int, hls::stream<axis_data, 0>&)' (/opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_stream_39.h:174:9)
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 7.05 seconds. CPU system time: 0.56 seconds. Elapsed time: 8.79 seconds; current allocated memory: 183.976 MB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0 seconds; current allocated memory: 183.978 MB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0.11 seconds. CPU system time: 0 seconds. Elapsed time: 0.16 seconds; current allocated memory: 189.617 MB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0.17 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.22 seconds; current allocated memory: 196.336 MB.
INFO: [XFORM 203-510] Pipelining loop 'Loop-2' in function 'hls_linear_combination' automatically.
INFO: [XFORM 203-510] Pipelining loop 'LOOP_VEC2' (/opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_stream_39.h:0) in function 'hls_linear_combination' automatically.
INFO: [XFORM 203-510] Pipelining loop 'LOOP_COEFS' (/opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_stream_39.h:0) in function 'hls_linear_combination' automatically.
INFO: [XFORM 203-510] Pipelining loop 'LOOP_LC1' (hls_linear_combination/hls_linear_combination.cpp:30) in function 'hls_linear_combination' automatically.
INFO: [XFORM 203-510] Pipelining loop 'LOOP_LC2' (hls_linear_combination/hls_linear_combination.cpp:36) in function 'hls_linear_combination' automatically.
INFO: [XFORM 203-510] Pipelining loop 'LOOP_OUT' (hls_linear_combination/hls_linear_combination.cpp:47) in function 'hls_linear_combination' automatically.
INFO: [XFORM 203-502] Unrolling all sub-loops inside loop 'LOOP_LC1' (hls_linear_combination/hls_linear_combination.cpp:30) in function 'hls_linear_combination' for pipelining.
INFO: [HLS 200-489] Unrolling loop 'LOOP_LC12' (hls_linear_combination/hls_linear_combination.cpp:31) in function 'hls_linear_combination' completely with a factor of 60.
INFO: [XFORM 203-101] Partitioning array 'accumulators' (hls_linear_combination/hls_linear_combination.cpp:5) in dimension 1 with a cyclic factor 16.
INFO: [XFORM 203-101] Partitioning array 'vec_l' (hls_linear_combination/hls_linear_combination.cpp:8) in dimension 1 with a cyclic factor 4.
INFO: [XFORM 203-101] Partitioning array 'vec_l' (hls_linear_combination/hls_linear_combination.cpp:8) in dimension 2 with a cyclic factor 4.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.0' (hls_linear_combination/hls_linear_combination.cpp:5) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.1' (hls_linear_combination/hls_linear_combination.cpp:5) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.2' (hls_linear_combination/hls_linear_combination.cpp:5) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.3' (hls_linear_combination/hls_linear_combination.cpp:5) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.4' (hls_linear_combination/hls_linear_combination.cpp:5) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.5' (hls_linear_combination/hls_linear_combination.cpp:5) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.6' (hls_linear_combination/hls_linear_combination.cpp:5) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.7' (hls_linear_combination/hls_linear_combination.cpp:5) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.8' (hls_linear_combination/hls_linear_combination.cpp:5) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.9' (hls_linear_combination/hls_linear_combination.cpp:5) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.10' (hls_linear_combination/hls_linear_combination.cpp:5) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.11' (hls_linear_combination/hls_linear_combination.cpp:5) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.12' (hls_linear_combination/hls_linear_combination.cpp:5) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.13' (hls_linear_combination/hls_linear_combination.cpp:5) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.14' (hls_linear_combination/hls_linear_combination.cpp:5) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.15' (hls_linear_combination/hls_linear_combination.cpp:5) completely based on array size.
INFO: [XFORM 203-101] Partitioning array 'accumulators.0' (hls_linear_combination/hls_linear_combination.cpp:5) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.1' (hls_linear_combination/hls_linear_combination.cpp:5) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.2' (hls_linear_combination/hls_linear_combination.cpp:5) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.3' (hls_linear_combination/hls_linear_combination.cpp:5) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.4' (hls_linear_combination/hls_linear_combination.cpp:5) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.5' (hls_linear_combination/hls_linear_combination.cpp:5) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.6' (hls_linear_combination/hls_linear_combination.cpp:5) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.7' (hls_linear_combination/hls_linear_combination.cpp:5) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.8' (hls_linear_combination/hls_linear_combination.cpp:5) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.9' (hls_linear_combination/hls_linear_combination.cpp:5) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.10' (hls_linear_combination/hls_linear_combination.cpp:5) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.11' (hls_linear_combination/hls_linear_combination.cpp:5) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.12' (hls_linear_combination/hls_linear_combination.cpp:5) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.13' (hls_linear_combination/hls_linear_combination.cpp:5) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.14' (hls_linear_combination/hls_linear_combination.cpp:5) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.15' (hls_linear_combination/hls_linear_combination.cpp:5) in dimension 1 completely.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 2.09 seconds. CPU system time: 0.03 seconds. Elapsed time: 2.65 seconds; current allocated memory: 227.162 MB.
INFO: [XFORM 203-541] Flattening a loop nest 'LOOP_VEC1' (hls_linear_combination/hls_linear_combination.cpp:15:22) in function 'hls_linear_combination'.
INFO: [HLS 200-472] Inferring partial write operation for 'coeffs_l' (hls_linear_combination/hls_linear_combination.cpp:25:15)
INFO: [HLS 200-472] Inferring partial write operation for 'out_l' (hls_linear_combination/hls_linear_combination.cpp:41:14)
INFO: [HLS 200-472] Inferring partial write operation for 'vec_l[0][0]' (hls_linear_combination/hls_linear_combination.cpp:18:17)
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 2.87 seconds. CPU system time: 0.03 seconds. Elapsed time: 3.17 seconds; current allocated memory: 232.789 MB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'hls_linear_combination' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'hls_linear_combination' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_59) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_58) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_57) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_56) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_55) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_54) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_53) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_52) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_51) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_50) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_49) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_48) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_47) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_46) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_45) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_44) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_43) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_42) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_41) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_40) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_39) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_38) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_37) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_36) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_35) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_34) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_33) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_32) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_31) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_30) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_29) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_28) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_27) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_26) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_25) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_24) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_23) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_22) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_21) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_20) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_19) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_18) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_17) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_16) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_15) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_14) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_13) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_12) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_11) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_10) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_9) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_8) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_7) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_6) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_5) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_4) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_3) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-1457] Automatically inferring 1WnR RAM type for array 'vec_l_3_3'. Use bind_storage pragma to overwrite if needed.
INFO: [HLS 200-1457] Automatically inferring 1WnR RAM type for array 'vec_l_2_3'. Use bind_storage pragma to overwrite if needed.
INFO: [HLS 200-1457] Automatically inferring 1WnR RAM type for array 'vec_l_1_3'. Use bind_storage pragma to overwrite if needed.
INFO: [HLS 200-1457] Automatically inferring 1WnR RAM type for array 'vec_l_0_3'. Use bind_storage pragma to overwrite if needed.
INFO: [HLS 200-1457] Automatically inferring 1WnR RAM type for array 'vec_l_3_2'. Use bind_storage pragma to overwrite if needed.
INFO: [HLS 200-1457] Automatically inferring 1WnR RAM type for array 'vec_l_2_2'. Use bind_storage pragma to overwrite if needed.
INFO: [HLS 200-1457] Automatically inferring 1WnR RAM type for array 'vec_l_1_2'. Use bind_storage pragma to overwrite if needed.
INFO: [HLS 200-1457] Automatically inferring 1WnR RAM type for array 'vec_l_0_2'. Use bind_storage pragma to overwrite if needed.
INFO: [HLS 200-1457] Automatically inferring 1WnR RAM type for array 'vec_l_3_1'. Use bind_storage pragma to overwrite if needed.
INFO: [HLS 200-1457] Automatically inferring 1WnR RAM type for array 'vec_l_2_1'. Use bind_storage pragma to overwrite if needed.
INFO: [HLS 200-1457] Automatically inferring 1WnR RAM type for array 'vec_l_1_1'. Use bind_storage pragma to overwrite if needed.
INFO: [HLS 200-1457] Automatically inferring 1WnR RAM type for array 'vec_l_0_1'. Use bind_storage pragma to overwrite if needed.
INFO: [HLS 200-1457] Automatically inferring 1WnR RAM type for array 'vec_l_3_0'. Use bind_storage pragma to overwrite if needed.
INFO: [HLS 200-1457] Automatically inferring 1WnR RAM type for array 'vec_l_2_0'. Use bind_storage pragma to overwrite if needed.
INFO: [HLS 200-1457] Automatically inferring 1WnR RAM type for array 'vec_l_1_0'. Use bind_storage pragma to overwrite if needed.
INFO: [HLS 200-1457] Automatically inferring 1WnR RAM type for array 'vec_l_0_0'. Use bind_storage pragma to overwrite if needed.
INFO: [SCHED 204-61] Pipelining loop 'Loop 1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 1, loop 'Loop 1'
INFO: [SCHED 204-61] Pipelining loop 'LOOP_VEC1_LOOP_VEC2'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 2, loop 'LOOP_VEC1_LOOP_VEC2'
INFO: [SCHED 204-61] Pipelining loop 'LOOP_COEFS'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 1, loop 'LOOP_COEFS'
INFO: [SCHED 204-61] Pipelining loop 'LOOP_LC1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 5, loop 'LOOP_LC1'
INFO: [SCHED 204-61] Pipelining loop 'LOOP_LC2'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 37, loop 'LOOP_LC2'
INFO: [SCHED 204-61] Pipelining loop 'LOOP_OUT'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 3, loop 'LOOP_OUT'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 2.98 seconds. CPU system time: 0.17 seconds. Elapsed time: 3.99 seconds; current allocated memory: 237.661 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 1.78 seconds. CPU system time: 0.15 seconds. Elapsed time: 2.04 seconds; current allocated memory: 244.210 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'hls_linear_combination' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Design contains AXI ports. Reset is fixed to synchronous and active low.
INFO: [RTGEN 206-500] Setting interface mode on port 'hls_linear_combination/vecs_V' to 'axis' (register, both mode).
INFO: [RTGEN 206-500] Setting interface mode on port 'hls_linear_combination/coeffs_V' to 'axis' (register, both mode).
INFO: [RTGEN 206-500] Setting interface mode on port 'hls_linear_combination/len' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'hls_linear_combination/out_V' to 'axis' (register, both mode).
INFO: [RTGEN 206-500] Setting interface mode on function 'hls_linear_combination' to 'ap_ctrl_hs'.
INFO: [RTGEN 206-100] Generating core module 'mac_muladd_8ns_8ns_32ns_32_4_1': 60 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mux_32_32_1_1': 4 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mux_42_32_1_1': 12 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mux_464_8_1_1': 60 instance(s).
INFO: [RTGEN 206-100] Generating core module 'urem_32ns_6ns_5_36_1': 1 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'hls_linear_combination'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 2.15 seconds. CPU system time: 0.21 seconds. Elapsed time: 2.57 seconds; current allocated memory: 253.652 MB.
INFO: [RTMG 210-282] Generating pipelined core: 'hls_linear_combination_urem_32ns_6ns_5_36_1_div'
INFO: [RTMG 210-278] Implementing memory 'hls_linear_combination_vec_l_0_0_ram (RAM_1WnR)' using auto RAMs.
INFO: [RTMG 210-278] Implementing memory 'hls_linear_combination_coeffs_l_ram (RAM)' using auto RAMs.
INFO: [RTMG 210-278] Implementing memory 'hls_linear_combination_out_l_ram (RAM)' using auto RAMs.
INFO: [HLS 200-111] Finished Generating all RTL models: CPU user time: 6.27 seconds. CPU system time: 0.36 seconds. Elapsed time: 7.84 seconds; current allocated memory: 280.747 MB.
INFO: [VHDL 208-304] Generating VHDL RTL for hls_linear_combination.
INFO: [VLOG 209-307] Generating Verilog RTL for hls_linear_combination.
INFO: [HLS 200-790] **** Loop Constraint Status: All loop constraints were satisfied.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z020-clg484-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -output=/home/osm/Documents/SECT-MAYO/MAYO/HLS/ips/hls_linear_combination.zip
INFO: [HLS 200-1464] Running solution command: config_export -rtl=vhdl
INFO: [HLS 200-1510] Running: set_part xc7z020-clg484-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_export -format ip_catalog -output /home/osm/Documents/SECT-MAYO/MAYO/HLS/ips/hls_linear_combination.zip -rtl vhdl 
INFO: [HLS 200-1510] Running: set_directive_top -name hls_linear_combination hls_linear_combination 
INFO: [HLS 200-1510] Running: set_directive_interface -mode axis -register -register_mode both hls_linear_combination vecs 
INFO: [HLS 200-1510] Running: set_directive_interface -mode axis -register -register_mode both hls_linear_combination coeffs 
INFO: [HLS 200-1510] Running: set_directive_interface -mode axis -register -register_mode both hls_linear_combination out 
INFO: [HLS 200-1510] Running: set_directive_array_partition -type cyclic -factor 16 -dim 1 hls_linear_combination accumulators 
INFO: [HLS 200-1510] Running: set_directive_array_partition -dim 1 -factor 2 -type cyclic hls_linear_combination vec_l 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0.01 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.03 seconds; current allocated memory: 180.588 MB.
INFO: [HLS 200-10] Analyzing design file 'hls_linear_combination/hls_linear_combination.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 12.56 seconds. CPU system time: 0.8 seconds. Elapsed time: 21.93 seconds; current allocated memory: 181.869 MB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-131] Inlining function 'hls::stream<axis_data, 0>::read(axis_data&)' into 'hls::stream<axis_data, 0>::read()' (/opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_stream_39.h:156:9)
INFO: [HLS 214-131] Inlining function 'hls::stream<axis_data, 0>::read()' into 'hls_linear_combination(hls::stream<axis_data, 0>&, hls::stream<axis_data, 0>&, int, hls::stream<axis_data, 0>&)' (hls_linear_combination/hls_linear_combination.cpp:17:20)
INFO: [HLS 214-131] Inlining function 'hls::stream<axis_data, 0>::write(axis_data const&)' into 'hls_linear_combination(hls::stream<axis_data, 0>&, hls::stream<axis_data, 0>&, int, hls::stream<axis_data, 0>&)' (hls_linear_combination/hls_linear_combination.cpp:54:8)
INFO: [HLS 214-131] Inlining function 'hls::stream<axis_data, 0>::read()' into 'hls_linear_combination(hls::stream<axis_data, 0>&, hls::stream<axis_data, 0>&, int, hls::stream<axis_data, 0>&)' (hls_linear_combination/hls_linear_combination.cpp:24:21)
INFO: [HLS 214-131] Inlining function '_llvm.fpga.pack.none.i16.s_struct.axis_datas' into 'hls_linear_combination(hls::stream<axis_data, 0>&, hls::stream<axis_data, 0>&, int, hls::stream<axis_data, 0>&)' (/opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_stream_39.h:174:9)
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 7.46 seconds. CPU system time: 0.55 seconds. Elapsed time: 9.6 seconds; current allocated memory: 183.977 MB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.01 seconds; current allocated memory: 183.978 MB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0.1 seconds. CPU system time: 0.02 seconds. Elapsed time: 0.23 seconds; current allocated memory: 189.616 MB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0.19 seconds. CPU system time: 0 seconds. Elapsed time: 0.25 seconds; current allocated memory: 196.339 MB.
INFO: [XFORM 203-510] Pipelining loop 'Loop-2' in function 'hls_linear_combination' automatically.
INFO: [XFORM 203-510] Pipelining loop 'LOOP_VEC2' (/opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_stream_39.h:0) in function 'hls_linear_combination' automatically.
INFO: [XFORM 203-510] Pipelining loop 'LOOP_COEFS' (/opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_stream_39.h:0) in function 'hls_linear_combination' automatically.
INFO: [XFORM 203-510] Pipelining loop 'LOOP_LC1' (hls_linear_combination/hls_linear_combination.cpp:30) in function 'hls_linear_combination' automatically.
INFO: [XFORM 203-510] Pipelining loop 'LOOP_LC2' (hls_linear_combination/hls_linear_combination.cpp:36) in function 'hls_linear_combination' automatically.
INFO: [XFORM 203-510] Pipelining loop 'LOOP_OUT' (hls_linear_combination/hls_linear_combination.cpp:47) in function 'hls_linear_combination' automatically.
INFO: [XFORM 203-502] Unrolling all sub-loops inside loop 'LOOP_LC1' (hls_linear_combination/hls_linear_combination.cpp:30) in function 'hls_linear_combination' for pipelining.
INFO: [HLS 200-489] Unrolling loop 'LOOP_LC12' (hls_linear_combination/hls_linear_combination.cpp:31) in function 'hls_linear_combination' completely with a factor of 60.
INFO: [XFORM 203-101] Partitioning array 'accumulators' (hls_linear_combination/hls_linear_combination.cpp:5) in dimension 1 with a cyclic factor 16.
INFO: [XFORM 203-101] Partitioning array 'vec_l' (hls_linear_combination/hls_linear_combination.cpp:8) in dimension 1 with a cyclic factor 2.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.0' (hls_linear_combination/hls_linear_combination.cpp:5) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.1' (hls_linear_combination/hls_linear_combination.cpp:5) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.2' (hls_linear_combination/hls_linear_combination.cpp:5) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.3' (hls_linear_combination/hls_linear_combination.cpp:5) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.4' (hls_linear_combination/hls_linear_combination.cpp:5) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.5' (hls_linear_combination/hls_linear_combination.cpp:5) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.6' (hls_linear_combination/hls_linear_combination.cpp:5) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.7' (hls_linear_combination/hls_linear_combination.cpp:5) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.8' (hls_linear_combination/hls_linear_combination.cpp:5) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.9' (hls_linear_combination/hls_linear_combination.cpp:5) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.10' (hls_linear_combination/hls_linear_combination.cpp:5) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.11' (hls_linear_combination/hls_linear_combination.cpp:5) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.12' (hls_linear_combination/hls_linear_combination.cpp:5) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.13' (hls_linear_combination/hls_linear_combination.cpp:5) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.14' (hls_linear_combination/hls_linear_combination.cpp:5) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.15' (hls_linear_combination/hls_linear_combination.cpp:5) completely based on array size.
INFO: [XFORM 203-101] Partitioning array 'accumulators.0' (hls_linear_combination/hls_linear_combination.cpp:5) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.1' (hls_linear_combination/hls_linear_combination.cpp:5) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.2' (hls_linear_combination/hls_linear_combination.cpp:5) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.3' (hls_linear_combination/hls_linear_combination.cpp:5) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.4' (hls_linear_combination/hls_linear_combination.cpp:5) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.5' (hls_linear_combination/hls_linear_combination.cpp:5) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.6' (hls_linear_combination/hls_linear_combination.cpp:5) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.7' (hls_linear_combination/hls_linear_combination.cpp:5) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.8' (hls_linear_combination/hls_linear_combination.cpp:5) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.9' (hls_linear_combination/hls_linear_combination.cpp:5) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.10' (hls_linear_combination/hls_linear_combination.cpp:5) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.11' (hls_linear_combination/hls_linear_combination.cpp:5) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.12' (hls_linear_combination/hls_linear_combination.cpp:5) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.13' (hls_linear_combination/hls_linear_combination.cpp:5) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.14' (hls_linear_combination/hls_linear_combination.cpp:5) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.15' (hls_linear_combination/hls_linear_combination.cpp:5) in dimension 1 completely.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (hls_linear_combination/hls_linear_combination.cpp:30:21) in function 'hls_linear_combination'... converting 181 basic blocks.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 1.42 seconds. CPU system time: 0.05 seconds. Elapsed time: 1.73 seconds; current allocated memory: 227.182 MB.
INFO: [XFORM 203-541] Flattening a loop nest 'LOOP_VEC1' (hls_linear_combination/hls_linear_combination.cpp:15:22) in function 'hls_linear_combination'.
INFO: [HLS 200-472] Inferring partial write operation for 'coeffs_l' (hls_linear_combination/hls_linear_combination.cpp:25:15)
INFO: [HLS 200-472] Inferring partial write operation for 'out_l' (hls_linear_combination/hls_linear_combination.cpp:41:14)
INFO: [HLS 200-472] Inferring partial write operation for 'vec_l[0]' (hls_linear_combination/hls_linear_combination.cpp:18:17)
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 1.31 seconds. CPU system time: 0.02 seconds. Elapsed time: 1.44 seconds; current allocated memory: 230.510 MB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'hls_linear_combination' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'hls_linear_combination' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_59) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_58) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_57) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_56) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_55) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_54) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_53) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_52) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_51) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_50) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_49) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_48) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_47) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_46) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_45) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_44) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_43) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_42) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_41) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_40) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_39) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_38) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_37) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_36) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_35) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_34) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_33) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_32) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_31) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_30) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_29) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_28) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_27) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_26) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_25) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_24) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_23) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_22) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_21) to 3 in order to utilize available DSP registers.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z020-clg484-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -output=/home/osm/Documents/SECT-MAYO/MAYO/HLS/ips/hls_linear_combination.zip
INFO: [HLS 200-1464] Running solution command: config_export -rtl=vhdl
INFO: [HLS 200-1510] Running: set_part xc7z020-clg484-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_export -format ip_catalog -output /home/osm/Documents/SECT-MAYO/MAYO/HLS/ips/hls_linear_combination.zip -rtl vhdl 
INFO: [HLS 200-1510] Running: set_directive_top -name hls_linear_combination hls_linear_combination 
INFO: [HLS 200-1510] Running: set_directive_interface -mode axis -register -register_mode both hls_linear_combination vecs 
INFO: [HLS 200-1510] Running: set_directive_interface -mode axis -register -register_mode both hls_linear_combination coeffs 
INFO: [HLS 200-1510] Running: set_directive_interface -mode axis -register -register_mode both hls_linear_combination out 
INFO: [HLS 200-1510] Running: set_directive_array_partition -type cyclic -factor 16 -dim 1 hls_linear_combination accumulators 
INFO: [HLS 200-1510] Running: set_directive_array_partition -dim 1 -factor 6 -type cyclic hls_linear_combination vec_l 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0.02 seconds. CPU system time: 0 seconds. Elapsed time: 0.03 seconds; current allocated memory: 180.597 MB.
INFO: [HLS 200-10] Analyzing design file 'hls_linear_combination/hls_linear_combination.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 12.69 seconds. CPU system time: 1.03 seconds. Elapsed time: 21.28 seconds; current allocated memory: 181.869 MB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-131] Inlining function 'hls::stream<axis_data, 0>::read(axis_data&)' into 'hls::stream<axis_data, 0>::read()' (/opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_stream_39.h:156:9)
INFO: [HLS 214-131] Inlining function 'hls::stream<axis_data, 0>::read()' into 'hls_linear_combination(hls::stream<axis_data, 0>&, hls::stream<axis_data, 0>&, int, hls::stream<axis_data, 0>&)' (hls_linear_combination/hls_linear_combination.cpp:17:20)
INFO: [HLS 214-131] Inlining function 'hls::stream<axis_data, 0>::write(axis_data const&)' into 'hls_linear_combination(hls::stream<axis_data, 0>&, hls::stream<axis_data, 0>&, int, hls::stream<axis_data, 0>&)' (hls_linear_combination/hls_linear_combination.cpp:54:8)
INFO: [HLS 214-131] Inlining function 'hls::stream<axis_data, 0>::read()' into 'hls_linear_combination(hls::stream<axis_data, 0>&, hls::stream<axis_data, 0>&, int, hls::stream<axis_data, 0>&)' (hls_linear_combination/hls_linear_combination.cpp:24:21)
INFO: [HLS 214-131] Inlining function '_llvm.fpga.pack.none.i16.s_struct.axis_datas' into 'hls_linear_combination(hls::stream<axis_data, 0>&, hls::stream<axis_data, 0>&, int, hls::stream<axis_data, 0>&)' (/opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_stream_39.h:174:9)
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 7.56 seconds. CPU system time: 0.56 seconds. Elapsed time: 9.97 seconds; current allocated memory: 183.976 MB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0 seconds; current allocated memory: 183.977 MB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0.09 seconds. CPU system time: 0.02 seconds. Elapsed time: 0.19 seconds; current allocated memory: 189.615 MB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0.19 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.26 seconds; current allocated memory: 196.338 MB.
INFO: [XFORM 203-510] Pipelining loop 'Loop-2' in function 'hls_linear_combination' automatically.
INFO: [XFORM 203-510] Pipelining loop 'LOOP_VEC2' (/opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_stream_39.h:0) in function 'hls_linear_combination' automatically.
INFO: [XFORM 203-510] Pipelining loop 'LOOP_COEFS' (/opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_stream_39.h:0) in function 'hls_linear_combination' automatically.
INFO: [XFORM 203-510] Pipelining loop 'LOOP_LC1' (hls_linear_combination/hls_linear_combination.cpp:30) in function 'hls_linear_combination' automatically.
INFO: [XFORM 203-510] Pipelining loop 'LOOP_LC2' (hls_linear_combination/hls_linear_combination.cpp:36) in function 'hls_linear_combination' automatically.
INFO: [XFORM 203-510] Pipelining loop 'LOOP_OUT' (hls_linear_combination/hls_linear_combination.cpp:47) in function 'hls_linear_combination' automatically.
INFO: [XFORM 203-502] Unrolling all sub-loops inside loop 'LOOP_LC1' (hls_linear_combination/hls_linear_combination.cpp:30) in function 'hls_linear_combination' for pipelining.
INFO: [HLS 200-489] Unrolling loop 'LOOP_LC12' (hls_linear_combination/hls_linear_combination.cpp:31) in function 'hls_linear_combination' completely with a factor of 60.
INFO: [XFORM 203-101] Partitioning array 'accumulators' (hls_linear_combination/hls_linear_combination.cpp:5) in dimension 1 with a cyclic factor 16.
INFO: [XFORM 203-101] Partitioning array 'vec_l' (hls_linear_combination/hls_linear_combination.cpp:8) in dimension 1 with a cyclic factor 6.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.0' (hls_linear_combination/hls_linear_combination.cpp:5) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.1' (hls_linear_combination/hls_linear_combination.cpp:5) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.2' (hls_linear_combination/hls_linear_combination.cpp:5) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.3' (hls_linear_combination/hls_linear_combination.cpp:5) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.4' (hls_linear_combination/hls_linear_combination.cpp:5) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.5' (hls_linear_combination/hls_linear_combination.cpp:5) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.6' (hls_linear_combination/hls_linear_combination.cpp:5) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.7' (hls_linear_combination/hls_linear_combination.cpp:5) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.8' (hls_linear_combination/hls_linear_combination.cpp:5) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.9' (hls_linear_combination/hls_linear_combination.cpp:5) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.10' (hls_linear_combination/hls_linear_combination.cpp:5) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.11' (hls_linear_combination/hls_linear_combination.cpp:5) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.12' (hls_linear_combination/hls_linear_combination.cpp:5) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.13' (hls_linear_combination/hls_linear_combination.cpp:5) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.14' (hls_linear_combination/hls_linear_combination.cpp:5) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.15' (hls_linear_combination/hls_linear_combination.cpp:5) completely based on array size.
INFO: [XFORM 203-101] Partitioning array 'accumulators.0' (hls_linear_combination/hls_linear_combination.cpp:5) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.1' (hls_linear_combination/hls_linear_combination.cpp:5) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.2' (hls_linear_combination/hls_linear_combination.cpp:5) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.3' (hls_linear_combination/hls_linear_combination.cpp:5) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.4' (hls_linear_combination/hls_linear_combination.cpp:5) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.5' (hls_linear_combination/hls_linear_combination.cpp:5) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.6' (hls_linear_combination/hls_linear_combination.cpp:5) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.7' (hls_linear_combination/hls_linear_combination.cpp:5) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.8' (hls_linear_combination/hls_linear_combination.cpp:5) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.9' (hls_linear_combination/hls_linear_combination.cpp:5) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.10' (hls_linear_combination/hls_linear_combination.cpp:5) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.11' (hls_linear_combination/hls_linear_combination.cpp:5) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.12' (hls_linear_combination/hls_linear_combination.cpp:5) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.13' (hls_linear_combination/hls_linear_combination.cpp:5) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.14' (hls_linear_combination/hls_linear_combination.cpp:5) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.15' (hls_linear_combination/hls_linear_combination.cpp:5) in dimension 1 completely.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 2.07 seconds. CPU system time: 0.03 seconds. Elapsed time: 2.34 seconds; current allocated memory: 227.371 MB.
INFO: [XFORM 203-541] Flattening a loop nest 'LOOP_VEC1' (hls_linear_combination/hls_linear_combination.cpp:15:22) in function 'hls_linear_combination'.
INFO: [HLS 200-472] Inferring partial write operation for 'coeffs_l' (hls_linear_combination/hls_linear_combination.cpp:25:15)
INFO: [HLS 200-472] Inferring partial write operation for 'out_l' (hls_linear_combination/hls_linear_combination.cpp:41:14)
INFO: [HLS 200-472] Inferring partial write operation for 'vec_l[0]' (hls_linear_combination/hls_linear_combination.cpp:18:17)
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 3.38 seconds. CPU system time: 0.03 seconds. Elapsed time: 3.96 seconds; current allocated memory: 234.154 MB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'hls_linear_combination' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'hls_linear_combination' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_59) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_58) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_57) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_56) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_55) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_54) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_53) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_52) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_51) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_50) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_49) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_48) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_47) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_46) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_45) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_44) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_43) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_42) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_41) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_40) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_39) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_38) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_37) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_36) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_35) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_34) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_33) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_32) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_31) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_30) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_29) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_28) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_27) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_26) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_25) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_24) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_23) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_22) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_21) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_20) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_19) to 3 in order to utilize available DSP registers.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z020-clg484-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -output=/home/osm/Documents/SECT-MAYO/MAYO/HLS/ips/hls_linear_combination.zip
INFO: [HLS 200-1464] Running solution command: config_export -rtl=vhdl
INFO: [HLS 200-1510] Running: set_part xc7z020-clg484-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_export -format ip_catalog -output /home/osm/Documents/SECT-MAYO/MAYO/HLS/ips/hls_linear_combination.zip -rtl vhdl 
INFO: [HLS 200-1510] Running: set_directive_top -name hls_linear_combination hls_linear_combination 
INFO: [HLS 200-1510] Running: set_directive_interface -mode axis -register -register_mode both hls_linear_combination vecs 
INFO: [HLS 200-1510] Running: set_directive_interface -mode axis -register -register_mode both hls_linear_combination coeffs 
INFO: [HLS 200-1510] Running: set_directive_interface -mode axis -register -register_mode both hls_linear_combination out 
INFO: [HLS 200-1510] Running: set_directive_array_partition -type cyclic -factor 16 -dim 1 hls_linear_combination accumulators 
INFO: [HLS 200-1510] Running: set_directive_array_partition -dim 2 -factor 6 -type cyclic hls_linear_combination vec_l 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0.01 seconds. CPU system time: 0 seconds. Elapsed time: 0.02 seconds; current allocated memory: 180.588 MB.
INFO: [HLS 200-10] Analyzing design file 'hls_linear_combination/hls_linear_combination.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 11.28 seconds. CPU system time: 0.78 seconds. Elapsed time: 16.08 seconds; current allocated memory: 181.869 MB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-131] Inlining function 'hls::stream<axis_data, 0>::read(axis_data&)' into 'hls::stream<axis_data, 0>::read()' (/opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_stream_39.h:156:9)
INFO: [HLS 214-131] Inlining function 'hls::stream<axis_data, 0>::read()' into 'hls_linear_combination(hls::stream<axis_data, 0>&, hls::stream<axis_data, 0>&, int, hls::stream<axis_data, 0>&)' (hls_linear_combination/hls_linear_combination.cpp:17:20)
INFO: [HLS 214-131] Inlining function 'hls::stream<axis_data, 0>::write(axis_data const&)' into 'hls_linear_combination(hls::stream<axis_data, 0>&, hls::stream<axis_data, 0>&, int, hls::stream<axis_data, 0>&)' (hls_linear_combination/hls_linear_combination.cpp:54:8)
INFO: [HLS 214-131] Inlining function 'hls::stream<axis_data, 0>::read()' into 'hls_linear_combination(hls::stream<axis_data, 0>&, hls::stream<axis_data, 0>&, int, hls::stream<axis_data, 0>&)' (hls_linear_combination/hls_linear_combination.cpp:24:21)
INFO: [HLS 214-131] Inlining function '_llvm.fpga.pack.none.i16.s_struct.axis_datas' into 'hls_linear_combination(hls::stream<axis_data, 0>&, hls::stream<axis_data, 0>&, int, hls::stream<axis_data, 0>&)' (/opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_stream_39.h:174:9)
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 7.21 seconds. CPU system time: 0.49 seconds. Elapsed time: 8.62 seconds; current allocated memory: 183.977 MB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0 seconds; current allocated memory: 183.978 MB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0.09 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.1 seconds; current allocated memory: 189.617 MB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0.2 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.21 seconds; current allocated memory: 196.339 MB.
INFO: [XFORM 203-510] Pipelining loop 'Loop-2' in function 'hls_linear_combination' automatically.
INFO: [XFORM 203-510] Pipelining loop 'LOOP_VEC2' (/opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_stream_39.h:0) in function 'hls_linear_combination' automatically.
INFO: [XFORM 203-510] Pipelining loop 'LOOP_COEFS' (/opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_stream_39.h:0) in function 'hls_linear_combination' automatically.
INFO: [XFORM 203-510] Pipelining loop 'LOOP_LC1' (hls_linear_combination/hls_linear_combination.cpp:30) in function 'hls_linear_combination' automatically.
INFO: [XFORM 203-510] Pipelining loop 'LOOP_LC2' (hls_linear_combination/hls_linear_combination.cpp:36) in function 'hls_linear_combination' automatically.
INFO: [XFORM 203-510] Pipelining loop 'LOOP_OUT' (hls_linear_combination/hls_linear_combination.cpp:47) in function 'hls_linear_combination' automatically.
INFO: [XFORM 203-502] Unrolling all sub-loops inside loop 'LOOP_LC1' (hls_linear_combination/hls_linear_combination.cpp:30) in function 'hls_linear_combination' for pipelining.
INFO: [HLS 200-489] Unrolling loop 'LOOP_LC12' (hls_linear_combination/hls_linear_combination.cpp:31) in function 'hls_linear_combination' completely with a factor of 60.
INFO: [XFORM 203-101] Partitioning array 'accumulators' (hls_linear_combination/hls_linear_combination.cpp:5) in dimension 1 with a cyclic factor 16.
INFO: [XFORM 203-101] Partitioning array 'vec_l' (hls_linear_combination/hls_linear_combination.cpp:8) in dimension 2 with a cyclic factor 6.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.0' (hls_linear_combination/hls_linear_combination.cpp:5) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.1' (hls_linear_combination/hls_linear_combination.cpp:5) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.2' (hls_linear_combination/hls_linear_combination.cpp:5) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.3' (hls_linear_combination/hls_linear_combination.cpp:5) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.4' (hls_linear_combination/hls_linear_combination.cpp:5) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.5' (hls_linear_combination/hls_linear_combination.cpp:5) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.6' (hls_linear_combination/hls_linear_combination.cpp:5) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.7' (hls_linear_combination/hls_linear_combination.cpp:5) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.8' (hls_linear_combination/hls_linear_combination.cpp:5) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.9' (hls_linear_combination/hls_linear_combination.cpp:5) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.10' (hls_linear_combination/hls_linear_combination.cpp:5) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.11' (hls_linear_combination/hls_linear_combination.cpp:5) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.12' (hls_linear_combination/hls_linear_combination.cpp:5) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.13' (hls_linear_combination/hls_linear_combination.cpp:5) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.14' (hls_linear_combination/hls_linear_combination.cpp:5) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.15' (hls_linear_combination/hls_linear_combination.cpp:5) completely based on array size.
INFO: [XFORM 203-101] Partitioning array 'accumulators.0' (hls_linear_combination/hls_linear_combination.cpp:5) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.1' (hls_linear_combination/hls_linear_combination.cpp:5) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.2' (hls_linear_combination/hls_linear_combination.cpp:5) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.3' (hls_linear_combination/hls_linear_combination.cpp:5) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.4' (hls_linear_combination/hls_linear_combination.cpp:5) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.5' (hls_linear_combination/hls_linear_combination.cpp:5) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.6' (hls_linear_combination/hls_linear_combination.cpp:5) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.7' (hls_linear_combination/hls_linear_combination.cpp:5) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.8' (hls_linear_combination/hls_linear_combination.cpp:5) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.9' (hls_linear_combination/hls_linear_combination.cpp:5) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.10' (hls_linear_combination/hls_linear_combination.cpp:5) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.11' (hls_linear_combination/hls_linear_combination.cpp:5) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.12' (hls_linear_combination/hls_linear_combination.cpp:5) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.13' (hls_linear_combination/hls_linear_combination.cpp:5) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.14' (hls_linear_combination/hls_linear_combination.cpp:5) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.15' (hls_linear_combination/hls_linear_combination.cpp:5) in dimension 1 completely.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 0.99 seconds. CPU system time: 0.04 seconds. Elapsed time: 1.16 seconds; current allocated memory: 226.243 MB.
INFO: [XFORM 203-541] Flattening a loop nest 'LOOP_VEC1' (hls_linear_combination/hls_linear_combination.cpp:15:22) in function 'hls_linear_combination'.
INFO: [HLS 200-472] Inferring partial write operation for 'coeffs_l' (hls_linear_combination/hls_linear_combination.cpp:25:15)
INFO: [HLS 200-472] Inferring partial write operation for 'out_l' (hls_linear_combination/hls_linear_combination.cpp:41:14)
INFO: [HLS 200-472] Inferring partial write operation for 'vec_l[0]' (hls_linear_combination/hls_linear_combination.cpp:18:17)
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 0.98 seconds. CPU system time: 0.01 seconds. Elapsed time: 1.01 seconds; current allocated memory: 227.619 MB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'hls_linear_combination' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'hls_linear_combination' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_59) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_58) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_57) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_56) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_55) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_54) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_53) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_52) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_51) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_50) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_49) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_48) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_47) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_46) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_45) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_44) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_43) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_42) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_41) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_40) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_39) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_38) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_37) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_36) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_35) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_34) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_33) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_32) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_31) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_30) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_29) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_28) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_27) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_26) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_25) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_24) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_23) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_22) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_21) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_20) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_19) to 3 in order to utilize available DSP registers.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z020-clg484-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -output=/home/osm/Documents/SECT-MAYO/MAYO/HLS/ips/hls_linear_combination.zip
INFO: [HLS 200-1464] Running solution command: config_export -rtl=vhdl
INFO: [HLS 200-1510] Running: set_part xc7z020-clg484-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_export -format ip_catalog -output /home/osm/Documents/SECT-MAYO/MAYO/HLS/ips/hls_linear_combination.zip -rtl vhdl 
INFO: [HLS 200-1510] Running: set_directive_top -name hls_linear_combination hls_linear_combination 
INFO: [HLS 200-1510] Running: set_directive_interface -mode axis -register -register_mode both hls_linear_combination vecs 
INFO: [HLS 200-1510] Running: set_directive_interface -mode axis -register -register_mode both hls_linear_combination coeffs 
INFO: [HLS 200-1510] Running: set_directive_interface -mode axis -register -register_mode both hls_linear_combination out 
INFO: [HLS 200-1510] Running: set_directive_array_partition -type cyclic -factor 16 -dim 1 hls_linear_combination accumulators 
INFO: [HLS 200-1510] Running: set_directive_array_partition -dim 2 -factor 3 -type cyclic hls_linear_combination vec_l 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0.01 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.01 seconds; current allocated memory: 180.588 MB.
INFO: [HLS 200-10] Analyzing design file 'hls_linear_combination/hls_linear_combination.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 12.42 seconds. CPU system time: 0.85 seconds. Elapsed time: 21.06 seconds; current allocated memory: 181.869 MB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-131] Inlining function 'hls::stream<axis_data, 0>::read(axis_data&)' into 'hls::stream<axis_data, 0>::read()' (/opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_stream_39.h:156:9)
INFO: [HLS 214-131] Inlining function 'hls::stream<axis_data, 0>::read()' into 'hls_linear_combination(hls::stream<axis_data, 0>&, hls::stream<axis_data, 0>&, int, hls::stream<axis_data, 0>&)' (hls_linear_combination/hls_linear_combination.cpp:17:20)
INFO: [HLS 214-131] Inlining function 'hls::stream<axis_data, 0>::write(axis_data const&)' into 'hls_linear_combination(hls::stream<axis_data, 0>&, hls::stream<axis_data, 0>&, int, hls::stream<axis_data, 0>&)' (hls_linear_combination/hls_linear_combination.cpp:54:8)
INFO: [HLS 214-131] Inlining function 'hls::stream<axis_data, 0>::read()' into 'hls_linear_combination(hls::stream<axis_data, 0>&, hls::stream<axis_data, 0>&, int, hls::stream<axis_data, 0>&)' (hls_linear_combination/hls_linear_combination.cpp:24:21)
INFO: [HLS 214-131] Inlining function '_llvm.fpga.pack.none.i16.s_struct.axis_datas' into 'hls_linear_combination(hls::stream<axis_data, 0>&, hls::stream<axis_data, 0>&, int, hls::stream<axis_data, 0>&)' (/opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_stream_39.h:174:9)
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 8.47 seconds. CPU system time: 0.63 seconds. Elapsed time: 12.09 seconds; current allocated memory: 183.977 MB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0 seconds; current allocated memory: 183.978 MB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0.11 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.18 seconds; current allocated memory: 189.616 MB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0.2 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.32 seconds; current allocated memory: 196.341 MB.
INFO: [XFORM 203-510] Pipelining loop 'Loop-2' in function 'hls_linear_combination' automatically.
INFO: [XFORM 203-510] Pipelining loop 'LOOP_VEC2' (/opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_stream_39.h:0) in function 'hls_linear_combination' automatically.
INFO: [XFORM 203-510] Pipelining loop 'LOOP_COEFS' (/opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_stream_39.h:0) in function 'hls_linear_combination' automatically.
INFO: [XFORM 203-510] Pipelining loop 'LOOP_LC1' (hls_linear_combination/hls_linear_combination.cpp:30) in function 'hls_linear_combination' automatically.
INFO: [XFORM 203-510] Pipelining loop 'LOOP_LC2' (hls_linear_combination/hls_linear_combination.cpp:36) in function 'hls_linear_combination' automatically.
INFO: [XFORM 203-510] Pipelining loop 'LOOP_OUT' (hls_linear_combination/hls_linear_combination.cpp:47) in function 'hls_linear_combination' automatically.
INFO: [XFORM 203-502] Unrolling all sub-loops inside loop 'LOOP_LC1' (hls_linear_combination/hls_linear_combination.cpp:30) in function 'hls_linear_combination' for pipelining.
INFO: [HLS 200-489] Unrolling loop 'LOOP_LC12' (hls_linear_combination/hls_linear_combination.cpp:31) in function 'hls_linear_combination' completely with a factor of 60.
INFO: [XFORM 203-101] Partitioning array 'accumulators' (hls_linear_combination/hls_linear_combination.cpp:5) in dimension 1 with a cyclic factor 16.
INFO: [XFORM 203-101] Partitioning array 'vec_l' (hls_linear_combination/hls_linear_combination.cpp:8) in dimension 2 with a cyclic factor 3.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.0' (hls_linear_combination/hls_linear_combination.cpp:5) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.1' (hls_linear_combination/hls_linear_combination.cpp:5) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.2' (hls_linear_combination/hls_linear_combination.cpp:5) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.3' (hls_linear_combination/hls_linear_combination.cpp:5) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.4' (hls_linear_combination/hls_linear_combination.cpp:5) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.5' (hls_linear_combination/hls_linear_combination.cpp:5) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.6' (hls_linear_combination/hls_linear_combination.cpp:5) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.7' (hls_linear_combination/hls_linear_combination.cpp:5) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.8' (hls_linear_combination/hls_linear_combination.cpp:5) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.9' (hls_linear_combination/hls_linear_combination.cpp:5) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.10' (hls_linear_combination/hls_linear_combination.cpp:5) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.11' (hls_linear_combination/hls_linear_combination.cpp:5) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.12' (hls_linear_combination/hls_linear_combination.cpp:5) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.13' (hls_linear_combination/hls_linear_combination.cpp:5) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.14' (hls_linear_combination/hls_linear_combination.cpp:5) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.15' (hls_linear_combination/hls_linear_combination.cpp:5) completely based on array size.
INFO: [XFORM 203-101] Partitioning array 'accumulators.0' (hls_linear_combination/hls_linear_combination.cpp:5) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.1' (hls_linear_combination/hls_linear_combination.cpp:5) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.2' (hls_linear_combination/hls_linear_combination.cpp:5) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.3' (hls_linear_combination/hls_linear_combination.cpp:5) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.4' (hls_linear_combination/hls_linear_combination.cpp:5) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.5' (hls_linear_combination/hls_linear_combination.cpp:5) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.6' (hls_linear_combination/hls_linear_combination.cpp:5) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.7' (hls_linear_combination/hls_linear_combination.cpp:5) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.8' (hls_linear_combination/hls_linear_combination.cpp:5) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.9' (hls_linear_combination/hls_linear_combination.cpp:5) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.10' (hls_linear_combination/hls_linear_combination.cpp:5) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.11' (hls_linear_combination/hls_linear_combination.cpp:5) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.12' (hls_linear_combination/hls_linear_combination.cpp:5) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.13' (hls_linear_combination/hls_linear_combination.cpp:5) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.14' (hls_linear_combination/hls_linear_combination.cpp:5) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.15' (hls_linear_combination/hls_linear_combination.cpp:5) in dimension 1 completely.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 1.21 seconds. CPU system time: 0.07 seconds. Elapsed time: 1.57 seconds; current allocated memory: 226.229 MB.
INFO: [XFORM 203-541] Flattening a loop nest 'LOOP_VEC1' (hls_linear_combination/hls_linear_combination.cpp:15:22) in function 'hls_linear_combination'.
INFO: [HLS 200-472] Inferring partial write operation for 'coeffs_l' (hls_linear_combination/hls_linear_combination.cpp:25:15)
INFO: [HLS 200-472] Inferring partial write operation for 'out_l' (hls_linear_combination/hls_linear_combination.cpp:41:14)
INFO: [HLS 200-472] Inferring partial write operation for 'vec_l[0]' (hls_linear_combination/hls_linear_combination.cpp:18:17)
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 1.2 seconds. CPU system time: 0.01 seconds. Elapsed time: 1.39 seconds; current allocated memory: 227.525 MB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'hls_linear_combination' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'hls_linear_combination' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_59) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_58) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_57) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_56) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_55) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_54) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_53) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_52) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_51) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_50) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_49) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_48) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_47) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_46) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_45) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_44) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_43) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_42) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_41) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_40) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_39) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_38) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_37) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_36) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_35) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_34) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_33) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_32) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_31) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_30) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_29) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_28) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_27) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_26) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_25) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_24) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_23) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_22) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_21) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_20) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_19) to 3 in order to utilize available DSP registers.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z020-clg484-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -output=/home/osm/Documents/SECT-MAYO/MAYO/HLS/ips/hls_linear_combination.zip
INFO: [HLS 200-1464] Running solution command: config_export -rtl=vhdl
INFO: [HLS 200-1510] Running: set_part xc7z020-clg484-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_export -format ip_catalog -output /home/osm/Documents/SECT-MAYO/MAYO/HLS/ips/hls_linear_combination.zip -rtl vhdl 
INFO: [HLS 200-1510] Running: set_directive_top -name hls_linear_combination hls_linear_combination 
INFO: [HLS 200-1510] Running: set_directive_interface -mode axis -register -register_mode both hls_linear_combination vecs 
INFO: [HLS 200-1510] Running: set_directive_interface -mode axis -register -register_mode both hls_linear_combination coeffs 
INFO: [HLS 200-1510] Running: set_directive_interface -mode axis -register -register_mode both hls_linear_combination out 
INFO: [HLS 200-1510] Running: set_directive_array_partition -type cyclic -factor 16 -dim 1 hls_linear_combination accumulators 
INFO: [HLS 200-1510] Running: set_directive_array_partition -type cyclic -factor 3 -dim 2 hls_linear_combination vec_l 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0.02 seconds. CPU system time: 0 seconds. Elapsed time: 0.01 seconds; current allocated memory: 164.589 MB.
INFO: [HLS 200-10] Analyzing design file 'hls_linear_combination/hls_linear_combination.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 12.15 seconds. CPU system time: 0.88 seconds. Elapsed time: 19.66 seconds; current allocated memory: 165.870 MB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-131] Inlining function 'hls::stream<axis_data, 0>::read(axis_data&)' into 'hls::stream<axis_data, 0>::read()' (/opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_stream_39.h:156:9)
INFO: [HLS 214-131] Inlining function 'hls::stream<axis_data, 0>::read()' into 'hls_linear_combination(hls::stream<axis_data, 0>&, hls::stream<axis_data, 0>&, int, hls::stream<axis_data, 0>&)' (hls_linear_combination/hls_linear_combination.cpp:17:20)
INFO: [HLS 214-131] Inlining function 'hls::stream<axis_data, 0>::write(axis_data const&)' into 'hls_linear_combination(hls::stream<axis_data, 0>&, hls::stream<axis_data, 0>&, int, hls::stream<axis_data, 0>&)' (hls_linear_combination/hls_linear_combination.cpp:54:8)
INFO: [HLS 214-131] Inlining function 'hls::stream<axis_data, 0>::read()' into 'hls_linear_combination(hls::stream<axis_data, 0>&, hls::stream<axis_data, 0>&, int, hls::stream<axis_data, 0>&)' (hls_linear_combination/hls_linear_combination.cpp:24:21)
INFO: [HLS 214-131] Inlining function '_llvm.fpga.pack.none.i16.s_struct.axis_datas' into 'hls_linear_combination(hls::stream<axis_data, 0>&, hls::stream<axis_data, 0>&, int, hls::stream<axis_data, 0>&)' (/opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_stream_39.h:174:9)
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 7.65 seconds. CPU system time: 0.51 seconds. Elapsed time: 10.22 seconds; current allocated memory: 167.978 MB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0 seconds; current allocated memory: 167.979 MB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0.1 seconds. CPU system time: 0.02 seconds. Elapsed time: 0.21 seconds; current allocated memory: 173.616 MB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0.21 seconds. CPU system time: 0 seconds. Elapsed time: 0.33 seconds; current allocated memory: 180.337 MB.
INFO: [XFORM 203-510] Pipelining loop 'Loop-2' in function 'hls_linear_combination' automatically.
INFO: [XFORM 203-510] Pipelining loop 'LOOP_VEC2' (/opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_stream_39.h:0) in function 'hls_linear_combination' automatically.
INFO: [XFORM 203-510] Pipelining loop 'LOOP_COEFS' (/opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_stream_39.h:0) in function 'hls_linear_combination' automatically.
INFO: [XFORM 203-510] Pipelining loop 'LOOP_LC1' (hls_linear_combination/hls_linear_combination.cpp:30) in function 'hls_linear_combination' automatically.
INFO: [XFORM 203-510] Pipelining loop 'LOOP_LC2' (hls_linear_combination/hls_linear_combination.cpp:36) in function 'hls_linear_combination' automatically.
INFO: [XFORM 203-510] Pipelining loop 'LOOP_OUT' (hls_linear_combination/hls_linear_combination.cpp:47) in function 'hls_linear_combination' automatically.
INFO: [XFORM 203-502] Unrolling all sub-loops inside loop 'LOOP_LC1' (hls_linear_combination/hls_linear_combination.cpp:30) in function 'hls_linear_combination' for pipelining.
INFO: [HLS 200-489] Unrolling loop 'LOOP_LC12' (hls_linear_combination/hls_linear_combination.cpp:31) in function 'hls_linear_combination' completely with a factor of 60.
INFO: [XFORM 203-101] Partitioning array 'accumulators' (hls_linear_combination/hls_linear_combination.cpp:5) in dimension 1 with a cyclic factor 16.
INFO: [XFORM 203-101] Partitioning array 'vec_l' (hls_linear_combination/hls_linear_combination.cpp:8) in dimension 2 with a cyclic factor 3.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.0' (hls_linear_combination/hls_linear_combination.cpp:5) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.1' (hls_linear_combination/hls_linear_combination.cpp:5) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.2' (hls_linear_combination/hls_linear_combination.cpp:5) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.3' (hls_linear_combination/hls_linear_combination.cpp:5) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.4' (hls_linear_combination/hls_linear_combination.cpp:5) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.5' (hls_linear_combination/hls_linear_combination.cpp:5) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.6' (hls_linear_combination/hls_linear_combination.cpp:5) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.7' (hls_linear_combination/hls_linear_combination.cpp:5) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.8' (hls_linear_combination/hls_linear_combination.cpp:5) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.9' (hls_linear_combination/hls_linear_combination.cpp:5) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.10' (hls_linear_combination/hls_linear_combination.cpp:5) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.11' (hls_linear_combination/hls_linear_combination.cpp:5) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.12' (hls_linear_combination/hls_linear_combination.cpp:5) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.13' (hls_linear_combination/hls_linear_combination.cpp:5) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.14' (hls_linear_combination/hls_linear_combination.cpp:5) completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.15' (hls_linear_combination/hls_linear_combination.cpp:5) completely based on array size.
INFO: [XFORM 203-101] Partitioning array 'accumulators.0' (hls_linear_combination/hls_linear_combination.cpp:5) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.1' (hls_linear_combination/hls_linear_combination.cpp:5) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.2' (hls_linear_combination/hls_linear_combination.cpp:5) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.3' (hls_linear_combination/hls_linear_combination.cpp:5) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.4' (hls_linear_combination/hls_linear_combination.cpp:5) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.5' (hls_linear_combination/hls_linear_combination.cpp:5) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.6' (hls_linear_combination/hls_linear_combination.cpp:5) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.7' (hls_linear_combination/hls_linear_combination.cpp:5) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.8' (hls_linear_combination/hls_linear_combination.cpp:5) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.9' (hls_linear_combination/hls_linear_combination.cpp:5) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.10' (hls_linear_combination/hls_linear_combination.cpp:5) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.11' (hls_linear_combination/hls_linear_combination.cpp:5) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.12' (hls_linear_combination/hls_linear_combination.cpp:5) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.13' (hls_linear_combination/hls_linear_combination.cpp:5) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.14' (hls_linear_combination/hls_linear_combination.cpp:5) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.15' (hls_linear_combination/hls_linear_combination.cpp:5) in dimension 1 completely.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 1.25 seconds. CPU system time: 0.04 seconds. Elapsed time: 1.82 seconds; current allocated memory: 210.225 MB.
INFO: [XFORM 203-541] Flattening a loop nest 'LOOP_VEC1' (hls_linear_combination/hls_linear_combination.cpp:15:22) in function 'hls_linear_combination'.
INFO: [HLS 200-472] Inferring partial write operation for 'coeffs_l' (hls_linear_combination/hls_linear_combination.cpp:25:15)
INFO: [HLS 200-472] Inferring partial write operation for 'out_l' (hls_linear_combination/hls_linear_combination.cpp:41:14)
INFO: [HLS 200-472] Inferring partial write operation for 'vec_l[0]' (hls_linear_combination/hls_linear_combination.cpp:18:17)
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 1.07 seconds. CPU system time: 0.02 seconds. Elapsed time: 1.19 seconds; current allocated memory: 211.523 MB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'hls_linear_combination' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'hls_linear_combination' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_59) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_58) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_57) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_56) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_55) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_54) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_53) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_52) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_51) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_50) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_49) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_48) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_47) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_46) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_45) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_44) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_43) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_42) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_41) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_40) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_39) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_38) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_37) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_36) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_35) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_34) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_33) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_32) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_31) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_30) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_29) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_28) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_27) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_26) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_25) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_24) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_23) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_22) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_21) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_20) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_19) to 3 in order to utilize available DSP registers.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z020-clg484-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -output=/home/osm/Documents/SECT-MAYO/MAYO/HLS/ips/hls_linear_combination.zip
INFO: [HLS 200-1464] Running solution command: config_export -rtl=vhdl
INFO: [HLS 200-1510] Running: set_part xc7z020-clg484-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_export -format ip_catalog -output /home/osm/Documents/SECT-MAYO/MAYO/HLS/ips/hls_linear_combination.zip -rtl vhdl 
INFO: [HLS 200-1510] Running: set_directive_top -name hls_linear_combination hls_linear_combination 
INFO: [HLS 200-1510] Running: set_directive_interface -mode axis -register -register_mode both hls_linear_combination vecs 
INFO: [HLS 200-1510] Running: set_directive_interface -mode axis -register -register_mode both hls_linear_combination coeffs 
INFO: [HLS 200-1510] Running: set_directive_interface -mode axis -register -register_mode both hls_linear_combination out 
INFO: [HLS 200-1510] Running: set_directive_array_partition -type cyclic -factor 16 -dim 1 hls_linear_combination accumulators 
INFO: [HLS 200-1510] Running: set_directive_array_partition -dim 2 -factor 5 -type cyclic hls_linear_combination vec_l 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0.02 seconds. CPU system time: 0 seconds. Elapsed time: 0.05 seconds; current allocated memory: 180.588 MB.
INFO: [HLS 200-10] Analyzing design file 'hls_linear_combination/hls_linear_combination.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 12.55 seconds. CPU system time: 0.87 seconds. Elapsed time: 22.81 seconds; current allocated memory: 181.869 MB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-131] Inlining function 'hls::stream<axis_data, 0>::read(axis_data&)' into 'hls::stream<axis_data, 0>::read()' (/opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_stream_39.h:156:9)
INFO: [HLS 214-131] Inlining function 'hls::stream<axis_data, 0>::read()' into 'hls_linear_combination(hls::stream<axis_data, 0>&, hls::stream<axis_data, 0>&, int, hls::stream<axis_data, 0>&)' (hls_linear_combination/hls_linear_combination.cpp:17:20)
INFO: [HLS 214-131] Inlining function 'hls::stream<axis_data, 0>::write(axis_data const&)' into 'hls_linear_combination(hls::stream<axis_data, 0>&, hls::stream<axis_data, 0>&, int, hls::stream<axis_data, 0>&)' (hls_linear_combination/hls_linear_combination.cpp:54:8)
INFO: [HLS 214-131] Inlining function 'hls::stream<axis_data, 0>::read()' into 'hls_linear_combination(hls::stream<axis_data, 0>&, hls::stream<axis_data, 0>&, int, hls::stream<axis_data, 0>&)' (hls_linear_combination/hls_linear_combination.cpp:24:21)
INFO: [HLS 214-131] Inlining function '_llvm.fpga.pack.none.i16.s_struct.axis_datas' into 'hls_linear_combination(hls::stream<axis_data, 0>&, hls::stream<axis_data, 0>&, int, hls::stream<axis_data, 0>&)' (/opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_stream_39.h:174:9)
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 7.46 seconds. CPU system time: 0.51 seconds. Elapsed time: 9.71 seconds; current allocated memory: 183.961 MB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0.01 seconds. CPU system time: 0 seconds. Elapsed time: 0.01 seconds; current allocated memory: 183.962 MB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0.11 seconds. CPU system time: 0 seconds. Elapsed time: 0.25 seconds; current allocated memory: 189.554 MB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0.17 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.22 seconds; current allocated memory: 195.885 MB.
INFO: [XFORM 203-510] Pipelining loop 'LOOP_VEC2' (/opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_stream_39.h:0) in function 'hls_linear_combination' automatically.
INFO: [XFORM 203-510] Pipelining loop 'LOOP_COEFS' (/opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_stream_39.h:0) in function 'hls_linear_combination' automatically.
INFO: [XFORM 203-510] Pipelining loop 'LOOP_LC1' (hls_linear_combination/hls_linear_combination.cpp:30) in function 'hls_linear_combination' automatically.
INFO: [XFORM 203-510] Pipelining loop 'LOOP_LC2' (hls_linear_combination/hls_linear_combination.cpp:36) in function 'hls_linear_combination' automatically.
INFO: [XFORM 203-510] Pipelining loop 'LOOP_OUT' (hls_linear_combination/hls_linear_combination.cpp:47) in function 'hls_linear_combination' automatically.
INFO: [XFORM 203-502] Unrolling all sub-loops inside loop 'LOOP_LC1' (hls_linear_combination/hls_linear_combination.cpp:30) in function 'hls_linear_combination' for pipelining.
INFO: [HLS 200-489] Unrolling loop 'LOOP_LC12' (hls_linear_combination/hls_linear_combination.cpp:31) in function 'hls_linear_combination' completely with a factor of 60.
INFO: [XFORM 203-101] Partitioning array 'accumulators'  in dimension 1 with a cyclic factor 16.
INFO: [XFORM 203-101] Partitioning array 'vec_l' (hls_linear_combination/hls_linear_combination.cpp:8) in dimension 2 with a cyclic factor 5.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.0' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.1' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.2' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.3' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.4' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.5' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.6' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.7' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.8' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.9' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.10' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.11' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.12' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.13' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.14' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.15' completely based on array size.
INFO: [XFORM 203-101] Partitioning array 'accumulators.0' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.1' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.2' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.3' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.4' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.5' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.6' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.7' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.8' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.9' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.10' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.11' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.12' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.13' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.14' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.15' in dimension 1 completely.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 1.05 seconds. CPU system time: 0.02 seconds. Elapsed time: 1.31 seconds; current allocated memory: 224.202 MB.
INFO: [XFORM 203-541] Flattening a loop nest 'LOOP_VEC1' (hls_linear_combination/hls_linear_combination.cpp:15:22) in function 'hls_linear_combination'.
INFO: [HLS 200-472] Inferring partial write operation for 'coeffs_l' (hls_linear_combination/hls_linear_combination.cpp:25:15)
INFO: [HLS 200-472] Inferring partial write operation for 'out_l' (hls_linear_combination/hls_linear_combination.cpp:41:14)
INFO: [HLS 200-472] Inferring partial write operation for 'vec_l[0]' (hls_linear_combination/hls_linear_combination.cpp:18:17)
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 0.88 seconds. CPU system time: 0.01 seconds. Elapsed time: 1.16 seconds; current allocated memory: 223.610 MB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'hls_linear_combination' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'hls_linear_combination' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_59) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_58) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_57) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_56) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_55) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_54) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_53) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_52) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_51) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_50) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_49) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_48) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_47) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_46) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_45) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_44) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_43) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_42) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_41) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_40) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_39) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_38) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_37) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_36) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_35) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_34) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_33) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_32) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_31) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_30) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_29) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_28) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_27) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_26) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_25) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_24) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_23) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_22) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_21) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_20) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_19) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_18) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_17) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_16) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_15) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_14) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_13) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_12) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_11) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_10) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_9) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_8) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_7) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_6) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_5) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_4) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_3) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-1457] Automatically inferring 1WnR RAM type for array 'vec_l_4'. Use bind_storage pragma to overwrite if needed.
INFO: [HLS 200-1457] Automatically inferring 1WnR RAM type for array 'vec_l_3'. Use bind_storage pragma to overwrite if needed.
INFO: [HLS 200-1457] Automatically inferring 1WnR RAM type for array 'vec_l_2'. Use bind_storage pragma to overwrite if needed.
INFO: [HLS 200-1457] Automatically inferring 1WnR RAM type for array 'vec_l_1'. Use bind_storage pragma to overwrite if needed.
INFO: [HLS 200-1457] Automatically inferring 1WnR RAM type for array 'vec_l_0'. Use bind_storage pragma to overwrite if needed.
INFO: [SCHED 204-61] Pipelining loop 'LOOP_VEC1_LOOP_VEC2'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 10, loop 'LOOP_VEC1_LOOP_VEC2'
INFO: [SCHED 204-61] Pipelining loop 'LOOP_COEFS'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 1, loop 'LOOP_COEFS'
INFO: [SCHED 204-61] Pipelining loop 'LOOP_LC1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 5, loop 'LOOP_LC1'
INFO: [SCHED 204-61] Pipelining loop 'LOOP_LC2'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 37, loop 'LOOP_LC2'
INFO: [SCHED 204-61] Pipelining loop 'LOOP_OUT'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 3, loop 'LOOP_OUT'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 1.49 seconds. CPU system time: 0.18 seconds. Elapsed time: 2.32 seconds; current allocated memory: 226.459 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 1.45 seconds. CPU system time: 0.16 seconds. Elapsed time: 1.82 seconds; current allocated memory: 229.640 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'hls_linear_combination' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Design contains AXI ports. Reset is fixed to synchronous and active low.
INFO: [RTGEN 206-500] Setting interface mode on port 'hls_linear_combination/vecs_V' to 'axis' (register, both mode).
INFO: [RTGEN 206-500] Setting interface mode on port 'hls_linear_combination/coeffs_V' to 'axis' (register, both mode).
INFO: [RTGEN 206-500] Setting interface mode on port 'hls_linear_combination/len' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'hls_linear_combination/out_V' to 'axis' (register, both mode).
INFO: [RTGEN 206-500] Setting interface mode on function 'hls_linear_combination' to 'ap_ctrl_hs'.
WARNING: [RTGEN 206-101] Register 'accumulators_15_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_15_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_15_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_0_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_0_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_0_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_0_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_1_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_1_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_1_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_1_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_2_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_2_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_2_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_2_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_3_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_3_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_3_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_3_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_4_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_4_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_4_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_4_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_5_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_5_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_5_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_5_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_6_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_6_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_6_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_6_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_7_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_7_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_7_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_7_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_8_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_8_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_8_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_8_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_9_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_9_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_9_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_9_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_10_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_10_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_10_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_10_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_11_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_11_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_11_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_11_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_12_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_12_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_12_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_13_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_13_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_13_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_14_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_14_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_14_2' is power-on initialization.
INFO: [RTGEN 206-100] Generating core module 'mac_muladd_8ns_8ns_32ns_32_4_1': 60 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_6ns_8ns_13_1_1': 1 instance(s).
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z020-clg484-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -output=/home/osm/Documents/SECT-MAYO/MAYO/HLS/ips/hls_linear_combination.zip
INFO: [HLS 200-1464] Running solution command: config_export -rtl=vhdl
INFO: [HLS 200-1510] Running: set_part xc7z020-clg484-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_export -format ip_catalog -output /home/osm/Documents/SECT-MAYO/MAYO/HLS/ips/hls_linear_combination.zip -rtl vhdl 
INFO: [HLS 200-1510] Running: set_directive_top -name hls_linear_combination hls_linear_combination 
INFO: [HLS 200-1510] Running: set_directive_interface -mode axis -register -register_mode both hls_linear_combination vecs 
INFO: [HLS 200-1510] Running: set_directive_interface -mode axis -register -register_mode both hls_linear_combination coeffs 
INFO: [HLS 200-1510] Running: set_directive_interface -mode axis -register -register_mode both hls_linear_combination out 
INFO: [HLS 200-1510] Running: set_directive_array_partition -type cyclic -factor 16 -dim 1 hls_linear_combination accumulators 
INFO: [HLS 200-1510] Running: set_directive_array_partition -dim 2 -factor 4 -type cyclic hls_linear_combination vec_l 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0.02 seconds. CPU system time: 0 seconds. Elapsed time: 0.01 seconds; current allocated memory: 180.588 MB.
INFO: [HLS 200-10] Analyzing design file 'hls_linear_combination/hls_linear_combination.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 12.58 seconds. CPU system time: 0.74 seconds. Elapsed time: 21.22 seconds; current allocated memory: 181.869 MB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-131] Inlining function 'hls::stream<axis_data, 0>::read(axis_data&)' into 'hls::stream<axis_data, 0>::read()' (/opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_stream_39.h:156:9)
INFO: [HLS 214-131] Inlining function 'hls::stream<axis_data, 0>::read()' into 'hls_linear_combination(hls::stream<axis_data, 0>&, hls::stream<axis_data, 0>&, int, hls::stream<axis_data, 0>&)' (hls_linear_combination/hls_linear_combination.cpp:17:20)
INFO: [HLS 214-131] Inlining function 'hls::stream<axis_data, 0>::write(axis_data const&)' into 'hls_linear_combination(hls::stream<axis_data, 0>&, hls::stream<axis_data, 0>&, int, hls::stream<axis_data, 0>&)' (hls_linear_combination/hls_linear_combination.cpp:54:8)
INFO: [HLS 214-131] Inlining function 'hls::stream<axis_data, 0>::read()' into 'hls_linear_combination(hls::stream<axis_data, 0>&, hls::stream<axis_data, 0>&, int, hls::stream<axis_data, 0>&)' (hls_linear_combination/hls_linear_combination.cpp:24:21)
INFO: [HLS 214-131] Inlining function '_llvm.fpga.pack.none.i16.s_struct.axis_datas' into 'hls_linear_combination(hls::stream<axis_data, 0>&, hls::stream<axis_data, 0>&, int, hls::stream<axis_data, 0>&)' (/opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_stream_39.h:174:9)
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 6.97 seconds. CPU system time: 0.51 seconds. Elapsed time: 8.79 seconds; current allocated memory: 183.960 MB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.01 seconds; current allocated memory: 183.961 MB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0.08 seconds. CPU system time: 0.03 seconds. Elapsed time: 0.17 seconds; current allocated memory: 189.554 MB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0.2 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.26 seconds; current allocated memory: 195.883 MB.
INFO: [XFORM 203-510] Pipelining loop 'LOOP_VEC2' (/opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_stream_39.h:0) in function 'hls_linear_combination' automatically.
INFO: [XFORM 203-510] Pipelining loop 'LOOP_COEFS' (/opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_stream_39.h:0) in function 'hls_linear_combination' automatically.
INFO: [XFORM 203-510] Pipelining loop 'LOOP_LC1' (hls_linear_combination/hls_linear_combination.cpp:30) in function 'hls_linear_combination' automatically.
INFO: [XFORM 203-510] Pipelining loop 'LOOP_LC2' (hls_linear_combination/hls_linear_combination.cpp:36) in function 'hls_linear_combination' automatically.
INFO: [XFORM 203-510] Pipelining loop 'LOOP_OUT' (hls_linear_combination/hls_linear_combination.cpp:47) in function 'hls_linear_combination' automatically.
INFO: [XFORM 203-502] Unrolling all sub-loops inside loop 'LOOP_LC1' (hls_linear_combination/hls_linear_combination.cpp:30) in function 'hls_linear_combination' for pipelining.
INFO: [HLS 200-489] Unrolling loop 'LOOP_LC12' (hls_linear_combination/hls_linear_combination.cpp:31) in function 'hls_linear_combination' completely with a factor of 60.
INFO: [XFORM 203-101] Partitioning array 'accumulators'  in dimension 1 with a cyclic factor 16.
INFO: [XFORM 203-101] Partitioning array 'vec_l' (hls_linear_combination/hls_linear_combination.cpp:8) in dimension 2 with a cyclic factor 4.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.0' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.1' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.2' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.3' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.4' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.5' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.6' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.7' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.8' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.9' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.10' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.11' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.12' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.13' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.14' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.15' completely based on array size.
INFO: [XFORM 203-101] Partitioning array 'accumulators.0' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.1' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.2' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.3' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.4' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.5' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.6' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.7' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.8' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.9' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.10' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.11' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.12' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.13' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.14' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.15' in dimension 1 completely.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 0.96 seconds. CPU system time: 0.05 seconds. Elapsed time: 1.25 seconds; current allocated memory: 224.179 MB.
INFO: [XFORM 203-541] Flattening a loop nest 'LOOP_VEC1' (hls_linear_combination/hls_linear_combination.cpp:15:22) in function 'hls_linear_combination'.
INFO: [HLS 200-472] Inferring partial write operation for 'coeffs_l' (hls_linear_combination/hls_linear_combination.cpp:25:15)
INFO: [HLS 200-472] Inferring partial write operation for 'out_l' (hls_linear_combination/hls_linear_combination.cpp:41:14)
INFO: [HLS 200-472] Inferring partial write operation for 'vec_l[0]' (hls_linear_combination/hls_linear_combination.cpp:18:17)
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 0.88 seconds. CPU system time: 0.01 seconds. Elapsed time: 1.15 seconds; current allocated memory: 223.559 MB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'hls_linear_combination' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'hls_linear_combination' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_59) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_58) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_57) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_56) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_55) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_54) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_53) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_52) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_51) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_50) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_49) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_48) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_47) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_46) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_45) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_44) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_43) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_42) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_41) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_40) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_39) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_38) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_37) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_36) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_35) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_34) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_33) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_32) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_31) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_30) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_29) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_28) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_27) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_26) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_25) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_24) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_23) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_22) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_21) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_20) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_19) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_18) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_17) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_16) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_15) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_14) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_13) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_12) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_11) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_10) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_9) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_8) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_7) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_6) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_5) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_4) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_3) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-1457] Automatically inferring 1WnR RAM type for array 'vec_l_3'. Use bind_storage pragma to overwrite if needed.
INFO: [HLS 200-1457] Automatically inferring 1WnR RAM type for array 'vec_l_2'. Use bind_storage pragma to overwrite if needed.
INFO: [HLS 200-1457] Automatically inferring 1WnR RAM type for array 'vec_l_1'. Use bind_storage pragma to overwrite if needed.
INFO: [HLS 200-1457] Automatically inferring 1WnR RAM type for array 'vec_l_0'. Use bind_storage pragma to overwrite if needed.
INFO: [SCHED 204-61] Pipelining loop 'LOOP_VEC1_LOOP_VEC2'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 2, loop 'LOOP_VEC1_LOOP_VEC2'
INFO: [SCHED 204-61] Pipelining loop 'LOOP_COEFS'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 1, loop 'LOOP_COEFS'
INFO: [SCHED 204-61] Pipelining loop 'LOOP_LC1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 5, loop 'LOOP_LC1'
INFO: [SCHED 204-61] Pipelining loop 'LOOP_LC2'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 37, loop 'LOOP_LC2'
INFO: [SCHED 204-61] Pipelining loop 'LOOP_OUT'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 3, loop 'LOOP_OUT'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 1.51 seconds. CPU system time: 0.22 seconds. Elapsed time: 2.43 seconds; current allocated memory: 226.334 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 1.59 seconds. CPU system time: 0.24 seconds. Elapsed time: 2.47 seconds; current allocated memory: 229.415 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'hls_linear_combination' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Design contains AXI ports. Reset is fixed to synchronous and active low.
INFO: [RTGEN 206-500] Setting interface mode on port 'hls_linear_combination/vecs_V' to 'axis' (register, both mode).
INFO: [RTGEN 206-500] Setting interface mode on port 'hls_linear_combination/coeffs_V' to 'axis' (register, both mode).
INFO: [RTGEN 206-500] Setting interface mode on port 'hls_linear_combination/len' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'hls_linear_combination/out_V' to 'axis' (register, both mode).
INFO: [RTGEN 206-500] Setting interface mode on function 'hls_linear_combination' to 'ap_ctrl_hs'.
WARNING: [RTGEN 206-101] Register 'accumulators_15_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_15_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_15_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_0_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_0_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_0_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_0_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_1_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_1_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_1_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_1_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_2_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_2_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_2_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_2_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_3_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_3_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_3_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_3_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_4_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_4_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_4_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_4_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_5_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_5_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_5_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_5_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_6_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_6_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_6_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_6_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_7_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_7_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_7_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_7_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_8_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_8_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_8_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_8_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_9_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_9_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_9_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_9_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_10_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_10_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_10_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_10_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_11_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_11_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_11_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_11_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_12_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_12_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_12_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_13_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_13_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_13_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_14_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_14_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_14_2' is power-on initialization.
INFO: [RTGEN 206-100] Generating core module 'mac_muladd_8ns_8ns_32ns_32_4_1': 60 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mux_32_32_1_1': 4 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mux_42_32_1_1': 12 instance(s).
INFO: [RTGEN 206-100] Generating core module 'urem_32ns_6ns_5_36_1': 1 instance(s).
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z020-clg484-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -output=/home/osm/Documents/SECT-MAYO/MAYO/HLS/ips/hls_linear_combination.zip
INFO: [HLS 200-1464] Running solution command: config_export -rtl=vhdl
INFO: [HLS 200-1510] Running: set_part xc7z020-clg484-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_export -format ip_catalog -output /home/osm/Documents/SECT-MAYO/MAYO/HLS/ips/hls_linear_combination.zip -rtl vhdl 
INFO: [HLS 200-1510] Running: set_directive_top -name hls_linear_combination hls_linear_combination 
INFO: [HLS 200-1510] Running: set_directive_interface -mode axis -register -register_mode both hls_linear_combination vecs 
INFO: [HLS 200-1510] Running: set_directive_interface -mode axis -register -register_mode both hls_linear_combination coeffs 
INFO: [HLS 200-1510] Running: set_directive_interface -mode axis -register -register_mode both hls_linear_combination out 
INFO: [HLS 200-1510] Running: set_directive_array_partition -dim 1 -factor 10 -type cyclic hls_linear_combination accumulators 
INFO: [HLS 200-1510] Running: set_directive_array_partition -dim 2 -factor 5 -type cyclic hls_linear_combination vec_l 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0.04 seconds. CPU system time: 0 seconds. Elapsed time: 0.03 seconds; current allocated memory: 180.597 MB.
INFO: [HLS 200-10] Analyzing design file 'hls_linear_combination/hls_linear_combination.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 12.8 seconds. CPU system time: 1.02 seconds. Elapsed time: 21.52 seconds; current allocated memory: 181.869 MB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-131] Inlining function 'hls::stream<axis_data, 0>::read(axis_data&)' into 'hls::stream<axis_data, 0>::read()' (/opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_stream_39.h:156:9)
INFO: [HLS 214-131] Inlining function 'hls::stream<axis_data, 0>::read()' into 'hls_linear_combination(hls::stream<axis_data, 0>&, hls::stream<axis_data, 0>&, int, hls::stream<axis_data, 0>&)' (hls_linear_combination/hls_linear_combination.cpp:17:20)
INFO: [HLS 214-131] Inlining function 'hls::stream<axis_data, 0>::write(axis_data const&)' into 'hls_linear_combination(hls::stream<axis_data, 0>&, hls::stream<axis_data, 0>&, int, hls::stream<axis_data, 0>&)' (hls_linear_combination/hls_linear_combination.cpp:54:8)
INFO: [HLS 214-131] Inlining function 'hls::stream<axis_data, 0>::read()' into 'hls_linear_combination(hls::stream<axis_data, 0>&, hls::stream<axis_data, 0>&, int, hls::stream<axis_data, 0>&)' (hls_linear_combination/hls_linear_combination.cpp:24:21)
INFO: [HLS 214-131] Inlining function '_llvm.fpga.pack.none.i16.s_struct.axis_datas' into 'hls_linear_combination(hls::stream<axis_data, 0>&, hls::stream<axis_data, 0>&, int, hls::stream<axis_data, 0>&)' (/opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_stream_39.h:174:9)
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 7.72 seconds. CPU system time: 0.49 seconds. Elapsed time: 10.33 seconds; current allocated memory: 183.961 MB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0 seconds; current allocated memory: 183.962 MB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0.09 seconds. CPU system time: 0.02 seconds. Elapsed time: 0.14 seconds; current allocated memory: 189.554 MB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0.2 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.25 seconds; current allocated memory: 195.884 MB.
INFO: [XFORM 203-510] Pipelining loop 'LOOP_VEC2' (/opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_stream_39.h:0) in function 'hls_linear_combination' automatically.
INFO: [XFORM 203-510] Pipelining loop 'LOOP_COEFS' (/opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_stream_39.h:0) in function 'hls_linear_combination' automatically.
INFO: [XFORM 203-510] Pipelining loop 'LOOP_LC1' (hls_linear_combination/hls_linear_combination.cpp:30) in function 'hls_linear_combination' automatically.
INFO: [XFORM 203-510] Pipelining loop 'LOOP_LC2' (hls_linear_combination/hls_linear_combination.cpp:36) in function 'hls_linear_combination' automatically.
INFO: [XFORM 203-510] Pipelining loop 'LOOP_OUT' (hls_linear_combination/hls_linear_combination.cpp:47) in function 'hls_linear_combination' automatically.
INFO: [XFORM 203-502] Unrolling all sub-loops inside loop 'LOOP_LC1' (hls_linear_combination/hls_linear_combination.cpp:30) in function 'hls_linear_combination' for pipelining.
INFO: [HLS 200-489] Unrolling loop 'LOOP_LC12' (hls_linear_combination/hls_linear_combination.cpp:31) in function 'hls_linear_combination' completely with a factor of 60.
INFO: [XFORM 203-101] Partitioning array 'accumulators'  in dimension 1 with a cyclic factor 10.
INFO: [XFORM 203-101] Partitioning array 'vec_l' (hls_linear_combination/hls_linear_combination.cpp:8) in dimension 2 with a cyclic factor 5.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 0.83 seconds. CPU system time: 0.05 seconds. Elapsed time: 1.26 seconds; current allocated memory: 224.028 MB.
INFO: [XFORM 203-541] Flattening a loop nest 'LOOP_VEC1' (hls_linear_combination/hls_linear_combination.cpp:15:22) in function 'hls_linear_combination'.
INFO: [HLS 200-472] Inferring partial write operation for 'coeffs_l' (hls_linear_combination/hls_linear_combination.cpp:25:15)
INFO: [HLS 200-472] Inferring partial write operation for 'accumulators.0' (hls_linear_combination/hls_linear_combination.cpp:32:21)
INFO: [HLS 200-472] Inferring partial write operation for 'out_l' (hls_linear_combination/hls_linear_combination.cpp:41:14)
INFO: [HLS 200-472] Inferring partial write operation for 'vec_l[0]' (hls_linear_combination/hls_linear_combination.cpp:18:17)
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 0.67 seconds. CPU system time: 0 seconds. Elapsed time: 0.82 seconds; current allocated memory: 223.172 MB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'hls_linear_combination' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'hls_linear_combination' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_59) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_58) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_57) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_56) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_55) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_54) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_53) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_52) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_51) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_50) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_49) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_48) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_47) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_46) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_45) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_44) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_43) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_42) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_41) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_40) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_39) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_38) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_37) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_36) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_35) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_34) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_33) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_32) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_31) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_30) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_29) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_28) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_27) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_26) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_25) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_24) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_23) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_22) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_21) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_20) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_19) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_18) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_17) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_16) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_15) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_14) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_13) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_12) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_11) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_10) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_9) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_8) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_7) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_6) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_5) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_4) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_3) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-1457] Automatically inferring 1WnR RAM type for array 'vec_l_4'. Use bind_storage pragma to overwrite if needed.
INFO: [HLS 200-1457] Automatically inferring 1WnR RAM type for array 'vec_l_3'. Use bind_storage pragma to overwrite if needed.
INFO: [HLS 200-1457] Automatically inferring 1WnR RAM type for array 'vec_l_2'. Use bind_storage pragma to overwrite if needed.
INFO: [HLS 200-1457] Automatically inferring 1WnR RAM type for array 'vec_l_1'. Use bind_storage pragma to overwrite if needed.
INFO: [HLS 200-1457] Automatically inferring 1WnR RAM type for array 'vec_l_0'. Use bind_storage pragma to overwrite if needed.
INFO: [SCHED 204-61] Pipelining loop 'LOOP_VEC1_LOOP_VEC2'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 10, loop 'LOOP_VEC1_LOOP_VEC2'
INFO: [SCHED 204-61] Pipelining loop 'LOOP_COEFS'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 1, loop 'LOOP_COEFS'
INFO: [SCHED 204-61] Pipelining loop 'LOOP_LC1'.
WARNING: [HLS 200-880] The II Violation in module 'hls_linear_combination' (loop 'LOOP_LC1'): Unable to enforce a carried dependence constraint (II = 1, distance = 1, offset = 1) between 'store' operation ('0_write_ln32', hls_linear_combination/hls_linear_combination.cpp:32) of variable 'add_ln32', hls_linear_combination/hls_linear_combination.cpp:32 on array 'accumulators_0' and 'load' operation ('accumulators_0_load', hls_linear_combination/hls_linear_combination.cpp:32) on array 'accumulators_0'.
WARNING: [HLS 200-880] The II Violation in module 'hls_linear_combination' (loop 'LOOP_LC1'): Unable to enforce a carried dependence constraint (II = 2, distance = 1, offset = 1) between 'store' operation ('0_write_ln32', hls_linear_combination/hls_linear_combination.cpp:32) of variable 'add_ln32', hls_linear_combination/hls_linear_combination.cpp:32 on array 'accumulators_0' and 'load' operation ('accumulators_0_load', hls_linear_combination/hls_linear_combination.cpp:32) on array 'accumulators_0'.
WARNING: [HLS 200-885] Unable to schedule 'store' operation ('0_write_ln32', hls_linear_combination/hls_linear_combination.cpp:32) of variable 'add_ln32', hls_linear_combination/hls_linear_combination.cpp:32 on array 'accumulators_0' due to limited memory ports. Please consider using a memory core with more ports or partitioning the array 'accumulators_0'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 6, Depth = 10, loop 'LOOP_LC1'
INFO: [SCHED 204-61] Pipelining loop 'LOOP_LC2'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 38, loop 'LOOP_LC2'
INFO: [SCHED 204-61] Pipelining loop 'LOOP_OUT'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 3, loop 'LOOP_OUT'
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z020-clg484-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -output=/home/osm/Documents/SECT-MAYO/MAYO/HLS/ips/hls_linear_combination.zip
INFO: [HLS 200-1464] Running solution command: config_export -rtl=vhdl
INFO: [HLS 200-1510] Running: set_part xc7z020-clg484-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_export -format ip_catalog -output /home/osm/Documents/SECT-MAYO/MAYO/HLS/ips/hls_linear_combination.zip -rtl vhdl 
INFO: [HLS 200-1510] Running: set_directive_top -name hls_linear_combination hls_linear_combination 
INFO: [HLS 200-1510] Running: set_directive_interface -mode axis -register -register_mode both hls_linear_combination vecs 
INFO: [HLS 200-1510] Running: set_directive_interface -mode axis -register -register_mode both hls_linear_combination coeffs 
INFO: [HLS 200-1510] Running: set_directive_interface -mode axis -register -register_mode both hls_linear_combination out 
INFO: [HLS 200-1510] Running: set_directive_array_partition -dim 1 -factor 16 -type block hls_linear_combination accumulators 
INFO: [HLS 200-1510] Running: set_directive_array_partition -type cyclic -factor 5 -dim 2 hls_linear_combination vec_l 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0.02 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.03 seconds; current allocated memory: 180.588 MB.
INFO: [HLS 200-10] Analyzing design file 'hls_linear_combination/hls_linear_combination.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 12.67 seconds. CPU system time: 0.77 seconds. Elapsed time: 21.87 seconds; current allocated memory: 181.869 MB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-131] Inlining function 'hls::stream<axis_data, 0>::read(axis_data&)' into 'hls::stream<axis_data, 0>::read()' (/opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_stream_39.h:156:9)
INFO: [HLS 214-131] Inlining function 'hls::stream<axis_data, 0>::read()' into 'hls_linear_combination(hls::stream<axis_data, 0>&, hls::stream<axis_data, 0>&, int, hls::stream<axis_data, 0>&)' (hls_linear_combination/hls_linear_combination.cpp:17:20)
INFO: [HLS 214-131] Inlining function 'hls::stream<axis_data, 0>::write(axis_data const&)' into 'hls_linear_combination(hls::stream<axis_data, 0>&, hls::stream<axis_data, 0>&, int, hls::stream<axis_data, 0>&)' (hls_linear_combination/hls_linear_combination.cpp:54:8)
INFO: [HLS 214-131] Inlining function 'hls::stream<axis_data, 0>::read()' into 'hls_linear_combination(hls::stream<axis_data, 0>&, hls::stream<axis_data, 0>&, int, hls::stream<axis_data, 0>&)' (hls_linear_combination/hls_linear_combination.cpp:24:21)
INFO: [HLS 214-131] Inlining function '_llvm.fpga.pack.none.i16.s_struct.axis_datas' into 'hls_linear_combination(hls::stream<axis_data, 0>&, hls::stream<axis_data, 0>&, int, hls::stream<axis_data, 0>&)' (/opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_stream_39.h:174:9)
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 8.49 seconds. CPU system time: 0.6 seconds. Elapsed time: 11.4 seconds; current allocated memory: 183.960 MB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.01 seconds; current allocated memory: 183.961 MB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0.09 seconds. CPU system time: 0.02 seconds. Elapsed time: 0.21 seconds; current allocated memory: 189.554 MB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0.19 seconds. CPU system time: 0.02 seconds. Elapsed time: 0.32 seconds; current allocated memory: 195.881 MB.
INFO: [XFORM 203-510] Pipelining loop 'LOOP_VEC2' (/opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_stream_39.h:0) in function 'hls_linear_combination' automatically.
INFO: [XFORM 203-510] Pipelining loop 'LOOP_COEFS' (/opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_stream_39.h:0) in function 'hls_linear_combination' automatically.
INFO: [XFORM 203-510] Pipelining loop 'LOOP_LC1' (hls_linear_combination/hls_linear_combination.cpp:30) in function 'hls_linear_combination' automatically.
INFO: [XFORM 203-510] Pipelining loop 'LOOP_LC2' (hls_linear_combination/hls_linear_combination.cpp:36) in function 'hls_linear_combination' automatically.
INFO: [XFORM 203-510] Pipelining loop 'LOOP_OUT' (hls_linear_combination/hls_linear_combination.cpp:47) in function 'hls_linear_combination' automatically.
INFO: [XFORM 203-502] Unrolling all sub-loops inside loop 'LOOP_LC1' (hls_linear_combination/hls_linear_combination.cpp:30) in function 'hls_linear_combination' for pipelining.
INFO: [HLS 200-489] Unrolling loop 'LOOP_LC12' (hls_linear_combination/hls_linear_combination.cpp:31) in function 'hls_linear_combination' completely with a factor of 60.
INFO: [XFORM 203-101] Partitioning array 'accumulators'  in dimension 1 with a block factor 16.
INFO: [XFORM 203-101] Partitioning array 'vec_l' (hls_linear_combination/hls_linear_combination.cpp:8) in dimension 2 with a cyclic factor 5.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.0' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.1' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.2' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.3' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.4' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.5' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.6' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.7' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.8' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.9' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.10' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.11' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.12' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.13' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.14' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.15' completely based on array size.
INFO: [XFORM 203-101] Partitioning array 'accumulators.0' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.1' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.2' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.3' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.4' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.5' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.6' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.7' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.8' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.9' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.10' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.11' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.12' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.13' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.14' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.15' in dimension 1 completely.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 1 seconds. CPU system time: 0.04 seconds. Elapsed time: 1.35 seconds; current allocated memory: 224.194 MB.
INFO: [XFORM 203-541] Flattening a loop nest 'LOOP_VEC1' (hls_linear_combination/hls_linear_combination.cpp:15:22) in function 'hls_linear_combination'.
INFO: [HLS 200-472] Inferring partial write operation for 'coeffs_l' (hls_linear_combination/hls_linear_combination.cpp:25:15)
INFO: [HLS 200-472] Inferring partial write operation for 'out_l' (hls_linear_combination/hls_linear_combination.cpp:41:14)
INFO: [HLS 200-472] Inferring partial write operation for 'vec_l[0]' (hls_linear_combination/hls_linear_combination.cpp:18:17)
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 0.87 seconds. CPU system time: 0.01 seconds. Elapsed time: 1.03 seconds; current allocated memory: 223.592 MB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'hls_linear_combination' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'hls_linear_combination' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_59) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_58) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_57) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_56) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_55) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_54) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_53) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_52) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_51) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_50) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_49) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_48) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_47) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_46) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_45) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_44) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_43) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_42) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_41) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_40) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_39) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_38) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_37) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_36) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_35) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_34) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_33) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_32) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_31) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_30) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_29) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_28) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_27) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_26) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_25) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_24) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_23) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_22) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_21) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_20) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_19) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_18) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_17) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_16) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_15) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_14) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_13) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_12) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_11) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_10) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_9) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_8) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_7) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_6) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_5) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_4) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_3) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-1457] Automatically inferring 1WnR RAM type for array 'vec_l_4'. Use bind_storage pragma to overwrite if needed.
INFO: [HLS 200-1457] Automatically inferring 1WnR RAM type for array 'vec_l_3'. Use bind_storage pragma to overwrite if needed.
INFO: [HLS 200-1457] Automatically inferring 1WnR RAM type for array 'vec_l_2'. Use bind_storage pragma to overwrite if needed.
INFO: [HLS 200-1457] Automatically inferring 1WnR RAM type for array 'vec_l_1'. Use bind_storage pragma to overwrite if needed.
INFO: [HLS 200-1457] Automatically inferring 1WnR RAM type for array 'vec_l_0'. Use bind_storage pragma to overwrite if needed.
INFO: [SCHED 204-61] Pipelining loop 'LOOP_VEC1_LOOP_VEC2'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 10, loop 'LOOP_VEC1_LOOP_VEC2'
INFO: [SCHED 204-61] Pipelining loop 'LOOP_COEFS'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 1, loop 'LOOP_COEFS'
INFO: [SCHED 204-61] Pipelining loop 'LOOP_LC1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 5, loop 'LOOP_LC1'
INFO: [SCHED 204-61] Pipelining loop 'LOOP_LC2'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 37, loop 'LOOP_LC2'
INFO: [SCHED 204-61] Pipelining loop 'LOOP_OUT'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 3, loop 'LOOP_OUT'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 1.59 seconds. CPU system time: 0.19 seconds. Elapsed time: 2.11 seconds; current allocated memory: 226.400 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 1.81 seconds. CPU system time: 0.19 seconds. Elapsed time: 2.59 seconds; current allocated memory: 229.599 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'hls_linear_combination' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Design contains AXI ports. Reset is fixed to synchronous and active low.
INFO: [RTGEN 206-500] Setting interface mode on port 'hls_linear_combination/vecs_V' to 'axis' (register, both mode).
INFO: [RTGEN 206-500] Setting interface mode on port 'hls_linear_combination/coeffs_V' to 'axis' (register, both mode).
INFO: [RTGEN 206-500] Setting interface mode on port 'hls_linear_combination/len' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'hls_linear_combination/out_V' to 'axis' (register, both mode).
INFO: [RTGEN 206-500] Setting interface mode on function 'hls_linear_combination' to 'ap_ctrl_hs'.
WARNING: [RTGEN 206-101] Register 'accumulators_14_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_14_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_14_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_14_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_0_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_0_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_0_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_0_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_1_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_1_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_1_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_1_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_2_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_2_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_2_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_2_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_3_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_3_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_3_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_3_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_4_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_4_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_4_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_4_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_5_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_5_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_5_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_5_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_6_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_6_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_6_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_6_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_7_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_7_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_7_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_7_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_8_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_8_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_8_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_8_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_9_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_9_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_9_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_9_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_10_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_10_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_10_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_10_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_11_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_11_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_11_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_11_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_12_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_12_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_12_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_12_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_13_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_13_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_13_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_13_3' is power-on initialization.
INFO: [RTGEN 206-100] Generating core module 'mac_muladd_8ns_8ns_32ns_32_4_1': 60 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_6ns_8ns_13_1_1': 1 instance(s).
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z020-clg484-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -output=/home/osm/Documents/SECT-MAYO/MAYO/HLS/ips/hls_linear_combination.zip
INFO: [HLS 200-1464] Running solution command: config_export -rtl=vhdl
INFO: [HLS 200-1510] Running: set_part xc7z020-clg484-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_export -format ip_catalog -output /home/osm/Documents/SECT-MAYO/MAYO/HLS/ips/hls_linear_combination.zip -rtl vhdl 
INFO: [HLS 200-1510] Running: set_directive_top -name hls_linear_combination hls_linear_combination 
INFO: [HLS 200-1510] Running: set_directive_interface -mode axis -register -register_mode both hls_linear_combination vecs 
INFO: [HLS 200-1510] Running: set_directive_interface -mode axis -register -register_mode both hls_linear_combination coeffs 
INFO: [HLS 200-1510] Running: set_directive_interface -mode axis -register -register_mode both hls_linear_combination out 
INFO: [HLS 200-1510] Running: set_directive_array_partition -type block -factor 16 -dim 1 hls_linear_combination accumulators 
INFO: [HLS 200-1510] Running: set_directive_array_partition -dim 2 -factor 6 -type cyclic hls_linear_combination vec_l 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0.01 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.03 seconds; current allocated memory: 180.588 MB.
INFO: [HLS 200-10] Analyzing design file 'hls_linear_combination/hls_linear_combination.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 12.5 seconds. CPU system time: 0.7 seconds. Elapsed time: 20.26 seconds; current allocated memory: 181.869 MB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-131] Inlining function 'hls::stream<axis_data, 0>::read(axis_data&)' into 'hls::stream<axis_data, 0>::read()' (/opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_stream_39.h:156:9)
INFO: [HLS 214-131] Inlining function 'hls::stream<axis_data, 0>::read()' into 'hls_linear_combination(hls::stream<axis_data, 0>&, hls::stream<axis_data, 0>&, int, hls::stream<axis_data, 0>&)' (hls_linear_combination/hls_linear_combination.cpp:17:20)
INFO: [HLS 214-131] Inlining function 'hls::stream<axis_data, 0>::write(axis_data const&)' into 'hls_linear_combination(hls::stream<axis_data, 0>&, hls::stream<axis_data, 0>&, int, hls::stream<axis_data, 0>&)' (hls_linear_combination/hls_linear_combination.cpp:54:8)
INFO: [HLS 214-131] Inlining function 'hls::stream<axis_data, 0>::read()' into 'hls_linear_combination(hls::stream<axis_data, 0>&, hls::stream<axis_data, 0>&, int, hls::stream<axis_data, 0>&)' (hls_linear_combination/hls_linear_combination.cpp:24:21)
INFO: [HLS 214-131] Inlining function '_llvm.fpga.pack.none.i16.s_struct.axis_datas' into 'hls_linear_combination(hls::stream<axis_data, 0>&, hls::stream<axis_data, 0>&, int, hls::stream<axis_data, 0>&)' (/opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_stream_39.h:174:9)
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 8.25 seconds. CPU system time: 0.49 seconds. Elapsed time: 11.01 seconds; current allocated memory: 183.960 MB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0.01 seconds. CPU system time: 0 seconds. Elapsed time: 0 seconds; current allocated memory: 183.961 MB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0.08 seconds. CPU system time: 0.03 seconds. Elapsed time: 0.22 seconds; current allocated memory: 189.555 MB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0.18 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.26 seconds; current allocated memory: 195.888 MB.
INFO: [XFORM 203-510] Pipelining loop 'LOOP_VEC2' (/opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_stream_39.h:0) in function 'hls_linear_combination' automatically.
INFO: [XFORM 203-510] Pipelining loop 'LOOP_COEFS' (/opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_stream_39.h:0) in function 'hls_linear_combination' automatically.
INFO: [XFORM 203-510] Pipelining loop 'LOOP_LC1' (hls_linear_combination/hls_linear_combination.cpp:30) in function 'hls_linear_combination' automatically.
INFO: [XFORM 203-510] Pipelining loop 'LOOP_LC2' (hls_linear_combination/hls_linear_combination.cpp:36) in function 'hls_linear_combination' automatically.
INFO: [XFORM 203-510] Pipelining loop 'LOOP_OUT' (hls_linear_combination/hls_linear_combination.cpp:47) in function 'hls_linear_combination' automatically.
INFO: [XFORM 203-502] Unrolling all sub-loops inside loop 'LOOP_LC1' (hls_linear_combination/hls_linear_combination.cpp:30) in function 'hls_linear_combination' for pipelining.
INFO: [HLS 200-489] Unrolling loop 'LOOP_LC12' (hls_linear_combination/hls_linear_combination.cpp:31) in function 'hls_linear_combination' completely with a factor of 60.
INFO: [XFORM 203-101] Partitioning array 'accumulators'  in dimension 1 with a block factor 16.
INFO: [XFORM 203-101] Partitioning array 'vec_l' (hls_linear_combination/hls_linear_combination.cpp:8) in dimension 2 with a cyclic factor 6.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.0' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.1' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.2' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.3' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.4' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.5' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.6' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.7' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.8' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.9' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.10' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.11' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.12' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.13' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.14' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.15' completely based on array size.
INFO: [XFORM 203-101] Partitioning array 'accumulators.0' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.1' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.2' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.3' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.4' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.5' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.6' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.7' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.8' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.9' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.10' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.11' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.12' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.13' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.14' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.15' in dimension 1 completely.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 0.99 seconds. CPU system time: 0.03 seconds. Elapsed time: 1.32 seconds; current allocated memory: 224.197 MB.
INFO: [XFORM 203-541] Flattening a loop nest 'LOOP_VEC1' (hls_linear_combination/hls_linear_combination.cpp:15:22) in function 'hls_linear_combination'.
INFO: [HLS 200-472] Inferring partial write operation for 'coeffs_l' (hls_linear_combination/hls_linear_combination.cpp:25:15)
INFO: [HLS 200-472] Inferring partial write operation for 'out_l' (hls_linear_combination/hls_linear_combination.cpp:41:14)
INFO: [HLS 200-472] Inferring partial write operation for 'vec_l[0]' (hls_linear_combination/hls_linear_combination.cpp:18:17)
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 0.94 seconds. CPU system time: 0.03 seconds. Elapsed time: 1.44 seconds; current allocated memory: 223.582 MB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'hls_linear_combination' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'hls_linear_combination' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_59) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_58) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_57) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_56) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_55) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_54) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_53) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_52) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_51) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_50) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_49) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_48) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_47) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_46) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_45) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_44) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_43) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_42) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_41) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_40) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_39) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_38) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_37) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_36) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_35) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_34) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_33) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_32) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_31) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_30) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_29) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_28) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_27) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_26) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_25) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_24) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_23) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_22) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_21) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_20) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_19) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_18) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_17) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_16) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_15) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_14) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_13) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_12) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_11) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_10) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_9) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_8) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_7) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_6) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_5) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_4) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_3) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-1457] Automatically inferring 1WnR RAM type for array 'vec_l_5'. Use bind_storage pragma to overwrite if needed.
INFO: [HLS 200-1457] Automatically inferring 1WnR RAM type for array 'vec_l_4'. Use bind_storage pragma to overwrite if needed.
INFO: [HLS 200-1457] Automatically inferring 1WnR RAM type for array 'vec_l_3'. Use bind_storage pragma to overwrite if needed.
INFO: [HLS 200-1457] Automatically inferring 1WnR RAM type for array 'vec_l_2'. Use bind_storage pragma to overwrite if needed.
INFO: [HLS 200-1457] Automatically inferring 1WnR RAM type for array 'vec_l_1'. Use bind_storage pragma to overwrite if needed.
INFO: [HLS 200-1457] Automatically inferring 1WnR RAM type for array 'vec_l_0'. Use bind_storage pragma to overwrite if needed.
INFO: [SCHED 204-61] Pipelining loop 'LOOP_VEC1_LOOP_VEC2'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 10, loop 'LOOP_VEC1_LOOP_VEC2'
INFO: [SCHED 204-61] Pipelining loop 'LOOP_COEFS'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 1, loop 'LOOP_COEFS'
INFO: [SCHED 204-61] Pipelining loop 'LOOP_LC1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 5, loop 'LOOP_LC1'
INFO: [SCHED 204-61] Pipelining loop 'LOOP_LC2'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 37, loop 'LOOP_LC2'
INFO: [SCHED 204-61] Pipelining loop 'LOOP_OUT'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 3, loop 'LOOP_OUT'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 1.61 seconds. CPU system time: 0.18 seconds. Elapsed time: 2.43 seconds; current allocated memory: 226.428 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 1.66 seconds. CPU system time: 0.19 seconds. Elapsed time: 2.25 seconds; current allocated memory: 229.595 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'hls_linear_combination' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Design contains AXI ports. Reset is fixed to synchronous and active low.
INFO: [RTGEN 206-500] Setting interface mode on port 'hls_linear_combination/vecs_V' to 'axis' (register, both mode).
INFO: [RTGEN 206-500] Setting interface mode on port 'hls_linear_combination/coeffs_V' to 'axis' (register, both mode).
INFO: [RTGEN 206-500] Setting interface mode on port 'hls_linear_combination/len' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'hls_linear_combination/out_V' to 'axis' (register, both mode).
INFO: [RTGEN 206-500] Setting interface mode on function 'hls_linear_combination' to 'ap_ctrl_hs'.
WARNING: [RTGEN 206-101] Register 'accumulators_14_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_14_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_14_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_14_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_0_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_0_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_0_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_0_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_1_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_1_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_1_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_1_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_2_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_2_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_2_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_2_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_3_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_3_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_3_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_3_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_4_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_4_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_4_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_4_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_5_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_5_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_5_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_5_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_6_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_6_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_6_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_6_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_7_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_7_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_7_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_7_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_8_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_8_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_8_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_8_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_9_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_9_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_9_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_9_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_10_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_10_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_10_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_10_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_11_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_11_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_11_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_11_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_12_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_12_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_12_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_12_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_13_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_13_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_13_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_13_3' is power-on initialization.
INFO: [RTGEN 206-100] Generating core module 'mac_muladd_8ns_8ns_32ns_32_4_1': 60 instance(s).
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z020-clg484-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -output=/home/osm/Documents/SECT-MAYO/MAYO/HLS/ips/hls_linear_combination.zip
INFO: [HLS 200-1464] Running solution command: config_export -rtl=vhdl
INFO: [HLS 200-1510] Running: set_part xc7z020-clg484-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_export -format ip_catalog -output /home/osm/Documents/SECT-MAYO/MAYO/HLS/ips/hls_linear_combination.zip -rtl vhdl 
INFO: [HLS 200-1510] Running: set_directive_top -name hls_linear_combination hls_linear_combination 
INFO: [HLS 200-1510] Running: set_directive_interface -mode axis -register -register_mode both hls_linear_combination vecs 
INFO: [HLS 200-1510] Running: set_directive_interface -mode axis -register -register_mode both hls_linear_combination coeffs 
INFO: [HLS 200-1510] Running: set_directive_interface -mode axis -register -register_mode both hls_linear_combination out 
INFO: [HLS 200-1510] Running: set_directive_array_partition -dim 1 -factor 16 -type cyclic hls_linear_combination accumulators 
INFO: [HLS 200-1510] Running: set_directive_array_partition -type cyclic -factor 6 -dim 2 hls_linear_combination vec_l 
INFO: [HLS 200-1510] Running: set_directive_pipeline -off hls_linear_combination/READ_LOOP_VEC1 
INFO: [HLS 200-1510] Running: set_directive_unroll -factor 4 hls_linear_combination/READ_LOOP_VEC1 
INFO: [HLS 200-1510] Running: set_directive_pipeline hls_linear_combination/READ_LOOP_VEC2 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0.02 seconds. CPU system time: 0 seconds. Elapsed time: 0.03 seconds; current allocated memory: 180.624 MB.
INFO: [HLS 200-10] Analyzing design file 'hls_linear_combination/hls_linear_combination.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 12.69 seconds. CPU system time: 0.98 seconds. Elapsed time: 21.66 seconds; current allocated memory: 182.034 MB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-131] Inlining function 'hls::stream<axis_data, 0>::read(axis_data&)' into 'hls::stream<axis_data, 0>::read()' (/opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_stream_39.h:156:9)
INFO: [HLS 214-131] Inlining function 'hls::stream<axis_data, 0>::read()' into 'hls_linear_combination(hls::stream<axis_data, 0>&, hls::stream<axis_data, 0>&, int, hls::stream<axis_data, 0>&)' (hls_linear_combination/hls_linear_combination.cpp:17:20)
INFO: [HLS 214-131] Inlining function 'hls::stream<axis_data, 0>::write(axis_data const&)' into 'hls_linear_combination(hls::stream<axis_data, 0>&, hls::stream<axis_data, 0>&, int, hls::stream<axis_data, 0>&)' (hls_linear_combination/hls_linear_combination.cpp:54:8)
INFO: [HLS 214-131] Inlining function 'hls::stream<axis_data, 0>::read()' into 'hls_linear_combination(hls::stream<axis_data, 0>&, hls::stream<axis_data, 0>&, int, hls::stream<axis_data, 0>&)' (hls_linear_combination/hls_linear_combination.cpp:24:21)
INFO: [HLS 214-131] Inlining function '_llvm.fpga.pack.none.i16.s_struct.axis_datas' into 'hls_linear_combination(hls::stream<axis_data, 0>&, hls::stream<axis_data, 0>&, int, hls::stream<axis_data, 0>&)' (/opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_stream_39.h:174:9)
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 8.74 seconds. CPU system time: 0.62 seconds. Elapsed time: 11.97 seconds; current allocated memory: 184.080 MB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.01 seconds; current allocated memory: 184.081 MB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0.1 seconds. CPU system time: 0.02 seconds. Elapsed time: 0.19 seconds; current allocated memory: 189.702 MB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0.2 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.54 seconds; current allocated memory: 196.013 MB.
INFO: [XFORM 203-510] Pipelining loop 'READ_LOOP_COEFS' (/opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_stream_39.h:0) in function 'hls_linear_combination' automatically.
INFO: [XFORM 203-510] Pipelining loop 'EX_LOOP_LC1' (hls_linear_combination/hls_linear_combination.cpp:30) in function 'hls_linear_combination' automatically.
INFO: [XFORM 203-510] Pipelining loop 'EX_LOOP_LC2' (hls_linear_combination/hls_linear_combination.cpp:36) in function 'hls_linear_combination' automatically.
INFO: [XFORM 203-510] Pipelining loop 'WRITE_LOOP_OUT' (hls_linear_combination/hls_linear_combination.cpp:47) in function 'hls_linear_combination' automatically.
INFO: [XFORM 203-502] Unrolling all sub-loops inside loop 'EX_LOOP_LC1' (hls_linear_combination/hls_linear_combination.cpp:30) in function 'hls_linear_combination' for pipelining.
INFO: [XFORM 203-501] Unrolling loop 'READ_LOOP_VEC1' (hls_linear_combination/hls_linear_combination.cpp:15) in function 'hls_linear_combination' partially with a factor of 4.
INFO: [HLS 200-489] Unrolling loop 'EX_LOOP_LC12' (hls_linear_combination/hls_linear_combination.cpp:31) in function 'hls_linear_combination' completely with a factor of 60.
INFO: [XFORM 203-101] Partitioning array 'accumulators'  in dimension 1 with a cyclic factor 16.
INFO: [XFORM 203-101] Partitioning array 'vec_l' (hls_linear_combination/hls_linear_combination.cpp:8) in dimension 2 with a cyclic factor 6.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.0' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.1' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.2' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.3' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.4' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.5' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.6' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.7' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.8' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.9' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.10' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.11' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.12' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.13' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.14' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.15' completely based on array size.
INFO: [XFORM 203-101] Partitioning array 'accumulators.0' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.1' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.2' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.3' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.4' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.5' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.6' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.7' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.8' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.9' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.10' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.11' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.12' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.13' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.14' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.15' in dimension 1 completely.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 1.31 seconds. CPU system time: 0.03 seconds. Elapsed time: 1.77 seconds; current allocated memory: 224.749 MB.
WARNING: [HLS 200-960] Cannot flatten loop 'READ_LOOP_VEC1' (hls_linear_combination/hls_linear_combination.cpp:15:27) in function 'hls_linear_combination' more than one sub loop.
INFO: [HLS 200-472] Inferring partial write operation for 'coeffs_l' (hls_linear_combination/hls_linear_combination.cpp:25:15)
INFO: [HLS 200-472] Inferring partial write operation for 'out_l' (hls_linear_combination/hls_linear_combination.cpp:41:14)
INFO: [HLS 200-472] Inferring partial write operation for 'vec_l[0]' (hls_linear_combination/hls_linear_combination.cpp:18:17)
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 1.3 seconds. CPU system time: 0.01 seconds. Elapsed time: 1.44 seconds; current allocated memory: 225.480 MB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'hls_linear_combination' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'hls_linear_combination' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_59) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_58) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_57) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_56) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_55) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_54) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_53) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_52) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_51) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_50) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_49) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_48) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_47) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_46) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_45) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_44) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_43) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_42) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_41) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_40) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_39) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_38) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_37) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_36) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_35) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_34) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_33) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_32) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_31) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_30) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_29) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_28) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_27) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_26) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_25) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_24) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_23) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_22) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_21) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_20) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_19) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_18) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_17) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_16) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_15) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_14) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_13) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_12) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_11) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_10) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_9) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_8) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_7) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_6) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_5) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_4) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_3) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-1457] Automatically inferring 1WnR RAM type for array 'vec_l_5'. Use bind_storage pragma to overwrite if needed.
INFO: [HLS 200-1457] Automatically inferring 1WnR RAM type for array 'vec_l_4'. Use bind_storage pragma to overwrite if needed.
INFO: [HLS 200-1457] Automatically inferring 1WnR RAM type for array 'vec_l_3'. Use bind_storage pragma to overwrite if needed.
INFO: [HLS 200-1457] Automatically inferring 1WnR RAM type for array 'vec_l_2'. Use bind_storage pragma to overwrite if needed.
INFO: [HLS 200-1457] Automatically inferring 1WnR RAM type for array 'vec_l_1'. Use bind_storage pragma to overwrite if needed.
INFO: [HLS 200-1457] Automatically inferring 1WnR RAM type for array 'vec_l_0'. Use bind_storage pragma to overwrite if needed.
INFO: [SCHED 204-61] Pipelining loop 'READ_LOOP_VEC2'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 1, loop 'READ_LOOP_VEC2'
INFO: [SCHED 204-61] Pipelining loop 'READ_LOOP_VEC2'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 1, loop 'READ_LOOP_VEC2'
INFO: [SCHED 204-61] Pipelining loop 'READ_LOOP_VEC2'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 1, loop 'READ_LOOP_VEC2'
INFO: [SCHED 204-61] Pipelining loop 'READ_LOOP_VEC2'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 1, loop 'READ_LOOP_VEC2'
INFO: [SCHED 204-61] Pipelining loop 'READ_LOOP_COEFS'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 1, loop 'READ_LOOP_COEFS'
INFO: [SCHED 204-61] Pipelining loop 'EX_LOOP_LC1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 5, loop 'EX_LOOP_LC1'
INFO: [SCHED 204-61] Pipelining loop 'EX_LOOP_LC2'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 37, loop 'EX_LOOP_LC2'
INFO: [SCHED 204-61] Pipelining loop 'WRITE_LOOP_OUT'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 3, loop 'WRITE_LOOP_OUT'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 1.96 seconds. CPU system time: 0.21 seconds. Elapsed time: 3.08 seconds; current allocated memory: 228.735 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 2.09 seconds. CPU system time: 0.24 seconds. Elapsed time: 3.37 seconds; current allocated memory: 232.832 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'hls_linear_combination' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Design contains AXI ports. Reset is fixed to synchronous and active low.
INFO: [RTGEN 206-500] Setting interface mode on port 'hls_linear_combination/vecs_V' to 'axis' (register, both mode).
INFO: [RTGEN 206-500] Setting interface mode on port 'hls_linear_combination/coeffs_V' to 'axis' (register, both mode).
INFO: [RTGEN 206-500] Setting interface mode on port 'hls_linear_combination/len' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'hls_linear_combination/out_V' to 'axis' (register, both mode).
INFO: [RTGEN 206-500] Setting interface mode on function 'hls_linear_combination' to 'ap_ctrl_hs'.
WARNING: [RTGEN 206-101] Register 'accumulators_15_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_15_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_15_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_0_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_0_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_0_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_0_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_1_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_1_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_1_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_1_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_2_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_2_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_2_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_2_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_3_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_3_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_3_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_3_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_4_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_4_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_4_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_4_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_5_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_5_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_5_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_5_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_6_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_6_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_6_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_6_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_7_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_7_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_7_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_7_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_8_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_8_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_8_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_8_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_9_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_9_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_9_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_9_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_10_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_10_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_10_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_10_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_11_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_11_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_11_2' is power-on initialization.
WARNING: [RTGEN 206-101] ==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z020-clg484-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -output=/home/osm/Documents/SECT-MAYO/MAYO/HLS/ips/hls_linear_combination.zip
INFO: [HLS 200-1464] Running solution command: config_export -rtl=vhdl
INFO: [HLS 200-1510] Running: set_part xc7z020-clg484-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_export -format ip_catalog -output /home/osm/Documents/SECT-MAYO/MAYO/HLS/ips/hls_linear_combination.zip -rtl vhdl 
INFO: [HLS 200-1510] Running: set_directive_top -name hls_linear_combination hls_linear_combination 
INFO: [HLS 200-1510] Running: set_directive_interface -mode axis -register -register_mode both hls_linear_combination vecs 
INFO: [HLS 200-1510] Running: set_directive_interface -mode axis -register -register_mode both hls_linear_combination coeffs 
INFO: [HLS 200-1510] Running: set_directive_interface -mode axis -register -register_mode both hls_linear_combination out 
INFO: [HLS 200-1510] Running: set_directive_array_partition -type cyclic -factor 16 -dim 1 hls_linear_combination accumulators 
INFO: [HLS 200-1510] Running: set_directive_array_partition -type cyclic -factor 6 -dim 2 hls_linear_combination vec_l 
INFO: [HLS 200-1510] Running: set_directive_pipeline -off hls_linear_combination/READ_LOOP_VEC1 
INFO: [HLS 200-1510] Running: set_directive_unroll -factor 10 hls_linear_combination/READ_LOOP_VEC1 
INFO: [HLS 200-1510] Running: set_directive_pipeline hls_linear_combination/READ_LOOP_VEC2 
INFO: [HLS 200-1510] Running: set_directive_unroll -factor 2 hls_linear_combination/EX_LOOP_LC2 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0.06 seconds. CPU system time: 0 seconds. Elapsed time: 0.09 seconds; current allocated memory: 180.644 MB.
INFO: [HLS 200-10] Analyzing design file 'hls_linear_combination/hls_linear_combination.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 12.95 seconds. CPU system time: 0.88 seconds. Elapsed time: 21.87 seconds; current allocated memory: 182.070 MB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-131] Inlining function 'hls::stream<axis_data, 0>::read(axis_data&)' into 'hls::stream<axis_data, 0>::read()' (/opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_stream_39.h:156:9)
INFO: [HLS 214-131] Inlining function 'hls::stream<axis_data, 0>::read()' into 'hls_linear_combination(hls::stream<axis_data, 0>&, hls::stream<axis_data, 0>&, int, hls::stream<axis_data, 0>&)' (hls_linear_combination/hls_linear_combination.cpp:17:20)
INFO: [HLS 214-131] Inlining function 'hls::stream<axis_data, 0>::write(axis_data const&)' into 'hls_linear_combination(hls::stream<axis_data, 0>&, hls::stream<axis_data, 0>&, int, hls::stream<axis_data, 0>&)' (hls_linear_combination/hls_linear_combination.cpp:54:8)
INFO: [HLS 214-131] Inlining function 'hls::stream<axis_data, 0>::read()' into 'hls_linear_combination(hls::stream<axis_data, 0>&, hls::stream<axis_data, 0>&, int, hls::stream<axis_data, 0>&)' (hls_linear_combination/hls_linear_combination.cpp:24:21)
INFO: [HLS 214-188] Unrolling loop 'EX_LOOP_LC2' (hls_linear_combination/hls_linear_combination.cpp:36:15) in function 'hls_linear_combination' partially with a factor of 2 (hls_linear_combination/hls_linear_combination.cpp:36:15)
INFO: [HLS 214-131] Inlining function '_llvm.fpga.pack.none.i16.s_struct.axis_datas' into 'hls_linear_combination(hls::stream<axis_data, 0>&, hls::stream<axis_data, 0>&, int, hls::stream<axis_data, 0>&)' (/opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_stream_39.h:174:9)
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 8.6 seconds. CPU system time: 0.59 seconds. Elapsed time: 12.05 seconds; current allocated memory: 184.135 MB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.01 seconds; current allocated memory: 184.136 MB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0.11 seconds. CPU system time: 0.02 seconds. Elapsed time: 0.21 seconds; current allocated memory: 189.781 MB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0.19 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.27 seconds; current allocated memory: 196.078 MB.
INFO: [XFORM 203-510] Pipelining loop 'READ_LOOP_COEFS' (/opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_stream_39.h:0) in function 'hls_linear_combination' automatically.
INFO: [XFORM 203-510] Pipelining loop 'EX_LOOP_LC1' (hls_linear_combination/hls_linear_combination.cpp:30) in function 'hls_linear_combination' automatically.
INFO: [XFORM 203-510] Pipelining loop 'EX_LOOP_LC2' (hls_linear_combination/hls_linear_combination.cpp:36) in function 'hls_linear_combination' automatically.
INFO: [XFORM 203-510] Pipelining loop 'WRITE_LOOP_OUT' (hls_linear_combination/hls_linear_combination.cpp:47) in function 'hls_linear_combination' automatically.
INFO: [XFORM 203-502] Unrolling all sub-loops inside loop 'EX_LOOP_LC1' (hls_linear_combination/hls_linear_combination.cpp:30) in function 'hls_linear_combination' for pipelining.
INFO: [XFORM 203-501] Unrolling loop 'READ_LOOP_VEC1' (hls_linear_combination/hls_linear_combination.cpp:15) in function 'hls_linear_combination' partially with a factor of 10.
INFO: [HLS 200-489] Unrolling loop 'EX_LOOP_LC12' (hls_linear_combination/hls_linear_combination.cpp:31) in function 'hls_linear_combination' completely with a factor of 60.
INFO: [XFORM 203-101] Partitioning array 'accumulators'  in dimension 1 with a cyclic factor 16.
INFO: [XFORM 203-101] Partitioning array 'vec_l' (hls_linear_combination/hls_linear_combination.cpp:8) in dimension 2 with a cyclic factor 6.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.0' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.1' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.2' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.3' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.4' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.5' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.6' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.7' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.8' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.9' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.10' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.11' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.12' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.13' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.14' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.15' completely based on array size.
INFO: [XFORM 203-101] Partitioning array 'accumulators.0' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.1' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.2' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.3' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.4' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.5' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.6' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.7' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.8' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.9' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.10' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.11' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.12' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.13' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.14' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.15' in dimension 1 completely.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 1.83 seconds. CPU system time: 0.03 seconds. Elapsed time: 2.61 seconds; current allocated memory: 225.717 MB.
WARNING: [HLS 200-960] Cannot flatten loop 'READ_LOOP_VEC1' (hls_linear_combination/hls_linear_combination.cpp:15:27) in function 'hls_linear_combination' more than one sub loop.
INFO: [HLS 200-472] Inferring partial write operation for 'coeffs_l' (hls_linear_combination/hls_linear_combination.cpp:25:15)
INFO: [HLS 200-472] Inferring partial write operation for 'out_l' (hls_linear_combination/hls_linear_combination.cpp:41:14)
INFO: [HLS 200-472] Inferring partial write operation for 'vec_l[0]' (hls_linear_combination/hls_linear_combination.cpp:18:17)
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 2.79 seconds. CPU system time: 0.01 seconds. Elapsed time: 3.24 seconds; current allocated memory: 229.729 MB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'hls_linear_combination' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'hls_linear_combination' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_59) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_58) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_57) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_56) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_55) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_54) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_53) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_52) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_51) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_50) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_49) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_48) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_47) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_46) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_45) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_44) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_43) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_42) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_41) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_40) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_39) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_38) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_37) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_36) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_35) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_34) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_33) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_32) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_31) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_30) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_29) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_28) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_27) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_26) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_25) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_24) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_23) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_22) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_21) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_20) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_19) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_18) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_17) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_16) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_15) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_14) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_13) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_12) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_11) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_10) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_9) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_8) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_7) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_6) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_5) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_4) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_3) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-1457] Automatically inferring 1WnR RAM type for array 'vec_l_5'. Use bind_storage pragma to overwrite if needed.
INFO: [HLS 200-1457] Automatically inferring 1WnR RAM type for array 'vec_l_4'. Use bind_storage pragma to overwrite if needed.
INFO: [HLS 200-1457] Automatically inferring 1WnR RAM type for array 'vec_l_3'. Use bind_storage pragma to overwrite if needed.
INFO: [HLS 200-1457] Automatically inferring 1WnR RAM type for array 'vec_l_2'. Use bind_storage pragma to overwrite if needed.
INFO: [HLS 200-1457] Automatically inferring 1WnR RAM type for array 'vec_l_1'. Use bind_storage pragma to overwrite if needed.
INFO: [HLS 200-1457] Automatically inferring 1WnR RAM type for array 'vec_l_0'. Use bind_storage pragma to overwrite if needed.
INFO: [SCHED 204-61] Pipelining loop 'READ_LOOP_VEC2'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 1, loop 'READ_LOOP_VEC2'
INFO: [SCHED 204-61] Pipelining loop 'READ_LOOP_VEC2'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 1, loop 'READ_LOOP_VEC2'
INFO: [SCHED 204-61] Pipelining loop 'READ_LOOP_VEC2'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 1, loop 'READ_LOOP_VEC2'
INFO: [SCHED 204-61] Pipelining loop 'READ_LOOP_VEC2'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 1, loop 'READ_LOOP_VEC2'
INFO: [SCHED 204-61] Pipelining loop 'READ_LOOP_VEC2'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 1, loop 'READ_LOOP_VEC2'
INFO: [SCHED 204-61] Pipelining loop 'READ_LOOP_VEC2'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 1, loop 'READ_LOOP_VEC2'
INFO: [SCHED 204-61] Pipelining loop 'READ_LOOP_VEC2'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 1, loop 'READ_LOOP_VEC2'
INFO: [SCHED 204-61] Pipelining loop 'READ_LOOP_VEC2'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 1, loop 'READ_LOOP_VEC2'
INFO: [SCHED 204-61] Pipelining loop 'READ_LOOP_VEC2'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 1, loop 'READ_LOOP_VEC2'
INFO: [SCHED 204-61] Pipelining loop 'READ_LOOP_VEC2'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 1, loop 'READ_LOOP_VEC2'
INFO: [SCHED 204-61] Pipelining loop 'READ_LOOP_COEFS'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 1, loop 'READ_LOOP_COEFS'
INFO: [SCHED 204-61] Pipelining loop 'EX_LOOP_LC1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 5, loop 'EX_LOOP_LC1'
INFO: [SCHED 204-61] Pipelining loop 'EX_LOOP_LC2'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 37, loop 'EX_LOOP_LC2'
INFO: [SCHED 204-61] Pipelining loop 'WRITE_LOOP_OUT'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 3, loop 'WRITE_LOOP_OUT'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 3.14 seconds. CPU system time: 0.24 seconds. Elapsed time: 4.8 seconds; current allocated memory: 233.939 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 2.97 seconds. CPU system time: 0.24 seconds. Elapsed time: 4.94 seconds; current allocated memory: 241.080 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'hls_linear_combination' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Design contains AXI ports. Reset is fixed to synchronous and active low.
INFO: [RTGEN 206-500] Setting interface mode on port 'hls_linear_combination/vecs_V' to 'axis' (register, both mode).
INFO: [RTGEN 206-500] Setting interface mode on port 'hls_linear_combination/coeffs_V' to 'axis' (register, both mode).
INFO: [RTGEN 206-500] Setting interface mode on port 'hls_linear_combination/len' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'hls_linear_combination/out_V' to 'axis' (register, both mode).
INFO: [RTGEN 206-500] Setting interface mode on function 'hls_linear_combination' to 'ap_ctrl_hs'.
WARNING: [RTGEN 206-101] Register 'accumulators_14_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_14_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_14_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_15_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_15_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_15_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_1_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_1_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_1_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_1_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_3_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_3_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_3_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_3_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_5_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_5_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_5_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_5_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_7_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_7_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_7_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_7_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_9_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_9_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_9_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_9_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_11_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_11_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_11_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_11_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_13_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_13_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_13_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_0_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_0_1' is power-on initialization.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z020-clg484-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -output=/home/osm/Documents/SECT-MAYO/MAYO/HLS/ips/hls_linear_combination.zip
INFO: [HLS 200-1464] Running solution command: config_export -rtl=vhdl
INFO: [HLS 200-1510] Running: set_part xc7z020-clg484-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_export -format ip_catalog -output /home/osm/Documents/SECT-MAYO/MAYO/HLS/ips/hls_linear_combination.zip -rtl vhdl 
INFO: [HLS 200-1510] Running: set_directive_top -name hls_linear_combination hls_linear_combination 
INFO: [HLS 200-1510] Running: set_directive_interface -mode axis -register -register_mode both hls_linear_combination vecs 
INFO: [HLS 200-1510] Running: set_directive_interface -mode axis -register -register_mode both hls_linear_combination coeffs 
INFO: [HLS 200-1510] Running: set_directive_interface -mode axis -register -register_mode both hls_linear_combination out 
INFO: [HLS 200-1510] Running: set_directive_array_partition -type cyclic -factor 16 -dim 1 hls_linear_combination accumulators 
INFO: [HLS 200-1510] Running: set_directive_array_partition -type cyclic -factor 6 -dim 2 hls_linear_combination vec_l 
INFO: [HLS 200-1510] Running: set_directive_pipeline -off hls_linear_combination/READ_LOOP_VEC1 
INFO: [HLS 200-1510] Running: set_directive_unroll -factor 4 hls_linear_combination/READ_LOOP_VEC1 
INFO: [HLS 200-1510] Running: set_directive_pipeline hls_linear_combination/READ_LOOP_VEC2 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0.03 seconds. CPU system time: 0.02 seconds. Elapsed time: 0.04 seconds; current allocated memory: 180.617 MB.
INFO: [HLS 200-10] Analyzing design file 'hls_linear_combination/hls_linear_combination.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 12.28 seconds. CPU system time: 0.9 seconds. Elapsed time: 18.45 seconds; current allocated memory: 182.034 MB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-131] Inlining function 'hls::stream<axis_data, 0>::read(axis_data&)' into 'hls::stream<axis_data, 0>::read()' (/opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_stream_39.h:156:9)
INFO: [HLS 214-131] Inlining function 'hls::stream<axis_data, 0>::read()' into 'hls_linear_combination(hls::stream<axis_data, 0>&, hls::stream<axis_data, 0>&, int, hls::stream<axis_data, 0>&)' (hls_linear_combination/hls_linear_combination.cpp:17:20)
INFO: [HLS 214-131] Inlining function 'hls::stream<axis_data, 0>::write(axis_data const&)' into 'hls_linear_combination(hls::stream<axis_data, 0>&, hls::stream<axis_data, 0>&, int, hls::stream<axis_data, 0>&)' (hls_linear_combination/hls_linear_combination.cpp:54:8)
INFO: [HLS 214-131] Inlining function 'hls::stream<axis_data, 0>::read()' into 'hls_linear_combination(hls::stream<axis_data, 0>&, hls::stream<axis_data, 0>&, int, hls::stream<axis_data, 0>&)' (hls_linear_combination/hls_linear_combination.cpp:24:21)
INFO: [HLS 214-131] Inlining function '_llvm.fpga.pack.none.i16.s_struct.axis_datas' into 'hls_linear_combination(hls::stream<axis_data, 0>&, hls::stream<axis_data, 0>&, int, hls::stream<axis_data, 0>&)' (/opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_stream_39.h:174:9)
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 7.56 seconds. CPU system time: 0.45 seconds. Elapsed time: 9.74 seconds; current allocated memory: 184.080 MB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0 seconds; current allocated memory: 184.081 MB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0.12 seconds. CPU system time: 0.02 seconds. Elapsed time: 0.2 seconds; current allocated memory: 189.702 MB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0.17 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.27 seconds; current allocated memory: 196.013 MB.
INFO: [XFORM 203-510] Pipelining loop 'READ_LOOP_COEFS' (/opt/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_stream_39.h:0) in function 'hls_linear_combination' automatically.
INFO: [XFORM 203-510] Pipelining loop 'EX_LOOP_LC1' (hls_linear_combination/hls_linear_combination.cpp:30) in function 'hls_linear_combination' automatically.
INFO: [XFORM 203-510] Pipelining loop 'EX_LOOP_LC2' (hls_linear_combination/hls_linear_combination.cpp:36) in function 'hls_linear_combination' automatically.
INFO: [XFORM 203-510] Pipelining loop 'WRITE_LOOP_OUT' (hls_linear_combination/hls_linear_combination.cpp:47) in function 'hls_linear_combination' automatically.
INFO: [XFORM 203-502] Unrolling all sub-loops inside loop 'EX_LOOP_LC1' (hls_linear_combination/hls_linear_combination.cpp:30) in function 'hls_linear_combination' for pipelining.
INFO: [XFORM 203-501] Unrolling loop 'READ_LOOP_VEC1' (hls_linear_combination/hls_linear_combination.cpp:15) in function 'hls_linear_combination' partially with a factor of 4.
INFO: [HLS 200-489] Unrolling loop 'EX_LOOP_LC12' (hls_linear_combination/hls_linear_combination.cpp:31) in function 'hls_linear_combination' completely with a factor of 60.
INFO: [XFORM 203-101] Partitioning array 'accumulators'  in dimension 1 with a cyclic factor 16.
INFO: [XFORM 203-101] Partitioning array 'vec_l' (hls_linear_combination/hls_linear_combination.cpp:8) in dimension 2 with a cyclic factor 6.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.0' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.1' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.2' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.3' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.4' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.5' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.6' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.7' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.8' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.9' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.10' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.11' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.12' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.13' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.14' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'accumulators.15' completely based on array size.
INFO: [XFORM 203-101] Partitioning array 'accumulators.0' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.1' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.2' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.3' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.4' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.5' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.6' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.7' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.8' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.9' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.10' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.11' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.12' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.13' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.14' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'accumulators.15' in dimension 1 completely.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 1.13 seconds. CPU system time: 0.06 seconds. Elapsed time: 1.5 seconds; current allocated memory: 224.746 MB.
WARNING: [HLS 200-960] Cannot flatten loop 'READ_LOOP_VEC1' (hls_linear_combination/hls_linear_combination.cpp:15:27) in function 'hls_linear_combination' more than one sub loop.
INFO: [HLS 200-472] Inferring partial write operation for 'coeffs_l' (hls_linear_combination/hls_linear_combination.cpp:25:15)
INFO: [HLS 200-472] Inferring partial write operation for 'out_l' (hls_linear_combination/hls_linear_combination.cpp:41:14)
INFO: [HLS 200-472] Inferring partial write operation for 'vec_l[0]' (hls_linear_combination/hls_linear_combination.cpp:18:17)
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 1.32 seconds. CPU system time: 0.02 seconds. Elapsed time: 1.7 seconds; current allocated memory: 225.479 MB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'hls_linear_combination' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'hls_linear_combination' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_59) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_58) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_57) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_56) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_55) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_54) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_53) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_52) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_51) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_50) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_49) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_48) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_47) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_46) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_45) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_44) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_43) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_42) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_41) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_40) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_39) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_38) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_37) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_36) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_35) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_34) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_33) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_32) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_31) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_30) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_29) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_28) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_27) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_26) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_25) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_24) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_23) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_22) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_21) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_20) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_19) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_18) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_17) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_16) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_15) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_14) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_13) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_12) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_11) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_10) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_9) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_8) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_7) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_6) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_5) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_4) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_3) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln32) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-1457] Automatically inferring 1WnR RAM type for array 'vec_l_5'. Use bind_storage pragma to overwrite if needed.
INFO: [HLS 200-1457] Automatically inferring 1WnR RAM type for array 'vec_l_4'. Use bind_storage pragma to overwrite if needed.
INFO: [HLS 200-1457] Automatically inferring 1WnR RAM type for array 'vec_l_3'. Use bind_storage pragma to overwrite if needed.
INFO: [HLS 200-1457] Automatically inferring 1WnR RAM type for array 'vec_l_2'. Use bind_storage pragma to overwrite if needed.
INFO: [HLS 200-1457] Automatically inferring 1WnR RAM type for array 'vec_l_1'. Use bind_storage pragma to overwrite if needed.
INFO: [HLS 200-1457] Automatically inferring 1WnR RAM type for array 'vec_l_0'. Use bind_storage pragma to overwrite if needed.
INFO: [SCHED 204-61] Pipelining loop 'READ_LOOP_VEC2'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 1, loop 'READ_LOOP_VEC2'
INFO: [SCHED 204-61] Pipelining loop 'READ_LOOP_VEC2'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 1, loop 'READ_LOOP_VEC2'
INFO: [SCHED 204-61] Pipelining loop 'READ_LOOP_VEC2'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 1, loop 'READ_LOOP_VEC2'
INFO: [SCHED 204-61] Pipelining loop 'READ_LOOP_VEC2'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 1, loop 'READ_LOOP_VEC2'
INFO: [SCHED 204-61] Pipelining loop 'READ_LOOP_COEFS'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 1, loop 'READ_LOOP_COEFS'
INFO: [SCHED 204-61] Pipelining loop 'EX_LOOP_LC1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 5, loop 'EX_LOOP_LC1'
INFO: [SCHED 204-61] Pipelining loop 'EX_LOOP_LC2'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 37, loop 'EX_LOOP_LC2'
INFO: [SCHED 204-61] Pipelining loop 'WRITE_LOOP_OUT'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 3, loop 'WRITE_LOOP_OUT'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 1.96 seconds. CPU system time: 0.19 seconds. Elapsed time: 2.81 seconds; current allocated memory: 228.732 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 1.93 seconds. CPU system time: 0.19 seconds. Elapsed time: 2.72 seconds; current allocated memory: 232.832 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'hls_linear_combination' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Design contains AXI ports. Reset is fixed to synchronous and active low.
INFO: [RTGEN 206-500] Setting interface mode on port 'hls_linear_combination/vecs_V' to 'axis' (register, both mode).
INFO: [RTGEN 206-500] Setting interface mode on port 'hls_linear_combination/coeffs_V' to 'axis' (register, both mode).
INFO: [RTGEN 206-500] Setting interface mode on port 'hls_linear_combination/len' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'hls_linear_combination/out_V' to 'axis' (register, both mode).
INFO: [RTGEN 206-500] Setting interface mode on function 'hls_linear_combination' to 'ap_ctrl_hs'.
WARNING: [RTGEN 206-101] Register 'accumulators_15_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_15_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_15_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_0_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_0_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_0_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_0_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_1_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_1_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_1_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_1_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_2_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_2_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_2_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_2_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_3_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_3_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_3_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_3_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_4_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_4_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_4_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_4_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_5_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_5_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_5_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_5_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_6_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_6_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_6_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_6_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_7_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_7_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_7_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_7_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_8_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_8_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_8_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_8_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_9_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_9_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_9_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_9_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_10_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_10_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_10_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_10_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_11_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_11_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accumulators_11_2' is power-on initialization.
WARNING: [RTGEN 206-101] ==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
