

================================================================
== Vitis HLS Report for 'test_func'
================================================================
* Date:           Mon Jun 27 16:48:50 2022

* Version:        2020.2 (Build 3064766 on Wed Nov 18 09:12:47 MST 2020)
* Project:        test_funcs
* Solution:       solution1 (Vivado IP Flow Target)
* Product family: zynq
* Target device:  xc7z020-clg484-1


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  |  10.00 ns|  2.552 ns|     2.70 ns|
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-----+-----+---------+
    |  Latency (cycles) |  Latency (absolute) |  Interval | Pipeline|
    |   min   |   max   |    min   |    max   | min | max |   Type  |
    +---------+---------+----------+----------+-----+-----+---------+
    |        ?|        ?|         ?|         ?|    ?|    ?|     none|
    +---------+---------+----------+----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +------------+---------+---------+----------+-----------+-----------+------+----------+
        |            |  Latency (cycles) | Iteration|  Initiation Interval  | Trip |          |
        |  Loop Name |   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +------------+---------+---------+----------+-----------+-----------+------+----------+
        |- SUM_LOOP  |        ?|        ?|         1|          1|          1|     ?|       yes|
        +------------+---------+---------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 1


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 3
* Pipeline : 1
  Pipeline-0 : II = 1, D = 1, States = { 2 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 2 
3 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 2.55>
ST_1 : Operation 4 [1/1] (0.00ns)   --->   "%spectopmodule_ln0 = spectopmodule void @_ssdm_op_SpecTopModule, void @empty_1"   --->   Operation 4 'spectopmodule' 'spectopmodule_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 5 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i32 %A"   --->   Operation 5 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 6 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i32 %A, void @empty, i32 0, i32 0, void @empty_0, i32 0, i32 0, void @empty_0, void @empty_0, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_0"   --->   Operation 6 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 7 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i32 %B"   --->   Operation 7 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 8 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i32 %B, void @empty, i32 0, i32 0, void @empty_0, i32 0, i32 0, void @empty_0, void @empty_0, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_0"   --->   Operation 8 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 9 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i32 %C"   --->   Operation 9 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 10 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i32 %C, void @empty, i32 0, i32 0, void @empty_0, i32 0, i32 0, void @empty_0, void @empty_0, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_0"   --->   Operation 10 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 11 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i32 %len"   --->   Operation 11 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 12 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i32 %len, void @empty, i32 0, i32 0, void @empty_0, i32 0, i32 0, void @empty_0, void @empty_0, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_0"   --->   Operation 12 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 13 [1/1] (0.00ns)   --->   "%len_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %len" [test_func.cpp:3]   --->   Operation 13 'read' 'len_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 14 [1/1] (0.00ns)   --->   "%A_read = read i32 @_ssdm_op_Read.ap_auto.i32P0A, i32 %A" [test_func.cpp:5]   --->   Operation 14 'read' 'A_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 15 [1/1] (0.00ns)   --->   "%B_read = read i32 @_ssdm_op_Read.ap_auto.i32P0A, i32 %B" [test_func.cpp:5]   --->   Operation 15 'read' 'B_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 16 [1/1] (2.55ns)   --->   "%add_ln5 = add i32 %B_read, i32 %A_read" [test_func.cpp:5]   --->   Operation 16 'add' 'add_ln5' <Predicate = true> <Delay = 2.55> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 17 [1/1] (1.58ns)   --->   "%br_ln4 = br void" [test_func.cpp:4]   --->   Operation 17 'br' 'br_ln4' <Predicate = true> <Delay = 1.58>

State 2 <SV = 1> <Delay = 2.55>
ST_2 : Operation 18 [1/1] (0.00ns)   --->   "%i = phi i32 %add_ln4, void %.split, i32 0, void %.lr.ph" [test_func.cpp:4]   --->   Operation 18 'phi' 'i' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 19 [1/1] (2.55ns)   --->   "%add_ln4 = add i32 %i, i32 1" [test_func.cpp:4]   --->   Operation 19 'add' 'add_ln4' <Predicate = true> <Delay = 2.55> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 20 [1/1] (2.47ns)   --->   "%icmp_ln4 = icmp_eq  i32 %i, i32 %len_read" [test_func.cpp:4]   --->   Operation 20 'icmp' 'icmp_ln4' <Predicate = true> <Delay = 2.47> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 2.47> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 21 [1/1] (0.00ns)   --->   "%br_ln4 = br i1 %icmp_ln4, void %.split, void %._crit_edge.loopexit" [test_func.cpp:4]   --->   Operation 21 'br' 'br_ln4' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 22 [1/1] (0.00ns)   --->   "%specpipeline_ln4 = specpipeline void @_ssdm_op_SpecPipeline, i32 4294967295, i32 0, i32 0, i32 0, void @empty_0" [test_func.cpp:4]   --->   Operation 22 'specpipeline' 'specpipeline_ln4' <Predicate = (!icmp_ln4)> <Delay = 0.00>
ST_2 : Operation 23 [1/1] (0.00ns)   --->   "%specloopname_ln4 = specloopname void @_ssdm_op_SpecLoopName, void @empty_2" [test_func.cpp:4]   --->   Operation 23 'specloopname' 'specloopname_ln4' <Predicate = (!icmp_ln4)> <Delay = 0.00>
ST_2 : Operation 24 [1/1] (0.00ns)   --->   "%write_ln5 = write void @_ssdm_op_Write.ap_auto.i32P0A, i32 %C, i32 %add_ln5" [test_func.cpp:5]   --->   Operation 24 'write' 'write_ln5' <Predicate = (!icmp_ln4)> <Delay = 0.00>
ST_2 : Operation 25 [1/1] (0.00ns)   --->   "%br_ln0 = br void"   --->   Operation 25 'br' 'br_ln0' <Predicate = (!icmp_ln4)> <Delay = 0.00>

State 3 <SV = 2> <Delay = 0.00>
ST_3 : Operation 26 [1/1] (0.00ns)   --->   "%ret_ln7 = ret" [test_func.cpp:7]   --->   Operation 26 'ret' 'ret_ln7' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 2.7ns.

 <State 1>: 2.55ns
The critical path consists of the following:
	wire read on port 'A' (test_func.cpp:5) [15]  (0 ns)
	'add' operation ('add_ln5', test_func.cpp:5) [17]  (2.55 ns)

 <State 2>: 2.55ns
The critical path consists of the following:
	'phi' operation ('i', test_func.cpp:4) with incoming values : ('add_ln4', test_func.cpp:4) [20]  (0 ns)
	'add' operation ('add_ln4', test_func.cpp:4) [21]  (2.55 ns)

 <State 3>: 0ns
The critical path consists of the following:


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
