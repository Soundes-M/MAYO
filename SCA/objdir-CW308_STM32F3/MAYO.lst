   1              		.cpu cortex-m4
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 6
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"MAYO.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.global	P1
  16              		.data
  17              		.align	2
  20              	P1:
  21 0000 1808141E 		.ascii	"\030\010\024\036\013\014\005\003\007\036\011\033\026"
  21      0B0C0503 
  21      071E091B 
  21      16
  22 000d 0B101B1A 		.ascii	"\013\020\033\032\036\025\012\005\002\030\031\020\026"
  22      1E150A05 
  22      02181910 
  22      16
  23 001a 16171D00 		.ascii	"\026\027\035\000\010\011\011\014\026\033\013\021\036"
  23      0809090C 
  23      161B0B11 
  23      1E
  24 0027 0F191319 		.ascii	"\017\031\023\031\030\015\004\027\005\006\001\014\004"
  24      180D0417 
  24      0506010C 
  24      04
  25 0034 1F1B1A03 		.ascii	"\037\033\032\003\007\031\006\037\016\006\012\007\036"
  25      0719061F 
  25      0E060A07 
  25      1E
  26 0041 111E1217 		.ascii	"\021\036\022\027\024\014\021\005\011\012\006\004\003"
  26      140C1105 
  26      090A0604 
  26      03
  27 004e 0A000C01 		.ascii	"\012\000\014\001\014\026\007\005\030\017\026\032\000"
  27      0C160705 
  27      180F161A 
  27      00
  28 005b 15140015 		.ascii	"\025\024\000\025\007\034\026\025\031\034\005\000\013"
  28      071C1615 
  28      191C0500 
  28      0B
  29 0068 1B050C19 		.ascii	"\033\005\014\031\025\033\016\000\007\007\030\002\024"
  29      151B0E00 
  29      07071802 
  29      14
  30 0075 1604001F 		.ascii	"\026\004\000\037\011\035\020\015\027\036\013\014\036"
  30      091D100D 
  30      171E0B0C 
  30      1E
  31 0082 041D140D 		.ascii	"\004\035\024\015\002\014\006\016\027\033\034\001\007"
  31      020C060E 
  31      171B1C01 
  31      07
  32 008f 1C0D1B0B 		.ascii	"\034\015\033\013\006\001\025\031\033\022\020\002\020"
  32      06011519 
  32      1B121002 
  32      10
  33 009c 150B1115 		.ascii	"\025\013\021\025\025\020\000\030\036\014\010\005\020"
  33      15100018 
  33      1E0C0805 
  33      10
  34 00a9 03150B15 		.ascii	"\003\025\013\025\023\037\016\020\031\016\012\024\011"
  34      131F0E10 
  34      190E0A14 
  34      09
  35 00b6 020B101F 		.ascii	"\002\013\020\037\022\006\013\024\014\012\015\005\012"
  35      12060B14 
  35      0C0A0D05 
  35      0A
  36 00c3 10040B1F 		.ascii	"\020\004\013\037\005\006\025\034\017\002\025\011\024"
  36      0506151C 
  36      0F021509 
  36      14
  37 00d0 1D051D0E 		.ascii	"\035\005\035\016\035\011\000\024\016\020\001\001\036"
  37      1D090014 
  37      0E100101 
  37      1E
  38 00dd 1C050818 		.ascii	"\034\005\010\030\020\013\026\017\017\037\022\017\001"
  38      100B160F 
  38      0F1F120F 
  38      01
  39 00ea 05020505 		.ascii	"\005\002\005\005\017\034\011\006\030\001\004\037\032"
  39      0F1C0906 
  39      1801041F 
  39      1A
  40 00f7 1E181418 		.ascii	"\036\030\024\030\025\034\022\003\033\014\013\023\014"
  40      151C1203 
  40      1B0C0B13 
  40      0C
  41 0104 1E081C18 		.ascii	"\036\010\034\030\036\003\002\013\035\020\014\011\023"
  41      1E03020B 
  41      1D100C09 
  41      13
  42 0111 1C091600 		.ascii	"\034\011\026\000\013\002\023\014\027\021\020\036\011"
  42      0B02130C 
  42      1711101E 
  42      09
  43 011e 0D050703 		.ascii	"\015\005\007\003\033\017\005\017\026\000\021\005\021"
  43      1B0F050F 
  43      16001105 
  43      11
  44 012b 150D081A 		.ascii	"\025\015\010\032\011\030\020\005\037\035\004\006\013"
  44      09181005 
  44      1F1D0406 
  44      0B
  45 0138 09191D19 		.ascii	"\011\031\035\031\003\034\031\030\027\032\020\021\017"
  45      031C1918 
  45      171A1011 
  45      0F
  46 0145 07171013 		.ascii	"\007\027\020\023\030\027\006\024\006\011\024\030\010"
  46      18170614 
  46      06091418 
  46      08
  47 0152 0F0D131A 		.ascii	"\017\015\023\032\031\023\010\025\012\027\031\021\011"
  47      19130815 
  47      0A171911 
  47      09
  48 015f 100D0D1C 		.ascii	"\020\015\015\034\035\030\016\020\021\010\037\022\007"
  48      1D180E10 
  48      11081F12 
  48      07
  49 016c 0117160A 		.ascii	"\001\027\026\012\037\034\016\012\007\015\002\003\003"
  49      1F1C0E0A 
  49      070D0203 
  49      03
  50 0179 1C090503 		.ascii	"\034\011\005\003\025\034\020\015\011\032\001\016\007"
  50      151C100D 
  50      091A010E 
  50      07
  51 0186 021B1A16 		.ascii	"\002\033\032\026\000\012\026\036\004\024\036\024\017"
  51      000A161E 
  51      04141E14 
  51      0F
  52 0193 10050806 		.ascii	"\020\005\010\006\011\032\000\033\015\011\033\015\023"
  52      091A001B 
  52      0D091B0D 
  52      13
  53 01a0 1910050B 		.ascii	"\031\020\005\013\001\032\012\020\006\004\025\015\011"
  53      011A0A10 
  53      0604150D 
  53      09
  54 01ad 040F1400 		.ascii	"\004\017\024\000\035\001\005\032\030\020\012\013\034"
  54      1D01051A 
  54      18100A0B 
  54      1C
  55 01ba 150A0F05 		.ascii	"\025\012\017\005\022\024\026\014\034\027\014\017\010"
  55      1214160C 
  55      1C170C0F 
  55      08
  56 01c7 11161F0B 		.ascii	"\021\026\037\013\032\020\020\012\007\020\000\031\013"
  56      1A10100A 
  56      07100019 
  56      0B
  57 01d4 131F0809 		.ascii	"\023\037\010\011\027\016\025\003\015\033\007\030\030"
  57      170E1503 
  57      0D1B0718 
  57      18
  58 01e1 08051C0B 		.ascii	"\010\005\034\013\035\025\027\004\025\030\003\000\026"
  58      1D151704 
  58      15180300 
  58      16
  59 01ee 13020C1A 		.ascii	"\023\002\014\032\001\000\032\020\017\037\012\035\023"
  59      01001A10 
  59      0F1F0A1D 
  59      13
  60 01fb 0A05001D 		.ascii	"\012\005\000\035\026\015\031\014\031\035\026\027\032"
  60      160D190C 
  60      191D1617 
  60      1A
  61 0208 000B0E01 		.ascii	"\000\013\016\001\037\021\011\035\000\010\033\006\022"
  61      1F11091D 
  61      00081B06 
  61      12
  62 0215 01031B0A 		.ascii	"\001\003\033\012\031\006\014\015\021\006\016\003\020"
  62      19060C0D 
  62      11060E03 
  62      10
  63 0222 1F1B1003 		.ascii	"\037\033\020\003\004\034\002\017\017\034\017\017\032"
  63      041C020F 
  63      0F1C0F0F 
  63      1A
  64 022f 15161910 		.ascii	"\025\026\031\020\032\026\035\032\010\003\017\010\014"
  64      1A161D1A 
  64      08030F08 
  64      0C
  65 023c 14171E00 		.ascii	"\024\027\036\000\012\006\021\006\010\026\012\003\027"
  65      0A061106 
  65      08160A03 
  65      17
  66 0249 19100C06 		.ascii	"\031\020\014\006\006\027\037\004\034\030\001\034\012"
  66      06171F04 
  66      1C18011C 
  66      0A
  67 0256 1B150202 		.ascii	"\033\025\002\002\023\022\033\016\031\016\003\033\025"
  67      13121B0E 
  67      190E031B 
  67      15
  68 0263 13130217 		.ascii	"\023\023\002\027\036\012\021\037\000\024\026\021\012"
  68      1E0A111F 
  68      00141611 
  68      0A
  69 0270 080E0512 		.ascii	"\010\016\005\022\035\012\023\006\026\031\027\001\004"
  69      1D0A1306 
  69      16191701 
  69      04
  70 027d 0A0F120B 		.ascii	"\012\017\022\013\014\017\016\037\033\017\000\024\014"
  70      0C0F0E1F 
  70      1B0F0014 
  70      0C
  71 028a 12020111 		.ascii	"\022\002\001\021\014\036\017\024\017\014\035\010\016"
  71      0C1E0F14 
  71      0F0C1D08 
  71      0E
  72 0297 0D1C0403 		.ascii	"\015\034\004\003\017\015\014\035\035\030\036\016\026"
  72      0F0D0C1D 
  72      1D181E0E 
  72      16
  73 02a4 0518060D 		.ascii	"\005\030\006\015\016\027\035\025\015\025\020\010\001"
  73      0E171D15 
  73      0D151008 
  73      01
  74 02b1 03030C1D 		.ascii	"\003\003\014\035\001\012\037\025\030\027\012\015\026"
  74      010A1F15 
  74      18170A0D 
  74      16
  75 02be 0E07171F 		.ascii	"\016\007\027\037\034\034\015\006\037\007\031\004\030"
  75      1C1C0D06 
  75      1F071904 
  75      18
  76 02cb 0B150615 		.ascii	"\013\025\006\025\022\022\006\022\026\002\003\001\003"
  76      12120612 
  76      16020301 
  76      03
  77 02d8 1102180A 		.ascii	"\021\002\030\012\002\030\021\000\025\023\025\033\033"
  77      02181100 
  77      1513151B 
  77      1B
  78 02e5 06001708 		.ascii	"\006\000\027\010\011\027\000\016\020\033\012\023\034"
  78      0917000E 
  78      101B0A13 
  78      1C
  79 02f2 1D080C18 		.ascii	"\035\010\014\030\001\033\012\031\030\020\022\026\007"
  79      011B0A19 
  79      18101216 
  79      07
  80 02ff 130F0F16 		.ascii	"\023\017\017\026\003\010\012\037\004\015\013\026\004"
  80      03080A1F 
  80      040D0B16 
  80      04
  81 030c 09150819 		.ascii	"\011\025\010\031\011\015\021\011\017\035\027\033\024"
  81      090D1109 
  81      0F1D171B 
  81      14
  82 0319 06180C0B 		.ascii	"\006\030\014\013\011\010\022\001\031\020\037\012\006"
  82      09081201 
  82      19101F0A 
  82      06
  83 0326 14050019 		.ascii	"\024\005\000\031\007\036\033\010\027\002\030\037\017"
  83      071E1B08 
  83      1702181F 
  83      0F
  84 0333 131F1214 		.ascii	"\023\037\022\024\003\001\036\016\030\037\004\033\007"
  84      03011E0E 
  84      181F041B 
  84      07
  85 0340 0B1E0A1E 		.ascii	"\013\036\012\036\003\005\013\007\035\023\032\006\006"
  85      03050B07 
  85      1D131A06 
  85      06
  86 034d 1E150210 		.ascii	"\036\025\002\020\030\035\007\021\025\026\036\030\022"
  86      181D0711 
  86      15161E18 
  86      12
  87 035a 10091311 		.ascii	"\020\011\023\021\012\015\006\007\006\014\010\000\001"
  87      0A0D0607 
  87      060C0800 
  87      01
  88 0367 1315041E 		.ascii	"\023\025\004\036\017\001\026\014\007\005\007\005\016"
  88      0F01160C 
  88      07050705 
  88      0E
  89 0374 0C071005 		.ascii	"\014\007\020\005\001\003\025\011\021\001\000\007\013"
  89      01031509 
  89      11010007 
  89      0B
  90 0381 11171F18 		.ascii	"\021\027\037\030\033\034\000\000\005\024\025\024\020"
  90      1B1C0000 
  90      05141514 
  90      10
  91 038e 1B181E1E 		.ascii	"\033\030\036\036\035\004\002\011\020\014\034\000\011"
  91      1D040209 
  91      100C1C00 
  91      09
  92 039b 181B1C02 		.ascii	"\030\033\034\002\025\031\012\014\011\015\027\022\007"
  92      15190A0C 
  92      090D1712 
  92      07
  93 03a8 010A1E13 		.ascii	"\001\012\036\023\003\030\017\000\034\007\004\022\037"
  93      03180F00 
  93      1C070412 
  93      1F
  94 03b5 0A020B1A 		.ascii	"\012\002\013\032\034\026\004\012\006\023\033\002\030"
  94      1C16040A 
  94      06131B02 
  94      18
  95 03c2 15070D1A 		.ascii	"\025\007\015\032\037\037\022\026\026\001\011\033\031"
  95      1F1F1216 
  95      1601091B 
  95      19
  96 03cf 1A17071A 		.ascii	"\032\027\007\032\016\017\020\022\026\027\033\035\034"
  96      0E0F1012 
  96      16171B1D 
  96      1C
  97 03dc 13151715 		.ascii	"\023\025\027\025\021\011\025\015\001\006\010\030\003"
  97      1109150D 
  97      01060818 
  97      03
  98 03e9 160D1111 		.ascii	"\026\015\021\021\002\010\015\031\010\007\030\002\024"
  98      02080D19 
  98      08071802 
  98      14
  99 03f6 07051207 		.ascii	"\007\005\022\007\036\001\006\037\012\022\027\002\032"
  99      1E01061F 
  99      0A121702 
  99      1A
 100 0403 001E0A17 		.ascii	"\000\036\012\027\012\020\015\020\017\000\000\034\030"
 100      0A100D10 
 100      0F00001C 
 100      18
 101 0410 0C1E0A0B 		.ascii	"\014\036\012\013\001\027\010\015\015\031\031\015\010"
 101      0117080D 
 101      0D19190D 
 101      08
 102 041d 190D001F 		.ascii	"\031\015\000\037\010\012\017\031\006\020\032\001\016"
 102      080A0F19 
 102      06101A01 
 102      0E
 103 042a 060F1901 		.ascii	"\006\017\031\001\025\037\012\031\034\032\031\031\004"
 103      151F0A19 
 103      1C1A1919 
 103      04
 104 0437 140D1D07 		.ascii	"\024\015\035\007\030\003\011\006\016\002\032\011\022"
 104      18030906 
 104      0E021A09 
 104      12
 105 0444 01010115 		.ascii	"\001\001\001\025\022\027\036\023\020\017\007\023\037"
 105      12171E13 
 105      100F0713 
 105      1F
 106 0451 0A191002 		.ascii	"\012\031\020\002\037\034\006\032\026\021\015\005\000"
 106      1F1C061A 
 106      16110D05 
 106      00
 107 045e 1808100D 		.ascii	"\030\010\020\015\011\001\032\035\026\024\021\003\017"
 107      09011A1D 
 107      16141103 
 107      0F
 108 046b 0803061B 		.ascii	"\010\003\006\033\031\014\030\025\031\031\035\031\015"
 108      190C1815 
 108      19191D19 
 108      0D
 109 0478 15010D02 		.ascii	"\025\001\015\002\000\007\033\033\026\001\022\010\034"
 109      00071B1B 
 109      16011208 
 109      1C
 110 0485 12110C05 		.ascii	"\022\021\014\005\020\001\012\025\022\034\011\020\033"
 110      10010A15 
 110      121C0910 
 110      1B
 111 0492 100E1C0B 		.ascii	"\020\016\034\013\012\000\034\004\011\037\025\031\031"
 111      0A001C04 
 111      091F1519 
 111      19
 112 049f 070C1210 		.ascii	"\007\014\022\020\007\015\023\006\015\005\017\014\011"
 112      070D1306 
 112      0D050F0C 
 112      09
 113 04ac 14001507 		.ascii	"\024\000\025\007\022\002\026\005\006\023\021\014\034"
 113      12021605 
 113      0613110C 
 113      1C
 114 04b9 1D0D1104 		.ascii	"\035\015\021\004\023\024\015\004\026\007\011\015\016"
 114      13140D04 
 114      1607090D 
 114      0E
 115 04c6 03100A0C 		.ascii	"\003\020\012\014\027\005\037\012\027\013\002\026\020"
 115      17051F0A 
 115      170B0216 
 115      10
 116 04d3 061B0F0F 		.ascii	"\006\033\017\017\010\026\004\020\010\032\022\030\031"
 116      08160410 
 116      081A1218 
 116      19
 117 04e0 101A1302 		.ascii	"\020\032\023\002\014\011\011\017\001\006\006\033\036"
 117      0C09090F 
 117      0106061B 
 117      1E
 118 04ed 0912080C 		.ascii	"\011\022\010\014\024\000\033\030\027\027\027\014\037"
 118      14001B18 
 118      1717170C 
 118      1F
 119 04fa 1319131A 		.ascii	"\023\031\023\032\035\014\022\024\023\014\006\006\013"
 119      1D0C1214 
 119      130C0606 
 119      0B
 120 0507 16021B1A 		.ascii	"\026\002\033\032\000\015\031\004\004\011\006\016\020"
 120      000D1904 
 120      0409060E 
 120      10
 121 0514 050E071B 		.ascii	"\005\016\007\033\034\005\014\013\013\037\013\013\012"
 121      1C050C0B 
 121      0B1F0B0B 
 121      0A
 122 0521 03121510 		.ascii	"\003\022\025\020\022\037\011\005\022\026\026\027\007"
 122      121F0905 
 122      12161617 
 122      07
 123 052e 13090C00 		.ascii	"\023\011\014\000\024\027\031\020\002\016\010\007\021"
 123      14171910 
 123      020E0807 
 123      11
 124 053b 111D0917 		.ascii	"\021\035\011\027\035\001\033\014\004\037\021\024\001"
 124      1D011B0C 
 124      041F1114 
 124      01
 125 0548 150C0406 		.ascii	"\025\014\004\006\015\024\023\011\011\002\036\012\017"
 125      0D141309 
 125      09021E0A 
 125      0F
 126 0555 12100317 		.ascii	"\022\020\003\027\016\025\006\000\005\007\015\026\032"
 126      0E150600 
 126      05070D16 
 126      1A
 127 0562 0B0F0515 		.ascii	"\013\017\005\025\004\035\037\036\031\033\030\013\025"
 127      041D1F1E 
 127      191B180B 
 127      15
 128 056f 0F091F1C 		.ascii	"\017\011\037\034\031\012\034\027\024\004\017\001\034"
 128      190A1C17 
 128      14040F01 
 128      1C
 129 057c 030A010B 		.ascii	"\003\012\001\013\022\021\024\010\021\033\034\017\007"
 129      12111408 
 129      111B1C0F 
 129      07
 130 0589 12171110 		.ascii	"\022\027\021\020\006\037\005\026\007\034\025\020\006"
 130      061F0516 
 130      071C1510 
 130      06
 131 0596 1E1C010B 		.ascii	"\036\034\001\013\015\001\021\003\000\035\014\017\024"
 131      0D011103 
 131      001D0C0F 
 131      14
 132 05a3 1C09101A 		.ascii	"\034\011\020\032\013\034\030\016\026\016\027\031\014"
 132      0B1C180E 
 132      160E1719 
 132      0C
 133 05b0 16191C18 		.ascii	"\026\031\034\030\034\030\030\002\001\033\025\027\031"
 133      1C181802 
 133      011B1517 
 133      19
 134 05bd 06041A00 		.ascii	"\006\004\032\000\004\001\011\005\011\027\030\012\022"
 134      04010905 
 134      0917180A 
 134      12
 135 05ca 180F110F 		.ascii	"\030\017\021\017\033\033\033\012\015\032\026\034\002"
 135      1B1B1B0A 
 135      0D1A161C 
 135      02
 136 05d7 14061116 		.ascii	"\024\006\021\026\002\026\025\003\034\007\025\035\002"
 136      02161503 
 136      1C07151D 
 136      02
 137 05e4 030E0A01 		.ascii	"\003\016\012\001\015\015\035\001\007\016\027\013\007"
 137      0D0D1D01 
 137      070E170B 
 137      07
 138 05f1 1B080600 		.ascii	"\033\010\006\000\004\006\014\016\012\036\023\006\015"
 138      04060C0E 
 138      0A1E1306 
 138      0D
 139 05fe 081B120E 		.ascii	"\010\033\022\016\032\006\032\006\025\034\026\013\005"
 139      1A061A06 
 139      151C160B 
 139      05
 140 060b 0A041E14 		.ascii	"\012\004\036\024\023\003\007\000\015\001\017\001\034"
 140      13030700 
 140      0D010F01 
 140      1C
 141 0618 11191914 		.ascii	"\021\031\031\024\030\031\004\021\006\032\036\006\006"
 141      18190411 
 141      061A1E06 
 141      06
 142 0625 081B0414 		.ascii	"\010\033\004\024\036\007\033\012\011\010\033\035\026"
 142      1E071B0A 
 142      09081B1D 
 142      16
 143 0632 1A041911 		.ascii	"\032\004\031\021\015\023\025\024\015\005\021\033\020"
 143      0D131514 
 143      0D05111B 
 143      10
 144 063f 1715070C 		.ascii	"\027\025\007\014\004\012\017\012\020\023\025\034\010"
 144      040A0F0A 
 144      1013151C 
 144      08
 145 064c 080D0501 		.ascii	"\010\015\005\001\031\031\000\007\027\003\026\033\021"
 145      19190007 
 145      1703161B 
 145      11
 146 0659 031A0204 		.ascii	"\003\032\002\004\025\037\022\030\022\012\013\020\034"
 146      151F1218 
 146      120A0B10 
 146      1C
 147 0666 15041608 		.ascii	"\025\004\026\010\022\010\031\023\027\030\002\010\014"
 147      12081913 
 147      17180208 
 147      0C
 148 0673 1D001D1A 		.ascii	"\035\000\035\032\014\022\000\016\027\026\027\022\010"
 148      0C12000E 
 148      17161712 
 148      08
 149 0680 0D0A1710 		.ascii	"\015\012\027\020\027\011\022\030\025\013\035\035\001"
 149      17091218 
 149      150B1D1D 
 149      01
 150 068d 00160616 		.ascii	"\000\026\006\026\034\027\003\017\007\010\026\036\016"
 150      1C17030F 
 150      0708161E 
 150      0E
 151 069a 1603051E 		.ascii	"\026\003\005\036\021\021\034\016\000\015\021\015\026"
 151      11111C0E 
 151      000D110D 
 151      16
 152 06a7 131B0D02 		.ascii	"\023\033\015\002\022\014\011\027\023\015\037\013\022"
 152      120C0917 
 152      130D1F0B 
 152      12
 153 06b4 021A0A14 		.ascii	"\002\032\012\024\016\006\014\024\032\007\002\026\020"
 153      0E060C14 
 153      1A070216 
 153      10
 154 06c1 18011A00 		.ascii	"\030\001\032\000\035\016\032\002\000\037\005\027\012"
 154      1D0E1A02 
 154      001F0517 
 154      0A
 155 06ce 13140F02 		.ascii	"\023\024\017\002\001\021\001\016\006\001\017\003\027"
 155      0111010E 
 155      06010F03 
 155      17
 156 06db 0F1F0903 		.ascii	"\017\037\011\003\005\010\032\012\001\037\030\030\037"
 156      05081A0A 
 156      011F1818 
 156      1F
 157 06e8 0A19181E 		.ascii	"\012\031\030\036\034\030\016\002\020\033\010\006\004"
 157      1C180E02 
 157      101B0806 
 157      04
 158 06f5 001E1210 		.ascii	"\000\036\022\020\006\025\026\016\031\010\022\024\000"
 158      0615160E 
 158      19081214 
 158      00
 159 0702 0800120D 		.ascii	"\010\000\022\015\035\001\030\022\003\034\034\014\021"
 159      1D011812 
 159      031C1C0C 
 159      11
 160 070f 13130615 		.ascii	"\023\023\006\025\007\007\031\022\005\005\012\034\007"
 160      07071912 
 160      05050A1C 
 160      07
 161 071c 12181107 		.ascii	"\022\030\021\007\005\001\024\031\014\037\033\033\020"
 161      05011419 
 161      0C1F1B1B 
 161      10
 162 0729 17150407 		.ascii	"\027\025\004\007\022\023\011\001\017\024\020\026\021"
 162      12130901 
 162      0F141016 
 162      11
 163 0736 17040D09 		.ascii	"\027\004\015\011\013\017\034\014\037\016\016\004\005"
 163      0B0F1C0C 
 163      1F0E0E04 
 163      05
 164 0743 0C18031C 		.ascii	"\014\030\003\034\031\037\015\013\006\024\023\016\026"
 164      191F0D0B 
 164      0614130E 
 164      16
 165 0750 1807071E 		.ascii	"\030\007\007\036\002\015\005\024\037\006\035\023\015"
 165      020D0514 
 165      1F061D13 
 165      0D
 166 075d 07011F15 		.ascii	"\007\001\037\025\021\010\031\016\015\032\020\001\002"
 166      1108190E 
 166      0D1A1001 
 166      02
 167 076a 1E081F05 		.ascii	"\036\010\037\005\016\021\001\015\033\014\013\033\000"
 167      0E11010D 
 167      1B0C0B1B 
 167      00
 168 0777 0107060E 		.ascii	"\001\007\006\016\025\002\026\030\012\030\006\024\026"
 168      15021618 
 168      0A180614 
 168      16
 169 0784 09120E13 		.ascii	"\011\022\016\023\007\030\005\032\030\030\011\000\001"
 169      0718051A 
 169      18180900 
 169      01
 170 0791 0604031D 		.ascii	"\006\004\003\035\023\025\001\022\036\033\036\024\012"
 170      13150112 
 170      1E1B1E14 
 170      0A
 171 079e 161D1F11 		.ascii	"\026\035\037\021\026\036\004\024\004\013\031\004\002"
 171      161E0414 
 171      040B1904 
 171      02
 172 07ab 1A0B061B 		.ascii	"\032\013\006\033\031\027\037\022\000\000\023\037\036"
 172      19171F12 
 172      0000131F 
 172      1E
 173 07b8 1A191907 		.ascii	"\032\031\031\007\037\015\021\006\015\011\010\007\013"
 173      1F0D1106 
 173      0D090807 
 173      0B
 174 07c5 0B1C0607 		.ascii	"\013\034\006\007\002\002\037\003\026\006\037"
 174      02021F03 
 174      16061F
 175 07d0 18021604 		.ascii	"\030\002\026\004\006\024\026\000\035\012\007\015\021"
 175      06141600 
 175      1D0A070D 
 175      11
 176 07dd 1F171103 		.ascii	"\037\027\021\003\025\013\015\002\027\033\026\015\030"
 176      150B0D02 
 176      171B160D 
 176      18
 177 07ea 0E1D1509 		.ascii	"\016\035\025\011\035\011\001\017\014\036\003\024\001"
 177      1D09010F 
 177      0C1E0314 
 177      01
 178 07f7 170A051C 		.ascii	"\027\012\005\034\006\016\012\016\025\032\031\003\005"
 178      060E0A0E 
 178      151A1903 
 178      05
 179 0804 140D0B00 		.ascii	"\024\015\013\000\036\000\030\026\007\025\004\012\016"
 179      1E001816 
 179      0715040A 
 179      0E
 180 0811 0907011D 		.ascii	"\011\007\001\035\003\003\036\015\023\033\032\035\000"
 180      03031E0D 
 180      131B1A1D 
 180      00
 181 081e 101E120F 		.ascii	"\020\036\022\017\005\011\022\024\022\037\020\002\007"
 181      05091214 
 181      121F1002 
 181      07
 182 082b 0B0B121D 		.ascii	"\013\013\022\035\037\013\026\010\017\033\035\034\022"
 182      1F0B1608 
 182      0F1B1D1C 
 182      12
 183 0838 1214131B 		.ascii	"\022\024\023\033\015\010\000\027\022\005\007\021\015"
 183      0D080017 
 183      12050711 
 183      0D
 184 0845 0C081916 		.ascii	"\014\010\031\026\016\001\002\000\021\016\004\000\006"
 184      0E010200 
 184      110E0400 
 184      06
 185 0852 1E1D0E1F 		.ascii	"\036\035\016\037\023\021\012\030\034\032\030\020\011"
 185      13110A18 
 185      1C1A1810 
 185      09
 186 085f 15080F1B 		.ascii	"\025\010\017\033\011\014\021\016\026\027\032\020\004"
 186      090C110E 
 186      16171A10 
 186      04
 187 086c 18040A01 		.ascii	"\030\004\012\001\000\026\001\017\020\006\007\022\004"
 187      0016010F 
 187      10060712 
 187      04
 188 0879 071D0710 		.ascii	"\007\035\007\020\034\030\005\025\021\022\021\012\013"
 188      1C180515 
 188      1112110A 
 188      0B
 189 0886 1B160D11 		.ascii	"\033\026\015\021\024\033\037\034\023\001\006\021\001"
 189      141B1F1C 
 189      13010611 
 189      01
 190 0893 10100901 		.ascii	"\020\020\011\001\035\024\033\016\030\007\016\012\000"
 190      1D141B0E 
 190      18070E0A 
 190      00
 191 08a0 0210141F 		.ascii	"\002\020\024\037\025\036\036\027\030\001\001\024\021"
 191      151E1E17 
 191      18010114 
 191      11
 192 08ad 120D190A 		.ascii	"\022\015\031\012\000\017\021\034\034\011\020\006\001"
 192      000F111C 
 192      1C091006 
 192      01
 193 08ba 060E1806 		.ascii	"\006\016\030\006\035\014\003\025\000\011\027\023\013"
 193      1D0C0315 
 193      00091713 
 193      0B
 194 08c7 16171E12 		.ascii	"\026\027\036\022\005\007\027\024\002\006\026\003\016"
 194      05071714 
 194      02061603 
 194      0E
 195 08d4 0F01071E 		.ascii	"\017\001\007\036\024\027\016\032\035\027\003\021\037"
 195      14170E1A 
 195      1D170311 
 195      1F
 196 08e1 10090106 		.ascii	"\020\011\001\006\014\033\000\023\020\032\022\036\033"
 196      0C1B0013 
 196      101A121E 
 196      1B
 197 08ee 1C181D19 		.ascii	"\034\030\035\031\023\012\000\000\004\010\004\010\030"
 197      130A0000 
 197      04080408 
 197      18
 198 08fb 1507131B 		.ascii	"\025\007\023\033\023\001\022\032\036\024\000\012\025"
 198      1301121A 
 198      1E14000A 
 198      15
 199 0908 07081A16 		.ascii	"\007\010\032\026\025\035\034\012\025\027\007\003\024"
 199      151D1C0A 
 199      15170703 
 199      14
 200 0915 1F0C080A 		.ascii	"\037\014\010\012\024\020\027\005\030\012\036\010\016"
 200      14101705 
 200      180A1E08 
 200      0E
 201 0922 0A090800 		.ascii	"\012\011\010\000\023\017\022\021\026\003\017\006\021"
 201      130F1211 
 201      16030F06 
 201      11
 202 092f 1D1E1C0B 		.ascii	"\035\036\034\013\037\006\012\031\016\031\015\026\012"
 202      1F060A19 
 202      0E190D16 
 202      0A
 203 093c 00070E15 		.ascii	"\000\007\016\025\030\004\000\012\030\020\004\006\037"
 203      1804000A 
 203      18100406 
 203      1F
 204 0949 13111505 		.ascii	"\023\021\025\005\012\021\030\031\021\023\032\033\007"
 204      0A111819 
 204      11131A1B 
 204      07
 205 0956 15091B1C 		.ascii	"\025\011\033\034\011\033\026\037\037\010\034\023\024"
 205      091B161F 
 205      1F081C13 
 205      14
 206 0963 081D0511 		.ascii	"\010\035\005\021\012\030\015\023\023\027\005\014\027"
 206      0A180D13 
 206      1317050C 
 206      17
 207 0970 0A021D13 		.ascii	"\012\002\035\023\027\013\015\033\021\034\025\005\033"
 207      170B0D1B 
 207      111C1505 
 207      1B
 208 097d 16071A1B 		.ascii	"\026\007\032\033\030\020\026\021\027\001\020\035\033"
 208      18101611 
 208      1701101D 
 208      1B
 209 098a 0818150D 		.ascii	"\010\030\025\015\015\030\010\003\023\016\007\027\020"
 209      0D180803 
 209      130E0717 
 209      10
 210 0997 05071913 		.ascii	"\005\007\031\023\034\034\033\027\035\027\000\001\016"
 210      1C1C1B17 
 210      1D170001 
 210      0E
 211 09a4 0D061807 		.ascii	"\015\006\030\007\013\023\021\000\021\026\031\020\004"
 211      0B131100 
 211      11161910 
 211      04
 212 09b1 171D0D05 		.ascii	"\027\035\015\005\036\037\033\002\025\006\001\016\014"
 212      1E1F1B02 
 212      1506010E 
 212      0C
 213 09be 1113110A 		.ascii	"\021\023\021\012\022\012\034\021\013\031\036\023\034"
 213      120A1C11 
 213      0B191E13 
 213      1C
 214 09cb 00060D1A 		.ascii	"\000\006\015\032\020\006\037\016\032\012\025\013\007"
 214      10061F0E 
 214      1A0A150B 
 214      07
 215 09d8 19161F12 		.ascii	"\031\026\037\022\026\003\014\026\015\010\025\015\005"
 215      16030C16 
 215      0D08150D 
 215      05
 216 09e5 00171D04 		.ascii	"\000\027\035\004\010\011\034\001\016\025\016\035\032"
 216      08091C01 
 216      0E150E1D 
 216      1A
 217 09f2 10020E1B 		.ascii	"\020\002\016\033\037\020\017\033\017\010\025\022\032"
 217      1F100F1B 
 217      0F081512 
 217      1A
 218 09ff 191C1310 		.ascii	"\031\034\023\020\006\031\023\012\012\033\013\027\025"
 218      0619130A 
 218      0A1B0B17 
 218      15
 219 0a0c 180E0E13 		.ascii	"\030\016\016\023\023\014\036\014\004\026\017\032\026"
 219      130C1E0C 
 219      04160F1A 
 219      16
 220 0a19 12060D09 		.ascii	"\022\006\015\011\011\031\032\017\034\033\026\012\005"
 220      09191A0F 
 220      1C1B160A 
 220      05
 221 0a26 0F0C041D 		.ascii	"\017\014\004\035\032\036\007\035\030\010\026\021\021"
 221      1A1E071D 
 221      18081611 
 221      11
 222 0a33 13101F18 		.ascii	"\023\020\037\030\000\012\013\030\000\030\027\020\012"
 222      000A0B18 
 222      00181710 
 222      0A
 223 0a40 081E0D18 		.ascii	"\010\036\015\030\030\015\036\022\010\007\021\026\024"
 223      180D1E12 
 223      08071116 
 223      14
 224 0a4d 080C0F10 		.ascii	"\010\014\017\020\020\002\006\034\034\002\035\002\013"
 224      1002061C 
 224      1C021D02 
 224      0B
 225 0a5a 1E06021F 		.ascii	"\036\006\002\037\025\013\017\020\032\027\024\010\020"
 225      150B0F10 
 225      1A171408 
 225      10
 226 0a67 180A0018 		.ascii	"\030\012\000\030\015\027\000\001\012\004\014\014\034"
 226      0D170001 
 226      0A040C0C 
 226      1C
 227 0a74 0D1C1A01 		.ascii	"\015\034\032\001\006\013\001\017\004\032\017\022\024"
 227      060B010F 
 227      041A0F12 
 227      14
 228 0a81 01100116 		.ascii	"\001\020\001\026\011\034\026\036\020\007\026\032\005"
 228      091C161E 
 228      1007161A 
 228      05
 229 0a8e 1E16041E 		.ascii	"\036\026\004\036\016\035\014\031\011\005\005\000\002"
 229      0E1D0C19 
 229      09050500 
 229      02
 230 0a9b 15051702 		.ascii	"\025\005\027\002\034\025\007\012\037\012\011\024\010"
 230      1C15070A 
 230      1F0A0914 
 230      08
 231 0aa8 0E1A170C 		.ascii	"\016\032\027\014\032\030\035\032\027\027\011\014\036"
 231      1A181D1A 
 231      1717090C 
 231      1E
 232 0ab5 14031409 		.ascii	"\024\003\024\011\037\015\016\002\027\011\033\023\005"
 232      1F0D0E02 
 232      17091B13 
 232      05
 233 0ac2 1A0D1B0E 		.ascii	"\032\015\033\016\005\015\010\010\034\015\030\032\020"
 233      050D0808 
 233      1C0D181A 
 233      10
 234 0acf 18080104 		.ascii	"\030\010\001\004\032\016\003\035\001\004\015\011\011"
 234      1A0E031D 
 234      01040D09 
 234      09
 235 0adc 1D010917 		.ascii	"\035\001\011\027\036\020\033\005\034\017\036\023\035"
 235      1E101B05 
 235      1C0F1E13 
 235      1D
 236 0ae9 1D061C00 		.ascii	"\035\006\034\000\013\026\004\032\025\034\000\015\021"
 236      0B16041A 
 236      151C000D 
 236      11
 237 0af6 0C1E0613 		.ascii	"\014\036\006\023\030\015\030\034\020\013\024\027\022"
 237      180D181C 
 237      100B1417 
 237      12
 238 0b03 0D020608 		.ascii	"\015\002\006\010\023\025\035\012\030\037\031\036\006"
 238      13151D0A 
 238      181F191E 
 238      06
 239 0b10 1B09160E 		.ascii	"\033\011\026\016\000\001\016\000\030\017\023\011\027"
 239      00010E00 
 239      180F1309 
 239      17
 240 0b1d 1C181704 		.ascii	"\034\030\027\004\031\005\016\007\037\027\022\032\031"
 240      19050E07 
 240      1F17121A 
 240      19
 241 0b2a 040B1A14 		.ascii	"\004\013\032\024\021\002\015\001\032\017\002\013\027"
 241      11020D01 
 241      1A0F020B 
 241      17
 242 0b37 1B091805 		.ascii	"\033\011\030\005\037\027\014\026\032\030\017\013\013"
 242      1F170C16 
 242      1A180F0B 
 242      0B
 243 0b44 1C000A09 		.ascii	"\034\000\012\011\012\000\000\003\011\016\024\020\007"
 243      0A000003 
 243      090E1410 
 243      07
 244 0b51 071A1310 		.ascii	"\007\032\023\020\000\011\037\031\034\012\036\026\010"
 244      00091F19 
 244      1C0A1E16 
 244      08
 245 0b5e 0E171D0B 		.ascii	"\016\027\035\013\015\026\023\035\032\005\014\035\007"
 245      0D16131D 
 245      1A050C1D 
 245      07
 246 0b6b 191F1E16 		.ascii	"\031\037\036\026\025\027\031\000\022\031\013\035\022"
 246      15171900 
 246      12190B1D 
 246      12
 247 0b78 160C110C 		.ascii	"\026\014\021\014\007\020\034\005\034\020\035\030\022"
 247      07101C05 
 247      1C101D18 
 247      12
 248 0b85 1019050E 		.ascii	"\020\031\005\016\015\010\005\036\011\035\037\002\023"
 248      0D08051E 
 248      091D1F02 
 248      13
 249 0b92 0609031D 		.ascii	"\006\011\003\035\021\017\030\011\007\000\000\011\030"
 249      110F1809 
 249      07000009 
 249      18
 250 0b9f 151F1E0C 		.ascii	"\025\037\036\014\036\032\025\012\011\024\010\015\003"
 250      1E1A150A 
 250      0914080D 
 250      03
 251 0bac 141F1303 		.ascii	"\024\037\023\003\001\032\014\033\004\012\036\002\027"
 251      011A0C1B 
 251      040A1E02 
 251      17
 252 0bb9 1E06011F 		.ascii	"\036\006\001\037\010\015\001\015\015\010\036\035\024"
 252      080D010D 
 252      0D081E1D 
 252      14
 253 0bc6 16031000 		.ascii	"\026\003\020\000\027\025\010\007\022\014\025\016\005"
 253      17150807 
 253      120C150E 
 253      05
 254 0bd3 1C061D1E 		.ascii	"\034\006\035\036\026\031\016\003\032\021\023\016\003"
 254      16190E03 
 254      1A11130E 
 254      03
 255 0be0 160C1309 		.ascii	"\026\014\023\011\006\021\013\003\007\012\032\035\031"
 255      06110B03 
 255      070A1A1D 
 255      19
 256 0bed 1C160E05 		.ascii	"\034\026\016\005\026\031\007\021\005\005\015\001\012"
 256      16190711 
 256      05050D01 
 256      0A
 257 0bfa 0B18031A 		.ascii	"\013\030\003\032\037\024\030\012\016\017\030\031\011"
 257      1F14180A 
 257      0E0F1819 
 257      09
 258 0c07 18021F0C 		.ascii	"\030\002\037\014\000\016\020\024\034\034\015\037\003"
 258      000E1014 
 258      1C1C0D1F 
 258      03
 259 0c14 0B1E0916 		.ascii	"\013\036\011\026\011\002\026\032\017\021\033\011\014"
 259      0902161A 
 259      0F111B09 
 259      0C
 260 0c21 121E1C0D 		.ascii	"\022\036\034\015\001\007\010\025\000\025\001\020\031"
 260      01070815 
 260      00150110 
 260      19
 261 0c2e 150F0C09 		.ascii	"\025\017\014\011\001\034\001\026\013\025\004\014\006"
 261      011C0116 
 261      0B15040C 
 261      06
 262 0c3b 011E1A19 		.ascii	"\001\036\032\031\031\027\015\011\015\026\005\036\013"
 262      19170D09 
 262      0D16051E 
 262      0B
 263 0c48 101F040F 		.ascii	"\020\037\004\017\010\025\037\034\016\033\022\013\034"
 263      08151F1C 
 263      0E1B120B 
 263      1C
 264 0c55 02100619 		.ascii	"\002\020\006\031\021\007\021\031\035\017\003\007\000"
 264      11071119 
 264      1D0F0307 
 264      00
 265 0c62 0D020D14 		.ascii	"\015\002\015\024\037\003\010\012\010\030\007\032\001"
 265      1F03080A 
 265      0818071A 
 265      01
 266 0c6f 10160F12 		.ascii	"\020\026\017\022\000\002\006\031\037\001\021\024\011"
 266      00020619 
 266      1F011114 
 266      09
 267 0c7c 07061406 		.ascii	"\007\006\024\006\032\015\000\021\030\017\032\013\016"
 267      1A0D0011 
 267      180F1A0B 
 267      0E
 268 0c89 131A121C 		.ascii	"\023\032\022\034\002\001\015\021\003\001\037\031\003"
 268      02010D11 
 268      03011F19 
 268      03
 269 0c96 1D0A1607 		.ascii	"\035\012\026\007\013\016\031\024\017\036\034\030\011"
 269      0B0E1914 
 269      0F1E1C18 
 269      09
 270 0ca3 0C1A040F 		.ascii	"\014\032\004\017\032\013\006\023\014\027\003\022\022"
 270      1A0B0613 
 270      0C170312 
 270      12
 271 0cb0 0A0A1B09 		.ascii	"\012\012\033\011\010\033\012\006\030\015\004\027\021"
 271      081B0A06 
 271      180D0417 
 271      11
 272 0cbd 0C1B1914 		.ascii	"\014\033\031\024\017\017\012\013\023\036\037\035\027"
 272      0F0F0A0B 
 272      131E1F1D 
 272      17
 273 0cca 191F1711 		.ascii	"\031\037\027\021\034\025\007\012\031\024\006\003\023"
 273      1C15070A 
 273      19140603 
 273      13
 274 0cd7 0B131109 		.ascii	"\013\023\021\011\013\011\016\017\017\017\020\025\014"
 274      0B090E0F 
 274      0F0F1015 
 274      0C
 275 0ce4 1C110B0A 		.ascii	"\034\021\013\012\025\026\016\015\031\017\011\034\003"
 275      15160E0D 
 275      190F091C 
 275      03
 276 0cf1 1E14111E 		.ascii	"\036\024\021\036\027\012\024\027\004\020\037\033\017"
 276      170A1417 
 276      04101F1B 
 276      0F
 277 0cfe 121C1911 		.ascii	"\022\034\031\021\002\017\031\020\023\035\031\002\004"
 277      020F1910 
 277      131D1902 
 277      04
 278 0d0b 1B011D1F 		.ascii	"\033\001\035\037\034\036\015\030\024\017\016\010\017"
 278      1C1E0D18 
 278      140F0E08 
 278      0F
 279 0d18 0D070714 		.ascii	"\015\007\007\024\036\030\003\031\023\021\001\005\010"
 279      1E180319 
 279      13110105 
 279      08
 280 0d25 0E0C0C14 		.ascii	"\016\014\014\024\030\007\017\022\024\033\036\022\015"
 280      18070F12 
 280      141B1E12 
 280      0D
 281 0d32 07080916 		.ascii	"\007\010\011\026\025\016\036\032\007\012\027\026\015"
 281      150E1E1A 
 281      070A1716 
 281      0D
 282 0d3f 1D151F1F 		.ascii	"\035\025\037\037\011\022\030\011\031\037\027\005\023"
 282      09121809 
 282      191F1705 
 282      13
 283 0d4c 0C15041A 		.ascii	"\014\025\004\032\024\003\010\012\033\006\033\011\010"
 283      1403080A 
 283      1B061B09 
 283      08
 284 0d59 04170600 		.ascii	"\004\027\006\000\000\005\002\004\020\014\036\032\020"
 284      00050204 
 284      100C1E1A 
 284      10
 285 0d66 0D001B0D 		.ascii	"\015\000\033\015\015\013\002\017\015\016\007\013\021"
 285      0D0B020F 
 285      0D0E070B 
 285      11
 286 0d73 1B191D10 		.ascii	"\033\031\035\020\002\020\025\020\012\030\031\016\025"
 286      02101510 
 286      0A18190E 
 286      15
 287 0d80 0409150F 		.ascii	"\004\011\025\017\004\003\023\030\006\011\012\005\025"
 287      04031318 
 287      06090A05 
 287      15
 288 0d8d 06180D18 		.ascii	"\006\030\015\030\004\022\015\007\011\033\013\012\015"
 288      04120D07 
 288      091B0B0A 
 288      0D
 289 0d9a 030B0B0E 		.ascii	"\003\013\013\016\024\023\012\035\001\000\034\035\007"
 289      14130A1D 
 289      01001C1D 
 289      07
 290 0da7 1A0A1A09 		.ascii	"\032\012\032\011\006\017\003\030\020\000\001\020\002"
 290      060F0318 
 290      10000110 
 290      02
 291 0db4 05110D06 		.ascii	"\005\021\015\006\032\033\014\013\000\037\017\010\017"
 291      1A1B0C0B 
 291      001F0F08 
 291      0F
 292 0dc1 07000E04 		.ascii	"\007\000\016\004\007\005\004\035\010\023\013\023\011"
 292      0705041D 
 292      08130B13 
 292      09
 293 0dce 1C1D1F0F 		.ascii	"\034\035\037\017\024\002\007\006\004\005\004\031\025"
 293      14020706 
 293      04050419 
 293      15
 294 0ddb 0B1F0F02 		.ascii	"\013\037\017\002\025\035\034\015\032\004\032\020\015"
 294      151D1C0D 
 294      1A041A10 
 294      0D
 295 0de8 151E0903 		.ascii	"\025\036\011\003\035\015\022\004\006\027\025\020\010"
 295      1D0D1204 
 295      06171510 
 295      08
 296 0df5 06150707 		.ascii	"\006\025\007\007\013\005\035\011\007\034\035\007\024"
 296      0B051D09 
 296      071C1D07 
 296      14
 297 0e02 0C1B0B0D 		.ascii	"\014\033\013\015\026\023\020\037\007\033\004\000\002"
 297      1613101F 
 297      071B0400 
 297      02
 298 0e0f 05070215 		.ascii	"\005\007\002\025\027\026\034\005\002\037\012\007\013"
 298      17161C05 
 298      021F0A07 
 298      0B
 299 0e1c 0F190D17 		.ascii	"\017\031\015\027\015\026\026\021\036\025\005\005\026"
 299      0D161611 
 299      1E150505 
 299      16
 300 0e29 0304011F 		.ascii	"\003\004\001\037\036\023\001\015\036\001\015\037\036"
 300      1E13010D 
 300      1E010D1F 
 300      1E
 301 0e36 0509000E 		.ascii	"\005\011\000\016\036\017\024\037\013\001\023\022\036"
 301      1E0F141F 
 301      0B011312 
 301      1E
 302 0e43 050D1D1F 		.ascii	"\005\015\035\037\022\010\031\021\032\001\034\003\034"
 302      12081911 
 302      1A011C03 
 302      1C
 303 0e50 1A100A1E 		.ascii	"\032\020\012\036\017\033\030\007\017\005\010\015\025"
 303      0F1B1807 
 303      0F05080D 
 303      15
 304 0e5d 10061B18 		.ascii	"\020\006\033\030\034\004\024\030\037\017\033\032\025"
 304      1C041418 
 304      1F0F1B1A 
 304      15
 305 0e6a 1510150E 		.ascii	"\025\020\025\016\024\010\023\025\025\031\014\033\010"
 305      14081315 
 305      15190C1B 
 305      08
 306 0e77 000C1A0D 		.ascii	"\000\014\032\015\004\031\007\013\024\036\002\006\014"
 306      0419070B 
 306      141E0206 
 306      0C
 307 0e84 0717130B 		.ascii	"\007\027\023\013"
 308              		.global	oilspace
 309              		.align	2
 312              	oilspace:
 313 0e88 10011D09 		.ascii	"\020\001\035\011\033\026\026\017\034\030\024\021\032"
 313      1B16160F 
 313      1C181411 
 313      1A
 314 0e95 1605100F 		.ascii	"\026\005\020\017\004\006\032\015\026\015\027\035\001"
 314      04061A0D 
 314      160D171D 
 314      01
 315 0ea2 000E1A08 		.ascii	"\000\016\032\010\022\036\035\010\023\013\033\007\015"
 315      121E1D08 
 315      130B1B07 
 315      0D
 316 0eaf 10060E04 		.ascii	"\020\006\016\004\000\000\036\032\031\010\002\037\003"
 316      00001E1A 
 316      1908021F 
 316      03
 317 0ebc 0805020A 		.ascii	"\010\005\002\012"
 318              		.global	trigger
 319              		.bss
 320              		.align	2
 323              	trigger:
 324 0000 00000000 		.space	4
 325              		.section	.text.putString,"ax",%progbits
 326              		.align	1
 327              		.global	putString
 328              		.arch armv7e-m
 329              		.syntax unified
 330              		.thumb
 331              		.thumb_func
 332              		.fpu softvfp
 334              	putString:
 335              	.LFB0:
 336              		.file 1 "MAYO.c"
   1:MAYO.c        **** /*
   2:MAYO.c        ****     This file is part of the ChipWhisperer Example Targets
   3:MAYO.c        ****     Copyright (C) 2012-2017 NewAE Technology Inc.
   4:MAYO.c        **** 
   5:MAYO.c        ****     This program is free software: you can redistribute it and/or modify
   6:MAYO.c        ****     it under the terms of the GNU General Public License as published by
   7:MAYO.c        ****     the Free Software Foundation, either version 3 of the License, or
   8:MAYO.c        ****     (at your option) any later version.
   9:MAYO.c        **** 
  10:MAYO.c        ****     This program is distributed in the hope that it will be useful,
  11:MAYO.c        ****     but WITHOUT ANY WARRANTY; without even the implied warranty of
  12:MAYO.c        ****     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  13:MAYO.c        ****     GNU General Public License for more details.
  14:MAYO.c        **** 
  15:MAYO.c        ****     You should have received a copy of the GNU General Public License
  16:MAYO.c        ****     along with this program.  If not, see <http://www.gnu.org/licenses/>.
  17:MAYO.c        **** */
  18:MAYO.c        **** 
  19:MAYO.c        **** #include "hal.h"
  20:MAYO.c        **** #include "simpleserial.h"
  21:MAYO.c        **** #include "MAYO.h"
  22:MAYO.c        **** #include <stdint.h>
  23:MAYO.c        **** #include <stdlib.h>
  24:MAYO.c        **** #include <string.h>
  25:MAYO.c        **** 
  26:MAYO.c        **** #define gf256v_add _gf256v_add_u32
  27:MAYO.c        **** #define gf256v_madd _gf256v_madd_u32
  28:MAYO.c        **** 
  29:MAYO.c        **** extern unsigned char P1[3720];
  30:MAYO.c        **** extern unsigned char oilspace[56];
  31:MAYO.c        **** 
  32:MAYO.c        **** extern uint32_t trigger;
  33:MAYO.c        **** 
  34:MAYO.c        **** 
  35:MAYO.c        **** void putString(const unsigned char *string, const unsigned int length)
  36:MAYO.c        **** {
 337              		.loc 1 36 1
 338              		.cfi_startproc
 339              		@ args = 0, pretend = 0, frame = 16
 340              		@ frame_needed = 1, uses_anonymous_args = 0
 341 0000 80B5     		push	{r7, lr}
 342              	.LCFI0:
 343              		.cfi_def_cfa_offset 8
 344              		.cfi_offset 7, -8
 345              		.cfi_offset 14, -4
 346 0002 84B0     		sub	sp, sp, #16
 347              	.LCFI1:
 348              		.cfi_def_cfa_offset 24
 349 0004 00AF     		add	r7, sp, #0
 350              	.LCFI2:
 351              		.cfi_def_cfa_register 7
 352 0006 7860     		str	r0, [r7, #4]
 353 0008 3960     		str	r1, [r7]
 354              	.LBB2:
  37:MAYO.c        ****     for(int i=0; i<length; i++)
 355              		.loc 1 37 13
 356 000a 0023     		movs	r3, #0
 357 000c FB60     		str	r3, [r7, #12]
 358              		.loc 1 37 5
 359 000e 09E0     		b	.L2
 360              	.L3:
  38:MAYO.c        ****          putch(string[i]);
 361              		.loc 1 38 22 discriminator 3
 362 0010 FB68     		ldr	r3, [r7, #12]
 363 0012 7A68     		ldr	r2, [r7, #4]
 364 0014 1344     		add	r3, r3, r2
 365              		.loc 1 38 10 discriminator 3
 366 0016 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 367 0018 1846     		mov	r0, r3
 368 001a FFF7FEFF 		bl	putch
  37:MAYO.c        ****     for(int i=0; i<length; i++)
 369              		.loc 1 37 29 discriminator 3
 370 001e FB68     		ldr	r3, [r7, #12]
 371 0020 0133     		adds	r3, r3, #1
 372 0022 FB60     		str	r3, [r7, #12]
 373              	.L2:
  37:MAYO.c        ****     for(int i=0; i<length; i++)
 374              		.loc 1 37 19 discriminator 1
 375 0024 FB68     		ldr	r3, [r7, #12]
  37:MAYO.c        ****     for(int i=0; i<length; i++)
 376              		.loc 1 37 5 discriminator 1
 377 0026 3A68     		ldr	r2, [r7]
 378 0028 9A42     		cmp	r2, r3
 379 002a F1D8     		bhi	.L3
 380              	.LBE2:
  39:MAYO.c        **** }
 381              		.loc 1 39 1
 382 002c 00BF     		nop
 383 002e 00BF     		nop
 384 0030 1037     		adds	r7, r7, #16
 385              	.LCFI3:
 386              		.cfi_def_cfa_offset 8
 387 0032 BD46     		mov	sp, r7
 388              	.LCFI4:
 389              		.cfi_def_cfa_register 13
 390              		@ sp needed
 391 0034 80BD     		pop	{r7, pc}
 392              		.cfi_endproc
 393              	.LFE0:
 395              		.section	.text.add_vectors,"ax",%progbits
 396              		.align	1
 397              		.global	add_vectors
 398              		.syntax unified
 399              		.thumb
 400              		.thumb_func
 401              		.fpu softvfp
 403              	add_vectors:
 404              	.LFB1:
  40:MAYO.c        **** 
  41:MAYO.c        **** void add_vectors(const unsigned char *v1, const unsigned char *v2, unsigned char *out){
 405              		.loc 1 41 87
 406              		.cfi_startproc
 407              		@ args = 0, pretend = 0, frame = 24
 408              		@ frame_needed = 1, uses_anonymous_args = 0
 409              		@ link register save eliminated.
 410 0000 80B4     		push	{r7}
 411              	.LCFI5:
 412              		.cfi_def_cfa_offset 4
 413              		.cfi_offset 7, -4
 414 0002 87B0     		sub	sp, sp, #28
 415              	.LCFI6:
 416              		.cfi_def_cfa_offset 32
 417 0004 00AF     		add	r7, sp, #0
 418              	.LCFI7:
 419              		.cfi_def_cfa_register 7
 420 0006 F860     		str	r0, [r7, #12]
 421 0008 B960     		str	r1, [r7, #8]
 422 000a 7A60     		str	r2, [r7, #4]
 423              	.LBB3:
  42:MAYO.c        **** 	for (int i = 0; i < M; ++i)
 424              		.loc 1 42 11
 425 000c 0023     		movs	r3, #0
 426 000e 7B61     		str	r3, [r7, #20]
 427              		.loc 1 42 2
 428 0010 1CE0     		b	.L5
 429              	.L6:
  43:MAYO.c        **** 	{
  44:MAYO.c        **** 		out[i] = (((uint16_t) v1[i]) + ((uint16_t) v2[i])) % PRIME;
 430              		.loc 1 44 27 discriminator 3
 431 0012 7B69     		ldr	r3, [r7, #20]
 432 0014 FA68     		ldr	r2, [r7, #12]
 433 0016 1344     		add	r3, r3, r2
 434 0018 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 435              		.loc 1 44 14 discriminator 3
 436 001a 1946     		mov	r1, r3
 437              		.loc 1 44 48 discriminator 3
 438 001c 7B69     		ldr	r3, [r7, #20]
 439 001e BA68     		ldr	r2, [r7, #8]
 440 0020 1344     		add	r3, r3, r2
 441 0022 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 442              		.loc 1 44 32 discriminator 3
 443 0024 CA18     		adds	r2, r1, r3
 444              		.loc 1 44 54 discriminator 3
 445 0026 0E4B     		ldr	r3, .L7
 446 0028 83FB0213 		smull	r1, r3, r3, r2
 447 002c 1344     		add	r3, r3, r2
 448 002e 1911     		asrs	r1, r3, #4
 449 0030 D317     		asrs	r3, r2, #31
 450 0032 C91A     		subs	r1, r1, r3
 451 0034 0B46     		mov	r3, r1
 452 0036 5B01     		lsls	r3, r3, #5
 453 0038 5B1A     		subs	r3, r3, r1
 454 003a D11A     		subs	r1, r2, r3
 455              		.loc 1 44 6 discriminator 3
 456 003c 7B69     		ldr	r3, [r7, #20]
 457 003e 7A68     		ldr	r2, [r7, #4]
 458 0040 1344     		add	r3, r3, r2
 459              		.loc 1 44 10 discriminator 3
 460 0042 CAB2     		uxtb	r2, r1
 461 0044 1A70     		strb	r2, [r3]
  42:MAYO.c        **** 	for (int i = 0; i < M; ++i)
 462              		.loc 1 42 25 discriminator 3
 463 0046 7B69     		ldr	r3, [r7, #20]
 464 0048 0133     		adds	r3, r3, #1
 465 004a 7B61     		str	r3, [r7, #20]
 466              	.L5:
  42:MAYO.c        **** 	for (int i = 0; i < M; ++i)
 467              		.loc 1 42 2 discriminator 1
 468 004c 7B69     		ldr	r3, [r7, #20]
 469 004e 3B2B     		cmp	r3, #59
 470 0050 DFDD     		ble	.L6
 471              	.LBE3:
  45:MAYO.c        **** 	}
  46:MAYO.c        **** }
 472              		.loc 1 46 1
 473 0052 00BF     		nop
 474 0054 00BF     		nop
 475 0056 1C37     		adds	r7, r7, #28
 476              	.LCFI8:
 477              		.cfi_def_cfa_offset 4
 478 0058 BD46     		mov	sp, r7
 479              	.LCFI9:
 480              		.cfi_def_cfa_register 13
 481              		@ sp needed
 482 005a 80BC     		pop	{r7}
 483              	.LCFI10:
 484              		.cfi_restore 7
 485              		.cfi_def_cfa_offset 0
 486 005c 7047     		bx	lr
 487              	.L8:
 488 005e 00BF     		.align	2
 489              	.L7:
 490 0060 43082184 		.word	-2078209981
 491              		.cfi_endproc
 492              	.LFE1:
 494              		.section	.text._linear_combination,"ax",%progbits
 495              		.align	1
 496              		.global	_linear_combination
 497              		.syntax unified
 498              		.thumb
 499              		.thumb_func
 500              		.fpu softvfp
 502              	_linear_combination:
 503              	.LFB2:
  47:MAYO.c        **** 
  48:MAYO.c        **** void _linear_combination(const unsigned char* vecs, const unsigned char* coeffs, int len, unsigned 
 504              		.loc 1 48 110
 505              		.cfi_startproc
 506              		@ args = 0, pretend = 0, frame = 272
 507              		@ frame_needed = 1, uses_anonymous_args = 0
 508 0000 90B5     		push	{r4, r7, lr}
 509              	.LCFI11:
 510              		.cfi_def_cfa_offset 12
 511              		.cfi_offset 4, -12
 512              		.cfi_offset 7, -8
 513              		.cfi_offset 14, -4
 514 0002 C5B0     		sub	sp, sp, #276
 515              	.LCFI12:
 516              		.cfi_def_cfa_offset 288
 517 0004 00AF     		add	r7, sp, #0
 518              	.LCFI13:
 519              		.cfi_def_cfa_register 7
 520 0006 07F58874 		add	r4, r7, #272
 521 000a A4F58274 		sub	r4, r4, #260
 522 000e 2060     		str	r0, [r4]
 523 0010 07F58870 		add	r0, r7, #272
 524 0014 A0F58470 		sub	r0, r0, #264
 525 0018 0160     		str	r1, [r0]
 526 001a 07F58871 		add	r1, r7, #272
 527 001e A1F58671 		sub	r1, r1, #268
 528 0022 0A60     		str	r2, [r1]
 529 0024 07F58872 		add	r2, r7, #272
 530 0028 A2F58872 		sub	r2, r2, #272
 531 002c 1360     		str	r3, [r2]
  49:MAYO.c        **** 	uint32_t accumulators[M] = {0};
 532              		.loc 1 49 11
 533 002e 07F58873 		add	r3, r7, #272
 534 0032 A3F58073 		sub	r3, r3, #256
 535 0036 1846     		mov	r0, r3
 536 0038 F023     		movs	r3, #240
 537 003a 1A46     		mov	r2, r3
 538 003c 0021     		movs	r1, #0
 539 003e FFF7FEFF 		bl	memset
 540              	.LBB4:
  50:MAYO.c        **** 	for (int i = 0; i < len; ++i)
 541              		.loc 1 50 11
 542 0042 0023     		movs	r3, #0
 543 0044 C7F80C31 		str	r3, [r7, #268]
 544              		.loc 1 50 2
 545 0048 5CE0     		b	.L10
 546              	.L17:
  51:MAYO.c        **** 	{
  52:MAYO.c        ****         if(i == 0) 
 547              		.loc 1 52 11
 548 004a D7F80C31 		ldr	r3, [r7, #268]
 549 004e 002B     		cmp	r3, #0
 550 0050 0ED1     		bne	.L11
 551              	.LBB5:
  53:MAYO.c        ****         {
  54:MAYO.c        ****             char c = 'A';
 552              		.loc 1 54 18
 553 0052 4123     		movs	r3, #65
 554 0054 87F80B31 		strb	r3, [r7, #267]
  55:MAYO.c        ****             // stall until ready to trace 
  56:MAYO.c        ****             while ((c != 'g'))
 555              		.loc 1 56 19
 556 0058 04E0     		b	.L12
 557              	.L13:
  57:MAYO.c        ****             {
  58:MAYO.c        ****                 c = getch();
 558              		.loc 1 58 21
 559 005a FFF7FEFF 		bl	getch
 560 005e 0346     		mov	r3, r0
 561 0060 87F80B31 		strb	r3, [r7, #267]
 562              	.L12:
  56:MAYO.c        ****             {
 563              		.loc 1 56 19
 564 0064 97F80B31 		ldrb	r3, [r7, #267]	@ zero_extendqisi2
 565 0068 672B     		cmp	r3, #103
 566 006a F6D1     		bne	.L13
  59:MAYO.c        ****             }
  60:MAYO.c        ****             trigger_high();
 567              		.loc 1 60 13
 568 006c FFF7FEFF 		bl	trigger_high
 569              	.L11:
 570              	.LBE5:
 571              	.LBB6:
  61:MAYO.c        ****         }
  62:MAYO.c        **** 
  63:MAYO.c        **** 
  64:MAYO.c        **** 		for(int j=0; j< M; j++){
 572              		.loc 1 64 11
 573 0070 0023     		movs	r3, #0
 574 0072 C7F80431 		str	r3, [r7, #260]
 575              		.loc 1 64 3
 576 0076 33E0     		b	.L14
 577              	.L15:
  65:MAYO.c        **** 			accumulators[j] += ((uint32_t) vecs[i*M + j]) * ((uint32_t) coeffs[i]);
 578              		.loc 1 65 20 discriminator 3
 579 0078 07F58873 		add	r3, r7, #272
 580 007c A3F58073 		sub	r3, r3, #256
 581 0080 D7F80421 		ldr	r2, [r7, #260]
 582 0084 53F82210 		ldr	r1, [r3, r2, lsl #2]
 583              		.loc 1 65 41 discriminator 3
 584 0088 D7F80C21 		ldr	r2, [r7, #268]
 585 008c 1346     		mov	r3, r2
 586 008e 1B01     		lsls	r3, r3, #4
 587 0090 9B1A     		subs	r3, r3, r2
 588 0092 9B00     		lsls	r3, r3, #2
 589 0094 1A46     		mov	r2, r3
 590              		.loc 1 65 44 discriminator 3
 591 0096 D7F80431 		ldr	r3, [r7, #260]
 592 009a 1344     		add	r3, r3, r2
 593 009c 1A46     		mov	r2, r3
 594              		.loc 1 65 39 discriminator 3
 595 009e 07F58873 		add	r3, r7, #272
 596 00a2 A3F58273 		sub	r3, r3, #260
 597 00a6 1B68     		ldr	r3, [r3]
 598 00a8 1344     		add	r3, r3, r2
 599 00aa 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 600              		.loc 1 65 24 discriminator 3
 601 00ac 1846     		mov	r0, r3
 602              		.loc 1 65 70 discriminator 3
 603 00ae D7F80C31 		ldr	r3, [r7, #268]
 604 00b2 07F58872 		add	r2, r7, #272
 605 00b6 A2F58472 		sub	r2, r2, #264
 606 00ba 1268     		ldr	r2, [r2]
 607 00bc 1344     		add	r3, r3, r2
 608 00be 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 609              		.loc 1 65 50 discriminator 3
 610 00c0 00FB03F3 		mul	r3, r0, r3
 611              		.loc 1 65 20 discriminator 3
 612 00c4 1944     		add	r1, r1, r3
 613 00c6 07F58873 		add	r3, r7, #272
 614 00ca A3F58073 		sub	r3, r3, #256
 615 00ce D7F80421 		ldr	r2, [r7, #260]
 616 00d2 43F82210 		str	r1, [r3, r2, lsl #2]
  64:MAYO.c        **** 			accumulators[j] += ((uint32_t) vecs[i*M + j]) * ((uint32_t) coeffs[i]);
 617              		.loc 1 64 23 discriminator 3
 618 00d6 D7F80431 		ldr	r3, [r7, #260]
 619 00da 0133     		adds	r3, r3, #1
 620 00dc C7F80431 		str	r3, [r7, #260]
 621              	.L14:
  64:MAYO.c        **** 			accumulators[j] += ((uint32_t) vecs[i*M + j]) * ((uint32_t) coeffs[i]);
 622              		.loc 1 64 3 discriminator 1
 623 00e0 D7F80431 		ldr	r3, [r7, #260]
 624 00e4 3B2B     		cmp	r3, #59
 625 00e6 C7DD     		ble	.L15
 626              	.LBE6:
  66:MAYO.c        **** 		}
  67:MAYO.c        ****         if(i == 0) 
 627              		.loc 1 67 11
 628 00e8 D7F80C31 		ldr	r3, [r7, #268]
 629 00ec 002B     		cmp	r3, #0
 630 00ee 04D1     		bne	.L16
  68:MAYO.c        ****         {
  69:MAYO.c        ****             trigger_low();
 631              		.loc 1 69 13
 632 00f0 FFF7FEFF 		bl	trigger_low
  70:MAYO.c        ****             putch('r');
 633              		.loc 1 70 13
 634 00f4 7220     		movs	r0, #114
 635 00f6 FFF7FEFF 		bl	putch
 636              	.L16:
  50:MAYO.c        **** 	{
 637              		.loc 1 50 27 discriminator 2
 638 00fa D7F80C31 		ldr	r3, [r7, #268]
 639 00fe 0133     		adds	r3, r3, #1
 640 0100 C7F80C31 		str	r3, [r7, #268]
 641              	.L10:
  50:MAYO.c        **** 	{
 642              		.loc 1 50 2 discriminator 1
 643 0104 07F58873 		add	r3, r7, #272
 644 0108 A3F58673 		sub	r3, r3, #268
 645 010c D7F80C21 		ldr	r2, [r7, #268]
 646 0110 1B68     		ldr	r3, [r3]
 647 0112 9A42     		cmp	r2, r3
 648 0114 99DB     		blt	.L17
 649              	.LBE4:
 650              	.LBB7:
  71:MAYO.c        ****         }
  72:MAYO.c        **** 	}
  73:MAYO.c        **** 
  74:MAYO.c        **** 	for (int i = 0; i < M; ++i)
 651              		.loc 1 74 11
 652 0116 0023     		movs	r3, #0
 653 0118 C7F80031 		str	r3, [r7, #256]
 654              		.loc 1 74 2
 655 011c 21E0     		b	.L18
 656              	.L19:
  75:MAYO.c        **** 	{
  76:MAYO.c        **** 		out[i] = (unsigned char) (accumulators[i] % PRIME);
 657              		.loc 1 76 41 discriminator 3
 658 011e 07F58873 		add	r3, r7, #272
 659 0122 A3F58073 		sub	r3, r3, #256
 660 0126 D7F80021 		ldr	r2, [r7, #256]
 661 012a 53F82220 		ldr	r2, [r3, r2, lsl #2]
 662              		.loc 1 76 45 discriminator 3
 663 012e 124B     		ldr	r3, .L20
 664 0130 A3FB0213 		umull	r1, r3, r3, r2
 665 0134 D11A     		subs	r1, r2, r3
 666 0136 4908     		lsrs	r1, r1, #1
 667 0138 0B44     		add	r3, r3, r1
 668 013a 1909     		lsrs	r1, r3, #4
 669 013c 0B46     		mov	r3, r1
 670 013e 5B01     		lsls	r3, r3, #5
 671 0140 5B1A     		subs	r3, r3, r1
 672 0142 D11A     		subs	r1, r2, r3
 673              		.loc 1 76 6 discriminator 3
 674 0144 D7F80031 		ldr	r3, [r7, #256]
 675 0148 07F58872 		add	r2, r7, #272
 676 014c A2F58872 		sub	r2, r2, #272
 677 0150 1268     		ldr	r2, [r2]
 678 0152 1344     		add	r3, r3, r2
 679              		.loc 1 76 12 discriminator 3
 680 0154 CAB2     		uxtb	r2, r1
 681              		.loc 1 76 10 discriminator 3
 682 0156 1A70     		strb	r2, [r3]
  74:MAYO.c        **** 	{
 683              		.loc 1 74 25 discriminator 3
 684 0158 D7F80031 		ldr	r3, [r7, #256]
 685 015c 0133     		adds	r3, r3, #1
 686 015e C7F80031 		str	r3, [r7, #256]
 687              	.L18:
  74:MAYO.c        **** 	{
 688              		.loc 1 74 2 discriminator 1
 689 0162 D7F80031 		ldr	r3, [r7, #256]
 690 0166 3B2B     		cmp	r3, #59
 691 0168 D9DD     		ble	.L19
 692              	.LBE7:
  77:MAYO.c        **** 	}
  78:MAYO.c        **** }
 693              		.loc 1 78 1
 694 016a 00BF     		nop
 695 016c 00BF     		nop
 696 016e 07F58A77 		add	r7, r7, #276
 697              	.LCFI14:
 698              		.cfi_def_cfa_offset 12
 699 0172 BD46     		mov	sp, r7
 700              	.LCFI15:
 701              		.cfi_def_cfa_register 13
 702              		@ sp needed
 703 0174 90BD     		pop	{r4, r7, pc}
 704              	.L21:
 705 0176 00BF     		.align	2
 706              	.L20:
 707 0178 85104208 		.word	138547333
 708              		.cfi_endproc
 709              	.LFE2:
 711              		.section	.text.mayo_trace,"ax",%progbits
 712              		.align	1
 713              		.global	mayo_trace
 714              		.syntax unified
 715              		.thumb
 716              		.thumb_func
 717              		.fpu softvfp
 719              	mayo_trace:
 720              	.LFB3:
  79:MAYO.c        **** 
  80:MAYO.c        **** // uint8_t uov_trace(uint8_t *in)
  81:MAYO.c        **** // {
  82:MAYO.c        **** 
  83:MAYO.c        **** // uint8_t uov_trace(uint8_t* pw, uint8_t len)
  84:MAYO.c        **** uint8_t mayo_trace()
  85:MAYO.c        **** {
 721              		.loc 1 85 1
 722              		.cfi_startproc
 723              		@ args = 0, pretend = 0, frame = 72
 724              		@ frame_needed = 1, uses_anonymous_args = 0
 725 0000 80B5     		push	{r7, lr}
 726              	.LCFI16:
 727              		.cfi_def_cfa_offset 8
 728              		.cfi_offset 7, -8
 729              		.cfi_offset 14, -4
 730 0002 92B0     		sub	sp, sp, #72
 731              	.LCFI17:
 732              		.cfi_def_cfa_offset 80
 733 0004 00AF     		add	r7, sp, #0
 734              	.LCFI18:
 735              		.cfi_def_cfa_register 7
  86:MAYO.c        ****     // C = 10;
  87:MAYO.c        ****     unsigned char out[M] = {0};
 736              		.loc 1 87 19
 737 0006 0023     		movs	r3, #0
 738 0008 7B60     		str	r3, [r7, #4]
 739 000a 07F10803 		add	r3, r7, #8
 740 000e 3822     		movs	r2, #56
 741 0010 0021     		movs	r1, #0
 742 0012 1846     		mov	r0, r3
 743 0014 FFF7FEFF 		bl	memset
  88:MAYO.c        **** 
  89:MAYO.c        **** 
  90:MAYO.c        ****     // define P1 in .h file, hardcoded
  91:MAYO.c        ****     const unsigned char *ptr_P1;
  92:MAYO.c        ****     ptr_P1 = P1;
 744              		.loc 1 92 12
 745 0018 084B     		ldr	r3, .L24
 746 001a 7B64     		str	r3, [r7, #68]
  93:MAYO.c        **** 
  94:MAYO.c        **** 
  95:MAYO.c        ****     const unsigned char *ptr_oilspace;
  96:MAYO.c        ****     ptr_oilspace = oilspace;
 747              		.loc 1 96 18
 748 001c 084B     		ldr	r3, .L24+4
 749 001e 3B64     		str	r3, [r7, #64]
  97:MAYO.c        **** 
  98:MAYO.c        **** 
  99:MAYO.c        ****     //for (_ in range(10))
 100:MAYO.c        ****     //{
 101:MAYO.c        ****     _linear_combination(P1, oilspace, N-O, out);
 750              		.loc 1 101 5
 751 0020 3B1D     		adds	r3, r7, #4
 752 0022 3822     		movs	r2, #56
 753 0024 0649     		ldr	r1, .L24+4
 754 0026 0548     		ldr	r0, .L24
 755 0028 FFF7FEFF 		bl	_linear_combination
 102:MAYO.c        ****     //}
 103:MAYO.c        ****     
 104:MAYO.c        ****     
 105:MAYO.c        ****     // send 'e' for end of trace
 106:MAYO.c        ****     putch('e');
 756              		.loc 1 106 5
 757 002c 6520     		movs	r0, #101
 758 002e FFF7FEFF 		bl	putch
 107:MAYO.c        ****     
 108:MAYO.c        ****     //putString(y, _O1_BYTE);
 109:MAYO.c        **** 
 110:MAYO.c        ****     return 1;
 759              		.loc 1 110 12
 760 0032 0123     		movs	r3, #1
 111:MAYO.c        **** }
 761              		.loc 1 111 1
 762 0034 1846     		mov	r0, r3
 763 0036 4837     		adds	r7, r7, #72
 764              	.LCFI19:
 765              		.cfi_def_cfa_offset 8
 766 0038 BD46     		mov	sp, r7
 767              	.LCFI20:
 768              		.cfi_def_cfa_register 13
 769              		@ sp needed
 770 003a 80BD     		pop	{r7, pc}
 771              	.L25:
 772              		.align	2
 773              	.L24:
 774 003c 00000000 		.word	P1
 775 0040 00000000 		.word	oilspace
 776              		.cfi_endproc
 777              	.LFE3:
 779              		.section	.rodata
 780              		.align	2
 781              	.LC0:
 782 0000 48656C6C 		.ascii	"Hello from the other side!\000"
 782      6F206672 
 782      6F6D2074 
 782      6865206F 
 782      74686572 
 783              		.section	.text.main,"ax",%progbits
 784              		.align	1
 785              		.global	main
 786              		.syntax unified
 787              		.thumb
 788              		.thumb_func
 789              		.fpu softvfp
 791              	main:
 792              	.LFB4:
 112:MAYO.c        **** 
 113:MAYO.c        **** int main(void)
 114:MAYO.c        **** {
 793              		.loc 1 114 1
 794              		.cfi_startproc
 795              		@ args = 0, pretend = 0, frame = 32
 796              		@ frame_needed = 1, uses_anonymous_args = 0
 797 0000 B0B5     		push	{r4, r5, r7, lr}
 798              	.LCFI21:
 799              		.cfi_def_cfa_offset 16
 800              		.cfi_offset 4, -16
 801              		.cfi_offset 5, -12
 802              		.cfi_offset 7, -8
 803              		.cfi_offset 14, -4
 804 0002 88B0     		sub	sp, sp, #32
 805              	.LCFI22:
 806              		.cfi_def_cfa_offset 48
 807 0004 00AF     		add	r7, sp, #0
 808              	.LCFI23:
 809              		.cfi_def_cfa_register 7
 115:MAYO.c        ****     platform_init();
 810              		.loc 1 115 5
 811 0006 FFF7FEFF 		bl	platform_init
 116:MAYO.c        ****     init_uart();
 812              		.loc 1 116 5
 813 000a FFF7FEFF 		bl	init_uart
 117:MAYO.c        ****     trigger_setup();
 814              		.loc 1 117 5
 815 000e FFF7FEFF 		bl	trigger_setup
 118:MAYO.c        **** 
 119:MAYO.c        ****     // putch('H');
 120:MAYO.c        ****     // putch('e');
 121:MAYO.c        ****     // putch('l');
 122:MAYO.c        ****     // putch('l');
 123:MAYO.c        ****     // putch('o');
 124:MAYO.c        ****     // putch(' ');
 125:MAYO.c        ****     // putch('f');
 126:MAYO.c        ****     // putch('r');
 127:MAYO.c        ****     // putch('o');
 128:MAYO.c        ****     // putch('m');
 129:MAYO.c        ****     // putch(' ');
 130:MAYO.c        ****     // putch('t');
 131:MAYO.c        ****     // putch('h');
 132:MAYO.c        ****     // putch('e');
 133:MAYO.c        ****     // putch(' ');
 134:MAYO.c        ****     // putch('o');
 135:MAYO.c        ****     // putch('t');
 136:MAYO.c        ****     // putch('h');
 137:MAYO.c        ****     // putch('e');
 138:MAYO.c        ****     // putch('r');
 139:MAYO.c        ****     // putch(' ');
 140:MAYO.c        ****     // putch('s');        
 141:MAYO.c        ****     // putch('i'); 
 142:MAYO.c        ****     // putch('d'); 
 143:MAYO.c        ****     // putch('e');             
 144:MAYO.c        ****     // putch('!');   
 145:MAYO.c        ****     unsigned char Hello[] = "Hello from the other side!";
 816              		.loc 1 145 19
 817 0012 0C4B     		ldr	r3, .L28
 818 0014 3C1D     		adds	r4, r7, #4
 819 0016 1D46     		mov	r5, r3
 820 0018 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 821 001a 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 822 001c 95E80700 		ldm	r5, {r0, r1, r2}
 823 0020 03C4     		stmia	r4!, {r0, r1}
 824 0022 2280     		strh	r2, [r4]	@ movhi
 825 0024 0234     		adds	r4, r4, #2
 826 0026 130C     		lsrs	r3, r2, #16
 827 0028 2370     		strb	r3, [r4]
 146:MAYO.c        ****     putString(Hello, 26);
 828              		.loc 1 146 5
 829 002a 3B1D     		adds	r3, r7, #4
 830 002c 1A21     		movs	r1, #26
 831 002e 1846     		mov	r0, r3
 832 0030 FFF7FEFF 		bl	putString
 147:MAYO.c        **** 
 148:MAYO.c        ****     // simpleserial_init();
 149:MAYO.c        **** 
 150:MAYO.c        ****     //for n in range(256)
 151:MAYO.c        ****     mayo_trace();
 833              		.loc 1 151 5
 834 0034 FFF7FEFF 		bl	mayo_trace
 835 0038 0023     		movs	r3, #0
 152:MAYO.c        **** 
 153:MAYO.c        **** 
 154:MAYO.c        ****     // while (1)
 155:MAYO.c        ****     //     simpleserial_get();
 156:MAYO.c        **** }
 836              		.loc 1 156 1
 837 003a 1846     		mov	r0, r3
 838 003c 2037     		adds	r7, r7, #32
 839              	.LCFI24:
 840              		.cfi_def_cfa_offset 16
 841 003e BD46     		mov	sp, r7
 842              	.LCFI25:
 843              		.cfi_def_cfa_register 13
 844              		@ sp needed
 845 0040 B0BD     		pop	{r4, r5, r7, pc}
 846              	.L29:
 847 0042 00BF     		.align	2
 848              	.L28:
 849 0044 00000000 		.word	.LC0
 850              		.cfi_endproc
 851              	.LFE4:
 853              		.text
 854              	.Letext0:
 855              		.file 2 "/usr/lib/gcc/arm-none-eabi/10.3.1/include/stdint.h"
 856              		.file 3 "MAYO.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 MAYO.c
     /tmp/ccG50nIC.s:20     .data:0000000000000000 P1
     /tmp/ccG50nIC.s:17     .data:0000000000000000 $d
     /tmp/ccG50nIC.s:312    .data:0000000000000e88 oilspace
     /tmp/ccG50nIC.s:323    .bss:0000000000000000 trigger
     /tmp/ccG50nIC.s:320    .bss:0000000000000000 $d
     /tmp/ccG50nIC.s:326    .text.putString:0000000000000000 $t
     /tmp/ccG50nIC.s:334    .text.putString:0000000000000000 putString
     /tmp/ccG50nIC.s:396    .text.add_vectors:0000000000000000 $t
     /tmp/ccG50nIC.s:403    .text.add_vectors:0000000000000000 add_vectors
     /tmp/ccG50nIC.s:490    .text.add_vectors:0000000000000060 $d
     /tmp/ccG50nIC.s:495    .text._linear_combination:0000000000000000 $t
     /tmp/ccG50nIC.s:502    .text._linear_combination:0000000000000000 _linear_combination
     /tmp/ccG50nIC.s:707    .text._linear_combination:0000000000000178 $d
     /tmp/ccG50nIC.s:712    .text.mayo_trace:0000000000000000 $t
     /tmp/ccG50nIC.s:719    .text.mayo_trace:0000000000000000 mayo_trace
     /tmp/ccG50nIC.s:774    .text.mayo_trace:000000000000003c $d
     /tmp/ccG50nIC.s:780    .rodata:0000000000000000 $d
     /tmp/ccG50nIC.s:784    .text.main:0000000000000000 $t
     /tmp/ccG50nIC.s:791    .text.main:0000000000000000 main
     /tmp/ccG50nIC.s:849    .text.main:0000000000000044 $d

UNDEFINED SYMBOLS
putch
memset
getch
trigger_high
trigger_low
platform_init
init_uart
trigger_setup
