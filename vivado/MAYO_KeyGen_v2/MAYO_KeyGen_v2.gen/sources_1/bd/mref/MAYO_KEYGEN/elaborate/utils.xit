# Proc to update_contents
proc update_contents {} {
# The design that will be created by this Tcl proc contains the following 
# module references:
# MAYO_KEYGEN, mayo_add_vectors, mayo_linear_combination, mayo_negate, mayo_reduce, mayo_sample_oil_space



  set parentCell ""
  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2090 -severity "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2091 -severity "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj


  set MAYO_KEYGEN_0 [ create_bd_cell -type module -reference MAYO_KEYGEN MAYO_KEYGEN_0 ]

  set_property -dict [ list \
   CONFIG.ASSOCIATED_RESET {RESET} \
   CONFIG.ASSOCIATED_RESET.VALUE_SRC {constant}\
 ] [get_bd_pins /MAYO_KEYGEN_0/CLK]

  set block_name mayo_add_vectors
  set block_cell_name mayo_add_vectors_0
  if { [catch {set mayo_add_vectors_0 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2084 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $mayo_add_vectors_0 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2085 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  set_property -dict [ list \
   CONFIG.ASSOCIATED_RESET {rst} \
   CONFIG.ASSOCIATED_RESET.VALUE_SRC {constant}\
 ] [get_bd_pins /mayo_add_vectors_0/i_clk]

  set block_name mayo_linear_combination
  set block_cell_name mayo_linear_combinat_0
  if { [catch {set mayo_linear_combinat_0 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2084 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $mayo_linear_combinat_0 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2085 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  set_property -dict [ list \
   CONFIG.ASSOCIATED_RESET {rst} \
   CONFIG.ASSOCIATED_RESET.VALUE_SRC {constant}\
 ] [get_bd_pins /mayo_linear_combinat_0/i_clk]

  set block_name mayo_negate
  set block_cell_name mayo_negate_0
  if { [catch {set mayo_negate_0 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2084 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $mayo_negate_0 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2085 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  set_property -dict [ list \
   CONFIG.ASSOCIATED_RESET {rst} \
   CONFIG.ASSOCIATED_RESET.VALUE_SRC {constant}\
 ] [get_bd_pins /mayo_negate_0/i_clk]

  set block_name mayo_reduce
  set block_cell_name mayo_reduce_0
  if { [catch {set mayo_reduce_0 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2084 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $mayo_reduce_0 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2085 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  set_property -dict [ list \
   CONFIG.ASSOCIATED_RESET {rst} \
   CONFIG.ASSOCIATED_RESET.VALUE_SRC {constant}\
 ] [get_bd_pins /mayo_reduce_0/i_clk]

  set block_name mayo_sample_oil_space
  set block_cell_name mayo_sample_oil_space_0
  if { [catch {set mayo_sample_oil_space_0 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2084 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $mayo_sample_oil_space_0 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2085 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  set_property -dict [ list \
   CONFIG.ASSOCIATED_RESET {rst} \
   CONFIG.ASSOCIATED_RESET.VALUE_SRC {constant}\
 ] [get_bd_pins /mayo_sample_oil_space_0/i_clk]

# Create port connections

  set_driver_mode subcore
  update_addresses
}
# End of update_contents()

# Proc to update ports
proc update_ports {} {


}
# End of update_ports()

# Proc to update addresses
proc update_addresses {} {
  assign_bd_address -boundary
}
# End of update_addresses()

